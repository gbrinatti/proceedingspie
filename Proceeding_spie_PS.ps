%!PS-Adobe-2.0
%%Creator: dvips(k) 5.998 Copyright 2018 Radical Eye Software
%%Title: Proceeding_spie_PS.dvi
%%CreationDate: Thu Dec 27 16:04:37 2018
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR12 CMTI9 CMBX10 CMR10 CMSY7 CMR7 CMMI10
%%+ CMSY10 CMR9 CMMI9 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -o Proceeding_spie_PS.ps
%+ Proceeding_spie_PS.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.12.27:1304
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 45 /hyphen put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360B3511F823E75AD49BA7AE63B19238
2AFE8FAC2715E2FDC895E95036D23127557837506A3B542B0E4651CE2B89C252
31EE8ADC26E2C04E8E30A9CA12F066CE01953BE7867171FF6C7E834742C36C3B
58E74E4B482CB85FD4D24DB03D753F260A585D552CDC9E1941446F2F5B45FF24
2DA4932B973139F328E7E92828B900BFD398B6F41DAA0D6861C66AA7F5E3299C
87A5925CE0E0F9E09AAE0792954A1F2C0AAA8288DEEFFE579E38A3CE8A943EB4
55322A87C1634074EBEC25F724DC1BCC1BC10458CA6C4395659B0DB6B612C151
557CC669D8DC37769E59A5AC6BF061C79FEE265DBB59520EB8FFEA273601D1E8
2984B8AE31AE343F37D03E2BF97DC48AFE50BB6138C7B9F9B5E28672A37BD8F5
8F8C9F91F0D92A7A8A44160B771A63EFEA0A3A1CDB579E72098E529F8A69F1BB
6FED504861340EFEE7345AA680CC0213F6B0A89F9F77A923C436BDFFBB1ED75E
491818551B6F7D1EF65CFD5146975C6E920D8B6D8B559E66DF370A0216FE0A5B
C2606F28C3998D7F565D5F5539EA278477BC1D01003CC4F5F68D7637DF098278
D6369C3A6F5A22F3CDBA85AFC9A3AF46D1E6DFCB130E3C8D0C4E7AE652C72153
C48DC62BC89794D702DA6AD2C852AD41BB8DCAE6D0ED3BE5D5861FFF33244F24
B53CCE01B56A7B0F38DA9AEC8ED7D069E25D14401FB4813B34227E26891B0C46
79B0963AC4D183CBF70F4ECA4EC27770A56EA176910E63CC95808486AA29256D
1DBB74886BF564BDD888F392646E508EFB09D2A8E94D0ADB98C24DF05695DC0A
5B357CE7583A32319E0EFF4C10F41BFFF224FF746765FC1B84E06870234B7533
4AF37E8364F295B3BF97D75C9228A05771E9ED9BE5B69F45DC14DE25F2DC4906
B1A90BE3AADD483D833E4AE962A680A4C6BFE47C868308F3906BEEE44131B11B
2B14E644F87DAD03D656334D7A3E9F0F0950EB249CD977D591CF86ABD1A5C8B5
2ADABA164E97546C686EC1965678BA6BFF9C24EBA197C783B2B651542520C04E
D0A28970114045A3A3261A228CED4FDB4446DAA5CE25911212842A97ACEC8117
0F40C2ADF3A9FB31ECC7E9505358A02B9856055BA1B8879640996063987DF4A4
F18A6EEFACCB3C070E48FA5185D3BA7EBBE216FD739B1DB0CB53AA48AD228B16
98C0E527CBEB2F1CFAF394D14F4872A43FE3FF10241E44EDF3C8E24B6CC71A20
1AF9DB5A92DF060026324DF592D96985F34C31FC5392219CDF28041B1D2E33F6
8CD921766A4CB1511ED3966C7BBC8C48F3EA9A6048FF2BB7D69D30579E251589
185A09CDBDD143F41757DD67D03C05EC2E96FC75F262A0C8EF6755A80D49F863
5DAB4F173AFFA328743C443FB8124773936B88DC3363DB5CCA37D462C6E68FFE
9338C8F7E8BF2584F8660F41B7494869D58479B55D4ADC401FF5DE3B2D83E44B
E516B61D5ACCA540BCDE6BC5813EA8EBDD93F9850E9A175C83CF70BD90D19FE4
7DCB4E8676255290E7FA7D4518CEC7399BA752788E65FDD0BC6466035F251AAE
398BC44E3BB9F466868D25D45E20685E0E7184E70DCEC5E08293D8C0032E7010
5F38252AAC43BCBA87E7D700A5D0162715A560333458DD227E64AEF5832E0D26
19B8C1EC0024EF9121CCE324DBD53047D1DDE0E54E7D0AA3C8F86500ADCB8C1E
42A8910F9DA701C4D2AD083467DFCEBE67E8A558650D61D9EAA611C482EE27E7
2DA39C71602F38D08ADE58135259AC627065D7950B82F1DE12E1633A63EC67D8
D4CE390DFAF06C27132D1A6D6B44249B261F7D6696454F41D5B998A82EEBAE4C
A68BB519D08EAD5198F6FE9E945F9CC1769E31FA58A545B5AF6E2AE8D5A98545
40F85409106DEDAA18F749C348880814EF3837817A8A8906AFA945882E059E37
6059CD86A7137FECA0E57C7B5CA9FF304BB3517DD54DB43ABD61F57C9846911C
6779A4813C89D576A9BF1FECFB43636FCE01702BC3A1CEE95224D64AD41F724F
DE5EFCC347E249B562B976AAE415090286756C6ED14DF19257873F12B2EB4AF0
9CFB4A1629E6A81C3CEF1A411DB25B8963D41DE53131D72847DDEB15FCD11309
CA7389DDC5FE78622E83773F35B02054D4953B7B09088FB317E6AE1C0DB8177B
00D4B4862DCAB12608E3180BDD5D6399F280C07E33E7B61C5006D8F4A355EB4F
214563F7A89B3E9F158BB0B95A0E5DAE43AD0D5E753F8073A5589D9ED38D3A21
9031154DE2240C708A358C50998F3D47B5D2F1BA2288DC055FE2B2DF876FF2C6
E47314B52C0F15118692942EDBCAC573A273361FF8290E8E157717AE0C78B01F
75E30FBFCF2C457A723E1934DA8CDC8302F44D937669015B74C22245136FA651
7C1C14373F0B22A440AA74EA9A7C5F30E3202F46BFE8761D3EA6D0C169765EBC
50BF6C037A078182126AE81B5476D887F0B73A502C34012FB53F9369F0FAEAB7
15D6E5BA3F23ADEED845FA5E7FB8CF0BA9B7F9F407DFCF21C1456CB081C6944E
CB08AAEB799F0FB8C375E0681F8272C7D7A7E47980F39ED23EFBD73F842327E5
5BA22AAAD64EF32E0970A0574EDAC8858A401D425E3FD299B08AC356C3FEB4D3
1CB877BF269DF1D4EF142C417AC37D0F13C12152037D9FDAC74830B6BB506513
7C8C9C7901CA291EA837080CDDA1F5AAC088940B2FCF6D844D72A3D5310E0DCF
CD9650A7E6F96E7D0CD58DC65FD6A78311B16D14E2F5900CEA052226DC7EA4FA
27108FC3A7A6F2ABDA7395B60FDD053597B7A61E18BC44A03AB7895379752F94
694470E2E58B073E3CA574C42BA2F296A2D17692D50CE7C7187F80D400F0B3DA
6D3EA8558C0963CD21735E0371D0306A179A4B51ACC09545FCDE6087B971D03A
28995DE3788C42395F5B8C97951761F41A21F1B26C534823509DB9BF32730353
3F72003FD4EB6D8D484405795BC0B917A286C5193417C919244CD1AACB734F7A
77F0127FB7410757099F8AFFADDD6BD152EB93F01B202F93A25A12C52B3A6904
98977C022370DF3917FE155D8E5FE53CE5B00E25F07DE8BAEACEA04575F5509B
3EB6425D06959A8C48341E1C5161E9877F583BF32E172C12E9BB4E98DCB607DB
D070349D3D0AF61E364D64D114753F7E546CFF6D212A2BCADA182B6DB96799CC
F34E829C2D3BA23EC7F1699A7A89ED190589CBA1C78E3615AA12E580753F1227
AED2AF360D94C6921D3708082BFD6D84076868E47B8576874E1D8733F03221C6
4B23B04230E8C5B3618E5FEF93B706998A5EE917A4C4286AB7F4F32DC43E484D
CE802539446CCCB4DB5F14DBEE68F8B1A95B9534C64900FF58E35F92D368E301
6B78CA90AA3A63D2D53E8B49C0D7B6CEB2F09BE5912E2926F55C85D44074F255
E7925C7E3FE5915ABF8D6AB85E6463F097A5864FFEE5C920B69DD51985A671FE
C9F616B8A960757170A71AD2FB4AF3251E5AAFD6B9DB7DB2C39CE03073FB3670
2BE27E69233B46AE6EFD4D0C555EFD866BC8F2FBE1F8FEDE8979B58DD056B4B0
8A0502929034FF29B5E5E3974A0762EED81926CFCFC1A36A32414FD753681DB9
6364592295BA5A0904DD9E85D99EAB259A52030B676F5687D187F87F7F68CE1C
6BE5F05CA22E9EF6438E0E89D038EA6BC3635D8A3F0113E1F3FF49B4644A87D9
F6FAAB28706EC9E485F245BA7A8FD300019AA3460397E937EC66CD5BF3184868
E60490A1D4CD6AA4BEF84DD22D442E2D8DEB4B7F4F11F927697E903F6D96E510
11F440902FE5F41955C4272B07332D22AD7E7C85DDAF6E43D571C3A2AC64A02D
3174CBDC1F849FEDB6802CAB3765D80EEFE7D14E57FC3F725C69582DB247ECBC
4B2B3665A6AF53AA1FD84F28889C0190260BDA884E3B8452D67F8B8E2F1666B1
50BC3BBA57B1B1FD280AE652D0E24319DF957029DE2A761D7978099C0DEC3F77
9EB8B42E000A9A0FAA321D9400882328D42BF46A9A4BDBCEC0480F4D393854D0
D0F5346C0A25423AD50B257AD01D1C734494DCE9560E35342F1FF945BCC6AD43
1C12EDBA5B7CC80B0019ADC946B9B2D165C5E03FAD6B023095A63551F5CF2EB5
FD0C7A388469A4AFE95D185FAE86B2F0F481E7405A5F20E1512C00ED70DB4A44
B3ED774C062B4D6348210296655C48057A0581AB3FEBB363848C5A2CEF0C2DC6
C47DA51CE46FC0424828455CE07820450C5F706AA02AF9CFC67EB72B4B0ABCB1
415EE2D9DD39FCF20704F54D4021E717E28C904E6730FBB2230E313259D1C882
A1DD79A0FD3786E02AC1AFB89BA5D13EB1A023B32932EE99FB57AD3A7F0D48BD
999EC72BABD614EA144DC0C2BAAD87140DE0C3B1CB985EB3A1AF04A596F874EB
F5F8B59C269E02072B56F63613F55CC1A946169B762215494D26B8E92AAA6023
3DFEB9FD7A27BF805BC00E59AE6E3ED926FE67880BF701F433938DE17951B1A7
0FF9EE3F7E4DF54659FD9451F47E909EA5D1081527600C362F9A63E3B1060971
38A476D62D824A502A0D18148D1C7F6D7141E3253C384ACB3F44DBB53F90CD59
F125EA819CB9E0DB2CFA5EF7BA0F3886A9CC59588B75A115141BA7D95CDF6EB7
467091AEFF0E2EE5DF0134E8EFB3EE04091B8DD8C29CC63D8C60786707EA34FE
AFAB8375E7509FE57A506ED36F3EE28BA76915B15B9361D575195A086DA3765D
E15CF7521E23F06B3106A2976F3D98BD5648763AF9B25258A2916AB4779B87F5
2B66C7CF8DD40B4BB3A065E4DAAD703BC4E585EDA25B32D7F7F109B3019DC8E0
89E19043A7B5208951716318B532F6833E4C085788BD16DDA60D5E6375AEC5AA
4405E88BBEA10C6E496E4EAFC5BFD998A1B418D29CF3A4FE1EAC72BEC311AD26
AD14DD7F89AD0F9069DD3A2052EAAB0DD2B28EF5EF8D916596D62D17210A6350
3BF78E2AEBD340526B5D12EA3F2ED313555E15CE7CAEF09F56ACACE8D47D7085
E6D431CEA8F43B3E502A464EC20BB3F5FF3559131E1519ED4CCA59BCBA78225C
EDADF7616CC30E578C0941D5434423C0E263FB4293DF507F312032BD0E041529
E09A36C8C3908E50D1DBAFDFDD51F0455E143C6DD2FFCD24C8AA989F40644CE6
0B228F537987D298210A1D7B13561D63D11FB31A7873B4E9219A07D41156658F
77895F717C007EE121E79A17F2C52AF8BB4B3210969D7EB0699BDFB291B5A19D
DDFD99A7D63AE99974F43190AE8F821793B400156FA2CA99B001198040653F51
ECDECC9D9BE36AA17CBE3F97750934CDC668D69E4850577783B7DD18472E7835
096FED23EB1E9F42818889D672FA99B627FB26E670C5BB172708DD193B88F00D
E29E18AEC92B554F69EFCC7A7769782BAA7B2CC071C08F473381C703C81C7A99
5C45FA0632647BAF7098CC3C9FDF517BD0650FA2793602A1F60BA80221A42577
4F707890E17C93C85E9D312B381BEF6018EB950EA227B0A04180B22651E08EB5
EB72E5C91BE302C49AEE71D0B8F0E6FF7D05467B73F82C636FBA55F0E0F29F8B
92246D0C1830109EABB80F1F79E360111155AAFBFA00F3A9244BA8F1EE9E1C61
F4BBC576FFCC9E8409E71387E077272EF30F3B0FC1C11571095AF9F59606749B
E3FF2F67D83A42053D302FE899CC02C1F14793D66C09A419BCED9EFCBCA66BB1
FB2B47385929EE4F67280906A642551A2D9BDCBA7D20DD4C0ED7A93ECDDFBE38
81B224DB874D49C7045D168366B874BAB3E15B868168E141F84AFAE61640080D
9BE0B9106A040FADFEE1C6530A3B88289C2DE1A3C635D570A9B8407B983792E6
E3C2E228144C9D85EB6921760E45F61F40A573B31BC80E64E0D6472D162D922D
922E8EE8CCF79D94920A481C98A8EAC222C2091C6C7159E66AA2BCD4D41587EF
59097956A6A56C9B098BB4A47AEEBC25593E0FC9EC0A31C6A4F84CC42B4BBB1D
37D18ECCF9745BDF200BC3FCC3019ED8DCA494D42C16E8D0EA1FD3255731BAE0
0E4CF48A692FB9AF3FEB0A63E4E5D7639AF8069CEF3AC85F623DC625FDB8F600
14FB232828F37A00B27557FE14F693B3D8EF37FF83C4B502FE4B5947131271F4
EAE5BE07B3D59F1B9763D62FA80659D4FC7146D15EC41E1350E05A5586B8A1AB
D5FD224C77D1498B88C6D2686B4442748F7A1C3EA0BC87D3AE0B0A6A21697A75
11CD6494EDC381BC4A7ACFCDE649A5B060AE1FDE3C302C5D2A80E00F1ECA0370
BC95142C77A3805EF9DEBDAA86628B2D0BCF23DB0FEE3B99D975FF350AA49F0C
45DD77F76A860C5D2287254A7D8832E4F8BF058EF5D2E0A90F17EA2AC8275571
BCBF28BC7AF353690B8C3682A98EE8D62978CFBEE8E648D710A001B9A39A62FA
44360D53A8621B995F9812A49F3EEBC84897A28CDEFBFF594E98BD085A2702AB
EE6AC73BF46047C214509E200F5AE5622BBAD9C916B4BBEF321C9A6AC369C5AE
563321F84133C40CC6DE09F4E948A930D3E2AAFA679723578D3F3C9F1A7E2732
90A73C25E2319D3198B68591CED2B0B9A467326DED4C814F4376ED1EFC1BF7DC
34F202A07949FECA19A0C0D678E23DDAFDD98CE039D11B6137CC3B30EE0C4E80
883D739D7BA65EAF32B363EF47C672B88C3A910BDB27A11B2CED2C5245683B0B
FDA449BB8A7563635F3B55630BE59246067A9C00F63C63E7B72E2BEEFA8CAA71
FCF6596EEDA1C7224FC562E4C15082EC4142BE303D3F464EF2E111643CC886CE
909BC06C916E1F0FDD02DFF52F800386487E63880B8D1E25BA9015CBDB56DBCE
5192B7035C948ACC478F25273C80BB8989C623DE1964C29A625A7F1F18A9D854
6706FE47F3005F60789C34D252CEF59FB17B8B63DEDD163BF2D671D0026D27E0
55FE8FFB77DA40F157C73C8E1F9AC0E13B169DD7104ED85E0C8F631741C42454
202B56724AB7616088E3D0239F3F81CF3048173495CD5713AAF4A66C75283237
B23037DCF44910456F757DC0B558D6B266C921A055D85CE17201E1A75940C211
BCA894EEF5653CF33F4C9626A609C81734EF045094496F1E24CBF832BA1E5E7A
8A7BD53AE973098E3E40B097B7A61680FAF4DF2ED190006383CC314FF6EC5E9C
C5C6E5A2B89020D7B02398243CD51312C8E348C1CEF037E05D02A1AF303C8869
CF5F73FCC5691B5232A4865ABBFA5A8013B2E38E2C9911E5CFC2397EFCAF6BAA
9264D59E3AA44180B64E20324045C81151BB4C2B2F5AD8630704CD58CA538DC0
330CF3A356E97CAF2712037816ADA21CC16C25831E5F481B7B579F1FC835DEA6
4BF69570E79B90A0284D146EE97A05C84079BB305DC56EFC74F0848EFA5D5933
6CD06BE91F689EDAEEF4427C9A46D6A09DFAB82AE20334626D98189E2AECE290
E6F4850AFFE7BBF3B34D6E4EB0FC99AE021892A338954524ACF0A8F623A13B07
4F8D4ABDC32FE30CB3B17682FA9F03B4F829314FBA55C66A8CD54B5BF00FFEE1
A8A5A2AB65380603637E78155FB97479581F27E44B2B7A266F1A4ACBE943B6B7
14C4C250ED3E49205D31B07297986769C081C42859266BACE79D9AC62AEDC053
3683C8E0728E69D8CE917FE4D27D8FE3E909E2C6CEB0747E5D467C5D704277C6
0EEDAE3DB876D5B55163F7E9E4E388804F709BC49E820C8219999879C1BD49BD
F35164488A7F818DE744FAEF2C5EED21936E10D81A58123771436B7DF064A5CD
AD9CA2617EB0CF0E266DCCDB076D5036F584941F91D89E1344360DFD2E8D849E
153AEC1F5528D55CD52FE41E0CEA35816A0D5431119D7629BA8554A553BB4DBA
850326E29DD2DCF439F2B0CC948B5F58BBE847748965E0E81DE2A7EBED0B4523
7A18F0388490127E91E753ACE772DAEB06FB0EE3993FA5129AFF18FA771441D7
FD41DC48EEC3ABEEEAC413AAD2079915FC030EA128DCC9D51903EDA466306775
A2B86B57C6B1EF9117B0ED0AA25D24C6C6B32F07DD40E8423F969FB52EE5A35F
2A5A530AA1B0882CB3BFF593E8D4E270D41642094F3D5B9CDFAC3B87DB27D6EA
30E43C2B4D9852AB77F8F2A19D8CEE9F4AB127388ED1DA321077B1470E402C21
D0B507B3090285A7655E68E33430D621B8E36AD288E28B9111822E791A70419B
79E4CB352D6C72926C49ECB7752F260C06E15895079D1F5826CC641B9EB7558F
8857BA568017F98C85C152A2130F5E79D444597F6017A44B8929F45EF250AFE4
44395580714F395B37172E18B9A41CB2E7A853396731D5488722659E205053AA
5A3BAA98721E092ADEF8C98FC41F59EAB8FAF220EA339F58DCE3F1E746E1A2F4
241B41555FD6F22B50859614AFF4648C832490D9188088F63B98CADC02958F59
0C275AC981DDA51F781D4961ED3DB4711CA2DB1E51E1CEAEAB27FA0562F4C6A6
DAB96F1F3800A51FBC7B8D7766581AB464BDE227697D70B1F708FFB806874FDF
2D0A8069CEB3920A582EB8C5DA7793970647E9BA03DE1F84C9D36066EC794FA5
70447251B762DFF8A641E5C9ECAEA101BF84C71470F959336CC4111EB180D5A7
A9C20BA1693B6A63FB3B6FB81B13F1AE93F120256877E80B056D004C8711FC28
F7AE1837CD04727F0F12F6B1F72BBC44DBA5FBE44322EDEAD764AE92947791D1
C59521EBB5D69504F05F0B9EA64E639249849E428E916C7D5BE694C989292A95
35531E53DD44333F00A782BFD0F6CA1116397A4C8D73BFABBAAF23343D3D866C
0BEE41A7B475F0E9C6BDAAED09733D9433A69B2AD5CEA8F482F55254F2EB7D83
5F658D40166C3F9F83CF5CFD12B4EADC99914AE32F94AEFEAD57E496101C0619
7816105F4DFCC9E2D9B6619D78A4272C503C7702F1D8B438DEBAD3BB6D15ACC1
C7C570C19513C7E1609BCA116D1E8FFF854DAC1BDD1FE6F78061ADEE4E164C0D
810552E49F104B2BFD11F005C6572D4B5630778D18D897470C11B0FC67F33FD6
38F9DBE931F699B0AAB3DB160D9D6344ABAE82C5CA6ABC88106B73258E2DFE0C
89DF5F1028B677341461B252E080BF141891AB3BD6FFAFC2C947CA10C20E4484
F944676D710550857C496F57C59101992A893D37759A14FDB34BB5DD2F857FEB
7AA8E617573518BF4A52C3C1BCF0C9B1A787B2A2A4B8C4BD004547C597CCD837
6D90C56B1937555C3423394CD8A613A6308CD4C2412500C09D1950279BAD22E8
332B992E620DF620AD19659C2CEA9EAEC854DC447399749219E0E0BD065C1F96
8F0E0FE9D568925B2CFAA48D91B1CC27D3A7E95DBC4E13A9AD1E2A86EEBED761
CCAC4E3A61AA21605C32A11CAF764671852191D9AA9A790872207C168AAE4C4B
4BAFC325FB72BDA50D2C92151BDF8F9CB3EF0414CE6FF1B0B2F6A0DD86ADD2E9
99064CABF530667EEB1DF43A96830841499F9FC75B19FB04551B7BC9E693EB78
66A9068491A076AC185B1B106A471646D1B439C9D27CB036697D5C4634233510
CA758D49450CF1C78D3987FD3EB255739E9360A5E35A590917FED5BC695ADC1D
A934A7EE8652672A90DD9138FD2A87C0E09D06C03816CE3744EACEDDC761F0C9
4BEBEBD9C9CEC178CE99DA7B2F2A20019BFD586828C8E54EA27271D88A8D424B
B654959B536C8F3301B71BC4446C8B95BB76E9432A688742AD80C42B666C9AE4
EE16DFCAC98532EE077D98A48A67FCD9DE41C09D7253B69161182D3306D76EAA
1A4F92381FE3F044662C66418B8D1F1EBBE91BC55A81CC8928E6770A1818A651
8A708F0E33702041188068D01F07AC14042C189FCC8A50F66C2724C0D5B54946
39E04F31A5947EB3C1908C34180D34B1C162C46243DB548DDFCDBC61581B2024
220D7418C33CDB215B93C114D4E2A51C0DBD705182F865D1F16EBA79ED5F9C8D
E0075193A8BFD6D6BF496D1CC8D9F90D328DAEBB364406DE4315085FEA1FA054
03BCEA8A3ACB8A8F7FBF5A0CF114D14063E6562B12C255F00E494EA87C368E6E
E9B861DBDADBC9665D1401B49EB56151812E2729C3776BCD375E2D746321A081
DF5B25073E37CF15E87821FE485A26EA2F3202450EBE7FF6029930E59DAF7107
4A66CCE81DA6D34281E0E041107C0CB8DFDB07F4DC45C8A5545D6931B07616EA
C7A8DFD6AE0B96953264861F9953DD8D3F43D2E9B465067A04AA28598F7B83FC
0E2494C8779C56FA1D3DE3D80ED3AFAC2AED13D97141E379B92A71F92977F954
8E1FD2E050237BE53FE26347C3D3687107A397C3A04FC2B48FBA75D1C777D1ED
1DCA231C01AC2F8C946E7E280A4648E6D8B97FD54C86216CDF7099DA126E3DB7
1C555CD8CDF2D89855A189A932ADF644FD8664594BD30E00D638A446371EDAA8
ADCD9C5713EF3D883C33A0463C69254BAE7DD93A438CA49AAD630B674DB55D85
0EE771198545DF241D01A7128B3FA7DD5A198159EBB1CEDE751C105B6F820D81
DE5209A4D75323245433A89BBD62C9409B9A97CCAB9DA512AF27D9170622F3BB
B36FE0C1118C968B39ACE4FFD6CCF2B3CD89F42F7FA04717F5E8D8D45DF68818
B3D3EB7603DACD0781FF0FBEB00246608E36399DE19D8D65F83DD64BD755E1A0
FB3825AD37F3B63168CAEDD3D13C206970D63BEBF86BA22B9ADE28559214F04C
A0F00A977D9CEF4825DE496CFE13BC7ABEB4A130A1FD4DD10C744AD90F268030
50F10AA7FCC92793048F0BF74C52CF8B405CB3CAB99B9A6CBB9A4F801500CCEF
B2125E999D6643E6A23522D1873AF9B112CB881273DA3B253B1549525D93E0ED
6D801ECE6E186FB53C66D8F94EAA27E36CFE86F247FF933AFFE5D46DB2AAEC1D
7CDC0659799AF85AEDFF083DA7194109686C2C050B498C6073256C51C160929E
DF123015EF8568379A1792C58295C6A24F581B6A0A807D62AC92340073552EF4
7BF9DFEC48E062F9CB770C11648957AC91D8ED183423D1D4C18BDFAB9575DF15
6E8338EDB3AC3447D27DB2B20B0C9EFD515B72B19CBCF6AB46F0F12A87937D06
42BC28DAA43DE3C7701889A9B95EB7645A810F20B739D6E6BFD86AFD99506F9C
AE428A6701BAB5DE775C0722C319E3169EB2750BB296546CF167AA12F1B74E30
D83258074E730823BDAF4A7F276695DE04D034BFFF8F241C993731811757F610
7216D7B039371803C8CE9B614A0B6F6D99ED06C85CD7CE2A3F6A17FB3A556438
17BF10E858E73BC282AD436CF7075E9B23DEA40BF38F92749B91D9452592A530
C05D52A8AB6637BEE6FACDF98A6020E1A7DD9220381C0C31C61F3BFB53B37781
38579B450ED3514EE8AD4A89689C2DD31898F7F388E820FC6059FE72E9E361D2
A274CD739F6A9A75470478424FEF398B512EB02A8206CE0286BB31294A7992A9
D7C0BFA77860DC6123E525F3A453E2A5DD56BA52FFED54841B8960A0AB948FB4
AE7C56B7B767587860328093728D488C8D9DB559F686AE7A5D5263D5C3EB21D2
0DCCEF82CD69FB2653651970307281EBA588F661D7B9E2CAE553F16A50C5FF1D
FEF3579AB085B2E9415F899BEECB9A559FDD30E5472A10CA22D6DF68988041AA
7A2E4F817B3D338668D025322928C956C9EC977386DB2264A0059FD24E9E5401
ED919622DA2606C839CF998F8FCAF4B2395376F6057377064FC8F7578ADE1E84
BC41F2AAD8FDF6640BE25D6ACC2E52A62965DB151A4372E812823E8FF6B9AA6F
2F32C028ADB1A971B61F091061B98E559869430CBB98937A4B05FD548B4FB3CB
0CC8D94C6B631FCAC00F53F31BD72000D0DED2E18CE2ACBB44B14278534CB71C
5A9B5BB147C17A1D7DFC4E6DAFAA0F8C241ABD632E0596C1F38574263AD37C10
FC1044916AEE2ABB2B6EDF1675FFED0D348B0D0059D59E8464C1610704770E3C
E8C5707C00E37CEED7698E311B1165887C7BEB50B41B44C789F91DA0AAC855EA
5AFA85C21DF58863F8640D71F2DB76A5495CE8208D52C5FEF249130956E099FF
BD49208CCC8B584C886E0679A2DF65ADA749F01047DC486F398115F6B37DF5AA
ECA8670F20933FD8A9B4A551C4BBFFEBF0F70C0EDDC6BADE94B2BEF586611271
AE2D2CE24B6EF500B5C51A99F0AC119E50D60064774E2E9D70EF33F8E18197B6
6C026A8CD92393B2BE97B13A2CB9B05647279506FEB30A1EB0701C1E021B6524
7B9820C23F4497231E07C7C3EA89012872C902C0D4CDC7108AA8C73FD7AC23B0
19787FEA77CA083AB836CEE80299D3F85FDC5DC65DDC38C7353F3427E2D9CCF6
06FFAB371B4BC0D6AB383EF29F49D5AE7E64DE5785CCD38789D8E60CEFA76FA8
7DB0E81C257C599EBE8436FE6A5A9F047E18819B60FBE50FE70F53A4DCE935E1
EB4A7DDAAC7C84FA7199E8B2E1E24FF9004793FE3BBD601B462D133A17265D93
E69E222C3B0407D1EDAFE843CFC63FE34E6CBA18BB35653BDDEC4143469CD402
F42CA519DC9FE8794226BD40504BD18EA3D2AC1AFEECD7E6C813050A2C2259AB
24E6C6A60029831D68E9A35E2BB706F8F5455745A1A7D0F133D1532B65B8E8DA
1384722F41FF0A0A8901B21928449CA8E31D7DF508836B039F45AE06FDD46DCB
595D309A5FD2351052D6D4BAB0673CE7F876608DB55F1E4D97B983F4D6AC9EC9
A06F88D0F64D857E2434DAECA0ED321F8F009B3DB38ACD0B71C7248B58E90EBB
C8DA485B454FE59B85ABB61B4E1317C114AC20EE3B520AD6AFDFFEEEBD57DADF
FF1FE07BE07B344ADF3B5427016A8B743A0600966139E3FC8A31FBB9C7604EE4
08DAB764C76BA6EF917E42BBFC7339195C5C78AE152D0BA0F067244A336E2DAA
FBBB0E605749943273BB77863473582C2F97068B9BE4B4FFC73A3EA5BD3FB4F1
61D24399806048174DEACF781552BAB64305FF40006598FEBD3232E692080A55
DF0D9B98FAF413007AFAAB67E514B03DE73893C779A17E97F89CC8F30EFE2D89
6035F6BFEDB64527A4A6820829F971D9057E94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /mu put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB598E51CAE7E4900
5CD570C914EFBA426BAFF7A56FC775ECF5BE13F2C42E51EF96784E5201C0B64C
074AC229FF1603B1E733A8DF0505C07E64B2D4F1FC7DBBD515E33EE4AB9E4BC8
EBCF182D4649E3EA021F71B2512F14FFB0211CA26B3C6149725180FF3FE0254F
CBF95A5A65B880D61F8B9AFE424E9910864A4EC5B71E8D21AD94B03F1D431130
9CDD40838C002982502B2A20F6421D450C4851996F18B79EF529672FF1E1DC88
69F87513FFE02C33275B50663577707E7AEBEE76FD29771EE620938595EB006B
70DFA3666C9FA3C59E929AEE30ED13ED669F2D1632CB74F96C7F2661E6317681
89EED774902E5C9E8372722EB7A63C653EAC5261C979395182BC83259A4ECE0F
2F0AA1A17BD9F3B1F497612A01AB6C9FC24BFACD4952EA95009A819AAD871C1E
C0067D96A90868D72E1697AAC638DFFFC8FE1C42D5C926F5FE9645127F1C6119
E9CF30C0A432EDB27FF374E60269
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 16 /dotlessi put
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
20AE6E9BC0C1E5143A5DB4A439B103686497DE2461BB90D37C89627BECC0AC55
70A57C2909F2E640F991D6F12358B5B114CA693BEB191961BD78FF2392DFF4CB
1D7AB6A7B88149FC49EE895DCB134D1F38F37B025300E6ECA15FE23197600C24
AD4BD6B59C91D0CF4083BBC7957EDE6DFA56299A52802A64B2E1FD8F680CDD53
397B02197B6FD6BF35BE9B41605C32BDF1D475B1288CE0F5FEAEDAA325B40BB4
85BBF060B969D4438A98DB4BA2BA2CD8A143B14BF7586AF40263AF65D5BF84D8
E2205AFBF3D4BC3AACD79A48157258DF2BA832668C9E6A59AB334F22CB8124BC
827B78EEED11AD7CA7924F6E7333901B8625E9546365F9F845E184CC0594188D
C4771B8904EEEBCC24FFA0D5EA576DC9E9AB838AFEECEED5B387AD8459786AB6
73EFFDF8F0815D7853C6F61278341A10182865672A065760CD6959497D1C4530
08AF26856BDD3C2F8ABD40C09C59C2F18FF32DE5ABBED403E7DB8ABDA22E2E4D
127E01A968961E4D5BA9D189BC8EEC733FDF10B6C08AF8A15F4A4DF393B4B155
330A6619428D352CD07F338778AE87B1A0D986D709320930C0D150AB7E396F1F
CBC05A0CED81E5613B96F2F0993120F65822D457A787523C0591B53CBD3D2B90
3A94A98F3A100BEC19E13A656F1E41834518EC17624F994B0DC7CB53C8808F38
CA57A2D497B50B23D1B47007EFF7027AF9017AD7FDF8E7D69B3C996102B83ABA
B6D3CF9B39D9B5FE0B715AF98BBDA7E4D8F38D88DEEE5FB8325FFFBAC2E0F8AC
20FE028DD0F5B714FB4F975A2F7AE055165C148CA55C7A1D7F655E1457D69CEE
D6B679794CFBC557F2BA9C091FF033EFFD2B365CAAA03C4BD9808AD5DC309B6A
998E83E5365136AC77328C93AD17F446D0C53FD075C959C375C735028B31B843
2CE3891C6DB6CF97066AF9A7BBF817F372EA9C62D2845D9AE8659D3813AEC6F9
5B13516290627535806DAAF3E5F1EC2E2B1DF4DB93E67D2159925E34CA70B551
92B6A29EBC2AAB197E5EA6EA88F4804462ED7EE4BF25653E7AE0478444AFD16D
EBF1C38D5F6037F0180333B6D84A171FA7E9D10D4B47F75D054E4C14E018849F
A837008DD757D753118CCB16686869E6DA6414CB729A60B13FEFEEA3132FFADD
E29A676726FA4DE9AA2588449379BE9D9F1C391D08AFAEFAB484948D1AB28292
C0EFBA5BE1F043F38CEE52097AB9BAB6E1CE2962DBD7C026A7B5F1164E926592
45514FB48444BBE75B07B02C711B0608188DA753BA5DB1BCE14966468B12920C
9C8B0E3205458D6A172A4D0586A0E4762C0C0CBCCB4E8949AAAA31AB615C7DB6
127C31D5945C8C5CF84EDE0C0C64A45E3F43E8A27FE7C391BD788D8F26196234
782B3EF26745E8E648804A46ED1AFAEDAA738B59D64A9E5F3597ADC2EB6BBE1A
D828DC28023397C9BCA84894B1A1FF77413727B341BE13F628CBBCAC784B54B1
7BF3510521588C00538DDB3F5B33C291C78C668B79EBBDD441EA5EB5A1FB805A
D0F205090A037EE1DAF46CD3472CD9D70672DB654B7766492BF0DD969FC293CB
DF7584CBD554F80DDCB485D18FBD2E0F65805890EC3793A2A7D29321C4CBC0C8
C5076876ABF67E6AE86BA44396F2237620EFA9C4AC0BE2D1AA25CA25226F6997
FBB0C61260CEFBADE0741097552BC996315700669D9D8A3D136FB6119F1C0E7B
BE7FBB900FDEA9B4CD50903AE04590771DF5DB3DBB07679EB2ABDE89DEF2B282
876822DAD40F11628096D0DA958829F3C7D61F30D048D7A184D03E7415C80F01
6C7BF0C4C93072A49F12408447D1605DFEBEAE228D06E4CB676FF24CB721EFD0
79AEC65C4084D725BB08927B936A128B938B5FE1A8D0C140D9870CB323320E47
C6F6DCBB76385F32F57FCDE6B1E1F752647B02E8D7781CAA779A4DBFF4D07BFE
56FD1D6ECD3C7A873328B5CC351E220C6E7257BBAEF6AB7B413FA0E779CE34EC
A08C8BFC9A99565FF9A91BF33A692F1AA0BAB40A97C23E2B05734F8AE504B0FB
F632F92F8727172981B95AFC6AD412742960F1B7EA0FDB1228C5A9576768BA33
610DA9AFCC96BB51D59C946E05361A88907DCC8329DE942340A40AB10918009B
39DF41C82E0A3CA1DC2B0BD7BA4C685552120DEBD28BCCD7B42E870B0105C60E
AD62AFA1FBDAF5762DD7B63562D8AECC26F7C12D5C234119A258C87A14F9A50E
224F50A0E9539F9A82467F53263A33BE89E8DE5BDBFBE2A24B2E34F880432D5E
68CBFE292CD0CC112B0C80F3E7E58A097528C707DD7B2A5D2EBDF7FD684F2A49
142817159D65F7826D36D8E7ECD5EB072D4B6CA3E4769323AADE88F57B628F84
995D819193325E74A8085661E9AF3C9B374D7359EA8B3243C50E12CFB46E4347
347D4BD39610519398F1EEC7F75C7AB2B306B4BE190680853215040C548AB75C
FABB832E1B5712E591F6706A93081FEDC7CF14821F95CE825E383044520A6B25
3F27A84E0DD702A2A8156F9B1DEFA6DE42E7B97F71F4BEFDAFB554C052A828E3
4680994C8BBCF925A26B8105D94C32DCFB0972D66AD44558C8D1E4D26EB14351
4C6F27E28EE6CF5558D7DC7C895E432DA5961362C4374DB64D9D10FAEB1D3252
64355BF844A269546DD5869015277FA76AABED8692206CB7BD5ED8D8F15989C0
344F0CA039F7B9A7CB35D0772B11BE3B53553AFCECB8EBF4A870C4709A828584
FDCD45ACB5655B9CBBFE777E5D70EEE93B27019CB27C6842D3E3509DA3E91E5D
0AC2333BCCB94FEE95497685E53B593A8A26696F1A62A7C94B125EF346F608EC
6186A96A7646F3B9E48DD0F6A1E129DD9F5D92C04DE97E9520524F73D3B47B10
7D671DF23500A26ED3C17C42B2534AD6FF1767FBB76A6D1707DF159C182AD4AC
21E3988F5381F124FB0B53C7BCE40B920F585EB09C983E1E88D41B94EA9AE749
0D66A13842FE708E25FDD91636859B3613CC9AA4FE9FE5B11ADE185BD47BE158
3B54C5052AAF58C941549CF5EC203D12FA2588538AD807A5FCF4AE2DB1358F29
D2B752DDF674454E93EAA9940C08338D08694EA7145FE0C8DF8E1A58CBCF1B5E
D790DDB4FAEAE410D3DBA4E55D9BD1C9A2F5371E68417E9722278E7D706FA1B9
7CAFE5D68A1CC6D9BD7124D29B680A5DD5B6CE49FBF0ECB341F39F52077A8589
EFF8D68FF403334B24A1C933540DED81108C370FD5D3C386F5210CFBD179B8D3
397201C61540237A5DF0EF771BF732FE6E511392CA2377B630001A59AF73B83A
30D68C3187D94C34D9B18FDC13F42F6BB3C51A783F7FCB3FD13E44AE94A53168
2C890B66000BFF03A135F5B2E2F28DF381FBFAEABB4E7E6A9733A66A3690D996
A9B94C4FEDB46D1B2DFDE0883D0CB974B71CD69385FA2C103CD6177E195D374D
53D689E76EBF3179A7FE6F7F11622929A099489262C46239DB1DEA6041C18743
1B7D7F5155FE291F8C16AF0B25731257DB7A46B0A659913E026E132E89666039
6C421CA718563E545AE89F6F76BFFBBD4C454F2FA19D77F25B073E352D19CC47
27B06F6E812211135B1C414783BC3B62F2C4CB96582F62B2EE6152352F4F26B6
C3D6A63E823F56A4B779D58607C46E18073EB84A85E1A8B294D22AC9A8DD82ED
685A0A485C1AEFA5D9E32E3757D26959FC2BE69779E0D89B72E8D9C5E82CB3D0
F04D0C1D406EB385077768BB011D485B92DDC494A11D84994318A20FD27C2708
169A66A947892A0D6FAEC3DC73CDB56AACA7716D9D6F1C2A5D6CA9ABAC92D397
AE5108FD78308C7E5FD7FBBF3ABDA077683C902B3893901AABFB4F6A5A02F17C
0B63626372ECFF4C06E9596E3A92BDC696825B487EE5DC4A7333AC6156AA73C0
85673D7D9AF1E0F0B348F26DF6CEB97DC580BD9E42D6F53827ECB7732B7EEB58
095F5A61FF69C615D3210B724BDA318D3B32A636FB671E4E1346B91F0A691486
7F81CD06964CD12D2C38F3370F20FCA9B39CE352044108316C579871A0927DF9
9C6BFF63AD906CC50DC464E8417137CBDA47128EF9408DF4125F216171EB275F
E72FEEA6B4EA866D61178541BA725FEB23330E05D1827CD603677758A334B848
D6B43CE27A37DEFF18D122E422C56FA420F89FA557F322FB0241BA2FCAE1B83B
FF5F117ACD19E40C5865EEBD064D80BA87ECAE00E1234B06DA7CF3A454BEC070
2B996ED44B5294965FFD5BDD58912452E868C5BB045040C76E15C2DB00556F8E
4E4DBB6857DEB932605F14403944F55988D8FC4F0959EB2456676E931EA6D472
196680CDDA51B6462BEBAD3A7543B4D83234964135EA962B2231185C00F3F0A9
AAEB7744C4BDA5601C971647AA5423A3B62D6A3641C3C34B5414B8EF2415B5C0
F989F31FED1CBE2DDFCB319492C58B00E35EDD44D8917D1B162923C176B41D1E
E076275DFA797AF944EAEB291C4CF8AC4F7189143AFFD3677B4963D40058D074
5DB69E56845B7676E596A57FCEB38EB368B51D0E7F1F423F8B7C5FC282C156F5
8B5B0B4F975E3DAB73285ECAB62E50279EE74A42939BC67EA3AB7327C26B71D1
C2B167FE86367C808D8F16B0BC31C64F7E62E433B2DF01F2D8CAE7DCAE28B0B2
B6418D558FAA0F555CA3AFFB6A7386F7E1F25709B304010DDDB122659A4C0822
5EECEB7E99499C27C9035447C0E147D0092A4169F0F61816752D3BF4A0C3CD69
AD46457FDEB84910790C90E9274BFC9D35CA155F9D46B593B10D9E894B5154A3
33E32A3746BDDC39F1AE043180B75B5614EB58AC21D8906592FC20E2A8B08351
92CBE0233FDDBC1CA21397DF0079C0AE1B5825CC0E20D1B9344A5D0B7C64141F
E7CA86FCFB71C18EC3A16498D90780B06C76B23CC9A626C591129535003D82B7
CAD15D32BD9266B39517663EAEB958435EBBE630EE8BFB3E240E4A73677097CC
7B4783073E7859D68CDF0BDC4B402E30ED77FCFA483E9E73BCB6C11F1C120E7C
ECAFDBCB058F16277ABC0C9210F0CD9A513BDDFB8718C0F336948259B8BCF871
DF8642452F0D69B093F94D1BF50117F81BB50F04CE9CC0262EC9DA0098D833C3
8F7174FCE2DA5DD3EBA6CFF083ED123BE6434CFFBA904B8E96EE8004FF949A2A
C1EDC20E74BA38C3A778DFF3971224C95ACADD418965D0CD09CD7E24C48C184E
2BC435B049D0DDD2E2CD11A45435C098B5CB3F6E4989D1DEE59E463DC36877CF
E04175A001C95E6DD87197B51AECA14D697B1E43DAF12C5578F9C10A78D3347F
1D6B65F25D03C96DC550A83C26C3B77ADB9BCA32FABFAE2399C947CF95C051F8
D86556893EED29E3EB053AF70E2F03BD9B9BB10D9EC16DF541C6C653529607D0
2909E2856E700566EFBA521CD8554BA59089DFB0EE7B9CEB26090ECAC360C3AB
4D719C81675B07C48F60940A1A7B10FF68966AAAD299D5BE96274450F191D4B3
6C607E029C91C032D32A47F12F351EE2D58B97BFAA5B3A566D1DB3BC31E75118
2F83244B5D197803630C5EA8DC0809FAEB3698FCD07ECDF410EEC3F58D460894
E3A27BA54BCC16B0FB6708E8F9448AC0F99954A5D75C72453DE130A40D0DF68C
9B1E2E5440F165250AA1DA843025A7B092BBBC65E51ED3704121BD42C4130F7B
CA4E4B0FF551ABBAA47A18D0C36A317BF237D9608C195AA42363D70403D7F7A8
A2F48125F57E6A532926716206498B3DC28338FA6AAD389C50A36CB32E09032F
2EB8AC634E43A9A63785243153FD0FF3B780E38042340FD52D47E31DA8CEFAFF
EBA9E9C31EA4EFFD7C8119A15E7F4B232ED59BE21FE8D14E3ED56301BE46D3D1
5A1C9F8AB7EBC65963ABD3FDC3280448016702699FA5838052B89BCB3369E067
9A2CAC8C1B11FCFC8E9AFE65724CAB7F8CAE0B8EA0AF6D6EF7E6CC78BE049DA6
53C363CFA4203F066D96E7A7F3D3B33E7D926FA1FD2D4DC24A14BEE3A88BCB5E
BD384F25D6E7F87C591CB6FFB0943790F333630EAA66ACCB01080908A05F9034
8980A60B71674951F3542FEC5DC1717EEA63C42B706AE965BC90A802021209A0
E83669795395586660C347E3EC8D8CE08914EDB992AFA559F6EE07CD586BBAE2
6C7CCA7313F0B1CCAB206043D09D3A1900D430EA3EDEC9A814FE3CD76C827DF7
A6F9499301FC54350BFD1382D83D4E76C2F3ECDB9309A9602E5A99A72019D29C
B88AA2174606C52F037178ECC1A7FEFAE235374B9BEE033B41CEEB5A885063B2
2601E5B65BC7432F7FE4870CC634B1D6B88F672D50E5E9433CD2104524DA753D
964A1A27B4601C11BEA69AB874CF4A9DAD929B0144AEE5449C8B5FCEF0D1CDB8
BFD19D51B8729C63C48432359EE211B4C6670A3D387B065CB219C926D451DE72
BD84E1055274C0DD7A3D49B8C2F9224C21CFCCD05504E7B0AE8FDBAB8E04D05C
6E3C4C9680A19AC68CBCC6A63F7A67EFB0EA56A6056030B8F40CECBAFA7F9882
E0FC49DEE1599D8BA2870BEEEF479EA35A8A8B62E8724A57A5C5E9928A2CFF75
4D82CE1AF3BEA73E65DFAF8FF48236F11784BECD418F8726A18BE4762D0968D8
F902D62B7E04A1B5EB2951D4AF1FD93DABD158FB82CB203EB6F696C4C97E3746
32685902074664BB7714FEA85FE18ED254CDFC24385D095A399F3DC5DDE501D3
82D23A71AE1B495550278A351B9DAA81DAC7674789998AB8693F788D4EF9C88A
B7999216A01F5520EF19537B1AE1FCB9BB6076EA801769B80C350DDAD793BA63
01A74D6088FF6A1D5A3C995C1C13EFF5538F9989FB5F198EA087DAF701DE63A4
9A539FA853BD96B44FEFEABEA37C19916D9D55289E0E45947AD01406553859DF
B1A0F6B77C47E941C66245E684966C86C454B61D6AC22A470A7A116B1EF92052
0A8C8092B275D159D555F279B3E6AD12488E0E4AB494565EC82554330D0E5286
89D27E5A85061882F589F8645C20C0C6B2E71F88E23057B9F9FAEF756B540696
0F4EEB03F3969328CD8C5B35856D9A5A19BDA687F1ACEB68342D469106304E93
52BD7E4AADAF8AD85073C4F227468A69C22B76A78A002737BE81ED363BA6091E
EE54AD77EFCD8A6E6C1D4386E5C74081E9EBEC399B63D0CC2E299F249B4F4D44
3A99C12DF25D49434007B08872F3AE59A4D5B9E9995ACC38DE2854E8675BB8C8
93B2B652D05AE40B2A1E8B168AB2DFD7218A0F3D850319BFA1AF71B7C1011692
B5AA2004781E4E7CA6A94B029A1DA525997B12BBBF12BED6CB701C7D42857762
61AA506BE962D7400BB7BEFBBC65E77D95230979D99132FD7F2F943A43575507
793EB863ACEAE7F51CB3BA9685B7DFC0161BB96F71FBD0E6701DF092587C5E5C
08E250D5FF6B7CCB9A89B60DEDC3A0403CE0BA7410AD0C7609CEDEDB95D98498
5776D0935315868292CE40A212AE30BA5C7CF631B66479C5272FF6681824A2AE
AB1333CF2B8CB48411DBEE48DE88D885324B1B41D4F40CF7CF3C02B785A8C43E
4FED6EE3E887F826861F5BF8D90B82F8B79A79AD0F5B9294862A7FAEA6EA4154
3A2694A1B98CAD62EDF4D37249803568FE5A60588756BC3206D312D9F6D78532
6511A63E645CEEF6B4DD2195C95E32902ABDBA4BF29F957B863DA7E3B5632BBC
214346A88BB2D7EEE7A31E2C94AC730A0788242C028AB1AFBE63F1A37F2CE396
D8DDF20E1F0114903AEFE39BE6ADFE3FD34E8A57DFD83636F740026C5C9F28DE
BC09F9F4D76B89FE14B92DE41C6F0E1A4914F918E30B156E63ADD961AF25082D
9BD9B4DC0B2AD7ECA2B48CC7211673BBBEF3A59E5154939534C719029F44F97D
1F13650E3438D14F41F07C49A9E9D48A8493A945D277024A17B0AF6D4F9C3227
67083AC390855F8A541E618B21029F3FB6CBA0D8C1C40746CE022F324CD7E86D
B5D3B52AE6A7F3A8E45EFA223BEF23DC5B463BE9CBA391BC3B99182FA574056C
135910817A37145D423C174B03648A3212298037CBB8F9FED0D93052B4A8C52B
57F7A5BF4AB79A6668AF46422D7B7A0A4E8BAF5A4816547A3608F9AC6CB6FADA
BBCE37FEEF5CC6269A02C3AA8993B080A499821283302780BD9E13CFE1414176
219834E032D0AECB642AA4B71E0D77045FEB8BB8451CCEA88A35E95CA2F6799F
BE1D654834701BA3197B6F1296031AF605493AD85E8EC2BECC00EB140959E1F7
BAE4A94F49113C5A8DE2A859A5014F1011CFC4F2C7C6706844FA5C990EF446A3
BA782BB3051EE76729083021D5A60269B3AF5134CF4B09D3B636B193FC09809B
193B0298D7AA67445BE5543717071D7E7BC815DFE2FAEAF56955E69B1B7F2BBA
067ACA2518E2718FFD4A7764664AFDD35FBC6BF2E49224A9380899121023AD21
915FB8F230AD2974D1089048BCB56FF89923B02DEB788885964BA45A3ABFDCC4
D2879E3E8757485DD8C92695818BA48FBD18162C9C6F2F18C861FE1BD7DE3811
1C5021AB4FB469DD369BE6D162F45A8D03FB04CEC37C6CD20FB294463B5F6F3A
FAB1AA478C42B0855E123B74D773F7E26B5B0A3BADC162CE9D8716D9C3101F6F
0CE482E92CA8C7838B7FB2978C251F4E785F1FEB55E904F1BC389D94DDDAFED7
B10867CB8C96D8C498FBA5007F858058E54B7921A69538AF1C522BFAF7310D18
B8C1FB64E01F5767C0915C7388AE7BEE799B8DEC483D4DCDDD17F76764377E8E
DB2FA74AA5E7825545F4C8BA1AA710FAE9A060E6CD2D8481662FD1EF47F9F2E0
A75B237E566A64920F64A695693E04BDEBF42550B7508AC2DAFB55417E653532
345DE07989780C83FDB93F85F3421CBC529DEFD59515A14438355A90532297E6
86352A77F0A7D80146437FD4A0BF9B9ADC9275C5825784A9E19BF35D824251F6
227EAC2D48E9AB0A9D29382490C3E2A5711B5CAE50B292045D4350B5C7E2C3AD
C50A228851364F19812BDC14AE06A3252D502358D6F2398A8D1597B81B87F1F7
06163076BBF3351F2BB9442012F7803AE47D4758B3EBAF3486E006C8ADCE3FF0
B729294EEED3131CC29AE30C897DFC69812699F30F2783C9262850689E5324B4
88076284D2569DF3F813A168F09AD47F103664AB3EF4A1ACCF1DD0C7FE02CF30
E90884B6FD8066E99BCA810BEF95C54EE353695497D76441B9558643EC0E4FC7
37864ED47547DA6028F6CFC2B8088E3C6B8526F757E2CEE509EE0FDED7BDB6AE
61429846B71613F1F69AF8C1364A6FE9466B313B625592EFFEF6B57B3D14448C
E8CF73625C90D90E50B92BE4B90D40759B001CBE97B49C301EF77ABBDB9F4A28
2B638963C439EA8C7825AE311025EA91C8C3445F02B5D52A4711331ED19E3167
AD6AB8D2EFEA13B273802E03ED4F9A3A5FC4FDD4AF69E0CC7E4CA4D37DF90C87
B0649233B82BDE951D20FA2F3A30E50380B41B318428737C21041551CD657C75
925FCFB4EFBCE559C47D6FEEED6260A044502AD9A7D8C663E3D8E1D23F5874F8
6D3E483B3F2D7A28E1CD539184F074AEC3ADBED4564E16B37A17128776D3C31F
E03737A0BF9BFCBBF0DF4C0FB958E21CC088489578373ED229C1E9B334B0AB23
00639F9638CF497224A64D6A5A5112C30D17AD2EBDA45FA350C8BBD77F99F96C
64974EA75C8C2584FD5218CB4AB6F52315D59FA1B440D40162C5424690611610
FAC54D1C8EA50E020FFC0BA57F9E46C6495EFDCB9CFF73297E733ABE4219B247
EAD323C246659248B68F7C5802E33884755880B7C60FC8AA6F5E5ED6277F4F42
6480A76AF65BC5E8EE022683092193D382355334F33141414848171F5BD1C0C4
63B533A326D45FC736271E428857FC2029FFFB0BADC9A0317505D3DA415AF82C
AFDC6CC54053C1B7EEA72071E2049EB11D0374DF287EA7AECAF87680934DAA3B
7D439F31167E39F59CCB8B64131161FEEC51B7FC036F0C4066B51A5645A7C9B9
B443E049E53F38EDDDB8EEB7CD4D6AE1C6263D6249B101B1B58B940D5C57D044
240B7B2BB5C382DF06CC116E7AF0348F8E1B72B398F6607C6A3A5FBA1723C5CD
4AE34E44BAFC976CA8D562565464D3471536AD939D7FAA4BACA4F1917F286F63
E950932F29C561EBD47E308A100DA68FE2E3D78EE8E914D6563E131022C83EEC
FC0AAF9B08636D8DFE49F75A1F575E14D4AED64FAADB62227B7DA522B898901B
2013A6648C227D7031C1C18B8DBEAA0CD12F6F356DD9454FC6D79BE3C36438EE
2A1B71BD033598E983DA44C886A37845FC582F4D7A23D7B170A50C7F75243CAD
1167323D595AF94661ECBD90C2D7F26EA711198D383B68DE618FAD6E011A6721
7CBBF4E0314D7A4AE3E1BA4F85C08019620FD4A5A621BD490A48F80105999495
CEAE0AD6F62CBEEF16B8C03812C3BF6505EEA6CA28135F2754CC59EBAB710FCE
DED6AE6731BED2A7E4FBB7880F529AD3A822A744FA7D8ADC54D538EB77B28741
934F5DC9B7D2C3C3A68A2022ACF84EF133710CA7ABF30CDFF64BE4996C40B4A6
BEE3B6989CFD73A8977863C6CF92883EC23D90A0A0E00CBBFC3061BD96A4DD3C
46DADA1BEC27BC20C031B64EBF75E3B614D9948E70F3F2434826D5A68E6A720D
A0EC001E5B03D11ACE0E1100A68F153B1745E1BD8EE31F99C50FB4E0E3D62090
982151905767E46ED5A38B629C7FF72A119FA970C30BEF7D0F9A79A8E53F3C4A
AC2A515F52734A70EAFADB385A946947179E1A08A89B891FED24F7D2EE951AD3
E6AE3032A9A1DF6A7EF952DB27D9829E487C002C1FE6184C473D46FBCF3201BB
D2C5C2233004D547422E8F4E46E4EDAEB91BAF1279E75C05CD78C7CABC2453C9
80CCCA9BBD24D06FD1836B3201614C77B9F1651640293280A78E0678B55303F4
86AB51C6907949BBD4D11CEB1260D2D1C4FD6793A873BC1D0F9012F94DE3CEAB
2B97B606180409F4AA50AE402A9A3FDD78196834B06CFF5772A4A81C64F586F4
38647A0B5717EA2F887AC358FC883BA28A9F022F4AB3356AE885CF6B3AA96B66
FDA1E8F50BE3AF85426FA867F555069D8BFA62DD5A3C471D3576680BC34744F4
2F627C8D1977761AE9AE6E26E9139B87C11BF9CC89684AFF6D5408C7B22B635F
07CBD3649D36F344397FA331E5324D0666A0A7F56C1E0A941A77F411D4B36EFE
3F8C122BC49699BE53783482E2808831EE9A44B5670B50553CE26A1A8E5BE38A
082E3177B5C962BE2EAAF4A27F9AF071AD19A6ABEA9973361435DA596F96A786
B72411734F7E6BC2988045F129AA310E03179AFE12031ACA47EEF2196DD8B918
7E6F0841C1CC3CB4C4B3507CA974A8A4BC0EB33F6164657EACA18D51FF8849FF
03672863E04B6B47D74CECBE966373DDB124EDF5812C01610449BC0B87706066
CFDACA09483C8E0ED7AAD088AC3917F4740D8187AF1613877B3DD07A60F13315
598EC7D6A07973F9563FA2D5EA40A0997ED4D92B2291ED75F58542CBC9B3C056
1AA8E5E79BFD26E8AE2104D3EA75376640C5018B4624A5E869EDFED766ABB317
1056F13C03F296E38D92EE40E37F17CF0D9CDBC5E924180289367ABF55F2FBE2
4A33FF9591269234B8D1B9B0BAE35B11601D3B4E095285B263892B10E3BE7FAA
B5C29BB7C259C0D7EF0872AF80E394E094C6A0685509D9D8C716CE0DCAF4075C
CE2A17FA72C984A261A472989F2D631956F27D21C26793692D9A773AB839851C
8FDE6ABB1CE5635799AE71F2028BABB0CD42C3FFB050BAE402340E934EA82A9C
217AD4A3A3BBE62F0225FF72D3FE1A4E2EC45A2C5AF6040BCD7EF095A437BD1D
04ABEA50877B57345BD4BC21326C61BF37D232B88F7D91C4CCF146D8AA86A1F3
09BCBFFE45BE65D487E70171BD0979ABAFBC9B001419C1393CC838C5945B837C
24D6A7EB2883D3F2117B03D6E631AA0E9E57C9322720B748EB393518934F10BC
F20BA8FA31D770F8C545B16BBEEA73704D46742FD0B42E189A1374CD27F88211
63C4BAC984DC6F43F249607A9502E73C35E509A34ED8B1B1DABB0B1BE9F5BA79
ABC5F932FBF3D8E32C1E992C9FCEAA4CAB72F26B7DF2E8206E77BB9243648A1B
E25608053BEB2C8A099D7E7609AEE730BFC581E2784168BFEC6EEF653179E37B
87F522E2A3FCF6FDE98310B5BF4BEDB74A77778B10D64137716C396E9FE1FAF7
EA9362271469772322F705B27CA9ECD3AB91093C754D281E952B5F1E6EF67F3D
D39CF3B3D823C22A07718DB447B05679987A47930787797CACF1C682BDFDF49F
E59E06765617D5F43CA7593845C363CA197B6E737DF157D8DC913CADEB6B05FD
A09AE6FDA097FEE96C486631B285427C811F9697D12F8C3AA140E4877564F26F
5E1E18CD296077A3F971147F03E4C4FCF084476CA3EB73424CB604B2B01640F3
DA1025EBB5536DA0AED083812F3121C8A7E5D7F5A3ECF612B9D46645F4225290
DCAC240CAC0EEE2B6CD1D70FAC02BAB30A9C78EC48BC8D5C12D3493D96D68402
60166EE877A4B81434DB54E41EC3102B65AB503231BDE08EEFA66F6A2E1439E4
2BE0395C7B29D13DF0F353879C36EB26C10301DEDE0D5D728AFF409DC5548468
26A4E5ABBC869CB3099274CA8AE7426046A940A7D103D4B437D273A141A3E8EA
F3413FF8C838F59B5B66EC2743ED9A33567D6C0F24FE215DF312DC2DB0288D90
8F1B35DF996330BA7F7BD8A7C9DBB136388FEFC9BE3F1C9D08A236B9A166D515
773F0240BEA8307CE571396296E81DEDA03C5D96237C961E86B31F02C08FD5E8
6E0955E0F1BFADBA4EE086F0F4A6A33500B364021025842EDCEF530F88100B80
633B7E9FF49F83CBF3F2280D3158A2535C2FB6813CA4FDC35912C8E7FD91454B
1CC6C28D291F009267EACB9F4206FC24DD77D2F8B8945389F280335B447B1ED6
1DBFE53B3E3E78A398615C28422D09A42C8BC33A4EE9A1459D1B9D7970ACF107
FCEA97BD27223F3B09B4ED73AFB2D951B23235450C1F07AC47D40535ECB98C92
5BFEF09A14D739D57F6297C3463AEADEC94465526F75B41B20F392CB29DCC3F8
62EA2CCAEAC6F881936F0A9936FA7F4ABB0E29AEC438A952A010B0AEEC03A07F
038214DD5CD03759F073BF24B741648EDB627A7F3164DDBB9B350E4FAABDAA69
5CBC583D58745FA008BA7C30C93D513FC51966F96F7198827945FC373C346BCE
4A628663CB0BF1DB4BAE3EF6551EDAA0DD5D31AC0FF8903E93AD603652F89446
BD411A5EC6A56250DC1C0C7D8F525CC9B4316B6A58B693F348D1D2CF2BAAF184
E355B67E482F0D4393899F556EEE1A7043A79875DBA8DBF9108E03E5434F822D
9CE699FF72F5DAB022D79F1AF5642C36D1F3B5AAF67C3F111D59C51FEE7C8E5F
C863687940D513B08B5ECE210B5D7AEF133BE4636A7BA3B4105E0C53C60FA91A
63668A9B9AEADD25273726090D8D9ED0A7653D037EC5F71C2AC98671372C765E
4CFF43448918CE94E1FA3C949F52BFE3EF031A2448013ED502F2336ABD1C0F9B
5BF42D67705F8CB7895BB582D9B7CC885C82D8AD497DA3FB7C89EF2211594CD0
5CD57910C8873FAFDBA8B5A0CDA73DFBE9B6F0477934A00902EEC1F1FBCE11D8
A95A3AB3B7F889D2B63560F375DF23A0FA7F7CA512783278B39A2AA61E359D63
301366DC9141D3373C6E96E71C4A44A6396A9A4B10D45B764B75C58F75FE9501
6E55657BF4DE9917811CA9F1622381B799BABD732A38E51AD35FD42060D02748
87CB7E2905F8984451EE91F422CC2A2B98166C6DEF502325CDBB812270527E00
4F7DC1CCC96ADEAB4B07F4EEB9E7DBBF128E3FA352A960D9F2E65F681A346483
17BAE7B824FB21F8C170311841E20A1FB3D397D1AD9990F3ED2B5AD1063AF8BE
67E19348F4863ADBCFF97676BC15368B70773997469BD36A85C56381CAB91611
6BD0AAAE0BBAB1CA3CCEFA836C92FE45035347FD516E06FCBD34D8F19CDB309B
1B853385B5877A86F22FA310DB76DA698A0A772A72569EF96551635F9F781DC5
88F3085721525118AF5473120A254DFE32677A1C16F90BA15AC7D2DD401431A4
91048AF43B055C9BD3345335A5FE2EB448519B7AE7CDD218207595A59A6B3B07
224DF67DCF5D4DFB8175C84441787F25BBB88F6A8506AFEBB89E2F3935FA0BFD
5AD0026510CAF4A25FEAE2E2978A29C4B9F079CC921504778CC6CAD142727E84
3023B93F38999AB66D44C32B7C9CADB9AC26DA665B22813C106E56D2CCB11A98
F9A066545C718EA3F5C0C58FDB8F3B3ED20852CD97C48DFA13F48C91CDE645A8
EC57BFF7B9DBE663CB7E6FC36DA21345D3D47834F88609759626474A273044A2
0A52D0AF319ED52846F0841584FCCC87055635AFC3A49F5673B23AE113B27C84
AABF85BD0F970D5A6648BBFDFC31F1B894FC5E627A3CEE03319A95BC35865AF0
5C01034AADBFBCE5216AE24FE80317939CC729DD7EC453A8D735ED0D9D40340C
1D485956445A13B67943974022E371414F961E885ABF637992C376D660BCE573
967CB0A7A1C48C227BE6E3ACD705A345BB6592956E7EDD8F0AFBDCB5DEEEFBDF
659F34565FF9D47CD1592A0C6CD5462AD61DED858AC63F22BFCC7E1A66AF164C
A3055CB375591EC4D35026B9C2662CC9EC181BB440DF76907EB35CD3BEB7CC3E
8CEE5AE70334DF3444CA02E3599C1D7BCD9F19D6B59CDBA5D373760C9344B127
AEE04FFED4041E98C9926C8465C497A1352C8E20F2F258CD57DE25F33849D9D3
422F7E866C14EDDFA440F231AC0FCB1375AB7B3D5E7BF7C99E5F6F9D30B51F30
1599E128BC4D80B51A5006B9B2D577D4871DB5C470FD8868BDDB7E08373B7F51
A56FC0DAED97E056167041A9A214C05A5A8DEB74639BE760E7F42868AADD2BAD
6F820AE925BF2A8C0A443087B2E6941AC3D43036441727C6063F2F82FD327E60
93A717E98BC3C01494F759BFB71C415C37066A832DBE4219C7B6ABFC0EADC0AD
4578C14C3E4E4F7B6A362D638D9C6D02539B24B656F1AEC43DF05A09BB2DAAEA
A051E17660035645CCE0A415C62736F01ACF67420252D8E801C105A1EFD13E9B
63DFD8B49B83BE31EFD5BC6F15DE4B304EC42BDB422EE15422E27DD9A3617DE5
577552114E395FB9CDB5B6B228B13F0048253C6BBEAA57AE2278EBB3748838D8
A63545D99A1962181FF85BF147B126ADB9FD01C35A0294A2AD7DF86CE75739EB
64C754933BB2BCFFF8508D00AF04A1CF44E0FFE14398B197A15C133BFD06CFE3
9E2AD5E18E234563076911AFA1F56C7486D5F4125FB0B933E36A559E98068659
12F2F308EB96464C07D39C41BB10C390D8D65E924A05EDF3CCF69D340D2224CC
439A3A5116C1066A5188BA2BA25E3DA8B6546357702EB6896329E165BDAE74AD
CE250016D7E6AD6484435909963BA6FF3F31061C8A80A626102D5D8ED6043B2F
E6C01063F3E0531A39693C267B19FF128374FC53DCA7E2B233427AC1D600AEC1
9E6DB66F4979A1C7516B02E71E158355FE1A7D74F3245454C2D22EA37AD26DC5
CA072178DC82A5F3F068F2B0DB90226D92A464A2DF8437D93E61AEF325783FA2
94C2A65ADE20FF3C88FD975E2A9AF06386F642FA7EB7C88CD146CE99A672DB0D
478BCA15D346C88449923290133A82BE288CA1AEC01A9BF84945AA3E1E4E3002
3D6CDEBECAE54F38FFBE457ECFDB8D3E733B17D25BE08E084159FDC174DD5922
5CFFE9A0CA730C5FD342C629E8085F59A7A4980A58B0C9F23DF04B52B4AFF684
9F0EF83253D4F796A8D85289C0E0A9AE0B80C57E626897421761F67AC2224758
A20D12ED44B467EACFA3E31E61C88CDEB34ED4E5B95C97EEE460A4486C8B9641
C5BA33D2CA973C8706F44FA7BBFA52951C646C79E9C040B8886C7C6733D45F48
E4BD866104E3462101A783BC46754A71067F79E6541FE6E4234D869E30BCE0C4
0074AC3AAD42059A299B8EA20E1FAAE23D3E2F28839390AC23116D1398150C87
1DE04FF89924E8B17D11924AAF00565E9F3A516B299F9A6A9E0E1E2D57CD3001
742D6C03AB530B29AAFF4F1998CBB05D12A404DF919E09988A3E9CA2F759A1C6
B56546A7513780F60AF80497F3B95B3421E7DEBBF5313F116C0C4AACDAF2C67F
B7CDA45755A8C3490C584DB958015C8D77B531985FE545EEA7E4F8A562D889A5
ADC35A84C1A9B1F6DF98F8E79E1A0157F7FE1CE6929523A7D3647A4350FE82A9
F7F63CD7A39A487D1D47859249B0EE9FE31C5E0FEC78A33918E68A050C783D66
F40D7080A1D0594F680609FA3DA9A4C02444A26998C9056417CF7522827B108D
D88C9B8310AD9B034E06F856FDC8EF3A7FFB7F5CE37690EBA26D95AF5D4AB1EF
E3909221030734AE4B2CF41944A95EF74B74F008042426660CE5B24A544BEEAD
970D7A8E9AB036AEB2096E9365D2DB01F4188B4C23826F0FB0CBAFE8637E3FFA
A668347BF84F245C233B083BE4367F317632AB3653B3EA8A71EF2640B583DF5F
AF1505A88C082557EEBA8F19509CADA5D81E8D59603AC59CE4AEC8B64ACFB322
35F869E81B28F7D301D60EF552451943F8FEA90ACA828CB5BADE926E98729B87
DFA1FDB6EDA22EC0FCF61CD3B97368859E36C6B183A30BEB56C41302E7C96112
DAB74870E4D7F271D69B62E22932F896D3A52EB8250C3FEBABB12D8A9AF81D78
10D9B1F7C17E8E0AF408054108321A596C5587D9CDABD2984DF59E13EDCDA844
E151C52F12ED7212D92E5CBC5F5214CA72910BD93EB4CCD0CFA2ADD2AE0912AD
541D48EFA8B50541C82EA045DFBCFD4A5767A9A71C61E15B685A98D9F633CE66
1E8FABA8618704BA700E0EFE5F4A0BEA65EF76D354325969730EA6B9DEAFFE71
B97371BAC7287C8F7904CA9256DE2BA450FCE312865B20C7D9133A1A2A07DA89
742E6D11926AF6A6ABEB7BFB798D508FC97E86C43938E6B06BE3DD77C298B9D3
C663CAE77448074A490B955D7468599F3BDB146B8121E2EF68503C1B399D9C9F
0256D7BA88BB6B6628EEFF4FE4C2A11FFB25A04BAFA1FBDC842D8DED645BD87D
1A04F5253883F02EFFC644B1DEE02FE883BDC218CE5FC4D8EFF39ABAA0D3B111
E2DF0C1E5930D41093888C807F012AEDBB4291A2418F7CCF1D574BDF0E40655E
9E0FDD543D7554C18445B4AC6B82E7F2115A9247D7A03EFA2B7F70341057BBE5
73E1F14F55156666EF5AC9EE526D86564CFC48BA616266C1D8013E7477F579B5
93BBB99D05498E54A6C535DDCE00C8106B4B10AB8E4FD52A33327857ADA770FB
F4CBB7F3D90668489D426CB2C1DD4E75F697E35B92EABA56F830DA373AA6659F
161686DC2ED5D0CBB0D260A1CF613609F4391FF8A376DDE3314BC955D8E012B1
4986B0F7B1B271FB58DA6DCCABB9CB06E9ABF1E5B52B0D217F26FE859E7202E6
CBBC4C2F2950996BE9284EEAB6212C3739625DB3CA57EC5944BB2CEC914D4C5D
027086A63BCEA2EE68436F1B38141ECF680807C7A90A81A94C30F3A087CEEA68
E2156DED392FB58985BFF9C33407C0A4480284C7A9015DCC938C111DF444CE40
962B97653603F94BA1E285A73639B5C7D7B113095C436F636B92B7645170A6A6
1447190101A690841A9998E582979C474EFC1385F96CF32C53CC07D96C655712
C1DA0B4FDED7C4834E398C20F1F80EA9BF16D58093C365A4C643218452DC846F
B67BA4C0DCD1DEEFFAC1322F782239C0A15F220A2BF6A62CC67587E44AB10DF6
0BFDCFE0B61078192077FF77BD6C17500596E7EB46B0DF0DC5A421C7CF161431
6B0C1416D14386178921F44E555A469F81B25C8B73BE5E7904A6E380827F6AB2
17CBB2718555D6112407D6A758B9467755E2E4CF0E0D07D3143CC3918D1B979D
AACECEF928E96B64425925040EAF0DC0680C21AB7731DD78AD7D563FDE0D962B
C29D9F2AC5FFB50FA122A32BB45F0AA0244E3F69DB67B671A5A621F4CF1C98F8
DDDF82B0B9CCDD336F14D74890E04B35E79832FA2B3F196378B904A254DB64F2
0FDA6DE7F2D6DB2AA2847C98209D86A132EA0D7A39F36771EFFD87A1DDE220D3
DE4966945751FE98548C0FAE221827AD10DBB46181F530415FC704E228B624F1
D39D11670BA80E1B9D7F827059076CB61EF932BC4734F5682B5F1E93E89936F4
62A9087F7346462BA8A8899095BB5B58770E0FD72E41CEF17497CEC417437F53
37BBDE43C7134ACAEF0D900AC19E2781C4D9A1FCF270C003F8C35E867AAB088F
A9EB7D5EFCDA9560134A5727C64ECE962ABF410586BCDBCD305974B1D5EB6BDA
94D2634E5A1D20113D0175A5B50267BAF86B23869FD237494D738A621DB01ECF
3C487823FB4110E36367505C0253F1E81EB3DB4F4D238DCE059E1285416841DA
55F834FC9F9EF02F94FC5FB2D744ED5DC4D6FD11B81BD02950A7C727E2935772
98DE55758EA8CC6526998D24C35E5BF356589F665CC0D4700D7C1A8BC55D96A4
01AB353B898CE8E8D8F3C6F3F2FF44F12040D1899EB451D7D3E2A90BE2863429
C00D2567AAABD01F793575AC5D7BA3958002257FF28198205048A7DA26527D25
3DE3181A7E96D2560E8791D7B2E0BA5B0392DBCC29ED2D5567EB32308B07C516
BB03A1A647B58928112CF254752A17699552398427C498D1044283A5B0CEC801
A90C7395EFABF2B071A70D8F9B9E926E659B563FF852AB8D8766336E9F42CA29
C674A2D9E604875CBA96D710455714EFCC03F262F40DF63EDEC5AF21C7E6A4B7
AB7E65B75D3AE2F52F321D32B5B7FE962E539F02E2BCBAEABAA6698498F1337A
FCCE57817C41F6C30521938CF6F7F5FD8174357F4472C857B52BED7E3E74E13B
253681BCBB7BE976B5213C5A5478FF795EC270FCB4AFCBF243779266D3855E98
CE6919D64A02CCB599E2C04A61A91EF8632DC0B6400DC4927778D00202614A35
03BE93DA5EB6E9F5B28EA3768F7A28B2DC36C13316D5C0CF0257936C883CBA31
384FF3524F1ECB75FF926B3F3C8442C850E72ACD263558ACBC03F64497DF14FA
9DC1E4962F15AEB66FBB8CF2DBF49841A5D8863FF3517E8F369614F3C56A5741
E07498B4AE5D6F5B383E06CB2DE895CA247C5D08A489FEDD4053E16A5CC19A69
70DFF2752DEECD92EADAFCC670F585CD1FD4D398E4F6E92D6BAC67DA45FAC0B1
A16F332596EB67539D10CAA43E36664D124967F637A84B55ACEE2E195CAD6BE5
6C314F7E1DA2D1C04D519925E338912C8AD1C6396FEECF8CC2A97D737DE7D170
2CC240B6E3C4A8999F5837048002A3FA580E704F00E85BEB00045951C9C30F8E
AB905C22CEE826B79BFF9347A3A6508213047925A990D1676A522263B7FC9BCF
869DA77260C175954B6CE03CBE1700C9D3F88D088B9140CE6698B2198B0322FC
25EAEE7FA2BBE562E49493B6BEF395FC96488E8D7DB8E0814CD21A34959409F7
E2A13B16B5D6C1C2BDBC7ECF37D20E3FBF542C2D8081BF97617E93376FDC9DEA
2F6EA5E06F8C1E23EE01426CE6E4F141444098CCBCF08B80DC7CDB5A96D3D350
67712FC7DF852F0FB0E908974417831B4E8C5D3B79BA51E28C760C98E2F27506
38D3391490028ED90F877ED64673AF3A64E7CD71F7C12FF650039B3F7E72AC08
741BCBCF81B8B92782D3A86661A1BB1855BE1197DED446EE33003263537E1784
06C351733983B6091B6367DDD7D68329A53ECF26A0762B4A1D358BFCABC883A2
9F64C13B67BD07E3B322D176CA95CFC21AABE6AC2AE83ECC1647992F94F491A7
70E0F3FF0160895BEB77B931C25F65E67D731BFA4A48B2BF661F48A9E0651B1C
C92EA86DE2C39ADC36208E1F12A31AA2E4344C5DDF163232B1AFC04356BAED29
ED53749364C76C7E788C0C1ACE21DAD14C3120BD46E033E8205EDB97C8972890
1958FFE495D8CDD47195BF437132DF36A513BC068B648F3817DAA84A607D663C
AC659235711F60895574FA5F01139FD4F86DF2FFBD4EB1627D21E5A37A017A50
35E18003A6B7EBCC64EBC15CCB89BA3C73F219CFE58AE5E1CBC72AB02FF6AE3F
06B76038036963406A05ECE8C53C985E1136A26A529CB68EC830B2011B538B12
35BB1CAF4864D0DEBFDBC337912735CB9457494E06CDF6990957099BFE8FE870
DCFF46A027E928E5FA6E39577EEEBB49CD454B3072FAF5E62C3A1C114AA012F2
33DDDEF48673635F028C475DEAA7EE5FF928B7EA1AFD73D6F7746319535F7228
8211EB85E923CCF0E8450E093A41D44249334367166839C8CF0011915790E5BB
4F9152FBB520C1531FA9DCC1F4C663
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 100 /d put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DC6B86AA73E883ABDC43AA6155756145B9EE8EFC505738B7AAA434E093E
029F4BDA397FACAB37996C354110879CA5EAC9D735A9EAD4C6090650B5D5023D
FC9947DE3D2582C88B2C8C9C6213593ED5EFBFCB8EB161A9C9F572701A3C80AA
033903CBED807628BE32BA603E03194E76D374D3813FEBD09ABCAE0CEDC276B1
390CAEE8408FA4E01108DF54D34CD31F444F24C67742DB868CC2967CDA1B8562
C4DC3AAE53445277C899FE86E54B8BDB1490AC76FF84E6E695E526BF8394BE7D
685F4AE35AA17151913D70F35CD7820B221FE0B71A0CA584024C964575599D83
F428992270E1039CAEE78B2D136545062399ED51E17EFE2DD72FD72ECAF8623A
C2C6E1DE8EF99678F333A0A25549721103667E88138D473DCBFDA8573A59C59C
5287D92E1A8CB5A195036AE42DFBAFB1E18A1941C494C795ECF17CAA969792C8
628B6809C79D5B58F56106EE7EFA0BDED029D2273032E1C8A5CD07991064AB2F
20E7735CFD4B13C2A8CBBE519A8F57C66B98A31ED82CC4A183ED86D278180D66
D97CE9B52FE6867C09D913F35AB9B9F6931BF820312DBDE76CEAF3D3F2EECA19
9594CF093FB8D49DAB28DA0EDB9463F81A02C55BD1C45D2C5729767507D93B8C
0D596E1098DB1CFB42CB821E8FA5B5B93BFB454C7CD598BCC5F92BA5486A550A
868D0C17E5861E79939718243DB1F2F6B23D7BC51D926CA86263840FFCC3BAF7
98B72E5F9191183CA5F1FCD9BACF833A9D58F384DC27B11B30790AFA8C1F0D61
5CBD7F3E30A565B9703D739A46149AD05407515A3F397A287343D7C4CB6C8137
FD441A887C7DB8DAF0F445E1DE2BB3A859D465B74109BA18C85A32C8C988D247
6DC190297FBF224E92AD47C87239667707D70B5D344F4E93013C35939AD543B1
A8AF20D9DF0629D03971CAD27426CE3536F737B960CFDA0206EA1DD152DA5891
2B07455FB24A043124FE60C9C35B3565570C5AAF132A27B8098A928F14B7E5D0
E619EBC509E1E61A0F1A69A7A6028305B86D25FE25B380D2DFC3330B70F99A47
E67E22527BD17C135A5311F9E7264E646D1EDCF553CD612C2889FE41EC7553D2
E0616DE75AA40C0171FA981F888E736BE0F3D7F6438FA76FD02D322CF2A6FC61
1ED2EC97FCD26F6DA6E9EFDDD829D6FCFBD66F76F6E5E4D192A584A8CFF3DF3B
F895FFCD2FBC3152977FF27D05B3656FC546F64133AADE7A8ED6135F0B1E5BCA
B170AE703571A817E2A75AD7C9CF2A7827563357469FE34F6F87E141E181D826
EA00D46FC974539970EFB2D13C85D6FEEA1B50207E9F18D93CDF9AC655D0DEC4
0661E300811EAF5EB7123C92A5F8A656B4684E2ED3C9B3F98541C5E6FBBC5DBD
23F23FB7C7E6AE15D9CF22EA2F3357F4A161C2317347FD3DC952FE14918CDA8E
9125741E24E14E3E74A2796BDF8606B932D06E9995A1FECAC1191EEE535662D9
2B07F4EBA18FB4CFED5E2D516A4350D296BC197E9B6C1B2706DC46F7F8D829CC
9695A77009E865486E5EE1319968FC0D479941F62F3D55A9D81FBF62CCC99525
D028DCF0F801959BECFBC3C04CE0AA147C50B6DA26D3CEF17F5BDD61E7C82368
E361D4034E462F659DFFB64C404825C32EC8F73C69B19ECB89B9DA9A93505B2F
177628B14F9D60539869849DCA51D55864DE9DC8F5863F21359D297C479CD6EE
2F6229EBB4FD0CDAF897C25C11A0130CE57B3E3946CC03BA3A14E7161C5BDAF7
B5D21F6CFD57C723F750E5E5FDBFBB4F19F8056D808B6C3229AB971FE1E8E0F8
967630D03E48BBB796C27845EDBA2C9F4F27A09830119311B9888D0BE9EA909F
72F192B9BEC76AC504BE3839A4FBA544BC3117172F8F5967AF5249EEF89C2445
B6F95BBA2402581F6F84BE8A2180EDB53B6217C229082258AE0A79929AE440D1
880C30CD75A87C49AA90065CD6999582B7B5CB7A23C8C3364DAD8ECB599A6543
FAF5C05D6A5944DF32369368632768C2988B964CCB796BEBCC77E61F50F82E8B
20C5D34FBF4ABACB357811D8095557B22308AF01513D81CB4BD5E05B7DA8C435
A28EF529B15DCFE08B3574C2E67BB3A026D50C7A88DF5F480147D87DFEFE463F
712F4C686C87AE283E6F3B63483AD8A2AEB5805C2D446DBF02D0E32620F3E8A2
D06FEF8A8810791D8613AC86030BE02964F1901A7B506626DC023320A0166FE0
990DB8FF54513822A586932D1B1219BE525A61FFE9EC7F72E2A8E037290EACAB
5F434958BD5DF6702517B8267584273486D159EF05C583C24C44A68CC2E0C313
580D14FF6AC2C483CDC83CC44C9E6D8B26507EE6AF6A0158A197FBE547A9934F
47C7D1FE0770F1CBC708630B0957DF2E49E5BB06A1F38A85CDA6516BC369C299
2C8DB9C7CE5414E5FED0B0BEF2B5C646318675931EAC33605FFF98C7D011DAF6
ED1AE0ECE6A43A7DB555F4D67B93EB6417582B7D7B8E44EC96CA2888B6D7F1F7
013609DD1A67D6B5D1A4F0B30901535E7613AEFDE87A4B7F484A55FFA5B83052
AC23F4B3644234D86706126BF167630971BC01DC641766DC254D9E9F4C482096
9F199BAF6C36A54B457D8FFEB126888D0306F9647AC6056E17BF974CE0896047
0F56DAD42A7C388241797FF0A1B21ACE3FFB291D964E14685ACD82564559D47C
3240B0D4A30A382DED5AF585C938A80651AB0D31D99F3C202C277B9CEFFD6DA6
1EE997A91FE3A2452D8EC8922E914FB68A6F31C8CC8FD8222D13056AD8693B91
20BCC420302FC53968133AC8D20F52E655BAF628285B627BE31FE63E2716B1F4
F74953C7D41629DC47C3C6DD727FD7B5FED0B59CCF8E9EB1E21C95FDDA27861B
56A5AACC4ED6FA5E1BAC43B55DE44EC9237696DF3BA47E66E3B89321D901F99B
A23123BB399318B45C5E2ED5BEA4B550DD3076E987E0FB93CCBAA801761FD57F
B3E2FABBCFFC1288DF89BE3ADBA807810241F1905920527B7ED8676F70142FB2
F5B60435CB29609451258BDE7360066362DB24465EFBADDE90044B780C53D467
D0FE46560B44CA4FF989A4D77F180BA39B71263B7C3CAEC8AC487A4BE1DA4D78
9E367E310E2E7FFE9382A570237B4D891245EB3074E0D4D69627634E06E3C459
6AE9DB308E70E59DE86300C959A1C5381575900CC6F06936C89A0CA3F1783DC4
2D7D3A7A4C80ED8F1CDA2D49D7672E195B09727629C1AB84049596FCED7EAB37
F39214FEEE1672024DDEEF1819779AF4ABD5387FD74433C15E7532B16B26112E
508778F94A9A4CA96F58FEF7BF7440FF7239519C56C92FCADE951853F2F39F44
2B8ABFA6597B0129E593E9EED6D8289DD1704764914593BB14CB19FA7A96159A
A2D3CC42BC50D57B267EC7902459E5DEFA0B5F0B076506EB98C7C95013F74B26
6C721E4215F657300527400D5CB698185DFF513818527039AC740861F07C0FFB
26610804D94239257B1A8AD6DD8BAC543647CA1DC1B358822AC9DCD5C7F9A6CA
D9833266E1EF92FFD9193DB90C4B914237D2A14A868E3D055257B5009DFD6074
31F2EB8E191CA25BB204CC545465DA755F96DD889C25919F307CB425B958CED1
924F36C0384A717F6B2EDE7FDC42F9CA99AF3BD13F61296555A929EE4AEEE034
E9C8A3569AA74CCA39DD1A9DCC9987530894AC4F0B17291204CE2EF45DF40C75
7A59473BE80F56EED779E50A9CE0B4B63F35E8CCF0BB53D83A69BEE21307F327
24248BADE75EE1E9ECADC794684C159A1FDCC9219474A1A30F0525711C9C8F41
B34052D2A6A938963F5B7F2C7F3B96282B8146822D97521DFCEBF43A217C4437
C2CC84B59BB7309991DEA881308E4287F5E0F599A6FE6FB30732E502C92D3510
A75A49CE9E0AA52C9E729D1A800EB14012459093288F8B7C06B711BE48FC67CF
4381C84B42F15670034CB549B50AF4BA8291071146C9CE18BC238DF98E223F9C
23130819846384802FBF017D18AB82892BA87512CF8D4FDC7B75762180B35C74
4BCEA705A241BDD0E8B310075EC576DDA8C00ACBBB237635B81AD2B44A7A2042
9E2448899C875E321F073BED5238BFD92A8E5E0BE96C04F6D289927EFE9EBA09
8E471BC8EE28EA85B42F24243AD3CC8A2B68B3DF1CDFDEBCCFFDBB694591305E
FFFED35D984BBC0ED972C9B8A6E6CF9DBDBC7C64942E7C7DD5A7F34BA848EA38
716CACAFF9DEA3E1142F0B859E24C8AC0C870D6EB576820343BC74B806EB90B2
12900D6782F3B73EE90774E696771A84B819290DAAAEDCB2BC768EEF4B486DA3
4E595F56A36A1DF9B631D4058ECA8901ACBACD7C75EE4D77932DD2B2188B0E51
975FA1EF6AD2ACC066E1811AE83C618630D55D6989DCBC9BB50C0E682D16943C
1FDBB61D4E22EA08CADCCF215394B0115D051DB73A3DEE615F67AC48686BC68A
692657638C29831CCBA9E831AA7744A812DB6E4C9377A29CE37EAC8C59558E4E
B536392C74A9B868465C14FC882E7D45E0D17262C3720DFA44835C62AC1D6447
145F0D2E312EEAF9E0D42E29E7BA4077A0B7011219FC50766F114EE7A5D5809D
3952CA3F64EB9EC790AB516BCD59A9A7310349BA520B719FF135C36126B4BD8B
7AEE4F4DC5D0F6FC4B33106424C4A4F211BB64548ACD47914DDF623240CC83C4
2A31BF8A896A69FCC37180D3FDDE57C8A6540EDF7DA28F3B0C9D52870792EEE2
CA5519DD85B2655421732CF81B072C960A460AD83D61E29A821FB9CA146E7036
EFC3DA2D50DFE0814981A15AABEB794B9B857C78C528DB065C86C2A7AA134523
71C6ED64F29280EA17BBD5DCDE9E780B14676FA2146D75497D79D1A0EB1C58A1
3ECB3A6980EA1502FD7BCACD883CDD03516125977B69EB7B284C6C9DF62989F2
216BA22938E02291D36E182EEBA37E71F6E366B929E698539E07F9B512C4BC3F
86AD01BBEA6309BABD4449B2865EBCFF7CA774F6568A606C6DCB51F521945648
338521CB9D59CBFD3AF9C85F71B65A5546A06E292525F7F015D5DAB202450B5A
5009B26652C9E7D160896E98CDDA8E77F0CCDA5CC325EFEC6E8C12E546F25C96
87EDC0C13B28B7E681E09EA0AB092F47997841B364E0B38C35FFE02EFE70FA56
904F23F68DDC580DBA58C9B371F084FCDE5E3C22A9996F46197F57B5D4BBEE27
E5AC461AECB0EE263E1DAB4D68E2A15EFAF2588583A09F681415E9C14227B89D
D510F238BDC009B0F90A843315802D18E7446583D667823B43B3140E87700E6D
1522A7ABCEC4D57F1DDEB8D53014FD19E87B1422FDCC32A6AE85D0585AFE4820
4E9664A99ADF4220A2D38C9C9D6ADA4EEB46DA1673FD4D18BB8F35CEA2BD09BC
D02D3AE43B0DEDE9D001A1BB982536292A83DFB7B2BA8CF3B60D5143E0373894
925B696518F5CDCFC5C5536825AEB2795D5D571BFF57242ABA13C212888F8ED9
C194E4BD49904E7706BB2E01BBC3E89D8255129BFCE524C82D0D26A7DEDA6FE0
487760A8FFF730BB2044FE323234D23230204742FB363282908D7D16F459B922
ED9D0163F2D9F78642C6AB92BD3F909ED2F63C25C4FE2EBB83F989E97D66F5CE
EC20A0C564FD5F5C88D9932D88A96397E3C508E0DCD61105A3A0DF45FC6CFBD2
C8419DC49CBAB3396A5C77AE4B63024F38629228C6D8CF303CEA9D5C04977C99
DAC49BB5651623A1980571A32AB655C70AD47A7EFD054119E5F19CB2F74B8E2C
BC89F25A2D16826830BD0FF673590A1D3B3C8D40CDC98CB4669EC08749D4BF75
09324757F1108A8BF8C19FFFC751EAD2BB85A3F6FF4676A3A2681FB8744B0FA2
BEA1D7D23529E97A8F0907FE103EE4548C393EA36721553C9604F33283C9C740
EF3F0C00958ED8C43EB7541A9A128DD2A4C27747CB5EF7C44FEF30E392616DB5
C1C544AEDA8EAC2D0497D06A072962EE522C9819595B0E3D0819726B2FF6957D
3999F004EA01231B6A93D2406A9647908E236421E16C9B67F2766077F60F3443
F092300E85BD53BE1ADD95EB7387C570466CBDAE6573908E66F62F4681E5F9F1
D22347242203C21A39B686F847AACA8454B4E1040998E8BB9A501466B2AB087E
D2F1520F2903ECFE0B50CF2AA097FCAE68EA9470A351F942FFF68558373A66E7
AFFA11240CF8C33B9C161F61AAE8733ABDA7E91DDD1AD06A9D19AD4ED628C63B
A1359EC487F1A7CB27CB167F7151232158666C6391E05D69F80C08B833E23FF1
66139FE4C7676CFBE20047D777817C1CCD47F2A34AC43FCB9A975BD7B32658AF
50F1FD50CD6DD06BB91477249D08F7EC29D737B5CCE9B2B27F3B5F7D963BF076
C22CFC06F5F68D055183E9C3EF488A518F68B9A570847D21B301474F01AF9D82
2DC58BDD84F351942D5FB3390C43F5249FA6A2E6C67BF2A2CDEE3595E1F59A24
52E1EB464A9473D8BC9FD035435280C4B551C9BAC738E471BC767A2DE7A895BA
6F2ECDFE919299665AB873CA533BBB2A4C4E4DAEDF7682B1164B702057BB556E
4E937D08CA74EFD74CD4B56FA48FD471F8688D55DED45A23BBF872FF891BB8E3
100B34A1344D9C4D9CEFA7A2CE1EBF505173CD179580EEECE402E01E18B00CCA
C1C5166608059A6994383A92D56F4606204D948471CA94AAEB9A946C6F286322
D9DDC923F4CFF286E65214837502647C0685AA2223AB82B2F2D6B739FB56B125
285689CDDDC7A6DDC450CA51CD7A31AE9132FEE22DC0661BFBBA947F4F28A48E
BA80A66D6FF11EBB969D2A35AE7321EB3C03961A3B9E26ADBC4EA4AFB06AD9AE
C4BB0858323C47DB085818BD94B8455ABAC535578B12F178266F075F77372850
ABA054F580FF3F3B8FD34B9415A2A79A9BF76911E50C287A8980103D842BF823
EEA92EF2EE4E7B73DD8E71BE26C42CE28030B13953D9B75625EC110CC70491B3
BB11021D4E6196A541B1E9FBC6437B7431E19DE17C4D304D2744FAE72C39D5AE
69D90E65E96E1B3D84AB56C4CA44B0DCE29CE9779DA916E7F0497D43164190BC
4BF630532C39F7BDB5ECE8195F7A93F0AFCDEEE2B2536D67B2153CA5C053E3DF
0415C9D8340885D92FF87DE87F46282B321217F850AAB9F67669034ECC4B9962
A896614BC14713B1125F72379E4388DDFFAE2FDC56C8D5783C0C6E60F8AEEEE0
24D8BF7B03A64617AE4D9B4ABE5C8FEA47726CC1812413D73BACE42F353A7827
296717A58D09EF75EC638B902B63E71B64EA13122BB8F9AB7ED26971985B652C
0126B0A6FCB9E805096389786FA7F34CEC3A423D20BC2CD1605ADE4D4F8E7163
ECA9CC476882907FE69E2D1704073B2282A91F4754EFC4A0BD049D7C4374469A
EE0B6E0A9278CD560438B005A889C2C47E759B23D452D001C297079ED908AB37
154AE8347FEBC28464DA087D8646D965965E6FA0AD0929661AD9DBFA75C49DAB
4B5DEBDA79806600EE4FA21199C84324100D391DD91026DF005C47939ED0FC78
596426BEB925CED384E270DEA47066744EF72AEC992106AF9301D0501428925B
9D99234FFFE6A7EF33E97EE613BEECD317909365D27CF4D7A56426FA0E0CF46A
06EA6985FCB03EDB7D1BAEF93611299205AD8726E5A610BBE156CE7816A09F15
53F1D36122AB3192500B80372FCD4EF6E265F09ADE2AF1453DEA75C0DEBEC0F7
433BEF93CA1B52AEE173A856194E3A1BE2C8BAA113DD9EEA5D29A54A375E1DB7
A8F86AB5A92B84C21AE20D292B4D609B56FF534940B5EBF9D31E24551E2F429E
8CEC01227254FBFE50338BDB56115CC03EAFB5ED1D6E7D6FB15E332262A4B448
ACA786114D2E1D072603CF573165306998C48760A537B8E32D9F5CBA569FA87D
7820EE8475222E7F424663EDC331E49269C176B7CA63CD2E986DCA5DC2088182
05D5C61250C64C0B02C970D8719D72A4E51EA4FD1D5AB9B81BD0045E36B90758
BD435CF9DA962B2D2FF4D3ABD1C58FC1DED4B1EEFA4835747166041F8C0EE5A4
B10CD7FD5B0ACC1EB1BC143D2CCF0FECA54097464B0D8C3C3A12FB2B05AC6202
2718080EF12A710EDA095C83C560BDC688E7DAD856104DFBACFD4F22E33EC709
8F82710EEF849DB502C11406ED297535D78CFB90A5EC948F861EC506C91037C1
D310755E57F2AB5A80A40A39AECD5F3C754599813CDEB13DD02445E77AF11645
062B595CDF1B987297D0DD72C5B89FF32C4C7DECBBD2EA35F682DCCBF5CC5786
CA000E622923B97580AC5C24917E83AC76C0705DA381E3575967726BC9988913
83261D232671B928B979375DE7B71698383012D2EFB1263F06FD1FFC1F67CEBB
42755AFF26EEB3C2ECAE4E07BB1F86A3FA561CAE1D943863DBE94B551DD330F3
27B791807542F7454F11408B6165CC15FA46F3BD24ADD1DD34B98FBFE9347830
4484677DB43E95420111BEF07E943BBB79F88B868E60848AC50FDF2EC079DB66
E9360FC9A52C0A46C3373DB35EBF1007FD549FBFD4677A6D2AED7340FCEE4D08
A976D73CAC61829612B0A21A6B38C444D9FEF503BFE8A555A6E8BBBFCDCE3DA4
5D6AC819B9E21EA92C973E6F30B8C1F1D7A89BA09310A4504DBB99F5DB475685
2550115B898BE03D6E11AD5C1E4A413889C506B2C841CA13FC9D6E56A15DDF88
4A86C499172CF7FB2AD24F90BAA6BAAADFE465197380AFC70EB2E217770F151B
16DCC8C2D5487DDBDC27DC1353CD4E4673DB5B083818FF04A3D4AE4DD4A17EB4
3B261D80EC734B5D29443B565B1DC28AD4D4846447E8C6516D8BAC8E37426A1B
1ECE4489C1B9F84A5B322C5CFB2DDD56DD1060541435E12A4617F0E1A90B10BF
BCB4F650F617232F5B08B45BED4D866FE60900206E3F8BC2AC07EC7EAEECA07F
5EF0CB1D8CC82FF62703C9CC07EE747CE0FF6C98780CE41EBCC238267F3B7373
5F629F229BF65B841617AD9660A6FBEB090A9B9F559D1FE22CF8386F4308980A
52C124798227365CDEEBF5D9D465F846B0EEDA2FEA7DDF0A36F580CBD766F174
F2240AAE7577F7D8387B3653EEB6F9B5EDCCC256C6E97F1EBC036218ED90A5A3
3E31BD256CED2ED9BBA43F98BA0462969658D497BC2BEDCC09D7A875AF1D6495
5008326787C09F4E4CBC4C8C7147DA245DD517416A3A6F78A4192791C4A7B6C3
F614A221EBA7D9BFC7DA69BAE962C0FD75DDA0714912C025C79E6919616C33AD
E016F039A2F4EACFF23B6C1B3C1DB42D42288D78AEFEFDA95FE99104C71A1491
14134BFB10D10DF4E4373D8BA2D5FFAF93C69FDF83766FC94FF11E4E6154A7E6
E1541F14DDDAF675565A4B50C5513BC19EBCA70C5B25605E0550F510B373B622
5B96EEB00EB36B41C9A0E14410857990A325719306D35568D754471AD509458E
CC63CCD0BD3C8880131F88DAEAAC460FB40E8D3B0521494971AA5325C492C3B5
5B89EF54C6A27AF643276CE1550C929F0357EB1E4F6A61B6A8A47B009D1E0C91
873C4D710873E6617B37542AB325D38DA643D4458C80ED11EB9335DDB9F98122
4767F272BBB511C5B308DE4B15BA29DF42441B7E649225451FA66082C08913C7
E5888A2B5C4938C55DFE33AD6A43E25D1B3112870015C2F8F30A5353485655E0
13AB7CAA052648904DF641C7D0D6B70B6061D296A3F9756FD0DEB382675208B5
B4A0035EEE0E6761DBA2B228029E3BBA5B71FED36F178184CD19705B68D95257
83AA40772F236FB7668DEBAAEF2C9FB3767963D69DFBD4A30E73C8888AD4F58F
62AD8220EC995A40614C515FBA44B01A614D075316938C7BCECEE68AD54C1179
BAE6DBA8FB952314A8F74AB14706FA2F6C1269047EB66AD465E0BAD402698FBF
3554F85C2062EFA217A9F982B6899988AD036C315B96435574D2E95B082CC728
4437B541E142E72F9270AC8F39F75BA7584B522F2631A859D0F3A15FBA9398B8
78BDFDE8065F6D963D1481A1E5D1A523D9F2252DD6D5C0F127E077FE00E9B7A9
A252BD3CC6ABEA68EE97DDDC7B9F16DC66852A1F2995ED4531087270BB5E2BC3
7F51844E20FF32B741DE0733AE4C0E5C7AF8F5636E0C22A301504A6C9D9A9C46
E0F3B808E8D2FC642F391DA6577BFFE708EAA441F901469ABCAFB10A123A2759
BD9F975A338A2F153150299BD2AE1EA71298D46D4FA8B36549311FCD86D20D2A
79478BFF21A402D621A0D0A5A6C28693E0CB8F309C0D3D48862F5D4A03553727
488CAED6E4BFA0FC1C931921BF2EE2D9912015BC1C27BAEE196F105C8050FA31
29E06A239CE8596F77FC0175145034CB747AA2DA765A665BB8C00F190B02A211
2DF92830AF65907750B8CC1C85CA5019437A47D37842A7438608DEA89AB9D12E
6694614719B3666F7A4A763E774FE81C057C05B9F7797E727F9AE79ABF49FDB8
F354AABC60EAC8B2EAE4FFF6E87F6041079A1EF084F7D1014EF334382AD171A8
E42671467DE363676861026FE9CAA94E80D163A1FED6764C551FA41EA06983B5
F9D4331EFCF9A9625562B7416C70AC756D19157173BBFE1D69A4672D6B38ABF6
5B1337096941294D69198995C75E075D44C0F22EF7AEAE4E701CC76525849A94
DC5963BAD503034B89B0DDA30928CF0E58BCEE0E26B3C4D6B451E5B9AA945F3D
D92AF05CDDAE3B91ABDE31C7E702355DF3A53756876333174B2E430752025C8F
B46E8A69C7C3479D8B4846DE11850825BF736E4C6D10213451B2D3224A6650E2
EA0A3912C59F7D17580ACFB96D295FEAD9FB2A1398CD00B83D6CF28D47ACF869
BBE7806C5C867FDDD2BF60CEFE5BB0FEEA3589ECDC9A4C61CA9BB0CD14C15D39
596AFAFCC2528DAE1BA46B8A79E9C7809E4D7AEDDB1330D7323BDB4067A679DD
F7A8D0DC502D01FB83DB5B2D635A0946B8EF2E4ACA3DA281AE0B325D6F73E75D
32128312FE689161A2B69192F79F9F68852885C1A3EE75FFC122F9C89089D6E9
3E53DB1AF84D1EE9D02C3BF2FFBF54893B79137F1AF4502CE1A1E0B0AE79CDC1
CC90A241FB81CAB53826F3CC1F703D910DCC7E2A9947B98F9E980BF55C69746D
6E0816426B21FA0B83A6BE665169BD89A187CC727FC5EA97DB4EED8FA3A36981
8285397DE23D901C79AD1EC7040A32EC6E1D9B7880F8A51B77F480F0059756B0
5B3F09EA889979612182C0882EB55DDC0A557786C117A0BF80ED7CCFC5640835
E756A34BBA0B1D175F3419FDB9404E33FF5AF46FBBD9F40C40111BF16B753FD2
4123BE113BCD6BEB2EFDCA9B0C17FF3A37F4752693227D71C8B10483886954A2
D7EB4D6ADCD52154D37C94F3EC6FF30FA930FB34A21CAC3445851811F5B8BA25
D2DC884970CE48473C02DB8C082BE7AF1EDA6D8DAF8DD68201A1ED9968BB67C5
B588469EBB2B275F8701836BB102065FBA5F0A2870F471472A601B8A1C5C63F2
56B038BCCC5F618874122240DABE34981B35E40192DF3687E47BE5030B6943B0
BEE5B9F4ED7FF18100FA64FF0A60466163AFE8DD6F5764B3045D600DB6AD7570
95D1624539536D7478EAFA8E057FE02009C0991132A7C31DC4D5997768DA8CFF
AEF0328819F94F2D0D971A88922C0DAFE77F20EA32C2B52A6FDBF9C7F4A68681
C423FEACEC4DFAF3F3491D308B700C50CD380C5A4553FF5449FFF005AF919C11
0F00969BA1A783AD2D18A85889EDAF787274EA7EC29210BF5CC53313F86E3BF9
AB2EE240507F43B5154EB6800AFDBD3458AD35870348EF61E56051530611D2B5
5665088B9576AE0B51407D6B63D8DD013AE1A3A81D0F3D43AD3A7DDF55B15196
1DC15071F5A5264A2A6B5E299C17EE835CA37D32B6B893594FB531A6BE126483
50DE9FEFFB047AB204531FAD83EFA4509519676D4DA2D376FD3E31EAF4797154
F075CB855F386F27AA0D474382C08AA0E03FD631CFEAE2C55447176D4CF4E78D
02DEC2540D0A6E0CF4614367F8F51FF41BFD2D2C2C996BE25FEFDADD3BF3008F
D0B379097974CFDE9D98A3A93C8A65F4D79CC580EE7BCA572D7394597E0D57E2
735D3640FF126847780640F3F8FA3665D758665311806B37CBE285D0A618D5A9
60EF7EA200316E917F152E5800F0C7FDD054BF2AC3A122F9C8721A476BECD049
8235073F0DC04C2C6BD67607920C343AAC7FB77F678AF0EA70C42AEAA7FACCCD
563CE8C54B6436198524C49EAF4CA8494932774ED3663F62747376D0E013FF80
ECAE8A1C42EA881DFAFA5DFA01E7D38BA2D42B7708A3740BD39DDED250F66E5A
6AC904303573B0C3C9E1C451BDCAB7F572F8BCD304974C6971009A0489636030
49B1ACF0574C5F3E01A804E0A782DBB24B7B1CE61E053B3D7A37491BFB9ABDF6
77001A76F5480D633B88BA810A66EE8943ED56753E67111619E2EFA6755D7AA1
A13DA401E43B282266F2DF06AB981F455A51A3BB6B3018C29415A915CA1D5AB6
DC045C408370746834D59E71BD76C9F4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 24 /similar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D44F1808A544D17DAAC963A1BE7BED9E47ADF7B8
8E15ADC591031CB946EA848D10756B5B3CC0172EEC11192578E0DEB03AF1A817
668D47E6DD8AAC4902AB9094C9BB4F6533696605A8898223375805ED4D34A5E4
A2F4C561915859BE9BBB17F8BFC41F8FD4866D0B03079D8D3ECB013536726CA7
4A5E0ECC200FDF5872C583041EE645245CB4BED5BCBB4672188668C3A67319B6
436A3A879EAF81B4981130011FBA8BCB829D8F47DA616CCD4E4C4B8E426D117E
8B7155CB3DA79073EBBC7EC11117637C7AB33227EB1438FD2B628C35A1541C6A
8A5D470CE988D97E2B3DC191A2E2A25A5C230D08A9CDD5054BBDD75BDB84E71C
A3496C65C111672E00C6FC025464A24A773761A1ECB9E629AD54A750C573DF9E
C6878E0812E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /mu put
dup 58 /period put
dup 109 /m put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9111F4948A3E665E3
0DE92169B2A2137C001654C5F4FDA968F5E3AB43146106BA16C4208830672D20
AD334D8E65C06E0114C6837A57EFDD6BABBB2BB7BD5EFF62491B5C53AF62CC04
4A119F09DFBC5AD000C6A09BCFCB71F71A55B3058585039688C75D9F79D852D4
2461A5C212735CF68FEBC3B7AB2BABD4328847B666E8EA4CC663992DEA47DE9E
661A31CC2261383738D4E0123B2079E46D308245EB120101E61D3699D75BBA7C
8F35579C1FAEE40128F7607578BA2BE3F2559A1CC042DFD90ED06C9EC68D7DC8
A93F02FEF0FF202850D46A31D5486F0197920E81509554307C0E2C30DBBE8098
19D265608A3ED0C9F8B15CC10E47E07924B7B12971E9E8A4FB42C7D70D7FCC2F
0FC0C849BDB26CEA10C064F95504C55BE1A5EED64530D41549AF7E67C9DE9E7D
22D86B2F090A0F94EC7C7AF45E65E7A1267B2933110F36C705AD8CD561DE820E
BDE531A0077B32F34842E368C7334DAC96CDE8AC4D450FA94C3A7543F79789CB
B52A4852DDC36DB75807432D06571ED82BFE73986E7B75611988435487BF1E2D
AF483462F7090C81FB97516595F883E655DE43AD131F75A345E61EF2AF773E1B
232855DD3813FC164E769233CFAED321D64DD72C1591484590BC19F106118658
114EC6565E0A30828AAA0A396A3CF90FCE379C6B07E7EDCE1CB48768E72DF2EC
35957A930F99283CFE3B93D8B2D0E368A002E8AC054415A19165E87439196746
2177B1A1ABF098FC8DDEF18A3B567463A184377E53EF8DF7B11E177A0BE2CB65
997885F5218738820C7A7382947A5946552CAAF77FDA640E83452E6957A6778F
E92D210945CC4F07B341865C7E1DFFE7B52F821A9F4AF17351D288F538D9334B
7DAD2444EF98D295D7A139019F687663ADA376E622750370905586721B129C88
E236CCC1EB1D8625ABE8914FBD6776BA0520A70255DFEA6A5A7403D524AB1F48
45D9456FF4D41F3C853B975D0F8DF1370AEAEE40B7699D875CE78F098D04DF28
649C6E8B7B7F6BB24FB3C2F3D34C8975C18E2328639580B6DD9278788904C9C0
0BB7ABB63400D7A712E9BE3AD9058F7FCB893E45CC76A00496B641BC3816C0BD
1D73267D79CC2BB0C2A562F12F58ADCC1E0EE41C2F4F06F73E4D5B643EECD991
BDB24C91A87E6D8538E5273E521D9148E6699B1ECE678A599CA55931E106A654
665FAE06075044F089488F5BDCBEC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A7E0C0C680F78C72CCD2D78F904C9441A98B119478D0970A67D019263A
44B1EB69C07BCB639AB145B035D7189B3EAA8FAD84E419392714EA6C96CA2FE7
7BF9F920DFA6C50216A3614C6919CD3327941BBF40F8A24A529772C4F48FF19D
8578AC6C5939A23F49E3F7C7C4F8EEC2903F846ADE3743F1D38D16A4B06708AA
9F649F72686B7155FA85E7B5CDA65C53E838232A732EB571E18756A208C25203
DD16134EA62CD649BC730EABA5193D9078A9FF6CEFB9CDEC27B48301E9CB9C26
A5F35B3A5856EB8DFCDD56C88A8FAAC754F99ABBCFF7BCC15DBD28886178E674
A748B91C7AA6ABA177B22957E8BF8A3EE01F711E9DF5DC078D9A2B244D852B99
E5709848DA6BC3D0E3C1ADAC73C744789185CD4555D4EA516B6B492D59F31793
EE579D2F20575F4C5F62D41BD70332D4A74F3F6611FFE506C44BF2167309825D
91EEA897EC116DAC334FFB71072B97E0EA183A7C56C266B24BA265656C94805F
0347CF615B62FEF879CF3108A9ED33DCB91AAE119BA6D5D910E22F4B6D94DF18
42789EE21B0028F4322F1297621CC652AE56D93A140BDF3E08B7977B6AA02A76
91EFAD1B07BF42755079080243CDBCF2E37A1473A5F779E22CE43FFF81FEB1A3
973E2F36E503E6903EE06EB909DEE8DD09CCC099BCDCB03C1078FF77D8F46827
E503491F99B6450F243E6524D70B1248AA8CEBEBB106C54DF1E99662EDA1054D
9533FAA032B4C2B908EA1002D2A97725827FD3C365BFD6619B85FBEFA91F7F4D
CB259FAE757B3288BCF98156A898EE8847D285BCA83E8A87D00C22568949E624
D8FEB2B486AF224E81187BA793BE25139075B5FAD2C6BEF581053452D28F924B
2DD4D33522ED435C745ACB5C6C6E7CA2A48ACAC13038E40AE887C33BEA95A359
D9313BB8E9519D9C25CF13DF6EBE7928E51CD1BB4168054A74B02D4D846F0B36
9E076AE1C06882E2BAC2C879D1CFBB88500A5129586747970143C5D9077019C1
F74A7A8F860909B3954786E9CF598664ACFAE08CCAFF89030AEF6443DEA1DC77
067547854FB42BD110831D2A435A4298E0288768A591D241AC08EB1757E191DA
795F667DF2289876FF775563A6114152182676F629D78514BBFC5E49E4313364
6707F6A9883357750F840FDE994FCBFA055A6BF92A4C80B7625207D5E53242D8
CDEA1EA9F4A69922EA6B6A3BA7609BE9FB667A7F4ABCA9A85136CBA0E1FF4204
5C16CD6DA77EDC8D898049AE56E8D65C687DEBDAFB230F9984698AEF7EA53134
2114FCD1CC2A8A8FBBF95FE115CC033D5E70B3AC87723F6ED414CBB3C430F9C4
5A07EBBF9B51E7755F7070E3DE87419C41EAA5479270100C8E3906671EC1DC49
C34D94ABEDDF628EA8F0680D5E1F5761F49D7769BB342F9A2BFC20E28A0432EC
123F188503B00EE6A6E8C1D50FEAAC6608846009F2CE4CAC4CFF0AA2F197F869
A76B5338280B1B3695C07C64EAF6A6FA988B262282955676126CDF2461F81DEA
5571479DF1E288888D6A711FEB8DC2F471533DE0CE80DC4F65FFC452E4067A71
BAC03FD54ACE93806FC661C4A93209E722FED5D23F525E01CA43D9ADD3DD4A4F
44355195B9D19C7961A9A70373E53F35C19040239889E95079BA52BD4E477360
19CB5CC1347D8DA2B2710FD2246FB11CDB2D28945BD669C2307ECD793296A176
278FE8CEA477BF764BEC5E620385875987EEC5525FD74EF7F709532D76D63E72
CB8F110ECA9204B539794F9F8344EE5046162E57A96F73D4B5CFC8BD7C929EED
7A89B48E31CA65A0D0F4980D43A6D638BD67C95B67FE1B17F041CA6159668DDE
15502999E808044C10FDD3B825CBBEDF3ED52554EAA8EFFEE21C6C196099DF92
F05CA2B9F364D8928E700058AC25C355EF6C9F186A48B46975691C3FA2DD8CB9
7D2AC83D58E6B0013BAF27705599B40378D69AE251B01FC97BF431CA2D2688F3
E38AC3796AE0BBD812C1ED3DD3DA7285DFCE0DAD6924094F6515763FA05D4042
62F80C7767699E80BA48FD53B7F22352A0699D5B5CE43F78D9E93D9EAA33BFF0
DC615024CCB6531AEC9E35B808B6CA6CD495E621B96A30508EE0EDFCE2AF7EBC
F73A451E0A30095A12AA43BFA2742843A65E568E05C952C51F81331C94221BA1
9A26C14BA47E3CC0D5D1EB6632819ABC52F80C04D4B642A07562567B7ABF5A07
F922C8AE5D21D57DD9A65620096D7E036217630708D0E7FAD87E683B0A30566D
C4123A527CCE8DC166DBE3AA669DD1B8825939CA9585F279DBB9F23EDBC8CACC
484EAA58AAA803318DED4A994A56254D1099F28F9A71A3E9FC2FD37984B6B44A
4D3FBA4CC9FB24E9CEEFEFE3FBFF0BA9FCCEC730BA153669AA85F8CE403DC694
D83B38BF8F53C467B184E09F9CDE9BA84F8E1F6BF25A344A4BC9AA24219CC041
61B9B225E5BC9D9609412B5E2F3118E2E8BEE68034CF22C4F2F19FB86E733DD5
7C858B15435448347C38275F300DA2939A9AACD7B963C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B001D54301853030B2CF0C068ABE831158B1A3
F30593ABD51F5996CE493E0622323FE93B292844521051C1D3799C07DC879EE7
9D047DE1C7127E2DC6F94E30C34FF87FA03DB3A3D597697C133CFC5A9448E067
51777DCFEC80352A92D9DEC0A2F40580A0242C063CD1086D38FF5C6FA1BDB0A5
3EDB5499AA2322CC73A38FC826DC202679AF4A7B571509B715CB8BD1D0C5D1E5
9F5B2D6DF5E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDB693AFE84
246AB18279A2B24E5B50A2FF6337B7B1039FFDD4B00ED3667B5F2F7BC2786D2F
525A0E82234B30711AA835EAEAC2E404915FC7EC0081B194765032708B5E11CE
EF6868298CD26E5B9EF345BFA3EC2911E2B96A0B40AEAB95BDCCEE38F5EC170D
3BFB792D2DDA7E57BD2FB76694832C8EC9EDCF022E141A5DE5496F54EF7A0051
F2EE8CA94484C8D06F0C5EA658E1E27E801178FB46E7F0A9F6642FF192B12415
2521AE80F866F432D61E3B4EA7C8C29A3B213B03DDECC22FBD3944D16271B30A
BACF0F8BAA20A49AD86382B93838E3694CF6A98D819C2259ABBF15813622B8E2
D726EBDC077F50FA4E794D887AFA0963BA6A9C39C6920520922D9DCDC80C9878
A24A8B7D781223F6FB12A35F89B45D0C39DB33AB3D45654D54C8498D79845BE7
C4793DF37AD3A667491EA1CD04009C3834E5F8DA0BC520EE3600BC5A557C66B2
06D6704A37090340AAD311DC2C43C52C705A7C0B60AC11C77379D73D25849B43
D9811CE5EE927A1985F09FDEEC439672FA248DE0F68B5D42751BD753FF20198F
85BD5FE5536F05AD093FCEF21A431AEE088A8C088F44633DD9300AF9D86E3ADF
879046140A7321A4E397602DBA0918F94F483C025E65BC8884264FBC06A1A130
DD76A67920DBB79DA833020A93E26823F80BD417B38A09276616CF77E83F7630
FD0F540C60BF26990261593A54A7B31AA85083B643A9C276E13A8D1AAFF5A985
6806F0939C1180E95B1371E4CCAC9423C742E483109418C339A8E8B41383665F
02385C01CCBC458C619C362F6DDD85D4AD508AADBB8266C3397FF2D64297E95A
00D0F166D1AA1AE4DF57B3308419481FC1CD9617FB0ECA279DA0A03D6A9B3EC5
DB275BE7A94112D211A3EED9136B5AB05213165774678B4FC74C5626DC8A1982
9589A3B40E95937ACFEF876AE76DDF0CA218895E6576FD8A8492C51C4E8C30C6
6C22BA495F968A8EE887B63AF2595B79DE8FE87BEC9E94B17B1D8D538A2F161A
38FEB95067E548008CDAE661378C0DA010776A25E1619AB8551F8E91B01E61A2
DD28EDA14B5FF1EDCABA25574158A8FC9932B38E256682C68F3DA790E9B0ADF4
D5EF841840FC6A6F74FBCA5445D5B4F43726D9BC891653DA61EB9D2A0A3B5AEB
CCA1B9F2D5F5A99B47A84017FBA326BF2B86DE255EFEF62BDD954F8850BDE7D9
C5699EFE382FA96B6F0FFC435D2D40E42E62C5A18BC174F13C16A07D135CE4C0
818154A0356283AB31D64FE6C87FC1BCD299066BFD91126B09DA6000AEA0E6DA
6DB20A35F96CD42386C234A9C408CBD771AC3AEDAE9FA55E7DCBE7B580689AFB
DD5AAEBDCFF96A86119F8DDD5D0E8C5B0F468202879C95EAD919D37B57BF0381
BAF3033F64AC8F6C9677B9FB19495F5BBF673D0276707BF30B06600FE31D163C
E31B9C18EC4AC6374825390142BEA3D52F67A424CA556E23D42C79FF7725C7E8
924C6E7AA4935C815BBED957AFDEC169098950EFC78B505118151CF48AD6A30D
5AE7013FE7344E8A1BCB68FB9699708FF8C566074F99A5E5A1513CEE9710990C
93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCD6ABE5811DD097EB0065B1E
01ABF5E2D8428D248B1601FCC13AC19BF2C5D0A0310A09FC4E228EF7B585D2FE
D884B31F4A3887523F5EF8243A6CECAA632EBD3B5F239ABBCE6991ECD1873495
FADBA98F214BBEE46D88F9659F507478EB9F17FC6EC969BAEE3010295C7FCDDE
EF5C791A340FE233066F22569A9BD942A142C689FD9DC1F508E10F78EF6E6AF7
A5926F4D6643907C7BBF98B10016F60E1CE27335000897F8C60AA22DA403C9CE
3E3186CCF5F52D4F171AC9699D23D48A66AE9DB3C7A1C3BDDF67123ED4FB7AC0
B7F62D406048E8908DF94165C5AD473504C19D62670A7511C2F06D6699B77C73
29E1B6F5F8A48A9C98B34D79C81D40574117146FE2DDA30B489145042A3AAC75
891B1E4E86FE9C6AAB26B7D800B34D2324BAAD861980E97793B4967852A08283
1E4152EC9E8999C9FEDC94A77124E291CBACF455286426D93480C6D109C3214B
68D3FD79809465A0EAD27A85BCA6BF93B0B1373AF102F2C433946C6E3002646F
CD811919F0BE0D995A707C2FDEF6FC6E168CC5A9A2CCDB482604F556EBC68E92
6292D3067DC940EC3928E22418B83BDFB5D4627B2A49A43B8E381B16BF85257C
42A6ED10B285B7B158B05DA5C62E83934C1B725176005BA7FC9F8867F5192111
1F7C999F02464FC1D510072E936B3013CD7C01BC6EFD70E021D7B106255AB581
9A95C41E3D63E5118BCBDB0B9CF60C90B5E3C756DB23D76A6136E58A4DA1ED8D
6649E1E755A7E959BFC20369128583CB13842C65A0A956A7B273C6F91F94DF61
DD6BBF5B9EB427971B66A6001F9D52B138733806361B7B3A88C140C7BF7494BD
A2645D0FDCA31C38F7596A2319473A95ABA350612AC05B4DD911705F2D2E17E8
F1A19BC79FF85F3ABBCA8FA9045EF0FC51928E5DB7B48BD20DA9FF6FCFC1642E
B2F77E91BF021B41B546E69C220E400E7F38B995ACE067EAA3DA81F744079461
18F41E5E019B2A5F1AEA5C4F7050B92F5036E9C99AD711325802F21DAD89834A
3B49E3715BB50ABACBD6B45614ABFCF41706D482FDBA52FD857A8DCCBB7BF7CE
C4188EF51BAC74B8C8F9DEA93F60D8B875D9BA0248DE8B99D6205FECE2BD130F
9903C9E260FAFA014DCEB0F45AFD978844C404A5C636847C1D923C07007FDCC1
89DE81F907EF7AAE0585B6C3C3A790222F7D4B7B7112BFDD18FE03A65ED17E3E
B0A8AAF477EB7669C1FD5E507350A382FB891E0B85F27774FAA867F49CF85308
F5CE10B99E1A560BC28929B89F606D085A4C55CEBBB3FE9EA015A66085DB4931
3530DB8354CEC918B78949101079D6A628B15377DA5BB2AAB0A433C48B4AF9E0
9C59E8C51689BEC990EB7D10F06750DC3E2369571FD9345E785572F2CD0EACFB
BA826DE5128F7B05CA8F7356EF5DCB2B9C8691CD51B95EF9D81C6294337DBD98
B1D571B0398468408AE8295A46360296E3AB4B55B2E1526CFC132B4584E73C21
F2CD2989B065BE383F47BB8E24938021B1D505E9147D45E4AAAD71C4B1EBB065
478C5A8B6C5165B8181FBE0B99F0EACAA52E308022CE286F16B2A02D3570FD2C
1492D387684B0620CD94F6A13F1CE1B7BBD635D3527D677620270F5AC7D21895
529CB8F7920AD35DEAB23A32A6D099B30191D502866962A337C0CF7962A86B26
F3AB80D9F958D7D67248DBD9305273BB8B0D0B4E61EDF9840A8B741F6452CDE3
52092F0056228FE28DB22FFD58C707798B6F4796725F83C068EDAC4299B66B1B
21C0668DEA86B6E0A797513B7DD837A6BDFF53882C06C0CCC13DF0ECCE3DBA49
C1E498361675D2B472A1B95B9E902455A1A1A35DCFFB40AA1CFD6E527FF0DECE
66BC593E0E9F55567AC525432F9C307234FC3F94DC211CB2CB9429EE06F39BDE
4CC6C06C40283D4AAAF08FFB4BADDEFB53016D7ECC962E36051D710DAFB9B877
8F533978332DF9D0F1D815DAD69BC9ABD6241D2D9C10B3F6F4A01AD183707051
2305B6E1B3D8C226220E88D9A663F7556142F5517FAD1909D385F46982BE4FD2
2BEA989E0E09923CC578F34547AB74031FE54206285435E628A295E895B1B5B9
91D943E58CB39C72ED57A336A8EA563D7B55AEE5EF05319DD094770C1A1B848B
E30E05264262CAF5EEF77F5C605534041DB35F170C78B7EDA3F0C585DFA2A6B5
94F4E9949A0C75E1D7F4D8AEF12C02C8BAE556CD9365B3ED23E57ADD2B2EBA6B
5CA995FBDA8F2F275DF74574C8817CD38C13B4EEA6D2E3C542B51F1B88B4D69C
3A91607EDD6A65FD1238D9CD9E638FBB64AF2F364E75F07B36584EF0A8225725
C571A12078C2DEB163BAEDBBD3B811A5820FE2EE3DE860CFA7F441273D436C76
C55F25C026CE6BD62FD3754B9E135601F4E3E03D9F5CABC450952ABE9535A520
3A13070A85F0A05D1A90A773A97D89565636008F4FF6D8E94784ABF243B42698
1F043639F192D8A38B3EE3176ED99A3C2C9504CD6E1A9BB8425FFA0D644B1CE6
5A893841C8E7868A59E299B671F1CC37560701E1653DF36A29C8C3254D402D01
40F5FFEDA9EDE9DCC1C89F64B7426E0DDE679B76B8E0EF21F46B4DE763041171
A9095FDD23688D8DA73506142B6AA54426E8D686846BA1B1B2BFE36A359F7531
640F984015005143F9420D0E1EC73CF697C1A84085D45D3FA12B6044BBBC6BE7
EE95134DB1772A50FF8E1BAACD01B25EB1C3C1FAEF80CFCD81D6D1BAADEDE43E
477308265AA60FD4998773A095A03EC1FDBE3250BCD22086BBDDF8DAC339FC1A
9DD200BB969923912E3CDB719497211C13D02F8FB27F3D51A25EFDB18D279D75
25893A180626CF48D6E07DE1FA03E1172B245D294AD4203456F462B3B795D7AA
25D148671482D585586F2D87EEA8FB61C068C9CCEE45E91E8129FC2242917681
07C74AB503E5515A1BA48D47CA7FACD96BDBFC37C1ADAE47343886BC5F7D020C
C793866AA71E287F79DE2172375C8751706FB1171C7B13CD6F7D7F9163013B43
D28CC9D91FD728A542D77CBFFDFD17202F3BFD21339119567424B26FBE9EF6AE
A5F7223CC9F4B31933B84E14EA4E2EEBE0E82A93C17B28E55D47D15371DE0DCF
F31E2710474970E4F340664F87FBCD172ACB65C8F9F567E531598FC83D3CE738
C6C7810BCC0BBC3F5A23F42033BAD4FD12C88DB626697ED40BDE1004CA4CE72C
310B5077C9C113E428DCE08731F7B16168145800E7CB9FF6346985FF0145D19E
4EED7C8903EA240DD2ED479299CCCCFA12E3012C17C704752E43AD6C6F695EF9
490813635D2743506A83BB8AB045C6D7236B2F96C4169B6B7C44BBC499A57CB5
8E5BDB289F891F76BFA87115060D6A4331D96B330B9420946750E579E73DF602
C438D918F8AC254B96E78AB208AC40DAA61D08DF1CC9F7A7AF91E4D2F045BEC1
125F6F0B44B9AED77A7625AAA179D67DD779929BB808D8441A03450017B5905D
015A924CB3325E392185D6155DA2FA4600925072EB599CBB95C2BBCF44CFE000
A0ABE41BABF3F077DB53EF65BB2283BCC486DD78C78E84E84D4BD1C7763FB09A
A3E548C09CB3F814FE3DA45BE7ED9155AA492FAD596BCC2A0D96D4960EC0818D
55E2223357B0D9A46839AC527F982FCA87882454B6EC0168F7F246D6B2C232DE
FA017F8404B09ABBB49A2911E0140506B4BB9C17151C41516C4E1EB3ECFB0474
BB973415E8D55B55A186BB6281AAEFD3E28B6593CDCB2E102E5379701F9F3A89
9214C62E1FA7275EE49A1862A60BF28A2E071A9B37429D1833A372C92AF9AB0D
AF2DF376DF5AB2BDC31C859E45BC9E9EDA5EA8B6A8CBE604856FA7D7166FAC4D
9D5FF23E5E926B40CE945E1E49B390618DF4851784EB30CAB13F368303A17DFD
032E0C21B8993463EBD5DC51786C5579D8B65CA6C902DD60AE834A8319E36234
AF62ABED88C7BABBFC6A3F80BE8E035A61E9B4A5B8C1619833262489814CE620
2F82FC8FBE9D4D51910565EB38F504B6D00AB7F28E4A584CAD81EB8074DFE1A1
E44CD5EC2CE48CE187E6867C694DE940DA69BF5CEDC07EEA230F1092D4A8E863
CAC9C794AFD072A24D786C41366D5E6BAFA64BA270FB6FDC306746E68593711A
AF91A3A9E192DBD290C92AE00B82EF73F2C32E0A2CF27AE2AE3C0C3E8832BAA6
35ED3FCFE2657CA14F2B964B466C1663F00AB7775DF067957C97844B32155DAA
40B24068B8CB1954926E4302A45ADC18C652EB58A5FE1ED25DC1BBD3738F9C36
40CDA63869747C1FF8C83B972637E1B83AA1AC4483A9937CC4AA43DE622FE098
F4FFAFBE9D80CB281CA5145515FF884BC7D7127BA510B676EBBD71AD7933AB32
292666B0C128CBA34EC6C132536856416AE625C818B617A62FC9717EEEC9E6A1
74521E9C3CDD1999EF252E331FD914AFAA5F66507724EB00C434730EF242725F
B56D4B7ED9B8D75DE475DCBF92654A77BE9A1A3FFF9704CC6FF56E70D635ED89
336342F4389B64DEC8509EA3E73B0FF7664FC15627AD33F0ACA2DE0F24AD3484
A23CE62D513F460D7940F90A425FDE6C6480FECEBF23BAA7C1036B008B5DEB6D
BEC4D45404B2C58CE50A0E7B1AE3199A4360740C1E5341E2AF063E0E48623DE7
128087DCCAF886F0CC2057103B3761ACF647DE441EAAC9890E099C8FAD7E7D79
D76C951A8BA4E4F1A6ECD2436CC298540C144147DCC8D032FFABED94624D41E3
3AFFDE34CEDD4B8506CA20BAAE1D844FE91E2BCD71798FF5591997A2841500B5
1C67C8337C2D63AD0A83CE38C89699678CAE5C9D8880390B85261B6DA183FA2B
B13C9545CA7C2D87BB2673AB745AAE61E95E75CEA8DF2B8CDDC23B6BFAA47B91
517791E944A6A0F8C311A22DF82809A02F40D0A7DE53729B47E39692DC3293B7
C70DB241096D68F333805A94FDD337A1C24C00889529B3B953700DD87A29F188
4E7C4BBE41F5FD7E8218C6F36D6A902CE81BAC122D7C0CE334E7F74BD34F5DB9
5E64D0AAA9FB00EE1D36BAF2C38AC6C26A1F852359F88C3C81D036A433E06973
ED1464A9A9CCD75859CE2E6DDD462A98AF987ACCA27E4B8D3DA4ECDF664C828A
FF64F0BD3FBF3CDFB8159D8C19BAEC045488CA9015C7917C71E98D9B78E42F94
91300860CD4C9636C5CE24051443EFB531FAD23F7E034EA6DD61EA0CB903DC55
8BAF567631B608C590C41789206FB2AECE5C4D9251F3C4C4F72515F98DA47253
AE4E2AF3EBCD0918D1C9FF00F8C168A7723C8E672F84A991F779963B3D898929
35C1C5CBFC1CD9B25915EDA1028627A19E5E1829C92362FD785D2F30D1986CCB
57F5462B96B1EA97FAAB646D3D3E49389F5B07A37B2A1FD3A47D0766D80324DF
AB252E4B92D13D5C24B5CC6F3AAA372257CD3983540A46B086D09F5228B0D29B
A7A8CD3D90FA8053D78807EED2E7A96EB425B0807DF4B99E36F941C241D844EC
CA5A5ECAB63A83E3E7385C5698A80B04DA58421F53325197F08B2ED6DA496947
6CCEA0B451A1B642C84CAF69381B8B3CEB1DBE4567C26AD6465420A039FC0805
20EFF3A02271C41D5B60B644FFE1A59FD9F2DF4746A6920CE71B2A1D6D01DF35
FB2F8808A664AE083F8EF1AD52D79B7B7EEBB031B593796D8757435F6E928BEA
C1D217C82CA7EF6A46208339268A2B73375327699DBE19D2A208FF365B5F4E28
02BC2163AED7E317B2EE1BA702CA313C15FE2546F66A6FB88C289D66EDD30965
D978533DF923AD8B4B0DF67C0E19BAC26C0A31D02E0DA4948D39A20C39C51505
A2123E16093C1D806C670B989F20525F84671548D56D598F551CB30C7C261572
CD85D10A5BCFEA1BB10B350BC0F475A818B611CDA1702C6CC6207D8E39AC25C6
85F19B65DE69A782304F236B74D08875E6183C74A90214B2B814FAE5DE671B61
ACD5AF2E7C68BC6BF13D2F1B3E693DC80D6A5614DDE8FDE8BA39FABF1BC1EF5E
6C8DA167CC34D63ABEF3097057911FB5D4B764D9380B8573F359ED09C309FEB4
81E62967826022A811D9E421B5BC67BFDD8E3AEB273810B8A46E926B285D3DEE
F9662E35039773EAEE1F2F2882DFDC21D61B58D0712C2AF9FD95870CDD993879
0AADE03637E311EC358654767D53401F86B3E4134C603177A2543DD753EA9941
29382FF21D2B3B647D0D4050F6CF1CC766762CFB7390D6FC3519669BCAEFE4E3
085F887C97A1D8D08725B94A6A18D8F951BB765D3D165D141275614DDE264A26
03A31430E4D089C2173F7C6C5F15E30E161CF90064756347599E376B5BDA3AE3
F4B77A7B58C5AAD61F82D5D1A1C2BB93898551BEF091DF6A0D8DE8FAAF347AC5
9BA0794091BB8B0FE5753E11D89BE530BD8E13795F251AFCF83EA09EC1FE7A85
181F8C85887C2087AAF96762DBC13B3FC480B82325552C67F2DF7970DCB2894F
4B41251674FDC6B6F7723A59950AB67F12BA1C4402A72D08197EE1B134F98038
F009E361C8E751A9F56032CEF45B3022FE99D13B084E6EB4BEA3FF2D3F9F07BA
C901801A1076FC94BCCE09B2228D88B46B17A698FAE270E99BCA95494A425A9A
C119B1DC5B3FA8C95AA604C718C9376E5CE9ED7F3FDD897386D64EA57F4DA039
0CC1AD00F698D0D3819489E4F9A5EF1CB17456F6532682394E8EC078722CA5F7
99A8E607AC9A4435F1F459138B06323E864267AF3B70C95CF593C7BB202BCC4C
5A959A4F0FC0B86DD8BBA7ABF005008E63F9BFB28C0B3C76677A2BE56CF1FC1F
50DA5E4047342177E48EE25AE2DD4547A1E173C0BC856CEDD342282FA3BA1526
1F131AE8266258C86192AB8BDAA5E121D48026E823D1A7B5AC1144A2D8F1FEE3
497AB8CBA65AC3EB29D20329CA866388BF0E5852F2A733C261CE2731FDDF7FCF
946FCF566D3D4EA1F4F5CAE60561A9DAC22C366FC8AD8FB29164C59D2187FF33
43D31C96F2D08E5DA3B96DEAF538CC7A31FDAC703E2D59E7F8E3D7FA85D9D20B
3AC68E02855C103818B3A99BC70150A9B4993BBD120438CA256E24690388167A
FF98E797B7591CEF51813E160B71CD12D4E22313AC15CA25B8EE01EFFBA5F157
3B01E65EE12E599D7B4C381ABB95BB15308C0BF44887DBE6F4A9AAD53DCF9470
FFA0D0FB9916AD1C6F0332F719081034FCAB11376719B0706909E4A2E78B016C
8025735A97C38E882F32E8B85E7A4330D11B33DFB543C9AA62BD32F407D258A7
597CB1379064A6D65CB550976EAFC98EF9592A32BC19EF437C5BF6B68198622C
C0990D9918C0831257A9A797468BA861A782392FDD89AFFCF1CAC6D832C6AEC0
DB92A819FFC776DD40D3CDFD354B7056865D0CC4D00D05A3F5DB89867C80A245
4108E5AD92F2C3F23646C151499E6AE401A9CC6AD332BE5FC320A7B61D6F3643
EF14F35AC8126CC86EDD34ACC0F2D7CC92DA8F901509941D5D3D49BC659709AE
ABD93A2D5DBCAADF49FA1585FFE54450BF5322170B0E5D5152485A582C7D2640
D88A5E8DD6FB0E1321AAB5F519A7E72EFED0C395F6A70B714AEE521E96D8FA69
E21BA08463D796AD65EEE0ECC952E8DD5840D7B4E302E6C4E835A754719941C8
FEFD2ED68CE0CCD7BF59F82254CA4E37D5198454C1425E3CDB5D8FA213FECA24
AC9558CA19CD488524C4A52B30A647ECFE93F57E3F1EBCDC922AE337BBC571D7
14ED7C9C386E27F22F1E44DAA44414794167E0A444FB97FB0A713AD189DD7DF1
F335ADDF54F910780E961AE9E0DFB3438A11203E79D9736B3E053211307D6E54
65591D47029497B0F4DB22869C8E74E5CF0D01A294276F86BAFE15DF83EA8844
38B910ADEBD3D98A3C69CB4F9EDEF95440A37366740B147D5C22AADFCDAC57BB
4EE66E1D478AA9DDA5C5664BE070A7F054A978EE8190E143DEA2CF51A3C84CF2
D6D7B6ACF97437628C35B3422617B0B51BD35059D5377D4421BF5D2883AE5BA7
DDBCDAB54520D77507034A5DFE64DB59AB5D480BB9750EFF846EEFFB8CE1EC21
A9429823F02314330192A9AB3A903B19C9198A60CF5E7257361329FBE7DA6370
9095FFA24359AC1BE18E8DE1DE6ADB7C61624A891B3AFE1AA2C5B0AC695724BC
DAE3184B9E939ECCDB67FF1D6E43979E0336EAD1B2F22A82700B4EF3D434B170
E2FB5AA644E7242FFF45FDB794C66F581870F56D1E03AA546143392D61237897
72BA1F9F239BADE2C143CAC750CFC3F917C4504068629B38AD90ABDBCD9BB900
95F700465F9BF28D1C6E4A2112EAC033516E5ACF4C167B770113EB4ECD753E5E
F87F2E1896E2BEB1DC48C867F930068C5560B8F4C4A672E41C556C0055601D15
F422103E96C1A4608C949ADB2715AB8F3DF1EE1869DBCA950011BC92B8C1BA31
93FEDD411F99CC89AC3D0CD6DE34F7805919B01FA5DB2DD87CAAB2889F74CBA5
30BEE062B18082D93118052D90583633502613EF4C9E42293A1CDD669105D217
6F4FD97C212E77367C2D1A405A070502894E1745A2CF7D01E38121105C1F6D84
A146614D36AAD4017EAC715BCF2FBAC82F0954D1DD9F35BC30EED1905CA4581F
43F7600440A42C2FE575FE28D1688807141114C697EFA70ECB6CE8A9DD209BA9
7A27122CCDDEC3D0E216405136EBCFCCCDDC7212DA30AEB3B276C9018EE8BA9B
0FD5678F8D7B6277DA4C46816860BDFBDAA01CBC9AB489DA8ED7D9E6CC9B5119
48025955398278923C25B471F087E519D32F88EDAEF227F8B34487E1A104BAEC
E43AB290799922A323F0C8B54A8E0F72D4914031A368062F14932D68239A6084
D66887647B9C679E361E222131A8224F16BED39F5E5076D5675ABECDF86A4634
4D29A52097323C8BA07F68321352AB83C62695A865634F9C460561542A67DCE4
C00A354788EB9DFBE4127B2DF6420D759EF3CD1C80476B5BCC998A038B25B948
567AA20ABC9AFACE5B0EE83B64EB10FCF688B8F13C3FB01C53EB8DFE5FC6B4DE
A488BAF69C74BBD27EF04EFBF4D5412FF05B872C13579C5D027B1C73C6BA18E5
D63BC899A379FB39954191988F9F03B5ED9B04E9D8BB9706CB9AE62419CF7394
345907477704DFBF39606AA768FDAFB26A33F25D3377D0B7A65946FB42D38080
CD09D66235228C6A999102C684CD3774CA4E09C63ADFCF19D5C7ED23A3308B67
FD3919F35027C235A2C1D52769793976FBEB994D482140FC4BB109EC8DE0BCBE
1FE810FFB2B0E5A5E9525C211DD465A1EB23E6EA0B525F872DBCDE875AD18651
F8D4C73273CFBD143A436D1D942D8D717DFAC7696B8EB41AC3F1302BCA8BF62E
395E610155718E2E8A022277E24EBDACAF6AEA30CD6FB09F3F6147583EAE1FF9
284DE16842328662B8263122AD03B8759C05420DA6FBB85D61627C12A5153B5E
D8D36EFD86E33408A883CB2046E8D4F9961B37A04818E9DCC3037C4F390ACECE
6D29A7ABF78CDE2FE45F59D52F346DFB24BB43A4FEF373F5A6BFC0DB0CC1EB39
D0D463FBCF7926AF72280680819D8B99DCF986C75551EE6F8A77AAB89F9DB010
CC163BB4651279757A8A1330C9BA0F3FCAA2346BE3ACFCCD7BFF306ECEC4A97C
3FBAB5BAB46BD2A2321B06DC4C1F5C225728F4D52EEBE5AC8FC777346D68E88D
C975C0C3728A063512D3356BBD54EA79F108858BAA463F50ED223B7F13D19A72
ADBC2AE7B772AD5D1E5C834724341118B782859DE98E660A780BA6BF5041F532
71D06FD0B266D1523A3E1C3F5CBC900B899E079A9A70B7B847CAF38F568A65C7
26B57CB15302A80D56727B4380FAB86507776B54AA919F029B03AD20C7F22A7C
E44F4CFE701FDAA3F295784500553A98844E1D4370DCF6D79BD589C204913325
80300A3C76AC485B44F4AB281E564769E0609ACCB172089B4B6A4A5305B1DC82
E53AD52B468F26A37F7C14393F04B0FCE01E0189479739232D303E53A8D68184
57BD577C129BC16C6BE0363BDD73B1D9BA9A8EA919195370CAB1E504354A1210
E3F4C1E02F0DC810568F14B8224A9438B13B0B473D7C40FC2A71F3C99E3FAA1A
77448088CADC983C1F3800BB42DA313AB45A01AA2AB92EF5A0868EF7E487572F
EAE7E63E443A3046AA999D765B0581FB1B62752BBD5403CA79251DE94ABFFDB8
E7724A10FD21D57725E2C9800EAAD8CD4C735F6D02A884CDF665D0494F0CE547
B8BB18533AD9BC7FF8EA960810202D9F76AE23F4B6A8116FFE451C15129DCA84
D8DB7BB0ED865853A4C8881A4345D7BEB4F9AC12AB5A16855D0A6EF0D6967319
A9EDFB012C5AFC542F8AAF8207FB89B9A948192AE1162AD9E66775F9F739514A
05BFC3A3B7078AAA6D420F0931FEDA091E0D075A844777849CCAB5FE95157BFF
78A5F08A55500AFF3D1BD14D9F04CDC55B42DC908AEC894DAAD380F3E226044B
3F72DD84699E684FFC1375304D50D4E593EEE7D9542177AC431505C6D3FEC2A5
DFCE384D063E85318F59DEDD7206EAB1F51CA25E7BEFB21073F4C6EF21D9D14E
5358B63EB132C0ACFF428BDCCA380FDB0A73ABC18DA7AEA3328AEAF80D48D836
E1B3FA34F2B14198FC400FD991FA2841BAD840FBBEA1191C016B7061EC7C4CFB
173B9904901BCE4CF4961C8633A1BD5ACD2DCB8DB86B41CFA65BF57929380EEC
1C415FE33FB07AD286AA701B152E992B92925F9486295CDD7CB403643C160B6C
B56EBDAB0F8DA3582E51EDA59D4392433C85B6B9166966149A5C062984D21102
8B825AB69FEB60509FF4BA4701A3BBCCF6039B4EC6A5E3E05BE25312F7928A0B
01C5A06867B5A768416C39280095BE56B64CC6813153826CBE71956C97A7B1C3
1A3CAD34CE8FEF449BEFEA061E23F17396AE117117436541BBD958F4CE617F59
BA43BF19D190E5F6C4787D7EB5C1258EBE1A5EB90A34440BA2BEB82204CAABAD
9C03CBC8C4398214E59BE88D13A5FA6DBC90F7E168DDBC3A6CA408F38ECD3B52
BAE08EC3A70E6567F9192AEDB00208E647AAEBFC03CDD49AD4B5F17BC3C9810F
610DE0134BF68C1AAF8C4CC2EA52FB93BBDDFC8D90F5FF6F5F00CC4443F8B5B2
6BD8AD4A0B6974A5AC3FE309FB59CEE4323D0C247A59F62426EDFC641FDCCEFC
7CBE1D20B9F8156D63B329E4FF36D173B2487247EFFDB1E8A251DA6DBF0BD935
0A587860F6CD42CDAD6E560C6F6896C55D24C92EE4341C362921F161AAAB02E2
A6E1806956F9BDF9EF2B5B750670710D0E815F0CE2FB7248D7770AB585DDB722
75EAA8A1E79E33B2B7918A9731BE492CF4234C5D336253576D25A74833654EDD
4186FF6AF42EF9D1CD70C07EEF45F8E0E5C78BFBA5FF4B94A4A8ABB08AF5756C
DB10F4561F45D5FD4FED4B5740DAB84F8D2015F424A745F16377135AB754C679
6F549D70413187C3893D448A1FED35A4974A302F7A692032D6410EE10AD78AE9
BB69C0EC95AA0829AB01AFFC5BAB89044F810A77E08D12FDB0208A0497D7982E
2A696D3836519DC18C767255127629FBDB3EFDEB0AE13C9BE52CFD65FC41EC93
C8438430543A884F2FC98BDBCAB2067004725582DE1FA8A3916410A1FF9455A1
228776529C390C2308BF0F6D36DE91E28428704459CF2D49CF95DE9142244356
FB1CCCAE6C767F8CE31B9123E94D98F8107088357AB69FA5504AE8BEB88EEA1D
8D4D437AD28845495A91C98C7C5D140795251CEBE01D7F2605D0F803556FE682
0405243EA2BE73433C89066BBE68F3E992DD5C3F62C9D664F00F16D2F4865677
502F37C4D17AB6824ECA8999762784C4ED9453C012CBF5997111F4F91FFDD31F
BC9AFFB52929BFF5D74B147BCC44B861E64D4E58F3F6D3208CE6CCB5F24DB163
9940C6B40A5F9B9ABB755D6744FE6B9B850630464F053B0EF91509D448E99069
A50EAC3EBDDCD7606571DF81EA1B3277A3C34185653BB109F62EBE5651E44FD7
B6F3FED2303498D8F2AB2C13872C961040F9600A3D0DC316A66020A2B3238236
D0E73FED0AFBBF92A95A812E2DEFF3C9CA5CDA4184D60F5B23C1599ACFC37900
14C01D12AB53324D76D02DF33731D35B27E6E57205C5BCFDC90FECDD4A7CF628
D9913AA66C4013482DB29382CC5FDF1A91FBE60F2A4812D10B97D9DA7CF82CB2
855CF7DF772B91D495A2A2E964E65A769324DE7494077143F5AAF31352A44342
C635F1DAC29E7C0668D498341B23541F797A583964C912451FE0847F93C0499F
BEC8B46DA1E72D183806A5EEA393D87188503990692603949958487AEF40E486
7FF740436D6AFE77ED42FBA5146816A262CA12B58A20CD4352DA6B8C0753ADE5
5D1119277A26E865D3CEEF811170EB615FD30BDBE902FF206D4BC8B607AA7564
2E68E2FE56826A537FBE9B5F89DEBEB1DD2F7DFB7B6422866FB7D01C7D610DC0
2B3C1294315DB706E63F05AD4CDD0899E70117AC1DE3CCE8207A424958A25B25
0A345CC12D7DE0BCA310797FD87D1E47AE61B39D54AA7840539EA2F98EE49C03
4486CC2C8B509EE7D4E04AC4987DE19CA5A5F1EF368203F1883FF00084D1A980
13F5E259E55CFF2C3D520383CEB033FE68B07091042D6E5E1CB86BC0BA270EE2
88C7FDE6B05C9E373C980B680F69AFCCA4F650E04418359E7F6E2607E07F1538
42BCE50270E4ABF46B2948CA6D91317657DEEC13E9EF9913C77F6E3D058EE9CA
E713C502E30481B8025D6879CC26A36275FFBC77AE08490A2C718115227F3502
CE34C71B32C3D933FF58D15FF28B393B6CBD419007CA25172D2D8A29766B3B77
144F15F5B20616730464759BDAD018EA5EB4211B03BF17EE377E34EB2A4528AC
7579DBC1FDACB164F8E33F808173B35B8CDF02CF67D4A22CCACC5F34BD4882D5
652E80BB46CB5CE2E6A251A6253B9D2B703C8D6DDF497D840BC5022317BC0F75
848554EBF51AE3319305F40A09D26260BB0AE8D8DB0627FE88E2E63BE5A13A79
F3685E78EDAC639D8ECC3CCADA73D6D2E3B5EA99BB31AE3FDC1EDBE04FAA6571
530C0B2473F20BF05A2763D58B7ADB2CE6CBC5A045CC8FD0E8651623D67C8B51
0CF8B586BC4B549F735A51541573C2B08EDA280DD03A72F360EC3DB331C7B57D
D8F531FF9CDBC591A68D882FB1E16846ED0500344C3A90FBF5834E7452543682
24642D977BA1DF505150598E6B6746BB60CD8FDE1D48376F12291F1FEFA36DCF
87F063DA082AD986C57959160F27BAA823454595294E4C5F31457F42C9D08E8D
60F7FA209DBC8D151D6C9D264C628D30B765DBA894F62D4F97DA4E944D031FF3
D1D72AFD7FA99ED47B3925F656451987058C1BBA4F7BA87EE1DB5706482FE5B2
D55471F12AAB3E9FB9DAEB1E348FFB81A1712AD449D1F8ABE2AC47DF6105A9C8
919833DFC62EF9D2781460E6E724D207584AD24592AAA673D761D45FD1BB5FDB
29AC5D688445EC4A20FB81CB8E7C1875262D15F52C2AF1F5AE7D4BF7F75532DE
AB0E0C4FE1950B3BF27FE1C96E111D060E86237CB8E73B54464E8721716B3977
EA67B5C358B7E397F3986A136477F5740832EFAB627E9CC5D93A212D87B333AD
9619FD5ECF35DBCA03CAE19A986D51F10977E6BC356807E84A31F146D2A33E59
E0377B88203FA2C85EF46B1297E4AD9FBB2ECF5E1C5E10D2670C81146A7EB655
593EC92B62C118B51BAC5EE75526EADBD8D1CAB59DD7D8E8821B66569B98DE20
B5DA19463C7B6307DEF2C27B559AAB096CCA5699CA048E00A1E5F0460220FAE0
C207AC3AB6F48A7658BDEFABE32F9A0FD11379A4E15A2CAFAA80D2127315E4C3
13FE28DE763C4A9DCEAE5BD6C160013D6A3EAD9806A0E29506E574B733A77987
8A4BECA30AA659ABC002770A3CC550756D66F460EA1E5927D452D9EB0A6DDAB5
9D1998C1CD1584C870E7F3AECAFC2AEF595DADCE0657974E2FFD485E578D0885
A49A0CC8DB801E36B19C526182340BA823F2DD514D4D1F179D15F6A57988BE18
F481655D2EBCDD01A7101BB004380C889684E480A98F4C87CDD4A64A9B957070
328CB127EE771D3BE47AFCEF34FD9349439DB8D0F60B7E9060511E195C741828
185BE5AFBAC739856A025E6AE4C2A25068A857F3BB4881F4899DE30A782C0200
2D5911C08F13E3B6EBF778C9C4A643C4A55B19AA919BBC741091E2C8C3DAC37E
97CA80062B7443C3B42DBFC79F42F855EE7CB02C0A1C6321AC60AAF996262997
2413EDDBB24D4D4124A308047626A7B7D47F44990962673FD8E48E48AE7E9A14
75C0E129923E93A340619D2E4DBB136152B296FA48574DD385ABA3561C99E917
A8A95005A4FEAE4B8745D71E9F46002E49597C4EC94A187339EFEC7D28FAF562
D8962F64571C86230761BB1D8C7B5154B35EC4531287A15D698F09CC255C0E82
C000FC4AC69281AAAABB3B6C45EF7B14D2FB65BB1E05E4FDD4FA50FDE4474831
315CB0D3B3F15045BB1F111B55E8DF319D380140DF18F3394469DB8CE68BBA9C
F51CD1CA04043380D3567593A7D16A66D396A43B643C2C161D3698AD4F1E778E
5DE31671625EA682B96A5E7141F020BBED5C8C17BD80B30CDEB6E6FDA7B47F9E
ED50F3380151C7467642B5C3CB1BDF0AB534879E336134902E1816F58CF2860A
4BFA87B2C555C257BA83241BD5390D5439F2214EDC8DA068D9F2065B209155B3
F3B0A5DADD12EB1C137FCB3C691CCFFC6547964E4458D5B039A12BFE43FD0CBA
F8EE1ECF08208A7D066E52A2BD63C17798C054EE3FB5D53BB252D56893404C96
A6912D9782488AC6A02542030214E0DAA1F777FE3831DD0810F909CF9CC874B7
14C52795F28DB0E301B0A07A30A5D9EA5958819F5CE0A6AF806BA93FBE010C34
971FCD31909034F2D76217347BEF592FB417EF1FC57B276FC5F6F483A0D7266F
EA25519BE278EFDFD0E5185017CAC55029D2EBDDC14ABAE2DD8B1BD7A7C0071B
40EF96025A85118B5190D7ED266D6EC818E3FCE6FA2F08233A244989BD7A08F4
FBFC6475628DE52CDD200E49BBC132EE747E214116740A5963B7E856AC0FD160
04A77A6D346C4CDF9586DEDC3589F08A470F23A1393EF550979AE85FC8163F38
37A25C5F4AB487BAC7769C263E75C5D53A283FE44FABE21277C84CA7DD090D34
ACDB15EDBDF3C520D39B457F021B7014C891192FBB4979C0EC0B272BE0549F94
F6C25944C44B1638F8DB1B22293551A5E5183079E050C9FEA8E1EF87E384AA21
EA2BBF6BACCF896CFE8DBDDF9C4FBA7CD5A66AEA6250C00CE0D61EC2518601B1
F76796B5EE22B9B69D300E4A945182BBF859D2AE517A2D83CE4D042CD41110B7
F183464970AB181E2C19CBD49AAD773723919EEECA5D2FB74741948E19DFDFD9
8FD40187DAA79C2FBC1ADE55130F55FBCA0669FE3E6956C879A990B089A812BE
3D74F6FE00F3B1BF8CC9DA630916AD58210D5CFFFA906E384576813FDC89F199
68BFB6ED51DAC511D716D6637F386B020D9FCC2348730C4A5DDFB20450AC3C8F
DD33EAE39A32FDD8BA733E5BA9B6B87BBDBEA507FAD39C061425B03514899AD3
AEA06D26741DC8FF8BCA65DF87DDA92C0D99B0F91B5CBF06532885BFAF8D2FB9
D559067927D560A8B2261C1A3EF1483DBF38CBF590A12846AE5FFDC629A51895
DDE3615B2183854E88DE6BA33F49C182FB4D7E87BA9CEA9F297BF7D290CA2260
B911B5C5C31936D34C6FA1F8709A097C73C72140B6DD74AE51E395D5888A32B6
C7DEAC7D1CFF9303CA89E9597EE4C73ACE512477D9879A46F0EEF95D43AA7B3E
990E4BE192C1327077B9C629725697A1FF42CD32802BED4712AE980117F39761
4B35B0456D5D98FEFA7325729B69A79C6B334BE9B1876394F1F55E041B8E5B93
5971C66BE58A7E1B43265201F118CBECC96BBE4831BB3083EB6D97C871F1106F
8934C7DCDB6854BD8A6A9F3C1D9F2B7734A5E6AA2674AF5E5C62F8EFE63AA90A
CDBBC2DD88A66752E035AB525F5B73F943CA6FDD0E027E006BE57B8B287367B6
E71E63A1029B368D4128B9415789161D557A617A40325D8025C5EB39A6608ABB
C3837C193DEA2FC88A63E77362D8B6E6268CCF468B518A56298EA1741C75E16B
C5A6641770F5E9F75CF1F50BC526C8405D7FB9AF701F201C45BB63AE21363AA7
F92F92F2CC8A0632285E7C25769A28C3158F4628137965D553C504BC0F0C780A
8CC5B005A3A9197841C43770507908BA7AA9BF965C385575812A2A413F4E85C1
5D0433AF0A16E72B5FBDA1A4FD7CB0D59571A50B89C22DDF6325CD929D4F1264
8A56EEF7EB1D48D98614F91E359F4907B333FCE7CB98E4D594F81A8021EA2A7E
02552A87180347F81E74228C4DD6B739EDA55C4BF24ACA15F3E4DED29687B006
BEBDBF73BC0B7C8FBAE88D7AD720881AD2E6156D759969C54532B373BE3D35FE
684ED569042651AA86DA42C392423388F2A102C4C34858192ED35E0CD3213F15
189551AE84D9F36477A561EA6CC41F868ECAA95B6C0DB9C34A61B893616A7CDD
73AD301C84380D0259194305DFD02F4BF751EB933146FADFEE8A75900E48E00B
F036AFA9A65CD758214D63ADD24458CA1B90CFEC458FB8D39068B7A6D97359C3
D6BE57C2E8054026FA4A4BCB674AD369E830F06797A14F69E342077F51B91EE7
0B3A2C2DB0BB253DE879A303A815ED5CB4DF774A63C6E7FD5E8C573E887DFB6D
C73F0AF690BE36F8BBAED2A10AC322E31C752629E899560BA6AB1325917AE84A
46AD99EF2CE0F6E35A819643B31B21EFC94999E5C8C8F00CDA8D6DF35F1EDD39
5D549C8B16FBAD12FD4EADAE269981A6F26CB01A2176DB2BD44F95AFAF65067B
6003A9A7D46A25634566A78AE697B86AAFB2B487038917F9EA8782F0C666D552
5C2656017C393F96DD86B1F774C606883F83A283FFEA585C74793E9DD4BBA960
C6183A0C24C1A0F170B543849D8F454F0C018918467DA3BD5631BDFC3B1C3F14
946837334A4C8808D1D9A69272595F218C4B3B1DDC95EFB1813B1F4CAF2E5FE0
021FDB1279F4D38ABD3C5EEC0921FF6DAB15DA11DB5636D37F19E2452BB54C9F
45CE7EABCF90D8F97A5C099E5744A3E1A5F3562BB2FA7168C54849EBD7589457
36DD55F41126F21E78908166D3073424F18843CC90E7842FB2325DA49933E55C
2384FED2A867BA411FAE47BEE7A2C6861E2F9B888362A9A279CCBA7D1B388A34
E4B9D71F5CA377994352C85D1F79097946F273E2B8BD8504D7FE2E8BF6239569
1BFBF961B525678E51D372632F0B8F5B21A4773237C3F0FBFDDD75EF48C38222
CF1C4DC905B3E33A4535043B0CE55E0FADE8C59A7101CCEFD6CADD3CD7EB59B7
71DA23299AA27225EBED7F023CC4BE49D559D03C227B50B9A1CCA1D443824723
E6257B79DC2A20F301AC70010EDA3CB999D005AD9E2E68A96010C1330EE48D2C
9507B85A6447A7CE9087B42459DE2CBB0F2557C679B1C2BBDC40A2ABA4B9ED84
2F9EA814689C23134B4E94FB4F421C92333AB8A6AEEF60D1F4329A3D2F76D4BB
5F50B293CD804CE15E40B9132401260BA6237ED14B00480DDA4725844B8D0356
46BE4B14F10153AF14596F1FA94A86452F967952C756F207742D31C0B69D7A10
A040461A963753DD7A3A897CDF0F0BA5FF1D19D827BECC3DB64B575C2BD78E64
9BC7994A4C8BE125B3441D7DE52BAD742E26D4E8FD6F8BD325516BA923ABDEF1
AC6F2BC5F978E7828171C282CB87C27BFE9420E9D4ED06E5804E86A629277C36
A190BC4F5D4976E790BDE6B08E3DA04639474D80B9476967B1F21DC9C3ABA68E
886B032988E3ED643CB0C7D13A79E8BCAE7558C5508B2A416CE002316DAED708
56A4BAF98B908E8FBD525C81352EDA5B164EC23E0C68D9DC2DCBAE9A7E6DDE01
FCF595D94C7E5753EC164DBBFA4EFF7459E0F68CC8FDDC8CF68C6D968C920A7D
1F4FB72E66774F5CECA712B2B96EBCF8F689E707876F77E1842DBDD4040E76BF
D0413655C209F505AC184B3FDC25CE8FEF34CF3FBC9A0CA8ED9448541CECE651
74F70470D07F6604950C60C1F1D0B8F5228E627EDDC13646FB9C6B7C3A1BA8B3
62A74921656877EF16F3F6D87512DC8D246B981C385A2104F2901E851DC7E7A0
39149FA5D9DA2395AD88922B3D6A9C6A873020DCE8EDE7EDBED996E79DC6CEC1
21B5B520AA02A1B701C3B6EF1F9D79CCE60607CA2B3124AC77315DD6556F00E1
722F60EB1613FDD910A7D8BA8D0F1B52E9DCCD36E8583B1403EC33DE61C95F90
598A2D189A80A8EC2845EC251D7E28788527A52F14859A20CF68F1B8A41B0BC7
7340E6EDD70B29B7CD1B6445E8C11DAEC058B54E83297128F9ED0A0D1149FC53
23FE81D2B920EE90B9F7353FFE5BAB3C886DA52F45E02D5409B014AF44F71181
2A7A69BC721E112377513B242CED6E0909EBEC8A7B48EB9922E3D109FA395C75
EF9A4A9EFF15DA36FBFA3A6BA16C4494F221A7C900A01C1AE937971D7E096E22
1300E73CA0BE50595D95D22629C14D2906C1844BAE72849EBF9CF71F750449AE
1222BBAC473AC3F2A2EA8428AB6E1C71D9CDF8C416C17FC53D322C453A6355DD
11F0A96B632065991EB9BBBE9BC2154171980C00B6155F636BFB4F94C0968E2A
C0A9E2A816A46EF7819ABD5E01A1230E3DD3596FDD8AB81B5893A68D41DAF8DF
6501332708575ED5FA27EE8B7E70D7F46658FB40E5BF6A133EBA120A2EA03232
7F290A3C18954DBD2C212D2CD08D176E7DD85C09AF82B273E13D74A2E6002DA3
338D66A9B8C2DF3E9C0A4479ABC26E5DBC640A0EBDA5A15351E8FAAE9824E959
1FB9C9E458C0E3EAA18A668BA62D39E445D50B56A72F7C8F838FEBAB27E9CC73
25C0319175A23DD7F4F79D8D76E0ADBDD3AA08BFAFB253929E35EAD9AC37176B
6FC5BC76E6E436CB59AF3E5708BFC2EDDAC12A6D4CEDEA747E46B283954A6BBB
424EA5F4110BF22CAEBE81DE4102724CF2399E5A74D2087A043DE4B0D3B0062B
4F9EC788CB13C6047A111FA00B4DA402BDC62BCC686B930D510B5571465E16B5
3D8D1E53101862BF24F587BF02F8DCAEFAA610BE3A3754ACE63F23C4AF93BDE3
BF7E064D12F030E60BDBB5ECF7F5B55047666FEFB8F2E69FF14B0A88ACD02A7A
D5FB53FDA83E3B49B8AFB63FD72572C391C242DAB894AF9236BCAB4134709A26
0C01FB8C3A3987534DD171BC22CAF4F6291FD3210DB20D79A6277513640C6849
7FDB02F2369AB62814FC133AD5020C2DCCAD3828B79137328D22417E20CAC4A5
02C64E85AAA0BF59E68FBA71B70C50B20CD312D6408542B6A46046007B995C45
53233B6B6397042298DAC1CA93B0DBBCCBD73A4D948ED5FE96687D9DC332933C
461BD4D9A78591D6384C7B55C51E80D5429244CDD7E9F5EDB5904B240A681969
9E8B18B8ED00418CC2B307063DB460A580282DA7F9929B76469613CD50E60E1D
55E07EE864AC290311E34938899F6AFE58E4CBA318052DEFF1D916D450E8BFDF
61F6D4B7DA6B3377D1B8495D50035C35126FA38E9E8B8A7488DD36BFE7E1392A
FF570D000B904920D3576C3007F16FBCF5B84C0E3A5F4B5A9A52C4B48A847295
4DA4F30EB19C2C2598FFD1B56202489C3EBA6937A5F951369351A5AB704A9D39
B0467B8E588B34762B45BBA5FD4E590B90061C3883F1AA31F2098AD3D9F6D8AF
501738184465B2F8A8F2CC1DD63EC01710F8A9E3779DA5F9FC32068381CC9382
0445881B900A6A843C7A1E762766D1C47CDDBC706F135063C45FE9BD91A0E719
F4FFABB137FFE5C2DC83AE4B793C6AF5CF76812317FA743E37F630E00CE3D8D3
05BD04219CBBC78AC63C2DDA69286CBAF575B5C092E9B4CA620E8DD5AC04D3BE
5D3395E45005986CC686561E6F2DD0A09F0FC7144336030F8D3B88E704D03499
FFF8237158F3041E19B9704DC047A12A0A6A955A39078151B455AA31C449B2BF
7ECB9AE457FDD064B71584851BF2D4822B5C4085AE918F9B8C9FC24E47AC43DC
B8DFC44D6D883133202A600AF50321282B36B477BA20D2C17FB34F12E426D28F
31EBD040F5197BFD496EA102096ADE24CEC34149D71D3AF9D52F7957CF968A8B
D8212B282D3E22EB7EC47F9F28EE48E52BD1EFA3EA5FADA602A2C5B4715A59C6
52F3F7F6872F17E30C9E1857264AF8679465B0740F805F838C0068CC76637446
2316636EE315C15DA092C59D7E3221BF8309006AE546FDBD8539589F61A1E0C2
FF5096F8E31D4C0B2BBAC330BEB0F7163CE96C5251D06D3D227820E650154E16
C7E8F462A41894FFC81E0FEDC655A5C6E6FFABACEC1984A9EAE5BAEFC31DA0E9
1F5C585C3A23368E9170074177DC5725B16F130D30D10780AD63B6735901ECD5
3A08F5511385259F91ADBD73A61F7C685A3A9AF13656F570970D410E751EB87D
DF188D3CBFA36CCA7A5489DBCCFF067ACF9DCC5CE167C9D6953775688F630C51
852963B1490CE84BF7B264E0EC09A4C8A1AA642D584B30EF8B7FC28B738155B3
F015D3DB112CF7B980E00078E3C491BC98E2D9879696863223BDBE2E71167140
6A261373142A12570C151A53ABC5D02EA33460D318D0E5C24AABE773BE9D1413
E4FC7E625E3597CE0433AF328A9DC22D7F266925000EA47ABFB8FF7968731D39
3284C256263A3B8AFC3F0AA9304BCB07F5D5BEF05C10E9E72F6DDF9F913C23E4
AE6A1D24D93056630345F311922AA19CBEEB024B0926960391DB41B9F18DE51C
F7B7879CC54893063DED767214022DA1B8ADC8F4CF8A235F7BF7175A5E8B116B
CE9DB7FB3D04DC34AB2C7CFC057B62D1FE1A92773401004FFA0CED3FCB06DC90
5DD68F325003BF6FD3ADAC46F713DAD9135A7BB29616FAA8B4183E8F568EBAEF
0D624CCFAE93CA7D206BA0DDC4E8C7889F63D2C7A7F8F19CA74673CFD3EF6406
CD7BFE7DB5B629415B7AC55232A5462BAFC2DDEE4E9731D746E98E50CD287BC3
1EDB846E4A7588DA9073A3EBECD41344E86D69699A744882CFFAAE9CBD70C41C
427C00540E39FA94AE0D8D31E6B545012A12D2D6F302DF6C15C19B0AA80DBEB4
6364891B9CA3150B4032334BD46E7E27F25796A13DF09F7F517474CCB366EB79
76D17E452C918785425301C9F2AAE4F3C8274A67098ED1B9E7B3378599DD6701
EB7458AFCC6CB240D3F0A351736DC359F7A3C5C8CE1020B2E0F674C46582D413
7223907BAABBF5B5F8B97BC5C88745B849D650D4E2E30A42BED3A4A81CFF8757
358EBD9994550F96CA85AF9B99918A50D061E615CF061A6389C844A4C3DE7D44
5554DD77797737E83FB4C25D4481986AEB211E1568AD4D89C23A8A2959FCFBB2
A5235F4AF4002276C3B55916EA87C2F12E441BA4261DD48182EC13DA199616FC
97EAABC35FF08D4B82C13AFBAEB4D8E02E5628D5DA61BC65E3EBDA1B262B6665
A0A4AF551B2E0769641BE1632A460EC099E4F2999A761A8D7F4A1B808BC990EE
C1AC5B8C41F053E530B439DBF78A6A1BCCCBC5C103510CDEE8810364900C1E78
8A5D1725E209F22F648C28F8A44D3C649FE2910F8CE1234358223BD79ECE1224
05A70C3C9F5BF99057A08FE07533C0EA39A0FF61AAEAE4833E0D3F5C2174DB86
F54C0BD500F0AC512A04F457D8DBD28142701884995116A3AC4F353299618444
30E561264EBC7F63F7E9F2732E816A33DA2407FE44ED5218855847B12E4BB6CB
7C61BA4C494DE924144EB479D210621421B54D26DD6A6D253183F069BD42233A
93E9CCA719E30CF79D405791E7A170191CBA6C7384ED5CD633AF520516CBFADF
9A2856282E067806CF31BD109EEC98A23A4D424B5ECF78E8F27A6F91CCBCB8D6
F122313B920900DD2A1A62935D3147BD5523E80E6A492E6B4DCE40450D7CCD6D
6DAED9815E3A662A9DA79EE750520CF6E4E131CD6A3FF36640B4C6D568DE3C21
74F9465A1662E7ED7053CC97E00A4E5E5AE6084D116C73517A24D79EA12AF520
BB37DF0322892B70EF4C94DD17507110AB8F6EB46CBEC17546305EF2DB68B802
0EE1D72CDE865F920D925057B489D4CF050D3BF5902A9BF7694F1C92649B88BF
8E097C7F319FB5054C4955C63DC3BA94294895B6DD2704F0019C9434F4D677BD
E57E329DA7FA68E451B3E97BD3B53752E04EF40C3B5E427F7B96D93DECBFAEF6
6CB93FB2F61622F3C3F5E9520ADCFB296D769467AF876132A5B3A333E459C970
C08DF7146892967B7AE82A21C1AD94DC23FD138129A142BBF3D5D99301A0C0AC
58BB559A1724DD7FC8A2D6D30F16847D6C7F4EF8C2A5A24268FD18DBD9C87CD6
F027C8FEDE977F8B1253F7922B15B07332FAD656E8F50A3B9ADE38A5BCBCC411
D10C1C429DF926AAA26F0F92F7DC951796A648ABD700E4B5F89DD6A1C413AFD8
D047C2BCF1D2A0BC8628AF229C3BF39A76759EB5D45D55DF3D84651600283730
146D4821B95EE125CC0EC7994BE96C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C85558031F5D1B00F3C41E627B1DB9876EE658C
50AB296BCB026EE9EEA1CBCD4AA143C9D5F48BC15D9DD2CAC226069232947235
52421EBA746E16221DA387A610AF85E4F3CEEE61BD96095821D9B1E85677D981
CCB85B91B03BBB90B546A8132BE0FCF7FF5E302D38D5DABBD8DD0F6F9FD27FDA
3B150A099993B56E107C8E65CC1AE5190F1A6FB4565049E8821D464BCC686B89
0F72473F24F37CDE6ED8050A9C99E9CEA17F46C924CC44607478B88A6E8E8D38
D62FF6878ED502B8F6764962605784D52FC5EE0738B642EE4FE6B7DD6BDEB75D
FD22BDAFE9DB05CF925E730688B2D04969D297A337F0EACEA409B3B163F0AD29
B753FF0E767A29ED37ABB06F7786E03A41922A20F52B6720885583660CD375CC
42537349622DC8A22FF05B356CFBE7F3253D6F4EAEFE30C3AD128A62475A3945
F9D91A745192CE5990E8ED9F51BE16D71B4C65E0EB801336EAF8EAA7FEADE772
40FC4E9A4AFBE4F02AED631F1558883906725ACFBF5ADFA3D58C2E508CE0C920
A0AF983B7A88522D77ED6B784281640DB9F07ED2109DE5D709D443ED4B9C0145
E4525E9997474A3128FABF17CE5726F95D989C76B2CC1C936D2D4D70840C555D
91CBE2C8835B10977F3B7DD4FFAC3BE7DFAD53BEA6EB6A321B84F263728DD12B
8A964E760666DB25E0C098234C7150BF08AE15CE8BCB166AB3881540341CD10A
D5CD10CC3C86C4681F94534075E6510266DEA1B1D6252B96B2F73F62C7EBB1CB
3D76AB4A37A4F13DA1BA3624493ED50AB68AF7EF195DE3ACDBEDF4E33BD4A56A
BA83179564F82BBEA1C84F6A12E07A9F1033A51E6DB6E30B559998D5CC3DBB25
49B3B9A0D382FAECA8283FE65F6D38A3A97CD35B2FB65F092DAAFD270963B282
029CD8739B0EDDBB0C91826892A2A3B1414E86A25F93F16D90C8606804C3B211
87F03B2FBA1DB36A617DB2261D4613A4E55C718E9B70A8D7B33819ACE453D372
BAACF7F223F2326D775923529EC660CEAA6BA9BCC79307B42DCF9CC4A5EC2177
8AC2EDE3928B345133B74C8EF58C46790DA27339766DA38CCF27CE84AA14C8B7
922F28DF23503DD98527E24FD9915F832C4AB033F946D31CB717432E6F5F282D
8E929A783BEC468298C41142E4216393B9771D9FAF6DC90A385763592887E30B
6C3E1C2A7D23394125C38DDD942D55A7F6B4FD031668347107653506E926474B
29822C7BC8C0418D82F545A0AD6A5071FB7469F406CE9875D55C39E7D0AFECA7
2E2F41C7F05C6E8BCAE60D87778A5F7B0C05924A90B4BE6698FFB5E1945C69EC
5F1CBB5CD0F680F9C1DB8714E3AFDD6994BFDF4C470E02EC75CB0C3B6EF8EFE4
DAAE2EA80A57E5A3DAD1EF8A3CDAF87095580AA4CEC80FE0E6109F29227BE547
B27BEFA6FE853C5A67F5986966B80F79CAE68EF845BE8FA98B39130BACA1F0B1
42564B92FDE0D474B66BBAB05805E3FDB7852CE437F3ACB1801CDF91293B35E8
519BF9E4F5D2A217462AD1B59D29269E9593A07467B949308203575B6278E7D9
2925F3568F120B03839A4BAEFD92599A962C1732C4BFFE01E78D4B575AA5AB2A
C8B0F25165
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 16 /dotlessi put
dup 19 /acute put
dup 44 /comma put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70D89F53B1D72088642CD07D1DC4C7263A7EC
9785A2EBF8CA24D40E2C60CAF478FAFBEA8A27A55CE0320FE47E2512D88D1244
95CBCA87983B8795DBF00652DC3FFFF419BF24ABB01E9C6733556FC8C52A46D8
4014B8887F576E9D5C9F615EC830A43AF507C9F474F46C7238DB7412E07DD635
506D3978D2F480E23EEBA9C102C40045C4416B78160AB913F3343AA8928E5C76
95A58802A81E223DA6A67682A05FE782F6EF3C63A26C4BF383C94DB6272EE22F
A8FBA3F27CE26F13E8622A3223F8E8556F70142FB2F5B60433558D603A2516F2
2F6BD199FDF71E1B07B65EEA863989AACFFE7BBB3F51E9701FFBAF593B3D022C
DE6F3AFCE6791D2AF3AD5DEE8CB1A9C5916E47738DF51B714628D2ECFEBA48E8
7168ACB8931F808AFAE6A2DA5BA374475C621CF3E75C36E9CAA4ADD4A62379BC
24774601D590AA2A333EFCEDCC75AF25592EB74905DA13981849418C6A6C9915
D12C21A096CCD6BCE5E903A2336CA30BAC1764ABEAB7DBAEF450342D9B487A05
D828AFA5748B2236E9470B65C198B7CD4CF53D7A16D90DD26D20C384D28EAA6C
96B44F886519198867B0B3D9CCFACC9BABA998DB7F036802FF1045BD3AC0F662
00A5DCBD1E818B0D65B88DE2B14C59BCC0D46499C006DC046721F3AD745EE9CC
8012F4C2A343FA7D7EA8157E35103649DAF2D0E8F8E1B22D42682DAF62BFF74E
008615F292CBBF403AB0AFB7098A109893801472260B60E8D09F2B25DDF68221
EE7E68D0A6EECAE1BC0AF49A3F3A3BE0A3B84D62F1D8C1C5526D93103BEBE0CE
BF4423AF55FA5BE530C31D9AAC0C0C31DD32DAF19971C4C7B0B5D8BCAAEFB0A5
F7C3ECF6E86AE70C55892774520EBB6AEF1B28EE356FCDFBD84D38D79AA14D5C
F794F6F2A34656FACC4C6728ABB8918CBCCA26D5E36F81F9640BFC36252E701E
E1D93BEE6F39EF5941ED9023FAC7FB7537D21B358C83917976662E357DCC69E1
A608E58F40EE895FDA91AD51BC95BC385A401473E6E0AC3A90CD47EFADFD6FA5
4A8555FB709EA84B7BC8D703F348FD08A3A7D1B0BA07599B4D3CADB900404D7F
3C71EB484355474F49E50451BF49EBE145AAFBB1193F9A9790C2A9294342D88A
70CBD661F699FD90803349E815B6829F5D32D6E8990DC97C5CD421B7098C0BAF
707D534E20BDD862E3BE442E606AB2BCD7AB93A8DE76781A6A50BDCB95782F4D
4C649E610F0A7E4DACAE144591FD5F46DD46327F2AA63ABD669549B9D3BDC28A
2BE3278C632880A24B7A88F0E04C95E05A9F70A9F9CB2C721C22AF5CE6E58D59
CAAAD039C05CA83B0694C9BB100824F935ADB452667B4CB485320ED0F50E0D5D
4EF5E4BD8AA70B8ADC2CC53CEC3AF95F64C398407625D24A3F204E271642B928
FA7E5BDAE4CE6A46368AA69DBF5A2052C2F224646208E62E17F797E5454CB2D6
BE130A58CEDD8D4058118F1F73F5EBF9C18311FCE3F240686BE1A77503DA6216
8F47148FCFA8DB0DCDB39AC909271BF5AD315093291552DD007033BBF6791FB9
6965D40F4D2E7F97B8CA109FDF6DD40C2A147888DDE0E69B8733028EFA6CDB34
342B1A0D65A2AFBA3667120DB206F86658192FA198346377DBD1CC45942A142A
E9F36389F6E769B88907732F231C86DA6E6D3171A69B2D42C056529CF2E6B149
1D9E6CED63C117903C8A49623948CBEB18B02183E2209FEA6C6973D6D10FD71D
B2752580D901C6D42870A90C05315B8A66BC631381A3CFC725770EA5EBD5A127
FEE2100A2E0B42C90106BFA1A6C94C390609AA8C5DF0A0CB9F28A2E5973AE285
EE46ABAD0DC7730CECA671D54C212C2ECD1CDCA77B6CBB0870FF7EA2E30F5294
8374E662B0713A68A51FA52B6C94EDB5D4C6211BCAB38448E9F8E062A2685A45
96F856F1CD06A6C22C013D00C0A20F16F563C4D8E920168A105C6AF74289E3EA
D9C242E8AB3A5C8436F0BC355FFE11B5C1EED7F8A93F7DA332DBE6DCAA3FB820
CF5AB34039F1AC7FA4A98CACA7DD95F8B82FF81B84668081347712CB984DAA4E
55CDF50F225094BE5F7CB1BB8AEF203B979CF26F87B75B40C3EB4CD9423043CB
CDA4F00B19876243F41D56F79F455A6840A752C788A2EA21652DE0E78446213B
9B400DE943B44C807D65BEF8D0ABB7C6797C88B53FC4097672B174BFC2AA42B7
1819CE476848430A7ACEC19869435AAF5DA4BE62457C9090FFD3E2A1921C65ED
811BC147CC51092CD85E92BFEDEC7DBC5E7A521C35AEF3139A6F2BF93F81A259
2BE13D3372AD9B195F6CD59343C22EF8388A63E0518579F5BFF48561F76FB50D
A69D49C4F00BAC95D0A03271201B80D008B83F4490996F1017417B0F857CC673
2AECD6377517B368F7B8BF15C55FF1ADD69FAE17B29A59D2C396B98BFE5A0586
82AF53C52C188CFA881FDC365A3406116C617D31946D76236E03C1D6BAEC19E8
9CF1C202C2C0C4BC2C3C7D7D8B3DFD9F84D2BA38C0EC6609EB32B20E9D3006E1
93831BEF853A2507E789DBB8092F6CC78F91B87CB9E5C6E6C669B59DA1826753
DB55FC52EC7413F543E0527253C7F4DF4F179C3ACFCDF7BAC10F74AB652C12D9
DA289AAAF26E73B0F42B5A5D0AFF98A3269EF13A4B04005E756157E6821F54C9
F975EEA994DCA914804703DBA4646AC00B72311007CEA4374B6E6CE3C8368567
6B5BAF0321026B6FF857B7FE5A1CD1C93722C31CC1AB075045F9BAEFB5FEE024
EFDAD121C3E60205F796A1F6421A69EC49F0912A362601B37DF1F3F427C22D51
227EF834279C43814EDB2482B8B2D0584A5392C72601D2B111BD3305A0FB78D5
921A8D533AB4ACBA227FEFA213735DD1E078D0D3C3F58E23421277B847280EF5
9A78750DF7FDD4D6546C832D3BB7EB36DC19E8B4255152D0215A05E5C04735EB
88F3D502C7148066B062EFC4888AEC0C8CA3E55B43428710ADC5FFF6347A57C8
FE76163598B6FC2D1F34D0059B1C2186722085B580B949C24130A962716E8BD3
F73043F20F1A7112D62D37CA4D1D281E39637EFDC805B2AC41AAFB1CB9F9045F
7DFA7BDD753743187B8103F65E9B324DC78D4DDE5528B367B222E9AC488E649C
12E19F0083770376762A1172A32006CC983F9F2C3BFD9C0A2ED696D3FC472F8E
DF41EE96BD82D7A59DF7FE42D70CDF57ED74E97CB5904E84F0F6C586687AAABA
93F0397AAC2A6C711378246E85E22BB15F38A4A9A5AFF7F3DFB12AB9373BC5F5
36C1C1487305E77E2CD6A60DAC581954968C51296199E2030698A942F55E1A68
54779C12BEB4BDF63513DB3C09161B406B1864917052C94E337BCC3DDA025D6C
46FA3A501770EAC39ED55DAD1756370F894988507104096BC69B5BB8924F0F8B
671DC95AC1D223C021643D0677978753CA9BF37BF922AB6BA003310CD2DD1005
D811C8909BC80A78D231096CCAF59F2727036A804400670A5E11B533EED91A01
4B688A0B42E3D08A6F6120CC02B8F8C26FB75EB36849074BA7EA5F0C2D77511B
D3EFDE27AEBA1FAC49E6BBAE969E7081BABEFCDDB98FBB06BC7FB4D7D5835F79
2F19F72BE68496647ED82CEC382799F62A9A8FF893EC01012F2C46A928603F0A
D55B9B5109D4C1A0E886C97D39E561E268B801271884EE31E3FA91D9A663C2CC
6D7FAB46EC5D861F103323BEF468AF99B379E72C46B894AE0982700BFB373254
E6C53B0C3CD2C28E1B86709E39A151457B5160D501B00C1BC7C199C4B79D45ED
260050897F86FC9ED56FC561258486D3BE70DF5E32A5F211635C74A8E1C6F0B0
F25D4C7A725889284D6283D19CA33332DC494C7A86D85A045A9DAA5FE9BF2A8D
8B791CBC6D31EE6E4EA02ED0AC676C88B06C46D2C8D53DD11F7E7E8601C2FAB4
777428D3387F9BEFF7B6CFDCE8526F02EB3F2105241723DB029683DC14BA9C6F
68D46FB83B253402FECE3230B06D966A82620222238A52B4546B3E3062DC45DC
2E0D003E036DA113E53B28E4052A639AF351AD71C95EEBB12BAA348E69BA7707
E8F980D421FCD370E5634D8257D7CEC2499726B17F3F8B4BE65F889CEDCEF5FA
8850EBD1B3A9F4693C2886A1E529048F0A5391DB95CADBAAA7696344139DA42F
11E9CCEA4DE74378B570FE40BE7847FD7C81760EDD80961CADFD22A77ED2C4E1
C4A1625E8F8F0D03DD92D5CD916DB7F8225221106AF974F751EBB63051840055
AAFB5EAEA9074359091FF43D3ED1CA24DE1E409C798547DACA087C13507EEF84
FF442EEEE808180034ACF4D946D698D3C5D6DFB6EB1EF68D3F311B3D0428A433
25761B6A6890E2B8B3343C6703AB20E86CEE1CEBFE7C995B4A8B650FBE9A7962
798E4D5A13A5294A43A5C71574852AA73C749A91B5CCE3CAFC77BCF6CF3FE0DE
8AFC44E8766EEBE31CEF3DEB595853467F695D09088804C11BFA3449A0E39F34
4DA10197FEF0DBA32D99E5995D02BC58358F65B6AB0F1E1CE38841EDA6EFF8DD
01423B44B335771FB7F68C4D6320C9445644A6E3A7B94227A34AE85725590BB9
832A5D770EB4BCCBA685B81B9FB0DA0F11A2218C789AADEBA95CD98B76C082A8
D0C449377743E6DF069401B1FB97D540332714B467609C824511A290518D7E97
F8202E8DE0A6DFED9505AD33A4B19591D97A650BABDC28996794B83227FD4117
78D2760F8C967E3A15A5E86F6C5A61442A17DF7C7BDEA324C6CFEE6EDEB6E984
79D0020C9D7D136F51F4B152264FBE90328CC886839F7A570A505CF4B75CB111
11CBDAB16250BE4A783198354DC57F34612486E0A6C48E1A37E1B448D73161C7
EE4C4DE2D297C471862E4B72CBA273A1338E2653CE40E1595266A23DB7E45920
3EE2C245D570E37C028E5FE27A41A8699430C9773FD887BB0CF81672E10B3C8E
470EA5C15CF0122926BFB995EB13F5F8405B6D5E22B2C0F2BC281DD7DA35EF97
EA3824AF5BD26A145A070D9E9740E2188B0831BC9B43B825BF93011905329D95
2CC02B50C76389FE1F818EEEF558D14CF20AF491CE10C5985F01EA377728DE87
C7D2D794608A93DBCB989056246D39D9F4B483D26B8E61AFF1518C4CE4A6C6C2
FFBD331F976DC4D3ACA5CF22159A791654A005A03F2BCBF5A8CE55BD269446A3
D979C1666DC609748B8A5E7678C21F095F6F94D8619DC33B6E4B45FA0A140C70
5A6FFC27727A2B5FAFFED3A1252F8F090FBEE667A06C6E846E8227CC298ADC54
072EB048DD038DA18837E03EF63A578B323F64C0B1E24B1C4F7EAFD43D8542E0
AB7C53B3CA96854BD7E7B0422AC0EA2498C5A2487D2930FB9E3ED03AE11929EA
4387FF2A137113558C436734C79C901FEED4A682C422E0BE509EB25FA3462413
CD7AB7C46CD105EDAAF5BA78B97FFFB64B4B33F56292A3F48532ED38E2516906
AEF5CF4CC6283B7A20FE5EADE53C99C5AA0F11287E8696D448AF7F00DD3174C6
CA8B6C02287E504DC7113F0814202E06DF3F4A8499071B3C5044B730E9CA28C9
D2321D652A1AF36953084E2EA237697AF0E93566EEEA3A5B8A6C6D0DEEB40ADA
8E33534A2FD4E63758E862E560A1D920A810A517067DBDD5FDB4428A3F642B27
043446B4CD987B4F6580B167B79CBE61A4CE55233592F8705B43584C9114269D
4CBD7EA0021B7363E05D40BC4A927B6A64EFFEE9A5FAA01A85D7951851A876F1
DF782FB52B2EEA72F4AD93134B088B99B4B9CF8DA3037E54C18BEB95DDA8EE50
ABB36F840058623A18332C08B03B33B9AA2A6C9E01DDE45053397C046B59527B
B7D7C8CDB4C7C7DA0781BCF3BC1AA1646240A5D18B45E45712F83A22486BA2DA
80043E001E37D30C107A53E4CEC34D583169C42DB624A2EBBBF194B986082FAD
1C428BBF907C2AAB2D3F269F03B25C53869C5AE25EF460BC87494B7352D8E945
DDA3BA6245A5F06863A02A7DA0D29696BC78FC9FE42EBDC1A317D6E36E3D1259
E880B1C853E71FDD540F1F66D7345F04C7913E22968D9FCDF3B9E05B594626AA
A81B4C0F27598C1855DAB16A56D0C003C757A5ADAA76EC14CBD15FABE78FAFB5
7B7AC9D4C2794D310BC314538ECAFD660A8675C63312C05BA547E66B811F82F0
8D56521E1BFF2171CCC53F20A0368A5F6CB4B839F96D59C20E111FAFC9E74EBF
1A08785DFB7225424E5675C037A323E58D40C2354DD8807ABCFE3EC0B634825A
3D8BB56B1CF303A287D714CE8F29520FD839C28C492D4DB46721EE5FF8E647F2
F395987E2B45FF73FCF23FF2BAFA98EEAF4C55E12225E439942F06AD97634C70
35F8D31C227757AE2F80D75E577288398882D84DB4F253365E026B8E6919E1B4
C4557258F2DEB73178BB88E5293579D55B914D848B8C1098ACCFBD4B5349411E
B5B041EBD08AD63B8D7714DD3DF71A2AFED501283F2231856FC55B1255F9C43B
B027063A7DF0B024981D8B277455454E02B5BE4BFAFCDFFF187149214EE5BE48
E9FE9A0A4689105D565C696EA7FC408EC625E310DA9B6A1E3A6CECDD572E1BCA
A42F2EFDDC80C7CCB98F566FAEF320DC2BDBD79D2A70B514C8AF7DAD468AC77A
5B017AAAE100E1590AE7D0A83FFF82624197A9458441FC965590DFBC5CEA948C
2F59728423940DDE017490301CE53A1B62DE8354C9B8EB2C1140AFB5C2505947
6ECA2CAE1353259B16E1B0570EB1BDCFA0CCC92255E25DA044D437510C81E3AB
6331F042CF0B1FD32213218F2ACBB2F5940F5760642B1C8C701B9E8006F8B096
9ED32A3FB15D568BEC4580A78CA22A2A25E43EA9999F396AA70769A09B8CA259
A98A1F71F07FEA63801A711131B778FC44689A54BEB9156EF22772839A20F3B7
CE4AC8E17E44EB15F8CC849EC4349B7A90E6E852E8612D1F5E86537A1FD6E7B2
50004889D133FA083F2C0EAEADC5BA9614171F4566E3916D9C5545409D5BF017
EE5A1544623F34A849C5DCD988FCAE7987FDC08B0BE5DA984E42DFB705A77DC4
1DB5FEEDD98DCD99E7C2B4C6AA7E466A1264E9EB2A9E9844976D281DD8F13360
AFE3ED7947EA2F371AD5FEA58A72524DE91590DA74D9702E4C193753FAEE35DD
F8D6AB776E28066B492ABAEC4D1E7A69692E406F3643CE3BE8F7A76E53DF3DFC
B19AB40248AF5B5D48D07319E2D8D2119A37B7EED089734D7F80C6BCA103F7A8
CD8CFD9545BC70C0E48F4276F1F569E54F4218A3FAAD596A2781A18ECECCC3B8
AE74C264B30564636BE004BE1331FD60368F451C0066F7C1CDE098C3525F1308
1B55EB6C7D4FD1C7B1EA03F7DD9B184FB47A98FB3B6D920B931D2C41958D79CA
F427454F554BCCE4FE6E069C8356F9206A2E5986EE91199CFB94111D08BD0B75
AB9829EA356B59CE42C8EC206035A20CDFFDE75261E8924232079A2B9BE59127
1E2A847D8B1BE0014C992E0F2EE845261DAEC2D767A7738A312583D5203768E7
DD8B1FEFD8EECE01FF51872E74A9A231192D82FBD2D99F3C577D965D574D1CEC
44E14C2A633669B31A2A76D8695FC766303875E1503F3ECEA1B05941C18FC5D7
11E4A07BDAD1EAFAA0B31F19D62673F7C225244ECCC1FAFE618ECC10B911B4BD
D4CE9D2E05EB5121DA56DC1EB3393A8284D08B953B91611B0BC2FF9C46036EB6
FD312129485E91EC6416AF2DAE6039E82919D5183B1BBBEABDA877B615510BAF
994926C4354575FA5584BF9013D48DCDDDA33EAD3C4FEFF576B11A138F0E8BFA
EF03708B153A6485DFC0BFF3C723A1D9678B7DB9F586F3908C5DC3C9484CEE31
672F86F1302DE8240C0097BA65FD9B02166D1DCB07FC408D403ACF11D3AB92EF
A29FB533B8EABF2D703BE3821F1D504121844AB277E6463CFA8F3A3C60DA96B2
A6CAE284BC919EDE850BF271CBA4F0FC34AEEFD9451B6AEED9C5D8D7F47D1F50
B607A70A53F18E2D4EAB71B449760B84F9F53663C3B1560AC8555693416C2DE2
F75A27EDBCA283710C4DE5B82C515BAD953F827418094A8AAAD2FF88F5C33B22
253E14A34B56078D19885D6813C924B7A2D3C1EB604124A25D40D66BC2E899DD
1E80932612257E1D8550C2A89C938807544E5D465F7A405C95169405389FFB25
3DB78F43C17A7DF293A2FC703A6F327ABF9C3C0CF6B28FDA7D8F41DE533591A3
5C3D4D32FFAF0EBA33D6CEB6C424B45385049E5E100E881E76DFA6C0435FCA6D
E0B067DAF67438F713EF93DCC21F3FCB3AECBC409DDC7B2DBF090E91AC05D526
CE986CC043578E0E1F8B6DD7FBD8359D83075D7534F3C485ED3FFE809C067009
8BD7F1B8F9D6E4E7AEA4A988BCE88537B96A75906D39D53AC049E5E7EC6C24F8
DBF987009AD9DEE2C4183C5C62495C0953DE4AFBB62F478409ACF9801B5B4EB1
CE471703AB670A085C1AB684D2CAC42E1F8E169A1DCF8818D452E3F82651D9C4
E05B0B9AC9F7368D80B8E45117689E1632A5200268305B3C3F8F20398FF61E74
C61B3366FD235AAFC6BA6E329D54DD252C772010CA5923E532658C59E336FB22
FF955D8CCDC6F7152620E38A31041C7FEDAF5C715018872C00BF8DF1E83AA44F
71F9AD4FC2657843B55B66205FA3409145042A3AAC758937BC25DCE930B0CDBE
FC53D03CC60F5310D766226C7062032F138ADCF79D79280BBA36CF669387C293
B9B3739910F13C551A2A14E97F1116D0768507F38B74B0ECB961DE8801C2D508
06E3C97A9289C49E89A2740F0D64F8ECCD821D41BE50EBC48AA4BB1BCE83A240
67CECB89A9F28D053F2E70DD975B4610FBD8CC78410A422B9831F44361EF1AFB
0B2358CD9402885CE9F953ECEA37A9C8BEDFC61637CF84C79ECBF791D1078EAC
01BEB1261D9091F0AEB1EDBFA6EA4B2D2755A5D2D4A2A4545AC97A5DB49BCE36
9FED3D17E6DC4136C5CECC7920A5062E43FA6455768EB880C11416CEAF60ECD9
F0042087E8FE3395A909DC6C0B457341BDCB87BAF9F330384B993F7F88EF5D1A
00ECCC3B6080EA486BB5CEB5156481895E42540AAACAE88A3913ECB9513541AE
F2DE1178D8C560603870583723D345FDC5AC9D64017C651B9BD37DA8FE3BEC27
8561A9FA3FA830D78BEEEE26BC44C1395D1FDD32BEA5B5C01C55CF33CE41536B
0A8E595B0D5576C22412AC5894495BAF81AA2D140956BE9C000A9DA8B9709C11
29A9386573CAC6CA35C4D3948F2DD390B07AEEE79CD9E41ECAD563FA16202E67
A26A92CB357CD5AD615C2C51CA2968F27A9FA22474E8BD1B705B39F6FC647F89
8BCBF1D4144431AE69684968000895E007823CBCBECE144D87810BBCE57CACF5
4FAC2C095DF5D1E3553B9CDAFEBE80F8FFF1767A00B9B68B12E6F3C64E58C550
CF5EEF66B32E88A0AE056CF059320178BC95C8E7BD309D0BF794447C54C28CD2
A835D1E71193C7D6DFE4EFD59AFECCA0D1EEB8D84A6867AA52C09B98ACF4721A
A38CADC3665A1BB423C2E289E303617AF50E41143DAA4426641EBCEAB5842A8E
3017671E9FC4FAF202429A3D4A36DBDFFB17DD962E2BA78641365A9124807742
C7664B471022FF3AF2AD2AD7908BA183FF27CF5A20194DDD39FF9EC115E9E783
E33C7608F1C067A0B723E6411E05E71851D4B90DBD686BEC3C3D2138F6A9B903
432B7A88B8F5A22E0DE7B57E37CD3DCBE4E0D3DD8CB558A18507EEFC9131AD71
3D9936607AA0984FC6BDE31F6CC3E437EA5C7182CA87E341C8B9F3B0EAC79E8C
71C2C784275D0C8471A3B4D0941E30D4A21FAD542E1E016480785797C4B97D5B
A7C8BAD09B6BEFFDE07DFA6CC621183C258601C671DAA6767E35297312378218
971B88201B165BCFBDEB3B2EA761D9223BA835C06B03B711A2BFCECD8E08B97F
5639CE5EAF838B9B42D1EBEE43AA7E8A1FF7847EED8DB62BE56CC157560A9FEB
290B4676C95B51625E09FC79EEFE70AB4E3ADBBBE36D75FBCD0B85F3EC8BA79C
E85A318AACB9313554338A2EECF5B2683F6892C3EF29A9FCB59265053060057A
0E32B9499595A3BBEFF479269D90C43A3451C8D9CC6A7C351ED4B3CB78C4BCF2
5605302B5B169C892B79CD7FB48C72F6130B086B28C29083B8B567019815198B
DC2A4171EF974E9052E04EDFD7E9891A5CBE684EE0D0242027100EDF29430135
0F598730E4C8C37503C7A25BCB768B4D10DE84BA460F902B61CD8229A1C61FBC
A10EF417C17343950F65DD45A747A94A00AD7ABB4FDC25EB484678E46D3AD7A1
C4B8A4371489436B92BED1B5123DBEA097B50B76B359CFB9B7AA5ACA9E01F8E4
BD17A6BBEB5C9CC63DB74E17E0C12B85ED7E70AAC65E3ADF1381E13F47C6CF34
B34DCB0E132BF04EB0150299558145DA44A9E191A3E3FB906F6B01C1D96282F5
AB8B5479DD2E78A14E84D2F8DB48FEBED3EDF61D7D984B305562B9B1751CD7E0
B86FA0F4AFBB9FA8F10B8F62636A680F77E07B72EE2B73CD5318D29238977642
D8A1A0D3A46D9CE3D168AA7E6836BBBCE072576FA7271C198B53717FD7B69D0C
49195AC4EC91BCED167E2265FA20F98EA4BA4892734CA9E01CC535BCEF5461B3
F4776D76C44D00C0F352E12480D8C950942988E6CCFFF0F25106A3D2A35C8AB9
55F4A2287ADBE280B35CD2A5A9AD1989DAA5BDE4483D111B88A34C6A34935796
B1FA7DD9B036BE7ED7B963AC1F22EAE652CB10B4D0CD5C5DCBD2C880AC8FC7A3
818047A3EB946F01B86960F3B8F267F79787DBE8A4D489E7A4B1818B65D8EA10
23E9283847B86663FAD6A82C3048994C4FDABDB35284A08162C1B4B2391C0A1A
36A8B78CE504279E1A9C88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 67 /C put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693A774D95B3CCD3EBCE6E4D0B66D4A77C0D54F9300B1A5B26124F8B0D1F26E
0D181D08FDE3D629286E320BE4C2F2B0568943DE1A68599EAFE8F764D4A1BDFC
B3233B9397EBFE8DC4F4C411F79B1D23289EA3FAA825650D8A62496EAB5EDBBC
A637CCD068A86773A3FB74D01A7D06D59729E5AC2E58C07E573EF02AAB806B6E
A3E14F7D7C52096CC941F47D98620403DAFC454A30381E07F915846DBCB2C690
16198828BB42507B524B622F10AC8781B19CE8AA275D02388930141B4BBE3E2E
D75093D9DF32BD82288116FBB7EFC6E67AB3B2412051E7B3061BB6599DDE3A81
9C1154D1959FE6E01E639A11009281F078231838B6A6405E742F8864AAED4DA1
4AAA966ED2C03C95DED79E46D6E14D8E8B0ABF40C84FB2CB114ED1FB4A3C6AFA
A9F0B47B6380592EF59C196516B11B11AC5A9F08477F6392298023B5A14A5E63
064300ABEE976F069D22F1C70F90E912452247B0D8CDAD90C420F58A22DDA89C
EADEADB693155814AE65C4DCCB874398FD3B81ACF8C7A32310EF7FB3D041DAF2
F817F43A25680DEE80EC1EBF80358D186A64485525E5B7E1E65CA5B6870228BA
E7CFE2A938E3B02AA1F8FDABB94D9A43E3780309021010CC147418DEADAE1E7D
6C5DE1E3FAA0F1DB7E9413B9AEDCFCD2CAB945B41E205AE5402396FC97B30974
0F9B9D67EE860BCA9C2FB5D33536860379B4299C54E92B2F475A736403939B74
87028B469F22D78D52850EF7F6847E61B92FF4CC7B1E45CBEE262A50B2290AB2
A896A9AC0E4D0A5A48F78CB0507C699240A5D82151EFC608A59E29BA62A781C4
FBE70979C4696B5B0502E3BC965685FD693D681170F94C04DB612AFB93BC78A4
9186F6F7D1656FCB1F028DAF17C2541E40AB43200B3A5E57313048DB79C3BA61
2C6C84BD73AB590D8A0D621C247631CD6E7B2B4CD39D1274EB2C4D32DBF6812D
174DB7007EEFEAAA7776F7D379F3EACBD8CB7DD233FB7C791EBD19C1408DDA94
BDAACFC5148BDEA444CC203ADDEAC3AF7B78DB8E2CD857D16CBB6951CF889D5E
97A3ADA3D291FEA7BFE9B364A38975D9006B943EEF14A9BED16485094A2263D7
EC015F4180880B811C5109F001E12C274BC35BC9758B043FFF3EF870F948E7A3
18B03F32626DC1731B812CE6B9B9FE197300BF2D5CDE9EE7C527829EE3F70470
5DF8B8C0AE77EFFDC01786C04AADD450A4B44FFB068EA5063A424D638395B358
F07370F66DC919A0FCB6E3837785F34A2FE29F581DB28623BD78FB9FD862F0F6
B9E455F27070C8B9005147B0242207ACB7A94F13F29A0FBF072E784F82E8FA0C
DFEF43C008EF8E16D921F7C4924F787B243D369AA698E7884C7EA85F7594E2D8
B7498C00783DB6AF7F795432009898892E02B7103687642D02C159142CB36F9A
6B6D758C4189C19619BDF2F7F36B93F9CD3B80F2CD3E145BFFFA30788038FE98
B518BB40007C8DC663A6F72959116E21759646C2201B89F7476217FFC785B136
3C288A40C593A4940F16D31626050B60AE47F6E26B33FCE5A9BBF3DFDD211904
F78569538A23F42A100D681B2472C22B0A9DA02DA5A19DB05FB75C9EDFE2E685
56AA7917A4AAEBE0FAF1ABEC864B1A5E5BBD8AA65F957BEA12B95671B5B19EBE
C8E6B5A41223E33BDE4A682FC2F5AB720CE5BA227E2911A15320A2396A588CCA
768C0796B3BB7BE4AC04001F44BECE94B538B9D81E5817C5751BCCB613B18EED
63931A016ADDE64969E85E96CB28DDF87877D8B3633DB458B96762EF68A68CBE
DE4CDD7FCAE8F8712E1BECC8F6D176C7AC0C0F2A17EF3E47649D59B497EEDA34
2803951B2EBC8517BC6620A85716DEE4785922E33E14359A3B5942E402D883DA
1FB2DD71450A8BCC5A30FDC2B4B55602BFAB7E760AF010DAB6E38A4F4EE7C89D
E640D3DF4096CA0F3DD972F2B4A659A40589EDA53F61E1EB280F9999E6AD2F48
5A4F915B35230B69A70DE7107E5C14E92CB87B16FCFB51D3FBC0B1408C18A212
12EBD05A48C6A5A8FBD8B834FA766FEFB21F589F003C64DE0448FB4239C1A1D7
FF6376C930090DE24B5EFBF69CC2E6FC362ADC7406052D980BFFD7E25AF12229
0BB7106912B730EF04689D5B580C0D2923402EAFA412F09B5B3B049566C9EC18
5820FA793DB2CFE772415CB0DB01FADE892EEF5BE847FE138A4D58AA9F08EBDD
9F27C3248BD2583F8316E1257C02AA43A9DBEE8C4E681379A78683DAD7F237FF
B70066D9E0E753920665783B68A5DDE2F160207BF227082926F726A934F0B7C2
4B6F67A1ED6965798B95A42A13F36EACA2C59A4271F1C74986C9B92599E0EF4A
440D0D3C85514CCEAA06E41670F955C6C9844F15528B7C0358805A6F7FC1E709
7631C022C5475271B84D50582A5C14A796E6E7316C57144CBEE5F39FD9FB894F
B1DAA67F3D01C28A572CBD1C3D0A4AEAECFEB9E72A410EC6F86BEA5E26B86AE7
36D3CE7E8E305BF5706196DAFC13A04C50F34F64596D8F2CFDF3F90102DDB749
B0F930052F44A3420FE8450E203950CE1CBA995C5B8918E4E1727510E7F20D5B
C7A55DEA64AD5B6BCB958DA626FABCEFA3B767A03062FE1EC237353A5E2F163C
E1BD6485C9D289BE7F8B8A9E25F37F93E6DE44309B9E56A09B7A0B7064F066AD
44334E7BAC8B743CBEAD47738FFA233F7FBF3A4DD84BA185AD5F1692EF9B9E01
36939EF43A357CDDD8733A5D3BC0BE55E57F432E414AA86B259603DA59DF214A
8A3BA90D3FF4368FA0542F42C375164354B8E8927E8A2E22124228E16D6452E0
807F6E99AA45E46209B40787ACC4188240D33CB7854DCE1AE696B8466AC31D07
0B2A9AC96518BB1BD874F70BBAA288C4759C0BCDA581214B1243FCDF002782AB
C201C7C4C0F0F4E363716124C9963313165281177A7AD2F7B3A80B39C733A77A
9EE08403E058066C264A95480BE451AE278ED417BCA9C69AFB4D9A67CEE25B30
75BE72A2E36727454CF8589BA4A3EC644457675CE04202CEA2CFA7F29EB34371
8D24309F78E2FE839C90D23414747194766D1ACE9C719822F3FAD2BE387F0BBF
DAC5DB25F926710FDB2F12F8222319284784B3D38B6ED5EEC3BF8B218E279C76
615A140441CFB43339CAEE62006C5C2F2F17B9A36E1A80CEE6C04ECD99550FBF
0F438842E6DCE5AA4F3A7985BC0A08B7E1D26449FB7E1B9A0FC9E61F03B4C030
136E5280773924A9CF0C65558B8827D138140196FE032B51889249C6E5D18A3F
6C47482B62278070FE51DE3CD748F97F695D345C411E1AADB2670223A55DAC49
5541F21975AF876389AE417308A29283055FF2C8AB922426D225C1E4BCE50CB4
FF9533A4109B80D1FF54B31E197703096A8C662AD58BECB6806CBDA1FC0087D5
C7ED17504816E2DEBAE1CE339565B55B57A0FE1EF22769DF502162F86A6CC3C3
A1F3D499C4FF289B1098249F46B9ECC7CDF64DF4BB30B7AF5F9FDA9554899C65
A893E10946FAA39CAA97CF4EC09EA7AF7C167472102DD1E9A0E5F488C220A238
B85538895CD71B84667C27891F95D2694B559D269C12BB9A4F64FD5BE68C6F5A
C38C44503F317CBD6A50EB12279CDDF16F41716F3F8FD7B562CAA7157E435B18
18989758467EAD4E9978459FE30A07059A72E803DD883F375FE5AC470C6FAD09
B8B54BAFDB2C0F77AC5250E4D2E4D9025702B14E4598765E614FF82BCFA0688C
4303859D960CAA2A3D922387A9F04AFFF5D28E00D687E6BFAB840F31D99F3C20
2C277B3D5924626D0C57A4A9284EDBF8A70D5AC5B749597470FF3FD50C030E25
934DAFB01997E78AFC4364135104B601A0C7999EE957DD50CD5275D1652228F2
C94BD44AB27FC7BD427D3734F488F189F0246BF3ED6E4286994E5CF1386BB177
F78A31E8C687E96D7D0100FD16565B95A83CCF31C264823E4DCE5C2724574748
B28F0E7A910E4A3091710408B3388B157874CCF976E46735FD9665C23CB86DED
A8515115A2CD847D41FF19F14A93D41F235B86363F385034D7141A5623AF1EF7
48C7BB84B158E52389D6FE461BB6E9DAF3528F392901C57A2337710324B0B526
90817B7CF403038FEC7731126F6AFDB9B37206D0E0A2110081639A0F3BAE959C
FC50A7B2D984D664461D54B44CD3C84C2A441820F71795AE115D2C7C356790DD
968FB3F3DC2E2D54BF4932ABA5CB02A6E508E3F624CFECB98EFCEEAE282D16D5
9976495850B12AA729675FD4DA9D268765D99A8097CB2BEDF36E16E85F33AB28
FBBFF5E15C8A6F2EF41811B16A421D683A99AEDE5975A389F98047F274077DB0
17ECD1AA00259DB6BB1EEF4B0E4DA2C46500B5EAAB7B77E840C1ECC8741CBE4D
615121538F350BCE9D147AF55E137ABC8E236312E9F3CC1F61BE65DAC5C9E5AD
05651A283D7DFF8A4E7AD2E1702228D4EB0770629D51DBD141B81CF94B151116
A6198B304F2C5C16FA956478185CF847F96250F94BD6418662EC4861C9A2A655
B704962F4502E679CAF5CF61624B933DD41B31053ED1398E458FAB9395C0DB02
56BDE6160A3AA95599D0D5238F1A6B9CA0B449228C2FA0FA9505D9A09C8F6868
F8DD56051362AE4EBA72AEC65383255A9615FFB5B7A0E0EEF79C84B3166F7E62
422EFCB58752CD3F6F391857FDFEC9928394BC4826BFFFA075B26BD5D2377C73
57EAB502D563FECFDA81AACF787424A5FFE1A6908D0376CFE0FC402AE594E9A6
D7F1D8C1E9FFE5D4A8967A0317323417B78A8E8D870EA31F2773AA1927651E9E
75316D2045D8F34985FE8385EDC2B7CA682D403B6C2F14477CE24D014478C17B
7158AFFC641B0972B8EDCC6896CCC4B20B5FDE95BCA2CB9BE326F9AEF577A132
556EFF6FFD63CE755A71D2BD2EA3D515481AFDD71F9EE5CD470FBD7C9C8F839F
F0C121B27E319A1BF14DE8A59626C846802E45423D60AE92A42BDE7C043D5B4F
EBA1FE2EFE0CC42A6597CB1DB5F55190365CA75700F7DCA962531F19063A5322
40C3A65ADC008C9878E29BB919391D7E40C9286D095C131C9EFA46AAFB3C1308
3863FF3287CFD8C2ED910BCD64D8DE27B6C397CBF703E9CBA26E44BDA50DC5B5
6CE6D44C6944F5EA543D2B23B945461369
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (Proceeding_spie_PS.dvi)
@start /Fa 134[40 3[45 28 34 35 38 42 42 47 68 21 2[25
42 38 25 38 42 38 38 42 12[59 47 61 1[56 64 1[74 52 1[44
32 62 1[54 56 1[59 58 62 19[30 31[49 13[{}37 83.022 /CMTI10
rf /Fb 233[46 22[{}1 74.7198 /CMMI9 rf /Fc 133[34 41
41 55 41 43 30 30 30 41 43 38 43 64 21 41 23 21 43 38
23 34 43 34 43 38 8[58 79 58 1[55 43 57 1[52 60 58 70
48 60 39 28 1[60 50 52 59 55 54 58 60 5[21 38 38 38 38
38 38 38 38 38 38 1[21 26 21 60 1[30 30 20[38 2[21 2[43
43 45 11[{}70 74.7198 /CMR9 rf /Fd 134[50 1[69 3[38 39
2[48 9[44 53 24[75 16[27 48 48 48 48 48 1[48 48 48 49[{}17
83.022 /CMBX10 rf /Fe 231[65 22[23 1[{}2 83.022 /CMSY10
rf /Ff 139[30 6[73 50[23 35[50 22[{}4 83.022 /CMMI10
rf /Fg 132[33 66[33 33 33 33 33 33 33 33 33 3[19 44[{}11
58.1154 /CMR7 rf /Fh 255[52{}1 58.1154 /CMSY7 rf /Fi
132[42 37 44 44 60 44 46 32 33 33 44 46 42 46 69 23 44
25 23 46 42 25 37 46 37 46 42 3[23 42 23 51 62 62 85
62 62 60 46 61 1[57 65 62 76 52 65 43 30 62 65 54 57
63 60 59 62 3[65 2[23 42 42 42 42 42 42 42 42 42 42 42
23 28 23 2[32 32 5[42 19[69 46 46 48 11[{}78 83.022 /CMR10
rf /Fj 167[79 2[80 73 58 78 1[71 79 82 99 63 2[40 2[66
69 80 76 74 79 12[52 52 52 52 2[29 46[{}22 90.9091 /CMBX10
rf /Fk 155[39 35 35 39 52[24 44[{}5 74.7198 /CMTI9 rf
/Fl 133[43 51 2[51 54 38 38 38 51 1[49 54 81 27 1[30
27 1[49 1[43 54 43 54 49 10[73 73 70 3[66 76 73 89 61
1[50 35 1[77 64 66 75 70 69 73 18[27 1[27 24[49 2[27
2[54 54 12[{}43 99.6264 /CMR12 rf /Fm 137[79 83 58 59
61 2[75 83 125 42 2[42 83 1[46 68 83 66 1[73 14[111 14[108
53[83 13[{}19 132.835 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 176 125 a Fm(Confo)t(cal)49 b(Raman)g
(thermometer)h(for)f(micro\015uidic)f(devices)72 360
y Fl(Guillermo)32 b(D.)h(Brinatti)f(V)-8 b(azquez)1382
325 y Fk(a,b)1487 360 y Fl(,)32 b(Oscar)h(E.)g(Mart)-11
b(\023)-38 b(\020nez)2330 325 y Fk(a,b)2467 360 y Fl(and)32
b(Juan)h(Mart)-11 b(\023)-38 b(\020n)33 b(Cabaleiro)3630
325 y Fk(a,c,d)409 491 y(a)486 526 y Fl(Consejo)g(Nacional)g(de)g(In)m
(v)m(estigaciones)j(Cien)m(t)-11 b(\023)-38 b(\020\014cas)34
b(y)f(T)m(\023)-46 b(ecnicas,)35 b(Argen)m(tina.)-7 608
y Fk(b)66 642 y Fl(Lab)s(oratorio)c(de)i(F)-8 b(ot\023)-49
b(onica,)32 b(F)-8 b(acultad)32 b(de)i(Ingenier)-11 b(\023)-38
b(\020a,)33 b(Univ)m(ersidad)i(de)e(Buenos)g(Aires,)h(Argen)m(tina.)85
724 y Fk(c)158 758 y Fl(Lab)s(oratorio)d(de)i(Fluido)s(din\023)-49
b(amica,)33 b(F)-8 b(acultad)33 b(de)g(Ingenier)-11 b(\023)-38
b(\020a,)33 b(Univ)m(ersidad)i(de)e(Buenos)h(Aires,)1725
874 y(Argen)m(tina.)148 956 y Fk(d)224 991 y Fl(Lab)s(oratorio)d(de)j
(Micro)f(y)g(Nano\015u)-11 b(\023)-38 b(\020dica)33 b(y)g(Plasma,)g
(UdeMM,)h(Buenos)g(Aires,)g(Argen)m(tina.)1657 1298 y
Fj(ABSTRA)m(CT)-75 1441 y Fi(A)e(confo)r(cal)g(Raman)f(microscop)n(y)f
(tec)n(hnique)i(has)g(b)r(een)g(designed)g(and)g(demonstrated)f(that)h
(measures)f(the)h(temp)r(erature)-75 1540 y(rise)21 b(and)h(pro\014le)f
(in)h(micro\015uidic)f(devices.)35 b(The)22 b(system)f(is)h(based)f(in)
h(the)h(deformation)e(of)g(the)i(w)n(ater)d(Raman)i(p)r(eak)f(assigned)
-75 1640 y(to)34 b(the)g(O-H)f(stretc)n(hing)g(at)g(3400)f(cm)1175
1610 y Fh(\000)p Fg(1)1298 1640 y Fi(that)i(o)r(ccurs)f(with)h(temp)r
(erature)f(k)n(eeping)g(an)g(isosb)r(ectic)h(p)r(oin)n(t)f(at)h(3425)e
(cm)3863 1610 y Fh(\000)p Fg(1)3952 1640 y Fi(.)-75 1740
y(Hence)f(t)n(w)n(o)f(photon)h(coun)n(ting)g(detectors)f(that)h(sample)
g(the)g(Raman)g(emission)f(at)h(eac)n(h)f(side)h(of)g(the)g(isosb)r
(ectic)g(p)r(oin)n(t)g(are)-75 1839 y(used)f(to)g(monitor)f(the)i(w)n
(ater)e(temp)r(erature.)44 b(Using)30 b(a)g(confo)r(cal)f(detection)h
(sc)n(heme)g(the)h(spatial)e(resolution)g(of)h(a)g(confo)r(cal)-75
1939 y(microscop)r(e)c(can)h(b)r(e)g(obtained)g(to)h(map)f(the)g(temp)r
(erature)g(pro\014le)g(within)h(small)f(micro\015uidic)f(structure)h
(in)h(a)e(nonin)n(v)-5 b(asiv)n(e)-75 2039 y(manner.)34
b(The)19 b(di\013eren)n(tial)h(signal)f(b)r(et)n(w)n(een)h(the)g(t)n(w)
n(o)f(c)n(hannels)g(normalized)f(b)n(y)i(the)g(added)f(signals)g(has)g
(a)h(linear)f(dep)r(endence)-75 2138 y(with)30 b(temp)r(erature)g(that)
g(yields)g(a)f(sensitivit)n(y)h(of)f(0.8)h(K)f(using)h(a)f(1s)g(in)n
(tegration)g(time)h(and)g(a)f(coun)n(t)h(rate)f(p)r(er)h(c)n(hannel)f
(of)-75 2238 y(1)p Ff(:)p Fi(5)20 b Fe(\001)g Fi(10)179
2208 y Fg(5)246 2238 y Fi(.)46 b(The)31 b(pump)g(laser)e(used)i(had)f
(a)g(405)g(nm)h(w)n(a)n(v)n(elength)e(and)h(20)g(mW)h(a)n(v)n(erage)d
(p)r(o)n(w)n(er.)44 b(The)31 b(confo)r(cal)f(collection)-75
2338 y(w)n(as)d(p)r(erformed)g(b)n(y)g(a)h(single)f(mo)r(de)h(optical)f
(\014b)r(er)h(and)f(the)h(explored)f(v)n(olume)g(w)n(as)g(of)h(ab)r
(out)f(40)g Ff(\026)p Fi(m)3233 2307 y Fg(3)3298 2338
y Fi(.)38 b(The)27 b(temp)r(erature)-75 2437 y(rise)h(in)g
(electrotro\015uidic)f(devices)h(w)n(as)f(studied)i(sho)n(wing)e(that)h
(the)h(temp)r(erature)f(increase)f(dep)r(ended)i(on)e(the)i(p)r(o)n(w)n
(er)e(used)-75 2537 y(to)d(mo)n(v)n(e)f(the)i(sample)e(along)g(the)i(c)
n(hannel)f(\(electro)r(osmotic)f(\015o)n(w\))h(and)g(the)g(particular)f
(design)h(and)g(structure)g(of)g(the)g(device)-75 2636
y(that)i(determines)g(the)h(heat)f(dissipation)g(mec)n(hanism.)35
b(The)27 b(sc)n(heme)e(pro)n(v)n(ed)g(useful)h(to)g(ev)-5
b(aluate)26 b(and)g(prev)n(en)n(t)f(detrimen)n(tal)-75
2736 y(temp)r(erature)j(e\013ects)g(with)h(the)f(adv)-5
b(an)n(tage)27 b(that)h(no)g(sp)r(eci\014c)g(temp)r(erature)g(sensitiv)
n(e)g(particle)f(needs)h(to)g(b)r(e)h(added)f(to)g(the)-75
2836 y(\015uid,)g(and)g(has)f(the)h(additional)f(virtue)g(of)h(allo)n
(wing)e(spatial)h(scans)f(in)i(3D.)-75 2989 y Fd(Keyw)m(ords:)36
b Fi(Micro\015uidic)28 b(devices,)f(Joule)g(Heating,)g(T)-7
b(emp)r(erature,)27 b(Raman)g(thermometer)1465 3231 y
Fj(1.)32 b(INTR)m(ODUCTION)-75 3374 y Fi(Electro)r(osmotic)i(pumping)h
(and)h(electrophoresis)d(are)h(the)i(main)g(strategies)e(to)h(mo)n(v)n
(e)f(liquid)i(or)f(sp)r(ecies)g(in)g(micro\015uidic)-75
3474 y(devices.)205 3444 y Fg(1,)9 b(2)337 3474 y Fi(In)23
b(an)n(y)e(of)h(the)h(latter,)g(an)f(electric)f(curren)n(t)h(is)g
(passed)f(through)h(the)g(liquid,)i(resulting)e(in)g(Joule)g(heat)g
(dissipation)-75 3573 y(on)h(the)g(medium.)36 b(This)23
b(will)g(cause)f(a)h(temp)r(erature)f(rise)h(on)f(the)i(device)e(that)i
(will)f(dep)r(end)h(on)e(its)h(dissipation)g(e\016ciency)-7
b(.)35 b(As)-75 3673 y(these)23 b(tec)n(hniques)g(are)g(often)g(used)h
(in)f(biological)f(applications)1953 3643 y Fg(3)2013
3673 y Fi(an)h(undesired)g(temp)r(erature)g(rise)f(could)h(c)n(hange)f
(drastically)-75 3773 y(the)34 b(exp)r(erimen)n(t)g(ev)n(olution)g(or)f
(ev)n(en)g(mak)n(e)g(it)i(fail.)56 b(Also,)36 b(as)d(the)h(electro)r
(osmotic)f(and)h(electrophoretic)f(mobilit)n(y)g(are)g(a)-75
3872 y(function)g(of)e(temp)r(erature)799 3842 y Fg(4)868
3872 y Fi(a)h(p)r(o)r(or)f(thermal)h(con)n(trol)e(could)i(lead)g(to)g
(an)f(unexp)r(ected)i(pumping)f(b)r(eha)n(vior.)49 b(This)32
b(is)f(wh)n(y)-75 3972 y(temp)r(erature)36 b(monitoring)g(and)g
(dissipation)g(e\016ciency)g(c)n(haracterization)e(are)i(of)g(great)f
(imp)r(ortance)h(in)h(the)g(\014eld.)64 b(The)-75 4071
y(readers)35 b(are)g(referred)g(to)i(the)g(reviews)e(b)n(y)h(Xuan)1569
4041 y Fg(5)1643 4071 y Fi(and)g(Cetin)h(and)f(Li)2293
4041 y Fg(6)2367 4071 y Fi(for)g(a)g(deep)r(er)g(description)g(of)g
(joule)h(heating)f(in)-75 4171 y(electrokinetic)27 b(\015o)n(ws.)50
4306 y(With)37 b(this)g(purp)r(ose)f(di\013eren)n(t)h(tec)n(hniques)f
(w)n(ere)g(in)n(tro)r(duced)h(to)f(measure)g(temp)r(erature)g(inside)h
(micro)r(c)n(hannels.)63 b(A)-75 4406 y(common)33 b(approac)n(h)e(is)i
(to)g(mak)n(e)f(use)h(of)g(thermal)g(prop)r(erties)f(in)i(\015uorescen)
n(t)e(dy)n(es)g(to)h(indirectly)g(measure)f(temp)r(erature)-75
4506 y(from)22 b(\015uorescence)f(imaging.)878 4476 y
Fg(4,)9 b(7{)o(10)1110 4506 y Fi(This)22 b(in)n(v)n(olv)n(es)f(in)n
(tro)r(ducing)h(an)g(additional)g(comp)r(ound)h(in)g(the)g(\015o)n(w)e
(that)i(could)g(mo)r(dify)-75 4605 y(c)n(hemical)39 b(reactions)g(o)r
(ccurring)g(inside)h(the)g(micro)r(c)n(hannel,)i(making)e(the)g(metho)r
(d)h(unsuitable)f(for)f(online)h(monitoring.)-75 4705
y(Moreo)n(v)n(er,)19 b(the)h(measuremen)n(t)f(\\in)n(tegrates")f(the)i
(temp)r(erature)g(in)g(the)g(c)n(hannel)g(heigh)n(t,)h(not)f(allo)n
(wing)e(for)i(the)g(measuremen)n(t)-75 4805 y(of)28 b(temp)r(erature)f
(pro\014les)f(normal)h(to)g(the)h(c)n(hannel)g(b)r(ottom.)p
-75 4874 1620 4 v 63 4951 a Fc(F)-6 b(urther)25 b(author)h
(information:)36 b(\(Send)24 b(corresp)r(ondence)j(to)e(G.)i(D.)e
(Brinatti)i(V)-6 b(azquez\))-75 5043 y(G.)26 b(D.)g(Brinatti)g(V)-6
b(azquez:)34 b(E-mail:)h(guillermobrinatti@gmail.com,)30
b(T)-6 b(elephone:)35 b(+54)26 b(11)g(5285)h(0828)-75
5134 y(O.)f(E.)g(Mart)-9 b(\023)-30 b(\020nez:)36 b(E-mail:)g
(omartinez@\014.uba.ar,)27 b(T)-6 b(elephone:)35 b(+54)26
b(11)g(5285)h(0828)-75 5225 y(J.)f(M.)h(Cabaleiro:)36
b(Email:)g(jmcabaleiro@gmail.com,)30 b(Thelephone:)35
b(+54)26 b(11)h(5285)g(0467)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 50 83 a Fi(W)-7 b(alrafen)28 b(et)h(al)567
53 y Fg(11)665 83 y Fi(disco)n(v)n(ered)e(that)i(the)g(infrared)f(sp)r
(ectrum)h(of)g(w)n(ater)f(sho)n(ws)f(temp)r(erature)h(dep)r(enden)n(t)i
(qualities)e(and)-75 183 y(measured)h(the)h(existence)f(of)h(an)f
(isosb)r(estic)g(p)r(oin)n(t)h(around)f(3425)f(cm)2186
153 y Fh(\000)p Fg(1)2275 183 y Fi(.)43 b(This)30 b(molecular)e(prop)r
(ert)n(y)h(can)g(b)r(e)h(sensed)f(using)-75 282 y(Raman)19
b(Scattering)g(to)g(get)h(a)f(temp)r(erature)g(dep)r(enden)n(t)h
(signal)f(that)g(is)h(in)n(trinsic)f(of)h(w)n(ater.)33
b(This)19 b(metho)r(d)h(w)n(as)f(prop)r(osed)f(and)-75
382 y(pro)n(v)n(ed)30 b(useful)h(in)h(micro)r(c)n(hannels)1055
352 y Fg(12{)o(14)1254 382 y Fi(where)f(an)g(epi-illumination)g
(microscop)r(e)f(w)n(as)h(adapted)g(to)g(measure)f(the)i(Raman)-75
482 y(sp)r(ectrum)f(b)n(y)f(exciting)g(the)h(w)n(ater)e(with)i(a)f
(visible)g(laser.)45 b(T)-7 b(emp)r(erature)29 b(is)i(then)g(reco)n(v)n
(ered)d(b)n(y)i(analizing)f(these)i(sp)r(ectra.)-75 581
y(As)d(w)n(ater)e(absorption)g(is)i(lo)n(w)f(in)h(visible)f(w)n(a)n(v)n
(elengh)n(ts)1708 551 y Fg(15)1804 581 y Fi(this)h(metho)r(d)g(pro)n(v)
n(ed)e(to)h(b)r(e)h(non-in)n(v)-5 b(asiv)n(e.)50 717
y(In)35 b(this)g(w)n(ork)f(w)n(e)g(prop)r(ose)g(a)h(device)f(whic)n(h)h
(impro)n(v)n(es)f(from)g(previous)g(attempts)h(b)n(y)g(impro)n(ving)f
(spatial)g(resolution)-75 816 y(using)k(a)g(confo)r(cal)g(collection)f
(sc)n(heme)h(and)g(b)n(y)g(increasing)f(the)i(acquisition)f(sp)r(eed)g
(b)n(y)g(splitting)h(the)g(sp)r(ectrum)f(in)h(the)-75
916 y(isosb)r(estic)i(p)r(oin)n(t)g(and)g(sending)g(eac)n(h)f(p)r
(ortion)h(to)g(an)f(indep)r(enden)n(t)i(detector.)77
b(This)41 b(results)g(in)g(a)g(device)g(capable)f(of)-75
1015 y(mapping)25 b(temp)r(erature)g(in)h(three)f(dimensions,)g(allo)n
(wing)f(to)i(study)f(the)h(thermal)f(prop)r(erties)f(of)i(the)f(\015o)n
(w)g(and)g(the)h(di\013eren)n(t)-75 1115 y(surfaces)k(of)h(the)g
(micro\015uidic)g(device.)46 b(Also,)32 b(a)e(correlation)f(b)r(et)n(w)
n(een)i(the)g(temp)r(erature)g(pro\014le)f(and)h(the)g(t)n(yp)r(e)g(of)
g(\015o)n(w)f(is)-75 1215 y(sho)n(wn.)40 b(Additionally)-7
b(,)29 b(a)f(dark)g(\014eld)h(illumination)g(sc)n(heme)g(is)f(used)h
(to)g(collect)f(scattering)g(or)g(\015uorescence)f(images)h(of)h(the)
-75 1314 y(sample)e(at)h(the)g(same)f(time)h(temp)r(erature)f
(measuremen)n(ts)f(tak)n(e)h(place.)1529 1539 y Fj(2.)32
b(EXPERIMENT)-75 1682 y Fi(The)d(device)f(prop)r(osed)g(to)g(measure)g
(the)h(temp)r(erature)f(inside)h(micro\015uidic)f(devices)g(is)h
(depicted)g(in)g(\014gure)f(1.)39 b(A)29 b(150)e(mW)-75
1781 y(laser)i(dio)r(de)h(emitting)g(at)g(405)f(nm)h(is)g(used)g(as)f
(excitation)h(b)r(eam.)44 b(The)30 b(ligh)n(t)g(is)g(coupled)g(to)g(a)f
(single)h(mo)r(de)g(\(SM\))h(optical)-75 1881 y(\014b)r(er)k(\(using)g
(aspheric)e(lenses)i(L0)f(and)g(L1\))h(acting)f(as)g(spatial)g
(\014lter.)59 b(The)35 b(ligh)n(t)f(exiting)h(the)g(\014b)r(er)g(is)g
(collimated)f(b)n(y)g(a)-75 1980 y(triplet)c(lens)g(\(L2\))g(and)g(sen)
n(t)g(in)n(to)g(the)g(microscop)r(e)f(b)n(y)h(re\015ecting)f(in)h(a)g
(long)f(pass)g(dic)n(hroic)g(mirror)g(\(420)g(LP\))g(cen)n(tered)h(in)
-75 2080 y(420)d(nm.)38 b(A)28 b(short)f(pass)h(\014lter)g(\(450)e
(SP\))i(is)g(used)g(to)g(blo)r(c)n(k)f(an)n(y)h(ligh)n(t)f(in)i(the)f
(detection)g(band.)38 b(The)28 b(ligh)n(t)g(then)g(re\015ects)g(in)-75
2180 y(a)h(second)f(long)g(pass)g(dic)n(hroic)g(mirror)f(\(505)h(LP\))h
(cen)n(tered)f(in)i(505)d(nm)i(and)g(then)h(is)f(fo)r(cused)g(in)g(the)
g(sample)g(using)f(a)h(40X)-75 2279 y(0.95)d(NA)i(microscop)r(e)f(ob)5
b(jectiv)n(e.)36 b(The)28 b(total)f(p)r(o)n(w)n(er)f(in)i(the)g(sample)
f(at)h(405)e(nm)i(is)f(around)g(25)g(mW.)50 2415 y(The)36
b(Raman)f(scattering)g(\(around)h(470)f(nm\))h(collected)g(b)n(y)g(the)
h(same)e(ob)5 b(jectiv)n(e)35 b(is)h(separated)f(from)h(the)h
(excitation)-75 2514 y(path)32 b(as)e(it)i(is)f(transmitted)h(in)g(the)
g(\014rst)f(dic)n(hroic)f(mirror.)47 b(The)31 b(ligh)n(t)h(is)f(then)h
(couplet)f(to)h(a)f(Multi)h(mo)r(de)f(\(MM\))i(optical)-75
2614 y(\014b)r(er)26 b(\(10)g Ff(\026m)g Fi(core)f(diameter\))h(using)g
(a)g(10X)f(0.28)g(NA)i(microscop)r(e)e(ob)5 b(jectiv)n(e.)36
b(This)26 b(step)g(giv)n(es)f(the)i(microscop)r(e)e(confo)r(cal)-75
2714 y(resolution)j(as)g(the)h(ligh)n(t)g(coming)f(from)g(outside)h
(the)g(confo)r(cal)f(v)n(olume)h(will)g(ha)n(v)n(e)e(a)i(p)r(o)r(or)f
(coupling)g(e\016ciency)-7 b(.)41 b(The)29 b(other)-75
2813 y(end)h(of)f(the)h(optical)g(\014b)r(er)f(is)h(sen)n(t)f(to)h(an)f
(ligh)n(t)h(tigh)n(t)f(enclosure)g(con)n(taining)f(the)j(detection)e
(part)g(of)h(the)g(setup,)h(where)e(the)-75 2913 y(ligh)n(t)d(is)h
(collimated)f(and)h(directed)f(to)h(a)f(300)g(lines/mm)g(di\013raction)
g(grating)g(\(DG\).)i(An)f(ac)n(hromatic)e(lens)h(is)h(used)f(to)h(fo)r
(cus)-75 3012 y(the)j(di\013racted)g(ligh)n(t)g(in)n(to)g(a)g(D)g(shap)
r(ed)g(mirror)f(\(DM\))i(moun)n(ted)f(in)g(a)g(translation)f(stage)g
(used)h(to)g(split)h(the)f(sp)r(ectrum)g(at)-75 3112
y(the)f(isosb)r(estic)f(p)r(oin)n(t.)40 b(Eac)n(h)28
b(new)g(ligh)n(t)h(path)f(is)h(then)g(directed)f(to)h(a)f(indep)r
(enden)n(t)h(photon)g(coun)n(ter)f(\(PMT)g(A)h(and)f(PMT)-75
3212 y(B\))33 b(for)g(detection.)54 b(A)34 b(lens)f(\(LA)h(and)f(LB\))g
(and)g(a)g(longpass)f(\014lter)h(\(F)-9 b(A)34 b(and)f(FB\))g(are)g
(used)g(b)r(efore)g(the)g(detector)g(to)g(get)-75 3311
y(an)c(image)g(of)g(the)h(plane)f(of)g(DM)h(and)f(to)h(remo)n(v)n(e)d
(ligh)n(t)i(at)h(the)f(laser)f(w)n(a)n(v)n(elengh)n(t.)41
b(The)29 b(v)n(oltage)f(pulses)h(coming)g(from)g(the)-75
3411 y(detectors)e(are)f(registered)h(b)n(y)g(a)g(on)g(b)r(oard,)g(t)n
(w)n(o)g(c)n(hannel,)g(32)g(bit)h(coun)n(ter)f(in)h(a)f(PC.)50
3546 y(The)j(sample)g(is)h(also)e(illuminated)j(in)f(a)f(dark)f
(\014eld)i(sc)n(heme)f(using)h(a)f(10)g(mW)h(laser)e(b)r(eam)i
(emitting)g(at)f(520)g(nm.)46 b(The)-75 3646 y(scattering)35
b(or)h(\015uorescence)f(pro)r(duced)i(b)n(y)f(this)h(b)r(eam)f(is)h
(then)g(separated)e(from)h(the)h(pump)h(and)e(signal)g(b)r(eam)g(as)g
(it)h(is)-75 3746 y(transmitted)23 b(trough)f(505)g(LP)-7
b(.)23 b(A)g(100)f(mm)i(tub)r(e)f(lens)h(is)e(used)i(to)f(get)f(a)h
(image)f(of)i(the)f(sample)g(on)g(a)f(CMOS)h(camera.)34
b(This)23 b(is)-75 3845 y(used)h(to)g(set)f(the)i(sample)e(in)h(place)g
(and)f(to)h(trac)n(k)f(particles)g(incorp)r(orated)f(in)i(the)g(liquid)
g(in)h(order)d(to)i(measure)f(\015o)n(w)g(v)n(elo)r(cit)n(y)-7
b(.)-75 3945 y(This)22 b(can)h(b)r(e)f(used)h(to)f(study)h(the)g(\015o)
n(w)f(inside)g(the)h(micro)r(c)n(hannel)e(without)i(in)n(terfering)f
(with)h(the)g(signal)e(path)i(if)g(lo)n(w)f(particle)-75
4044 y(concen)n(trations)31 b(are)h(used)h(to)f(a)n(v)n(oid)g
(\015uorescence)f(signals)h(excited)h(b)n(y)f(the)h(pump)h(b)r(eam)f
(that)g(could)f(la)n(y)g(in)h(the)h(Raman)-75 4144 y(sp)r(ectrum.)42
b(As)29 b(the)h(confo)r(cal)e(v)n(olume)h(is)g(small,)g(the)h
(probabilit)n(y)e(of)h(suc)n(h)g(ev)n(en)n(t)f(is)i(also)e(small)g(if)i
(lo)n(w)f(concen)n(trations)e(are)-75 4244 y(used.)50
4379 y(As)k(the)g(collection)g(is)g(confo)r(cal)g(a)g(three)g
(dimensional)f(c)n(haracterization)f(of)i(the)h(sample)f(is)g(p)r
(ossible)g(with)g(the)h(prop)r(er)-75 4479 y(scanning)24
b(mec)n(hanism.)36 b(In)25 b(this)g(application)g(w)n(e)f(c)n(ho)r(ose)
g(to)h(use)g(a)f(three)h(axis)f(motorized)g(stage)g(to)h(mo)n(v)n(e)f
(the)h(sample)g(in)g(all)-75 4578 y(dimensions.)36 b(A)28
b(galv)n(o)d(mirror)g(design)i(is)g(also)f(p)r(ossible)g(in)h
(applications)g(where)f(sp)r(eed)h(is)g(required.)36
b(Tw)n(o)26 b(angular)f(degrees)-75 4678 y(of)j(freedom)g(are)g(used)g
(in)g(the)h(sample)f(holder)g(in)g(order)f(to)h(set)h(the)g(detection)f
(plane)g(parallel)f(to)h(the)h(micro)r(c)n(hannels.)38
b(The)-75 4778 y(axial)33 b(resolution)f(ac)n(hiev)n(ed)g(with)i(the)g
(setup)g(is)g(of)f(9)g Ff(\026)p Fi(m)h(resulting)f(in)h(a)f
(collection)g(v)n(olume)g(of)g(around)g(40)f Ff(\026)p
Fi(m)3667 4747 y Fg(3)3738 4778 y Fi(with)i(a)-75 4877
y(photon)27 b(coun)n(t)h(rate)f(of)g(1)p Ff(:)p Fi(5)18
b Fe(\001)g Fi(10)950 4847 y Fg(5)1014 4877 y Fi(s)1047
4847 y Fh(\000)p Fg(1)1164 4877 y Fi(on)27 b(eac)n(h)g(detector.)50
5013 y(Microfuidics)36 b(c)n(hips)g(w)n(ere)f(made)i(b)n(y)f(p)r
(olydimeth)n(ylsilo)n(xane)f(\(PDMS\))i(replication)f(of)g(a)g
(Silicon-SU8)g(master.)63 b(The)-75 5112 y(PDMS)27 b(micro)r(c)n
(hannels)e(pro)r(duced)h(w)n(ere)f(sealed)h(with)h(150)e
Ff(\026)p Fi(m)i(thic)n(k)f(glass)f(co)n(v)n(erslips.)34
b(T)-7 b(o)26 b(impro)n(v)n(e)f(the)i(sup)r(er\014cial)f(b)r(ond)-75
5212 y(b)r(et)n(w)n(een)g(glass)e(and)h(PDMS,)h(b)r(oth)g(parts)f(w)n
(ere)f(exp)r(osed)i(to)f(micro)n(w)n(a)n(v)n(e)e(air)i(plasma)f(and)i
(then)g(gen)n(tly)f(held)h(together.)35 b(The)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -75 2495 a @beginspecial 0 @llx
0 @lly 745 @urx 459 @ury 4860 @rwi @setspecial
%%BeginDocument: figs/fig1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig1.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Guillermo
%%CreationDate: 12/27/2018
%%BoundingBox: 0 0 745 459
%%HiResBoundingBox: 0 0 744.6050 458.2330
%%CropBox: 0 0 744.6050 458.2330
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 80 8
%%BeginData: 9040 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDA6FFA8FD7EFF52527D7D5227A8FD70FFA8FD08FFA87DA87D7D7D
%FD0BFFA8AE83A8A8FD61FF7D7DFD06FF7DA8A87DA8FFFFCBFD09FFA8AE83
%AFFD30FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD22FFA8A8A87DFD04
%FFF852272727522752A8FD05FFAEAE83A8AEFD31FFA8FD11FFA8FD22FFA8
%A87DFD07FFA8FFCBFD07FF597D83AFFFA8A8FD32FFA8A8FFFFFFA8FD07FF
%A8FFFFFFA8FD20FF7DFD04A8FFA8FFA8FFA8A8A8A9A8FFCBFF8483835227
%522727F827A8FD2FFFA8FF52272727F87D2727525227522752277DFFA8A8
%FD1EFFA8A8A8FFA8FFA8FFA8FFA8FFA2A2A8FFA8A88384A8FFA8A8A8FFA8
%FD35FFA8A8FFFFA8FD08FFA8A8FFA8FD22FFA8FD08FFCB77FFA884A8FD05
%FFA8FD35FFA8FFFF7D527D527D7D52277D527D7D52A8FFFFFFA8FD21FFFD
%08A8AE7D59588384FD07A8FD38FF7D7D52A8A8FD087DFFFFFFA8FD22FF7D
%A87DA87DA87D5958837DA87DA87DA87DA87DA87DFD35FFA8A8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFD04A8FD27FFA8AEA8FFA9A2FD48FFA8FD27FFA827
%A8FD04FFA88483AEAEFFA8A8A2A8A8FD47FFA8FD23FFA87D7DF852A8FFFF
%AE83AEA8FD4FFFA8FD23FFA827527DFFA87DF85884AEFD06FFA8A87DA8A8
%FD3DFFFD05A8FFFFFFA8FFA8A8A8FFA8FFA8FFA8A8A8FD1CFF52272783AF
%FD08FFA85252A8FD40FF7D7D7D527D7D7D52FD047DA8527D7DFFA8FD19FF
%A85258052D7DFD0BFFA8A87DA8A8FF5227A8FD39FFA8FFA8A8FD077DA8FD
%047D527DFFFFA8FD18FF7D2783A8FD0CFFA8A87D5252FFFFA87DA8FD3AFF
%A8FFFFFFA8FD0DFFA8FD29FFA8FD04FFA8FD3FFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8A8FFA8FD2AFFA8FD05FFA8FD7AFFA8A277A2A8FD2FFFA8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD05A8FFA8FFA8A8
%A8FD28FF7E9CA2FD30FF7D7DA87DA87DA87DA87DA87DA87DA87DA87D7D7D
%A87DA87DA87DA87DA87DA87DA87DA87DA852FD27FFA277A8FD30FF7DFD11
%FFA8FD0BFFA8FD06FF7DFD27FF7E77A2FD07FFA8FFA8FFA8FFA8FFA8FFFF
%A852FD1BFFA8A8FD0EFFA8FD05FFA8FD05FFA8FFA8FFA8FD05FF7DFD24FF
%A8FFFFA24DA8FD06FFA8A8FFFFA8FFFFFFA8FFFFFFA8277DFD1BFF7DFD0F
%FF527D7DA87DA8A8FFFFFFA827F8275252A8FD04FF7DFD24FFA87DFFA29C
%A2FFFFFF5AAEFFFFA8FD07FFA8FFFFFFA8FD0BFFA8FD0FFFA8A8FD0EFFA8
%52F8527D27A8FD05FF7D7D7DFF7DFD05FF7DFD25FFA87DA277A2A8FFA87E
%83FFFD05A8FFA8FFAEA8A8FFA8A8A8FD09FFA8FFA8FF52272752A8FD08FF
%A87DFD0EFFA8A8FFA8FFA8A8A8FFFFFFA8FD05FFA8FD04FF7DFD26FFA87D
%A277A278A29BA29CA277A2787D83AE83AEFD05838484AEA8AEA8FFAEFFA8
%FD04FFA87DA8A8FD09FFA8A8FD10FFA95A84FD07FFA8A95AA8A8FD05FF7D
%FD27FFA87D7877A2777877A2777777A2777DFD0483585F59835984FD0583
%8483A8FFFFA8A8527D7D7DA8FD08FFA87DFD0AFFA82727FD04A83584A8FF
%A8FFFFFFA8FF7E365ACFA8A82727A87DFD25FF7D7DA8A87DA9A8CBA8CBA8
%CBA2CBA2A277A2A8FFA8AEA8AE84A8AEFFAEFD05FFA8FFFFFFA87D7D7D52
%FD09FFA8A8FD0BFFA87DFFA8FF7E5A7EFFA8FFFFFFA8FFCF843584A8FFA8
%A87DFF7DFD24FFA827F8FFFFA87DFD05FFAEFFFFCB779CA2FD06FFA8A8FD
%08FFFD04A8FD0FFF7DFD10FFA90D85FD08FF5A365AFD06FF7DFD2AFFA8A8
%FD05FFA8FFCBA277CBFFFFA8FD1FFFA8A8FD0CFFA8A87DFF845A5AFD07FF
%A95A365AA9FFA8A8FFFF7DFD30FFFD04A87777A2FFA8A8A8FD1FFF7DFD0C
%FF7DF852A8843584A8FD06FF84365A35A9767D27FFFF7DFD33FFA8A277CB
%FFFF7D52A8FD1DFFA8A8FD10FF845A7EFD07FFA85A5A5AA8FD05FF7DFD33
%FFCB7777A2FFFFFF27277DFD1CFFA87DFD10FFAF36A9FD07FFAF365A5AFF
%CFFD04FF7DFD33FFCBA277CBFD04FF7D7DA8FD1BFFA8A8FD11FF84AFFD07
%FFA9605A60AFA8A8FFFFFF7DFD34FF7778A2FD05FF7D52A8FD1AFFA87DFD
%0BFFA8FD05FF84FD08FFAF5A5A5AA87DFD04FF7DFD2BFFA852A8FD05FFA8
%A277A884FD05FFA8FD1BFFA8A8FD0AFF7D27F87DFFA87DA9A9857E855A84
%5A855A5A3684A8FD05FF7DFD1AFFA8FFFFFFA8FD0DFF277DFD05FFCB7171
%A284A8FD21FF7DFD0AFFA87D527DA87DA884FFA9AF84845A5A355A367E7D
%FD06FF7DFD1AFFA827275252527D7DFD0AFF52A8FD05FFA8A277CBFD22FF
%A8A8FD0EFFA8CFAF85FD06FFA9AF8484A87D2752A8FFFFFF7DFD1AFFA87D
%52A87D527DA8FD0AFF52A8FD05FFCB779CA2FD23FF7DFD0CFFA87DA8FFAF
%36FD08FFA8A1FF7D7D7DA8FFFFFF7DFD1BFFCFCDCECFCDCFFD0BFF527DFD
%05FFCBA277CBFD22FFA8A8FD10FF845AA8FD06FFA87DFD09FF7DFD1AFFA7
%CDCAFFFFCFA5CFFD0AFF277DFD04FFA8CB7777A2FFA8FD20FFA87DFD0FFF
%A87E2F84A8A87DA8FFFFA8FD0AFF7DFD1AFFCECEFD04FFCFCEFD0FFFA8FF
%A8A277A8FFFFA8FD1FFFA8A8FD0EFFA8AF5A5A7EFF7D527DFD0DFF7DFFFF
%A8FFFFFFA8FFFFA85252A8FFA8FD0BFFA6CFFD04FFCFCECFFD09FFA8FFFF
%FFA8FFFFFF7778A2FFA8A8A8FD1EFFA87DFD0FFFA85A3684FFFFA8FD0EFF
%7DFF2752527D52277DFFA87D7DFD0BFFA8FFFFCEC9FD04FFCECEFD05FFA8
%FD0BFFA8A277A8A8FFA8FD1FFFAFA1CACFCACFCAFD0BFF5A5A84FD11FF7D
%A87D7D7D52A87DFFFFFFA8FFA8A877A27EA2A2A27EA277A8FFFFCFCDA7FF
%FFCEA6CFFD04FFA2A27DA8A2A87DA8A2A87DA8A2A277787EFFFFFFA8FD1D
%FFCAC9A0CFCACFC9C9A1FD09FFAF5A3585FD11FF7D277D522752A87D52FD
%04FFA8779C77A277A277A2777777CBCFCFC8CDCDCEA5CECFCFA8A9787877
%A2FD0577A2779C77A277A253AFFFFFA8FD1EFFC9A7A8FD06FFC9FD09FF5A
%5A84FD11FF7D52A87D7D7DA87D7DA8FFFD04A877A27DA27EA27DA277A8CA
%FFCFFFCFFFCFFFCFFFCFFFA8CB7778779C777E777E77A277A2777E535A84
%FD20FFC9CAFF7DFD06FFCFC9FD08FF5A3685FD11FF7DFD0DFFA8FD19FFA8
%FFCBFFCBA8A8FFFFCBA8FF845A36A9FFFFA8FD1CFFCFC9FFA8A8FD06FFCF
%CFFD08FF5A5A84FD11FF7DFD0EFFA8FD07FFA8FD0FFFA8A8FD04FFA8FFFF
%FFA8FFA8AF5A5A84FFFFA8A8FD1BFFA1CFFFA87DFD07FFA8FD07FFA95A0D
%85FD11FF7DFD0DFF7D527DFD05FFA87D7DFD0EFFA852A8FFFFFFA8A8FFFF
%A8A8FFA95A36A9FFFFA8FD1CFFCAFFFFA8A8FFFFA8A8FFFF8461FD08FF5A
%5A84FD11FF7DFD0DFF7D7DFD07FF7DA8FD0EFF7D7DA8FD06FF527DFFA8A9
%365A7EFFA8FD1CFFCFC9FFFFA87DFF7D5252FFA85A2F84A8FD05FFAF6036
%A9A8A8A8522752FD0BFF7DFD2EFFA87DFFFFFFA9605AA9FD1EFFCACFFFFF
%A8A8FFFFA8FFCFA95A5A5AFD07FF5A5A7EA8A8FF7DA87DFD0BFF7DFD2CFF
%A82752A8FFFFFFAF355A84FD0CFFA8A8FD10FFCACAFFFFFF7DFD05FFA85A
%3684FD07FF5A2F5AA8FD10FF7DFD2BFFA87D52A8FFFFA8A8A8615AAFFD0C
%FFA8A8A8FF7DA8A8FD0BFFC9FFFFFFA8A8FD06FF5A5A84FD07FF355A5AFD
%11FF7DFD2CFF52FD05FFA1845A5A84FFA8FFA9FFA8FFA9FFA8FFA9FFA8A8
%A8F8277DFD0BFFCACAFFFFFF7DFD05FFA85A2F84FD05FFA8A184365A5AFD
%10FF7DFD33FFA8845A605A5A5A605A5A5A605A5A5A605A605AA8A8FD0DFF
%C9FFFFFFA8A8FD06FF36365AFD04FFA8A8FFFF845A5AA9FD0FFF7DFD34FF
%7D7E355A365A355A2F5A355A365A355A365A59A8A8FD07FFC9C9A0C9CFCA
%CAFFFFA87DFD05FFA85A3584FD04FFA8FFFFFFA85A3560AFFFA8FD0CFF7D
%FD31FFA82727A8A88484858485848584858485848584855A615AA8A8FD05
%FFC9C2C9CAC2C2C9FFFFFFA8A8FD06FF5A605AFD09FF84605AA9FFFF7DFD
%0BFF7DFD32FF527DA8FF7DA8FD0DFF84365A84A7A8FFFFFFCAC2CAFFFFFF
%C2C2FFFFFFA87DFFFFFF7DA8A95A3684FD0AFF5A5A5AA87DFD0CFF7DFD37
%FF7DA8FD0CFF5A5A5AFFCFFD04FFC9C9FD05FFC2FFFFFFA8A8FD04FF7DA8
%5A5A5A8584857E8584857E8584845A5A7DA8FD0CFF7DFD38FFA8FD0BFFAF
%84365A84FD05FFC3C9FD04FFCAC2FD04FF7DFD05FF7D7E365A355A365A2F
%36365A355A365A59A8FD0DFF7DFD41FFA8A8A8FF5A5A36AFFD05FFCFC2FD
%04FFCAC2FFFFFFA8A8FD06FFA8845A855A605A605A845A855A615AA87D7D
%7DFD0BFF7DFD41FF7D527DA884365A7DFD06FFC8C1CFCAC9BBC9FD04FF7D
%FFFFFF52F827FF7DA8FD04FFAFFFFFFFAFFFA8A8A87DF827A8FD0AFF7DFD
%0FFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1DFF
%7E5A5AFD08FFC9C2C9C2CFC9FFFFFFA8A8FFFFFFA8527DFFFFA1A8FD09FF
%A8A8FD0FFF7DFD0EFFA8A8FFFFA8A8FD04FFA8FD05FFA8FFA8FD05FFA8FF
%A8FD1CFFAF367E52FD09FFCAFFCFC9FFFFFFA87DFD09FF7DFD09FF7DFD10
%FF7DFD0FFFAEFFA8FF527D527D7D7D52A87D7D7D522727527D527D7DFD20
%FF85AFA8A8A8FD0AFFC9FFFFFFA8A8FD24FF7DFD0EFFA8FFA8A2A8FF7D7D
%52FD067DA87D7D7DA87D7D7DA8FFFFA8FD1DFFA8FFFFFF52A8FD08FFCACA
%FD04FF52A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA8A87DFD0FFFA8FFAFFF7DFFFFFFA8A8FD08FF7D7DA8
%FFFFA8A8FD1EFFCAA884A8A8A8FD08FFCACAFD05FFFD25A8FD0EFFA8FF84
%84A8522727FD055227277D52A852522752522727A8A8FD1DFFA17C7DFD0B
%FFA0FD3AFFA8FFAFFFFFFFA8FD11FFA8FD1EFFCFC9FD0BFFC9CFFD3BFFA8
%AEA85252A87D527D7D52FD057D277DF8FD057DA8FD1EFFC9C9FD09FFC9C9
%FD3BFFA8FFA8FF7D7D7D5252A8277D7D7D52A8A8A87D7DA87D7DA87DFD20
%FFC9C9FD07FFC9C9FD3BFFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8
%FFA8FFA8FFA8A8A8FD20FFCFC9CAC9CAC9C9C9CAFD7BFFCAFD7BFF7DF8F8
%5252277D52A8FD77FFA87D52A8A87D7D7DA8FD76FFA8FD36FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">esquemas setup</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2018-12-27T13:01:32-03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-27T13:01:32-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-27T13:01:31-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqwvXvP2uaX5ik0238r3up6fCYDLqFqlwfhlgnlf01a3EUjRmBFos1KyKCQ3w4qg7D8zfMd/5q&#xA;0/SIfI2r2um3ReO61bUFWBLaWJpCwdYxPG0bRw1SRZeLMyrtyrir0DFXYqtlliiQySuERerMQAPp&#xA;ONoJA5oa21bT7qQx28vqsOvFWIHzNKZESBYxyRPJF5Jm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq4kKCSaAbknoBirAorX9G2V/L5LSeWG61xLm8e2mju0bncINQSNLmZ&#xA;ljLOZeQTiFPxDpQqs9PTw98VeMXf5S+f7PR4LST8zNTdvrFxPcXpScSOZ1iCICLsMiR+iSqhuNWa&#xA;gFckBbKItONM8p/mAy21pYfmDdR21vy+sc7G2uZHV7p5v766M8gb0XEK8mYUXlTExpJjT0EXcenW&#xA;EC6neJJcpGqzT8RGZXVQHdYlLU5NvQVpkDIDm1SmI82CeaPzq0PRda/RF0ktgGtY7xNTuInkgKS3&#xA;AtVVVh9STn6jD9ilN+xpDiJ5NXiSkPSElk/On8pFuYP0trl3ezSqJin1C/jSOJ0V0l9NoVkZH9RA&#xA;vBTXl0pUh8PvUYL3kbewQxRRRhIkEcY6Ko4gfRlgDcAByX4pdirsVdirsVdirsVdirsVdirsVYV5&#xA;i84+XvLFnoU+uve01uaK1S4hklZUmlUEGRFkDBST+wppiqSW353/AJRXmo2Gm2OsXl3fanLFDZwp&#xA;HqSc/VZRz5zLHHxQPVvi+87Yqqaf+df5O6ghks9fuJUABLenqijd4o6VZBvyuI9uvxA9MVWz/nZ+&#xA;UMJgB1m8f16MAkWqFghhinDlOHOnC5i6An4ulA3FVk+ma55d1zR9R1HQb6a6SwkuLaST1LpQlzbD&#xA;40KyleXE07EH3xVk+KuxV2KuxV2KuxV2KqN7Z2t9Zz2V5Es9pdRvDcQSDkjxyKVdGB6hlNDiqQ6q&#xA;ukaPPZpHosk9oyXB9Gxs/VRZHeJizLGvFS2+53O+KChv0/on/Utah/3DG/5pw0t+SWat5p8rTWdx&#xA;ZjRL1LiRSiBbAh1f9k9uhwDIIlh+YECkvl7UbltJhU6LeIs1ZHul095nYN9ngeNKUxymUpdy5p5J&#xA;y5cIT2yl8tWx5v5d1O5m7yTac7b/ACpTIjGAwjiA3qym+nalYXep2kdpo93YMrszzzWTW6cfSccS&#xA;9KbkjY5JutkUdtbxSSyxRJHJcMHndVAaRlUIGcj7RCqF37DFKpirsVdirsVdirsVdirsVdirsVdi&#xA;rsVY5e6hcDym8Gj3GnHWvqipaxalIRberwApcCOsnH+YDfFWHQQ/mlFDFYRap5X0/SrezSOOHSuV&#xA;tW4M8TSIsdxFexxRLbrJGho1SeRTsqqy2b85bbUYhba15Ti0mOYRLpv7704bFWCJ6SxpE/qrElaG&#xA;QJyJGy0oqiI9Q/O3Zn1Tyeskklssq8rySKKIR0uXiUGJ2cyGqK0lKUFRucVZdA+lWvlya2jNhbXU&#xA;0Eklzb2BRYmupUJlZAOLNzkJ3I5HvvirIcVdirsVdirsVdirGPOP5h6D5Ta2TUkuZJbn4lS3hZwI&#xA;g6xtIXPFDxeRE4KxkZnRVUlhirEbjzp+adx5nju5tNsvKvkTTpQuo32rTotxchZgjhAwAj+E/BQF&#xA;W7OaiirK9H/Mfy75gt5JfLTvq3pStbyFI5IgsiAFg3qqjdGBrSlO+QlOuTVPLRoCyj/0drWob39z&#xA;9VgP/Htb9aeDN/t4OEnmw4Jy+o0PJbeWGm2MSWsUw01Jg3q31UEgUlYwqvKGAZ5JVA29hvTJxAi3&#xA;Y4RhyCj5Sk0iKCOy0bVl1fTkWXjKssM/pPGyVj5whR/u2tDuMnOXEbbJz4jbI8ixdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVQv6TteTACVuLMhKQzMKqSpAKoQaEYq79J238k/wD0jz/80Yqho7+I&#xA;ajPIY5+DQxKrfV59yrSEj7H+UMVRP6Ttv5J/+kef/mjFVr6tZxo0jiZUQFmY289ABuSfgxVGYq7F&#xA;XYq7FXYq7FWEecrb8zLnzXo8flsWNvoRt7pdR1KdUkubeZ4mWNo0cH9rgV41B35ilMBRK62Y1pn5&#xA;CpqmoDWfzB1Jtd1AhT9Sjeb6shMXpvH6kjGRoyxdgkYiT4zyQ/DxFMeHveqafpun6baR2en20Vpa&#xA;RCkcECLGij2VQBkqZAUiMUsR8+6PPrVhNbQ6ZHrDQSWTpZyzPAlVuRLIeaPF8aLGjgFuwND0KqWf&#xA;l5pOvaPbXltqmi2+i2dtqxGmRW073AmtWi+rRSs0k07ciSooQlFH2cVTXypZfmRa6zft5kvrS+0m&#xA;bexELASwsp3HBbWCqPU7NIxSgHJ6lsVZZirsVdirsVdirsVdirsVdirsVdirsVdirsVY1qnl9NQn&#xA;057q3uGbSb+TULcwG14uzGTiGaWsigCSp4FTUdadVWI6R+UumWkHDTtS8zWdr9YV57W1v7e0ika3&#xA;RrYhltjFxDjd2TizFVYnkK4qrL+Udo19Nd3mreadRE0NzD9VvdShuLdPrcMkEkkcLkojBJjxoKDw&#xA;pUFVdeflsIra5Ya55qtbTijtbWV/a2sUa28YVFt44BGsC/CSUi4qxb4gQF4qpn5b8kSeX7W/hgvd&#xA;e1Q3kbxxpq99HcxQ8x0iQOoVenY0HTqaqs4xV2KuxV2KuxV2KuxV2KuxV2KpD5rku9N0a/1KxuXh&#xA;nUK/HjGyFqpHWjox+yPHJ44gyALZiiDIApX5E1HU9f06afU7t5DBcrxRViRT6fGRa8UDfa98nngI&#xA;nZnnxiJ2ZllLQ7FXYq7FXYq7FXYq7FXYq7FXYqkmta1q1tq1jpWlWMF5dXkFzdM11cvaxpHavBG3&#xA;xRwXLMzNcrQcR0O+KqX13z//ANWbSv8AuK3P/eOxV313z/8A9WbSv+4rc/8AeOxV313z/wD9WbSv&#xA;+4rc/wDeOxV313z/AP8AVm0r/uK3P/eOxVDade+ffq78dH0oj1p+uqXA39Z6/wDSvPfFUT9d8/8A&#xA;/Vm0r/uK3P8A3jsVQ2qXvn39GXfLR9KC+jJyI1S4JA4HoP0eMVRP13z/AP8AVm0r/uK3P/eOxVB6&#xA;z5h876To99qtzommPb6fby3UyR6pcFykKGRgobT1HKi7VIxVlmKuxV2KuxV2KuxV2KuxV2KsG826&#xA;zdSeXNW03UkW1vuA9Fo68GUyChUtWuw2PfwBBUW4PrDdg+sIf8nVitPL9zA83LjcfCZCA1OC/LLd&#xA;VvJt1e8mT2vmeGfVZ7A20qCFioujT0mp3DbZROHDXm66OUmRjRWmW3N9ey3Fy7WwlVQVndBEPRjP&#xA;RGUcCSST2O52+zGm+ij/AKlY/wC/pf8ApJm/5rwWxsLbUxQ39xEszNGIoWAklaSjFpAaF2b+UY2t&#xA;hj/l7Q73T/O2uXi63c3mn6jSRdKumnnS3kUKzfVXkuJFjT978SCJRuoXZaYptl+KqdzOtvbyzuCy&#xA;wo0jBaVIUVNK0xVQTUB63pzwSW37t5fUlMfHjGVDVKu1PtjrirEl/O38sS9zGNYPqWUZlvENrdho&#xA;kCGQGQGH4eSqSoO7dq4qzdHV0V1NVYAqfY4q3irH73/lP9G/7ZWq/wDUTp2KsgxV2KuxV57+ZU/5&#xA;kQ30MvknQ9M1x44UfULfUmCMUEpCx2zGSJVkcMxq/wANF8aAqpXYn82o59LTV/LujQafNFdya7e2&#xA;caRvaEafFLAIQbqVmb6600ZYK3wqGovUqvVsVeS635L/ADbv/NRvtC1/TbTyxPeMt1p89nA9zHAk&#xA;ymaSGZ7aflLKRIvGT4VFD1+yqyHypofnLTdWr5hubG7tStlHp8trGkc5mSwkGoPNwgt14yXA5Rha&#xA;7dl6YqnP5h/8oB5m/wC2Vff9Qz4qyDFXYq7FXYq7FXYq7FXYq7FXm2vfmJ5N1bz6fy1mtbxtfBYf&#xA;WRChtoka2S5V2kaRS0cnP0+KgnmpqFor4gqDSSj8v746tJp7XEVu9awCYseQPQKwHxdPhPf/AFgR&#xA;mZHUit3NjqhW6P8A+VS61/y2W3/JT/mnD+aHcn81HuQg/K7V4xfSG7tyLdqsBz3pCj7fD74RqR3J&#xA;GqB6IXycLy8nfT1ZfQhjMokkJAiQMq0NAfg+If6v+r0xtXpx9QcHXaIfVHa2US+SNWmvnjS5iiaN&#xA;IXLKzbgmUU+zmCcJdbLSSPVqz8o6j+kmg9aLnAJS7AsaeoyOn7IpUMQP9U+GHwiyGll3hO4fK2qp&#xA;01Jo/wDUL/1GSGM97YNPL+cq32kajb6bdSSarJJGkMjMrLsVCGoJZmyQge9sjikP4lbVp5r4yQaL&#xA;eQDUmsrpbaUsrqkjGIKzCkg2PirD2PTLG9gK+Q/zDWC5B0PyPPODLFZSS2c4b0PSkSP6wUjUM7n0&#xA;hIEVV48qDoMVeq2onFrCLgIs4RRKsVfTD0HIJWh416VxVVxVj97/AMp/o3/bK1X/AKidOxVkGKux&#xA;VhX5j6P+aeoQxnyHrtro0yQOrrdxJIskzTwFGLNDcFQsKTDYblh8wqj9ct9ZFjfXdxBp0iwRTMkr&#xA;o7SCJAzJUkdQvXtXJ4xcgPNhkNRJ8mJ/lbHd3miXDW0Gnyqly3xToxcVRelBsNszO0I1Me5wezZX&#xA;A+96QF1JtOdXaJNQKOEeOvphzXgfiDHbau2YDsXnP5otPp+lwGYoktzMWaRTEXIQfFutvG3Vh3zO&#xA;0GPikXX9o5eGA8ynvk621Cfy9Y3lqYkkaH0xNWKp4Ep8VLbkd1/n38cx9RHhyEOTppcWMFJLnS/z&#xA;KsPJHnL/ABhrVprFvLo9z9S+rwiB4XFtK0vLjGgcMZOAPhGppV2pS3vTsVdirsVdirsVdirsVdir&#xA;sVdiqhdWFndPDJcRLI9u4khY9VYEEfiAaeIB7DFVfFUq1G1vkttSkiniEc6NJweJmYUhCEchIv8A&#xA;JXphjzZR5h5r+VSXx8w3HpzRKfqj7tEzCnqx+Ei5m6n6fi5uq+n4p55m87SeSvNWlW2qCIaJqycH&#xA;vzSNYDE5XhGnqSPxUzq7syhEToT0XBcBntleWt9Zw3lrIJba4RZYZBWjI4qp336YqrYq7FXYq7FX&#xA;Yq7FWP3v/Kf6N/2ytV/6idOxVkGKuxVAa9YXmo6JfWFleNp15dQSRW9+gLNBI6kLIFVoyeJ3oGHz&#xA;xViEHk3zVpfl7zDDd+YZtck1O6vr5FnDxiCG4VfTtIS73REUXBgqrx+12pvZhNTB82rOLgR5KH5U&#xA;afqMenz3KOIraW4AZeXPkI1FfhZK78qVDj6cy9fL1AeTidnRqJPm9FzAdg8m/N2C5bWLX1H9W3aE&#xA;tDESUCGtGHw1rWlakZtOz/pLqO0vqHuTLybo+u3HlrTJ7HVl00W940vouj3EUyUeMxuBLAaEvVRW&#xA;nIAkNmNrf7xy9D/dhMdY0a/0X8odb0u+1SfWrm10nUVOp3QHryoYpWj9QgnkyIVUt+1SvfMRzGbY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXE0BNK03oOuKsS/LL8w7bz35ebVodPn02SCUW1zbztFInrCKOVzBN&#xA;EzLND+9oslF5UPwjFWSal/xzrr/jDJ/xE4Y82UeYeO/lt5gs7PV9RuvTluEtbZkmSBVZxWWIcqMy&#xA;1Fds2ObEZABy+0J8GOyOr2C8sNP1bTja6nZR3NpcKpmsruNJUPRgro3NCVPz3zXEOCCknk/y5rui&#xA;XOoxXV9Fc6TK6tp8Ij/0hWq3qSXE+3qPJ8J2UKuyqAF+IJZNirsVdirsVdirsVY/e/8AKf6N/wBs&#xA;rVf+onTsVZBirsVYL+YH5ieYvK1/DDpvlG/8x2xjiluJbBZ2kCvIySCNUt5YmeNE5cXlQtyUDuQq&#xA;mVt5zmn0rTpptMeHUru2hlvdMdzytp5o1ZrYtwq7ozcT8I+jFVmg3d5pvl+1Sw0p7y1o7B4pY+VW&#xA;diQQ1CaE02rmXkiJTPEaLh4pGEBwxsIK+/MyWyk4XOiXEB7es3pk/euTjouLlINc9dw84lhvnDzS&#xA;vmK5tXitGgaEGMDl6jOXIoAAozMwYfCBsuFqM/jEUGX+TvL17c6ZZpqPw2VqWaKFejuzlq170rQt&#xA;9A2qTq8+QTmSHbafGYQAPNO/zD/5QDzN/wBsq+/6hnylvZBirsVdirsVdirsVYx+YPlDQ/NOipYa&#xA;xJPHbRvKw+rGNZG9a1mtXWsiSUBiuH3FD70zG1eqhghxy/afxz9zKMSTTCF/ILQ00mKKG91mG7hE&#xA;ZXVY79BqJMd3cXodn+rlS5mvHYmldh364f5vVcHH4Q93H6vlwfZd/Flwxureg+UtDg0u3uWi1LUd&#xA;S+tTNKx1O5a5aLkS4ijrsqDntTtTegFMzS6qGeHFH+xjKJBT3Mli05IRio5EAkDxOKvNfyC1Y6n5&#xA;Rv5fX1W4EWpzxeprV3Je3KlUj5R+rJBa0WNqrwUMqtWjtir0LUv+Oddf8YZP+InDHmyjzDy/8pkU&#xA;eY7mgG9m9dv+LY8zdT9Pxc3VfT8XrOYLgOxV2KuxV2KuxV2KuxVj97/yn+jf9srVf+onTsVZBirs&#xA;VUbyKea1ligm+rzOpCTceXEnvSor9+KsYuLaz8uaVeXt1cRyaikMhtwNiCQQpRSS1Wb7R/zNmKPF&#xA;IBrzT4YE+Sh+XOu6ePKYFzdRwCxaX1TM6x8IwfULNypRQH6nL9bGsnvcfQSvH7mVWl9peqW7vZ3E&#xA;F9bK7wyNC6TIJImKSRsVLDkjCjDscxAXMIY3a+VLe81mS+uLCKyghYpHDGqqX9zx/m7n6PGthyyI&#xA;onZrjhgDYAtK9M/JDyvpvmqXzLbahqn1yTUW1QWzXI+rI7m5YwpEEFIed9M3Gtasd9zWtsZF+Yf/&#xA;ACgHmb/tlX3/AFDPirH9b/Mbzbpuv3GmQ+S72/tYn4w6jbtM0Ui84QDtbEAssxp8RAZTzZUBkCqk&#xA;v5qeYrnW9JsbHyFrYs9QnEV1f30YtVtYRN6LzuqicU3DIpZWZatRVAJVRnn8fmJ9bA8t6lbWFm8C&#xA;sXlBMqSQmX1Wp9TvVMberCWLU+wVFOXIKp9qPm3SNO1RLG8uooiVUuS3xBmDsKqK0FI+/wDMMnHH&#xA;I8gzjjkeQb/xp5V/6uUP3n+mHwZdzLwZ9yk/njy6bu2toLyGZ7hgv2+NKuqClRuavicUh0QcUh0T&#xA;HU/h9KVhVEI5d9+at+IUj6c0fa3p4JkXEH/fRl9oiYjzIHVOLqEZ6sfp+ryHp05c67U8a5tPGhwc&#xA;djhq76U10bpB6YeZmlUUjYkL7/G7fqcD8M1XZJ4jOYHpJ2/005fdIA9xBHRsy9A7V9Xt9NgWSR4x&#xA;JI3GJJZVhVjQsfjbYfCp+nN0ATyaxEnkpR+afLUkayJqtoVcBlrPGDQ7jYtUZLw5dxZeHLuKXaB5&#xA;m0P6mRLq9uxHpkGS5Rm+KCNm3ZiftMcfDl3FfDl3FRk1LylPpl60l1YS3Dm6ozSQs5/eOF6mp2pT&#xA;DHHK+RTHHK+RYL+WNtZnzBOn1SKaRrR+CMikA+pH8TbGgHjmVqfp+LlaojhAepadZxWl9cxRAKGi&#xA;hkcKAql2aUEhRsNlAzBcFMsVdirsVdirsVdirsVYxqd7BH590rjWaSLTNSSSGEeo6mS4sCvJV+yC&#xA;EO52/DKZ54xNcz3Df+z4t0NPKQvlHvO39vwTk6siby2tzGv83pNJ/wAmvUOR/MAc4yHwv7rZflye&#xA;Uon4199Iq3ube5iEsEiyxmoDKaio2I+YPXLYTjIXE2GqcJRNSFFUybBi/wCY1rC/lW/nIIlAhXkr&#xA;MtQJ0oGCkcqcjSvTMnSf3g/HRxdb/dH4fex/8utB0vVvK+q2GoRvPaXbyW88fqyrWOWII/EqysjF&#xA;WI5KQw8ct1/1D3NPZ30H3s40Py/pOh2klppcBggmmluZQXklLTTNzkctIztVm98wXYJhirsVY/8A&#xA;mH/ygHmb/tlX3/UM+KsEX/nGfyMuiQaMNS1b6rDc3N5IxngLTTXawo7TAwFHKrbJxbjy61JqcVT8&#xA;fk9o8emW+m2uu69YW1qs6wCx1GWzCm4lnmZuFuIoyVe4+Gq0ARB05clWUy6PMbOC2S7ZzFbNaST3&#xA;C+rLIrqil2ZTGOZ4VJp17YqxLW/yusr3XTPayyWsMzCabb1F5lHV6EkEfsbe5p0zIhqCBTkw1JAo&#xA;rf8AlUNt/wBXN/8AkUP+a8n+aPcy/NnuQtx+UtvHe2he7muISwEipGF/3bGxBYFuI4KxqfCnUjAd&#xA;Ue5Tqz3PQYtLtIrdLdPU9FFCKhlkI4gUpu2azNpIZSTLi9XP1SA+QNOP4hW/obTuPH0241rx9SSl&#xA;fGnLML+Q9LVcJrnXHOvlxMvGkqnT7cxmMGRUI40WWVaClNiGFPozMw6OGMjh4tuQ4pEfImmPGWD+&#xA;Zvyys5uN5Z3Fx6qvyeNq3BIKso41Kt1YdW6Zs46kjmG6GpI5hKofyTnWWKdtVHqpEsRVY24fDX/K&#xA;FevfLPze1U2/nNqpR0T8p7iW2Zv0kg/uv91Hvbxt/N75EanyYjVDuaP5Y3ENlLIuoI8qtcFYvSO4&#xA;jkYFieWw2yUdSCapZayhdLvyij4eYbmp5O1m/JvH97H+GZGuAGMe90Gm1EsuYyken6Q9Qj/46tx/&#xA;xgg/4nNmqdmisVdirsVdirsVdiqD1W5mihSG3NLq6cQwMd+JILM9D14IrNTvSmUaiZAAj9UjQ/X8&#xA;BZb9PAEky+mIs/q+JoJKbOCz88aLDAtFGlaqWYmrMxudOLMzHdmJ6k5PFiEBQYZcspmyybLGtLxG&#xA;sGt1jIVbyF3mSoFZIWRVcL1JKyEMfYZQMZGTiA9JG/vHL5i/k3nKDj4SfVE7e48/ka+aYZe0Mb/M&#xA;ZlTyZqLMaKoiJPsJkzJ0f96Px0cXW/3R/HVKPyfkWby7czofge5IA7grGla/fl3aAqYHk0dmm8ZP&#xA;mzvMB2LsVdirH/zD/wCUA8zf9sq+/wCoZ8VZBirsVdirE7/8t9JvvNEXmGa9vRNDdx38dmrQi3E8&#xA;UKQchWIyjkkSBqSVpVdleRWVZZirH/MXkrTte1Gyvbu4uIzZBQLeIxelJwure8Qyc43aqzWaEcWX&#xA;v9CrIMVdirsVSHzh5OsfNNnDa3dzPapA0rBrcQMW9e3ltmDLcRToRwnJHw/aA+WKpxZWkVnZwWkN&#xA;fSto0ijr14ooUVpTsMVYFr/m/S2m1DyV5Sv5F8yLFxlntI2vHspjwjhMyyfCUOySEPWMUJ4j4lVZ&#xA;KNKnttIuVkv5TdvDJLdAeiwLuGZqExKeHInjsMlD6gxn9JYB+VcEr+YbgLcyRn6o55KI6/3se3xI&#xA;2bTX/QPf+t1HZ31n3fqerW9p6MskrTPNJIqqWk4CioWIACKg/bOal3KviqjeXlvZ273Ny/pwpTk1&#xA;CepAAAAJJJNABiq+GaKeJJoXDxOKo43BBxVfirsVdiqAcerrkY7WtuzEf5U7gKfuib78xzvmH9GP&#xA;3n9hckbYT/Sl9w/aEuvf+U/0b/tlar/1E6dmQ4yEtPLHmy3186i3mM3FhGNR9DS3gkCk3sqTQ+rJ&#xA;67BvqxQon7sfAaADqVWDa5rPmBPPKt9YYTWkqwQ0ZCoQ0DA/u1+1yNfhzbYsUfB97ps2aXj+4vX7&#xA;VbhYFFwwaYV5MOnXbsvbrsPkM1LuUh/MQgeTtQJ2A9Gp/wCe6Zk6T+8H46OLrf7o/D72KfltqV9c&#xA;aTcafpqAkXJknnJpxRkQdf2Q3EioqT+yP2hbrx6x7mns4+g+9G6ro35zNrNxNpmu2S6Wbq2aC3mC&#xA;BjapAFnXazcxu89X3eSo6NHShwXYPQcVdirH/wAw/wDlAPM3/bKvv+oZ8VZBirsVdirsVdirsVdi&#xA;rsVdirsVcRUUxVjHlDyBpXl1YLmSWTVtfjs00+bzBehGvZbeORpVjZ1Vfh5Pv+01F5lioOKojzDo&#xA;c8zPf6exS84FJVG/qIRSlD7du/zocING0EWKeY6DrF15V1eaZ7cTu8TRBSxQEF1bkDQ/yUpm3PDn&#xA;hzp0w4tPPcWyJvzfuFUsdMSgFf709v8AY5V/J4723+Uj/NWQ/nHLNGJE0xeLdKysP+NMJ7OA6oHa&#xA;ZP8ACuk/NqWSNo5NKjeNwVdGlJBB2IIKbg4P5PHen+Uj/NSG68wanqumXmi6Xqc3lua7khks9Qh/&#xA;0h4HinSbZWMXPnw4MrGjqSDU/ax8+lMBY3Dk6fWDIaOxeheRPLepaNaytd+YJ9fiuIrRLeW4MhKi&#xA;2tkgd6ySzVedk9R6cfiJ2zEcxlGKoJ9b0hGKteQgqeLHmKA1pQnoDlB1WIfxD5uQNLlP8J+TVsQ2&#xA;sXr9aRW6CngDI3/G+CG+WR8o/p/Ws9sUR5y/3v6ktvf+U/0b/tlar/1E6dmQ47IMVeH+aJLlPP1w&#xA;yhTAtyGateVQRt17/LN7gA8Ee55/UEjMe63uGaJ6BjGr6JqXmWGeyvy1lp5FBGpqWZd1JoRy4sK1&#xA;Pw+AP28njyGEhINeXGJxMT1YB5Xvp/KXmZrS6HpQcvq94nbiT8MnvT7VfD55t80Blx2Pg6bBM4cl&#xA;H3F7I0kaqHZwFJADEgAliAor7k0GaV3q7FXYqx/8w/8AlAPM3/bKvv8AqGfFWQYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FWE/mR+U2g+f3059Vvb+zbTPUEQsZIkWRZXilKTpNFOkiiS2jcKwpVRiqL1ryV&#xA;ZNZ25s4FkazREEMgDeosahQf2fi4jfpX50OShMxNgsZwEhRFou08oeW5rWKSfSIoZXUGSI1PEnqK&#xA;1y38zk72r8rj/mhW/wAF+Vf+rbD9x/rj+Zyd6/lcf80O/wAF+Vf+rbD9x/rj+Zyd6/lcf80PLfPd&#xA;hZ2PmS4trSJYYFWMrGvQVQE5tNNIyx77uo1URDIRHZ6d5Z066tUjljuOenXMCSrC9TIsrhT16UpX&#xA;3PfcVbTTFEh3kDcQUR5mkm+oxWsUjQtfXEVq0ymjIkhq5Fa7lVKj55ga4ngEQa45CN+/m5+gA4zI&#xA;i+CJlXfXJUj8taFHAsK2UVFUKJCtZNtv7z7dfpycdDhArhH6fnzYy12Ym+I/o+XJA+V7f6ne6vpw&#xA;cyR2s0foltyI5IldV/2NaZj6CHBPJjuxEivcR+hyO0J8cMeSqMgb94Nfa69/5T/Rv+2Vqv8A1E6d&#xA;mydYi9ch1YejeadKxe2qXtOqyA0rsPtEU6fdvirx/wAxXRm8xXF40ZjEsglCHfbboe/TN1ppCWMA&#xA;Oh1cTHISWcf8rc07/lgm/wCDXMX+T5d7m/yjHuKnD+cekzcuFjMShKsOS7EYT2dIdWI7TiehYx5y&#xA;8x6Xr00N1b2slvdoOErMVIdOorTuMytPhljFE2HE1OeOQ2BRZJ5SGp+YbCztL4f7jrAfET1kQ1CB&#xA;q+K1UU/Zqf2lzV6nh4zwu20vF4Y4nomUOQ7FWP8A5h/8oB5m/wC2Vff9Qz4qyDFXYq7FVK6uFt4f&#xA;VKs/xKgRKVJdggA5FR1bxxVS+u3P/LBP/wAFB/1VxV3125/5YJ/+Cg/6q4q767c/8sE//BQf9VcV&#xA;d9duf+WCf/goP+quKu+u3P8AywT/APBQf9VcVd9duf8Algn/AOCg/wCquKq1rOtxbRXCqVWZFkVW&#xA;pyAYVoaEiu/jiqpirsVdirsVdirGdb8r6/qGri7tdfksbH1NOlNnGkvL/Qbh5pkDpPGvC6jcRSAx&#xA;nYd9qKsA/MPRdVj8xxtMfrMl6iCKVXZObLSOnBVCqemw8epzb6KY8P3Om12M+J73pPkm/tNQ8r6f&#xA;e2V+mo2U8MbWtzGCF9PgAF+IK9RTfmobsRXNVM2SXbwjQATDV9MTUrB7VnMbEq8Uq9UkQ8kYUIOx&#xA;HjmNqcAywMeXce4uTps5xTEufeO8dUrSfzlHF9XNvBLMBRbskemfAsA6t8yEHyzEEtUBw0Ce/p99&#xA;/Z8HMMNKTxXIDu6/dX2/FV8t2EtnLqCzSm4uXmV7icj7UjRqxHyUMAB4ZPQ4TAzs8Ur3PnTDXZhM&#xA;QIHDGth5WpXv/Kf6N/2ytV/6idOzPdehvzGsPzEvdEhi8halZ6ZrAnrNPqCGSI27QyRkACOb41kd&#xA;JF2pVaGqkgqpNH5J16fy/aXHmQ22oeY4jI+pfUw6W81ZWKmIBYXH7viGXv4lt2njySgbBa8mKMxU&#xA;haZ6T5P8kalZLcxacVBJV1Ms+zLswB5/EPcfry783k7/ALmn8li7vtKMH5deTQKDTqDwEs//ADXj&#xA;+cy9/wBy/ksXd96S+YPKPleCW206w0+uoXbAp+9moEU7nd2699tlqewqDq8nekaPEOn3oHzN+U3m&#xA;fUtRtp9F87Xvl+xitBDcafaxuElulE4S65RzwlSPrG6dGCIDXgtMdyXpY6ePvirsVY/+Yf8AygHm&#xA;b/tlX3/UM+KsgxV2KuxVC6n/ALzJ/wAZ7f8A5PpirA/NJ8qT6Lri6/czatpSalYfX7HhCyCQ3cKx&#xA;LxlPFofU4q4O9FNN+t2WJAFikDPGew/h2ebTeYfywnsJZofzO84PPaem12PXvBKQS0QtoikMNn6r&#xA;y3Maljz2UdBV8pSml7qv5Xaf+lluvPXmnRymo3rXFrFLchYpTeW0kscC29vKnpmWSPhSrcZXFd2o&#xA;qrXXl38sfNFppdjN5o167tPUntku7x5WuBc2pihkt5zew+qpkebkVaKhagBX4FZVJLW5/LHTyug6&#xA;dq/m7SrBbi6EmpafdwW0AkjrYSF47dlkcgaY0qgQFwC0lOPLiq9D8leevy/sdYuPL+m6xf6nqWo3&#xA;SzFL23uxNEDFDAFlnuY4vUKEIhqTIOjD4WIVeh6T/wAcqy/4wRf8QGKorFXYq7FXYq7FXYqkPmq4&#xA;0eyfS9S1QhIra74pKQTxeWNwg2B+1IEp70yMs5hUR/Ga+wn9CRpxkuR/gF/aB+lLrCy1m+XRNTsr&#xA;dtJtheT39/p8zyW00iXSy8kuIY0ZC6NKH4ljVlHxeMkMvxV2KoDRz6sdxdj7N3O8kfgUQCJGHsyx&#xA;BvpzG0xsGX86V/DkPmBbk6kURH+bGvjzPyJpA63pGszazYatpU9tFNaW11ayR3Uckist1Jbych6b&#xA;oQVNr+OZLjLPT8//APLRpX/Ii5/6rYq70/P/APy0aV/yIuf+q2Ku9Pz/AP8ALRpX/Ii5/wCq2Ku9&#xA;Pz//AMtGlf8AIi5/6rYq4w+fSQTPpNR0PoXG3/JXFXen5/8A+WjSv+RFz/1WxV3p+f8A/lo0r/kR&#xA;c/8AVbFXen5//wCWjSv+RFz/ANVsVQOu6N571fRNQ0mS80uKPULaa1eVYLgsqzxmMsAZuo5Yqy7F&#xA;XYq7FUJqrKtoHYhVWaBmY7AATISSfbFWPa9d68dKvv8AD2paTbauZY5LB7p+UHFXBeOcIvPi6gg8&#xA;d99iOuAE9WEQbNsQFx+bOmelHpsflBJdRu0uNWu7H1IEMp9U3E8ySScmMix28fIc3+10+EqWaLTW&#xA;/wA5ZtXmt2uPLdvZWV1aGK9LyCK9tJIphdgRiWaaOWOT0mRTxHUcnG+Koi2vvzZe+WW9vvKCwpCE&#xA;EkBu2n5OkPq8Wd+KL6iu4FGqFQHuwVS21g/OQXmivJ5t0trKC4eXWVle2Es9u1wrRw8IrPirrByV&#xA;2SQVJFDtzZVMbW9/NZ57dtW1Hyu8MVxbMTp4nWcJ6tLh1a6klRf3J4cQORDNRlIFVWfaQQdJsiNw&#xA;YIqH/YDFUXirsVdirsVdirsVQ9/Zi7tzFzMcgZXhlG5SRDyVqd9xuO42yrNi441yPT3tuHLwSvmO&#xA;o7wh01R4AE1KFoJR1mRWeBvdXUHj8nofn1ysagx2yCj38x8+nxptOnEt8Zsd3KXy6/C136d0Wm19&#xA;A57Kkisx+SqScP5vF/Oj82P5TL/Nl8lGaa61JTb2ySW9o+093Ipjcp3WFGo9T/OQKdRXISlLL6Yg&#xA;xj1J2+Q5/H5W2RjHF6pESl0A3+Z5fD50mUcccUaRRqEjQBUUbAACgAzKjEAUOTiSkSbPNdhQ7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnf5h6T+eN3rt&#xA;tP5D1vStP0eOKFri01GJnd54nlLryWGUiKZJEV6MGHAcStWqqprov57299ps8XmDSb22RbSPVLW7&#xA;gZFf07VUupo2giR+c1wXkVKqq0XsSoVZh5UHm8aMn+LX099aLv6n6JWdbUJX92F+sM0hbjux28Pc&#xA;qpxirsVdirsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:2694A7ADF009E911B6F39A24F3C73226</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:2694A7ADF009E911B6F39A24F3C73226</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:12d9a1b0-59b5-4ae2-a3ae-7fe21a488064</stRef:instanceID>
            <stRef:documentID>xmp.did:33E893B20903E9118E76B07DD2F72C69</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:32E893B20903E9118E76B07DD2F72C69</stEvt:instanceID>
                  <stEvt:when>2018-12-18T18:12:59-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:33E893B20903E9118E76B07DD2F72C69</stEvt:instanceID>
                  <stEvt:when>2018-12-18T19:41:03-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2694A7ADF009E911B6F39A24F3C73226</stEvt:instanceID>
                  <stEvt:when>2018-12-27T13:01:32-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>262.680090</stDim:w>
            <stDim:h>161.654388</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>MyriadPro Regular</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>001.001</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>wmr_____.pfb; wmr_____.pfm</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blanco</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Negro</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Rojo CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Amarillo CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Verde CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>136</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Cian CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Azul CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Magenta CMYK</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>127</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>22</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>10</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>166</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>249</xmpG:green>
                           <xmpG:blue>28</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>196</xmpG:green>
                           <xmpG:blue>28</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>64</xmpG:red>
                           <xmpG:green>166</xmpG:green>
                           <xmpG:blue>41</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>125</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>18</xmpG:red>
                           <xmpG:green>73</xmpG:green>
                           <xmpG:blue>29</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>79</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>202</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>88</xmpG:green>
                           <xmpG:blue>166</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>11</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>11</xmpG:red>
                           <xmpG:green>1</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>74</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>125</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>130</xmpG:red>
                           <xmpG:green>2</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>1</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>224</xmpG:red>
                           <xmpG:green>1</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>19</xmpG:green>
                           <xmpG:blue>107</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>172</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>145</xmpG:red>
                           <xmpG:green>111</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>69</xmpG:red>
                           <xmpG:green>47</xmpG:green>
                           <xmpG:blue>39</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>160</xmpG:red>
                           <xmpG:green>100</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>124</xmpG:red>
                           <xmpG:green>65</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>99</xmpG:red>
                           <xmpG:green>48</xmpG:green>
                           <xmpG:blue>15</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>3</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>18</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grises</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Brillante</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=75 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>16</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>138</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>17</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=60 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>107</xmpG:red>
                           <xmpG:green>22</xmpG:green>
                           <xmpG:blue>135</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -458.233 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 458.233 li
744.605 458.233 li
744.605 0 li
cp
clp
[1 0 0 1 0 0 ]ct
294.733 64.8861 mo
174.9 64.8861 li
174.9 62.3164 li
294.733 62.3164 li
294.733 64.8861 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.399969 .0146792 .0432136 .000457771 cmyk
f
294.733 61.8129 mo
174.9 61.8129 li
174.9 48.2548 li
294.733 48.2548 li
294.733 61.8129 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
294.733 61.8129 mo
294.733 61.313 li
175.4 61.313 li
175.4 48.7549 li
294.233 48.7549 li
294.233 61.8129 li
294.733 61.8129 li
294.733 61.313 li
294.733 61.8129 li
295.233 61.8129 li
295.233 47.7549 li
174.4 47.7549 li
174.4 62.313 li
295.233 62.313 li
295.233 61.8129 li
294.733 61.8129 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
233.604 283.349 mo
233.104 283.349 li
233.105 287.483 232.658 291.226 231.948 293.899 cv
231.595 295.235 231.172 296.303 230.734 296.998 cv
230.517 297.346 230.296 297.598 230.1 297.748 cv
229.902 297.899 229.744 297.95 229.598 297.951 cv
229.452 297.95 229.295 297.899 229.096 297.748 cv
228.75 297.487 228.343 296.906 227.979 296.064 cv
226.869 293.535 226.088 288.771 226.092 283.349 cv
226.092 279.216 226.539 275.474 227.249 272.8 cv
227.602 271.465 228.025 270.397 228.462 269.702 cv
228.68 269.354 228.9 269.102 229.096 268.952 cv
229.295 268.801 229.452 268.75 229.598 268.749 cv
229.744 268.75 229.902 268.801 230.1 268.952 cv
230.446 269.213 230.854 269.794 231.218 270.636 cv
232.328 273.165 233.109 277.928 233.104 283.349 cv
233.604 283.349 li
234.105 283.349 li
234.104 279.143 233.655 275.336 232.915 272.544 cv
232.543 271.147 232.103 270.004 231.581 269.17 cv
231.32 268.754 231.037 268.412 230.711 268.16 cv
230.388 267.909 230.005 267.749 229.598 267.75 cv
229.191 267.749 228.808 267.909 228.485 268.16 cv
227.918 268.603 227.469 269.311 227.063 270.236 cv
225.86 273.003 225.096 277.825 225.092 283.349 cv
225.093 287.556 225.542 291.364 226.282 294.156 cv
226.654 295.553 227.094 296.696 227.615 297.53 cv
227.877 297.946 228.16 298.288 228.485 298.54 cv
228.808 298.791 229.191 298.952 229.598 298.951 cv
230.005 298.952 230.388 298.791 230.711 298.54 cv
231.278 298.097 231.727 297.389 232.134 296.465 cv
233.337 293.697 234.1 288.874 234.105 283.349 cv
233.604 283.349 li
f
334.572 258.772 mo
334.072 258.772 li
334.072 309.428 li
283.914 309.428 li
283.914 259.271 li
334.572 259.271 li
334.572 258.772 li
334.072 258.772 li
334.572 258.772 li
334.572 258.271 li
282.914 258.271 li
282.914 310.428 li
335.072 310.428 li
335.072 258.271 li
334.572 258.271 li
334.572 258.772 li
f
283.768 310.282 mo
334.925 259.125 li
334.218 258.418 li
283.061 309.575 li
283.768 310.282 li
f
336.769 196.563 mo
336.769 196.064 li
286.111 196.064 li
286.111 145.907 li
336.269 145.907 li
336.269 196.563 li
336.769 196.563 li
336.769 196.064 li
336.769 196.563 li
337.269 196.563 li
337.269 144.907 li
285.111 144.907 li
285.111 197.063 li
337.269 197.063 li
337.269 196.563 li
336.769 196.563 li
f
285.258 145.76 mo
336.415 196.917 li
337.123 196.21 li
285.965 145.053 li
285.258 145.76 li
f
224.594 79.6855 mo
225.094 79.6855 li
225.095 79.1988 225.319 78.7524 225.715 78.4081 cv
226.111 78.066 226.674 77.8433 227.306 77.8437 cv
241.959 77.8438 li
242.592 77.8433 243.155 78.066 243.55 78.4081 cv
243.947 78.7524 244.171 79.1988 244.171 79.6855 cv
244.171 79.7321 li
252.095 121.903 li
252.586 121.811 li
252.086 121.811 li
252.086 122.297 251.862 122.743 251.465 123.087 cv
251.07 123.429 250.507 123.652 249.874 123.651 cv
219.418 123.651 li
218.786 123.652 218.223 123.429 217.827 123.087 cv
217.431 122.743 217.207 122.297 217.206 121.811 cv
216.706 121.811 li
217.198 121.902 li
225.094 79.7319 li
225.094 79.6855 li
224.594 79.6855 li
224.103 79.5934 li
216.207 121.764 li
216.207 121.811 li
216.206 122.617 216.589 123.341 217.174 123.844 cv
217.76 124.35 218.552 124.651 219.418 124.651 cv
249.874 124.651 li
250.74 124.651 251.533 124.35 252.119 123.844 cv
252.704 123.341 253.087 122.617 253.086 121.811 cv
253.086 121.764 li
245.163 79.5932 li
244.671 79.6855 li
245.171 79.6855 li
245.172 78.8788 244.789 78.1542 244.204 77.6511 cv
243.618 77.1458 242.825 76.8442 241.959 76.8438 cv
227.306 76.8438 li
226.44 76.8442 225.648 77.1458 225.062 77.6511 cv
224.476 78.1542 224.094 78.8788 224.094 79.6855 cv
224.594 79.6855 li
224.103 79.5934 li
224.594 79.6855 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Regular def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994, 2003 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 52 /four put
dup 53 /five put
dup 57 /nine put
dup 88 /X put
def
/UniqueID 5135326 def
/FontBBox {-46 -250 1126 831} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/period <1C60D8A8C9B89DB75D5B8735E93D1994D05426F465DBCB298CF353A
B931749A92D5FCFB5070125EF1BF1> |-
/zero <1C60D8A8C9B7BA8F4DE47D81087F07C8C29DE694F434CEABCB7B06FEF
D718676E5BAAE98169477024EBF8F274B8E0BB63321B197E44D9F7019B79D36C
BA8E5BA13181F0C598767F1A47178F25668BBF84EF6C6C7BC5E2097565284A6> |-
/four <1C60D8A8C9B7BA8F7857BF2F7951E09AA40D629330F9FEFB5AA7FFF1E
C36D37298B8C34C9680819774C9893D8A327A803B426915AA6FA569E526FD851
58184E0104A70BDE4084A9524ACCD7DDBB66233BF3A02272669957A1F4E> |-
/five <1C60D8A8C9B7BA8F152667D966F5F55A8A15D7C582AF10A22CEE72103
E21FD7DABA158C5CF2A42B5D1ADD7FBA87D4589396F32F18B2936096BB7C8B74
6A7788AFCA95237325E82950C9152A4F6A75D1F50DD9178994AABD029C5559CD
2009F4DA7A3EC35CABFA24CB6632AC998> |-
/nine <1C60D8A8C9B7BA8F51A37DCF9E9CEB5FFFA5B816FE5D9CAF9BB5B9FE8
31787DFFAA0257528671D52F14F30D12AAD0E94FE3AB6B84E37C0AD618F918C1
55D2BD34F346C80E38E8D71C162E36EE373320F17283887C1E4F5FD2E003EAA7
9BC23F107EB283BC0A9F73E83F70388EB6A6C34FA3AE144AB6AAFA02D17EA05E
CDEB9180077749B5F2E389C73A96D8BFF8428> |-
/X <1C60D8A8C9B7E02AF9373B4AEF25A3D46EEE537D4D07C507C084A0BA40F4
42AEE53E3577F6D50BD0331C380E69146DFE0CBFC45ADD05D936DF6D3FEDB7A5
E4717291EC2DB718A247B748988F12EF3EA4D96447D2AE7331AE419D6D28507D
42D43FED> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut
/IOXMRU+MyriadPro-Regular*1 
[46{/.notdef}rp /period /.notdef /zero 3{/.notdef}rp /four /five 3{/.notdef}rp 
/nine 30{/.notdef}rp /X 167{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [9.65122 0 0 -9.65122 0 0 ]msf
226.449 99.4756 mo
(40X)
[4.95068 4.95117 0 ]xsh
226.449 111.057 mo
(0.95)
[4.95068 1.99756 4.95068 0 ]xsh
294.733 66.6177 mo
174.9 66.6177 li
174.9 64.6889 li
294.733 64.6889 li
294.733 66.6177 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
294.733 66.6177 mo
294.733 66.1177 li
175.4 66.1177 li
175.4 65.189 li
294.233 65.189 li
294.233 66.6177 li
294.733 66.6177 li
294.733 66.1177 li
294.733 66.6177 li
295.233 66.6177 li
295.233 64.189 li
174.4 64.189 li
174.4 67.1176 li
295.233 67.1176 li
295.233 66.6177 li
294.733 66.6177 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
210.51 152.334 mo
213.995 148.847 li
252.783 187.636 li
249.297 191.123 li
210.51 152.334 li
.186465 .129366 .102846 .012604 cmyk
f
210.51 152.334 mo
210.863 152.688 li
213.995 149.554 li
252.076 187.636 li
249.297 190.415 li
210.863 151.98 li
210.51 152.334 li
210.863 152.688 li
210.51 152.334 li
210.156 152.688 li
249.297 191.83 li
253.49 187.636 li
213.995 148.14 li
209.803 152.334 li
210.156 152.688 li
210.51 152.334 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
241.157 76.8438 mo
228.588 76.8438 li
230.405 75.9114 233.495 73.3977 233.339 67.1176 cv
235.823 67.1176 li
235.933 71.007 237.486 74.3978 241.157 76.8438 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!<E0#!<E3$!<E3$!W`<%!W`<%!WiB&!s/K'!s/N("9S]*"9S]*"U"l,"U"l,"
pG)/#6b20#6k81#R:J4#m^Y6$4$b7$4-k9$O[+<$k*:>%1NLA%Lr[C%hJpF&/#0I&JGBL&JYNN&f1cQ'
,_&U'H.5W'c[M[(ENk`(a'.d)']Ih)C5^k)^c!o*%D<s*@qR!+"n!&+YjE++uKc0,WH/4-9DS9-pA">.
R=FC/4BpI/k?<M0MDcR1JeAY2,jh^3*6Cd4'W!k4^eQr~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4^eQr5%+Zs5%4`t5%4`t5@Oiu5@Xp!5@Xp!5@b!"5\(*#5\(*#5\10$6"L9%6"U?&6"U?&6>$N(6>$N'
6>$N'6YH])6YH])6YQc*6YQ`)6tli*6tuo+6tur,7;E,.7;E,.7;E,.7Vi;07Vi;07VrA17VrA17r8J2
7rAS47rAS488eb688eb788eb788nh88T4t:8T>%;8T>%;8T>%;8ob4=8ob7>8ok=?961F@961F@96:LA
96:LA9Q^[C9Q^^D9QgdE9m-mF9m-mF9m6sG9m6sG:3[0J:3[0J:3[0J:O*?L:O*?L:O3EM:O3EM:jNNN
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E3%!WiE)!s8W."9\i2"U5/8#6tM?#mgnE$4@4M$k3XU%M'']&.fEc&
eYik'GM<!(Dmu,)&aD4*#ot?+!;^M+sSB\-R^Dn.kE8)0/57>2)dKU4$5Yh4Zttm5!D.p5<h@t5X7S"5
s[e&6:+"*6:4+-6UX=16q'O577BX77Rfj;7n6'>7n?0A84Z<D8P)NH8kM]J91qoN9MA,R9MJ5U9heAX:
/4P[~>
<~zzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!WiE*!s8W."9\i2"pP;;#6tM?#n%+L$k3XU%hK<c',2/s(Dn#-
)B0\<+!;aP,UFcc.P!&&0/54=2E*WX4?c"s6q0[<928;]<*!.+?!q&K@:<SR@U`hW@q0%[A7]=`AnGXe
B4kmkBP;'nBkhBtC27U#Ci!p(D/F--DJj?1Df9T6E,]f:EH6)?EcZ;CFEDVIF`hhMG'A.SGB\:VH$O[\
~>
<~zzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3&!WiE)!s8W-!s8Z/"9\i2"U,&5"U,&6"pP89#6tJ=#RC\
B#mgnE#mq"H$47+I$47.K$O[:K$47+I$47+H#m^eB#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pP8
9"pG/6"pP89"pP89"pP89#6tJ=#6tJ=#7(S@#RC\A#mgnE#mgnE#mq"H$47+I$4@4L$O[=M$O[=M~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
241.959 77.3437 mo
227.306 77.3437 li
227.306 77.3437 227.839 77.2282 228.588 76.8438 cv
241.157 76.8438 li
241.414 77.0151 241.681 77.1818 241.959 77.3437 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p
?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p
?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p
?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p?q!6p
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~?q!6p?q!6p?q!6p?q*<q?q*<q?q*<q?q*<q@7EEr@7EEr@7EEr@7EEr@7EEr@7NKs@7NKs@7NKs@RrZu
@RrZu@S&a!@S&a"@nJp$@nJp$@nT!%A5#3(A5,9)APGB+APPH,AktW.Al(]/B2Ur2BN%/6BN.57BiRD9
C0*Y=CKNh?CK`tBCg97FD-fLIDI5[LDdl!PE+D9UEb7WYF(dl\FDF5bF_sJfG&ThkG]Q7qH$2RuH[/%'
I=4R.IXjm3J:pB:JVZfAK8`>HL6+qPLm:OYMO@$`NLi`jO/#>rP,V,(Q*3k2QaBF;RCZ*ESA7iPT#XS\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T#XS\T#aY]T?'b^T?0h_T?9n`TZU"aTZ^(bTZg.dU!-7eU!6=fU!?CgU<cRiU<cRiU<lXjUX;glUXDmm
UXDmmUsi'pUsr-qV:A<sV:JBtV:JBtVUnR!VV"X"VV+^#VqFg$VqOm%W7t''W8(-(W813)WSL<+WSUB,
WS^H-Wo$Q.Wo-W/Wo-W/X5Qi3X5Zo4X5Zo4X5cu5XQ*)6XQ3/8XQ3/8XlW>:XlW>:Xl`D;Y3/S>Y3/S>
Y3/V?Y38\@YNSeBYN\kCYN\kCYj,%EYj,%FYj,%FYj5.HZ0P7IZ0P7JZ0Y=KZKtFLZKtFLZL(OOZL(OO
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I
?XI2K?smAM?smAM?smAM@:<SQ@:<SQ@U`eU@UinX@q9+\AS#FaAnG[gB4tsmBkhBtC27U$D/F0.Df9T7
EcQ5CFEM_LGBe@XH[L6iIXcluJV&Q0LPUeEN/`jZOcu&rQ^F21S=Q4BSt;OGT:_aKTV.sOTqS0RU8"BV
USFW\Unjf_V5:#cVPg>iVl-JlW2Q\pWMuntWiE)"X/i;%XK8M)Xf\_-Xfeh0Y-5%4YHP.6Yct@:Z*CR=
~>
<~6psF26psF26psF26psF26psF26psF26psF26psF26psF26psF26psF26psF26psF26psF26psI477BX6
77BX677BX677BX77Rfj:7n6'>84Z9B8P)KG8kVfN9MA,S:/4S\:f1+g;cH^r<``@)=^#$8?=$uI@Uiq[
AnPgnCi+*0EccGJH$ashJ:iQ2M2RCUPEhK'SY)XQW3!2.[CEi`_T'X:aN2KFai_fMbKS5VcHab^d*^7g
daQ^qe^`4$f@\a.g"P07gt^]@hVR,Hhr!ANiSieUioB(ZjQ,Fak2tggkND$lkiq?rl0@R!lK[^$lg*p(
~>
<~4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk
4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4[)%n5!D.o5!D.o5!D1q5<h@s5<h@s5<qJ!5X7S"5s[e&
5s[h(6:4+-6UO4/77BX677B[87n6'?84Z9C8P2TJ91qoN9MA,R9he>V9he>V9he>V9he>V9he>V9he>V
9he>V9he>V9he>V9he>V9he>V9he>V9heAX:/4PZ:/4PZ:/4PZ:/4S\:JXb^:JXb^:Jaka:f'tb:f("d
~>
<~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqGu'bqGu'bqGu'bqK"()@Z$()@Z$()Ic'(Ddl((Ddo*(`4)-)&X;1)B'M4)]K_8*#oq<
*#ot?*Zc@E+!2RI+<VgN+sJ6V,9nH[,pjrd-RU8i-n-Vr/1`A*0/,(60JG170JG490ekC;0ekC;0ekC;
1,:U?1,:U?1,:U?1,:U?1,:XA1G^gC1G^jE1c.$G1c7-J2)R6K2E!HO2E*QR2`EZT3&ilW3B9)[3B9,]
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
235.826 66.1177 mo
235.013 66.1177 li
235.842 65.7578 li
235.835 65.8784 235.83 65.998 235.826 66.1177 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!<E0#!<E3$!<E3$!W`<%!W`<%!WiB&!s/K'!s/N("9S]*"9S]*"U"l,"U"l,"
pG)/#6b20#6k81#R:J4#m^Y6#m^Y6$4-k9$OR%;$k*:>%1NLA%Lr[C%hJpF&.o*H&/,9K&JYNN&f1cQ'
,UuT'H.5W'c[M[(*3b_(Ea%c)']Ih)C5^k)^c!o*%D<s*@qR!+"n!&+>O<*+uBZ.,W?)3-9;M8-pA">.
R=FC/49jH/k?<M0MDcR1JeAY2,jh^3*6Cd3a;mj4^\Kq~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4^\Kq4^eQr5%+Zs5%4`t5%4`t5@Xp!5@Xp!5@Xp!5\(*#5\(*#5\10$5\10$6"L9%6"U?&6"U?%6>$N'
6>$N'6>-Q'6YHZ(6YHZ(6YQ`)6tli*6tuo+6tuo+7;<#,7;E,.7;E,.7;N2/7Vi;07VrA17VrA17r8J2
7rAP37rAS47rJY588eb688eb788nh88T4t:8T>%;8T>%;8T>%;8ob4=8ob4=8ok=?961F@961F@96:LA
96:LA9Q^[C9Q^^D9Q^^D9m-mF9m-mF9m6sG9m6sG:3R'H:3[0J:3[0J:O*?L:O*?L:O3EM:jNNN:jNNN
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E3%!WiE)!s8W."9\i2"U5/8#6tM?#RC_C$4@4M$k3XU%M''\&.fEc&
eYik'GM8t()If*)&aD4*#ot?+!2UK+sSB\-R^Dn.kE8)0/57>2)dKT4$5Vg4Ztql5!D.p5<h@s5<qJ!5
X@\%5sdn)6:4+-6UX=16psF377BX77Rfj:7Ros=7n?0A84Z<D8P)NH8kM]J91qoN9MA,R9MJ5U9heAX:
/4S\~>
<~zzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!WiE*!s8W."9\i2"pP;;#6tM?#mq%K$k3XU%hK9b',2/s(Ddo+
)B0\<+!;aP,UFcc.P!&&0/54<2)[ET4?c"r6UaL:928;]<*!.+?!guI@:<SR@U`eV@q0%[A7T7_AS,Od
B4kjiBP;'nBk_9rC27U#Ci!p(D/F--DJj?1Df9T6E,]f:EH6)?EcZ;CFEDVHF`hhMG'8%QGB\:VH$O[\
~>
<~zzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3&!WiE)!s8W-!s8Z/"9\i2"U,&5"U,&6"pP89#6tJ=#RC\
B#mgnE#mq"H$47+I$47+I$47+I$47+I$47+H#m^eB#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pG/
6"U,&5"U,&6"pP89"pP89"pP;;#6tJ=#7(S@#RC\A#RLeD#mgnE#mq"H$47+I$47+J$O[=M$O[=M~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
235.823 67.1176 mo
233.339 67.1176 li
233.336 67.0289 233.333 66.9389 233.33 66.8487 cv
235.013 66.1177 li
235.826 66.1177 li
235.815 66.4537 235.814 66.7884 235.823 67.1176 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
242.811 47.7549 mo
226.753 47.7549 li
223.384 41.5836 218.481 34.1443 211.51 25.1748 cv
177.867 0 li
296.868 .991297 li
260.867 25.1748 li
260.867 25.1748 250.222 35.7904 242.811 47.7549 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
232.27 60.6346 mo
231.349 57.3489 229.773 53.4292 227.291 48.7549 cv
242.201 48.7549 li
240.289 51.9409 238.631 55.2029 237.484 58.3698 cv
232.27 60.6346 li
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
242.201 48.7549 mo
227.291 48.7549 li
227.117 48.4268 226.936 48.0905 226.753 47.7549 cv
242.811 47.7549 li
242.605 48.0875 242.402 48.4204 242.201 48.7549 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
140.234 107.285 mo
124.867 107.285 li
217.344 67.1176 li
232.711 67.1176 li
140.234 107.285 li
232.697 62.3164 mo
228.398 62.3164 li
228.405 62.313 li
232.696 62.313 li
232.696 62.3143 232.697 62.3151 232.697 62.3164 cv
.362676 .0419013 .272374 .00341802 cmyk
f
233.06 64.189 mo
224.086 64.189 li
228.398 62.3164 li
232.697 62.3164 li
232.845 62.9683 232.965 63.5914 233.06 64.189 cv
.604669 .0198062 .329442 .0010071 cmyk
f
232.453 61.313 mo
230.708 61.313 li
232.27 60.6346 li
232.334 60.8639 232.395 61.0898 232.453 61.313 cv
.362707 .0413825 .27277 .00335698 cmyk
f
232.696 62.313 mo
228.405 62.313 li
230.708 61.313 li
232.453 61.313 li
232.541 61.6537 232.622 61.9863 232.696 62.313 cv
.938628 .376867 .966857 .337652 cmyk
f
233.288 66.1177 mo
219.646 66.1177 li
221.784 65.189 li
233.198 65.189 li
233.236 65.5069 233.265 65.816 233.288 66.1177 cv
.362707 .0413825 .27277 .00335698 cmyk
f
232.711 67.1176 mo
217.344 67.1176 li
219.646 66.1177 li
233.288 66.1177 li
233.307 66.3665 233.321 66.6106 233.33 66.8487 cv
232.711 67.1176 li
233.198 65.189 mo
221.784 65.189 li
224.086 64.189 li
233.06 64.189 li
233.114 64.5307 233.16 64.8646 233.198 65.189 cv
.938628 .376867 .966857 .337652 cmyk
f
243.765 62.3164 mo
236.324 62.3164 li
236.324 62.315 236.324 62.3144 236.325 62.313 cv
243.773 62.313 li
243.765 62.3164 li
277.29 47.7549 mo
261.923 47.7549 li
329.769 18.2861 li
345.136 18.2861 li
277.29 47.7549 li
.362676 .0419013 .272374 .00341802 cmyk
f
239.454 64.189 mo
235.991 64.189 li
236.074 63.5727 236.186 62.9486 236.324 62.3164 cv
243.765 62.3164 li
239.454 64.189 li
.604669 .0198062 .329442 .0010071 cmyk
f
246.075 61.313 mo
236.564 61.313 li
236.815 60.345 237.125 59.3618 237.484 58.3698 cv
259.62 48.7549 li
274.988 48.7549 li
246.075 61.313 li
.362707 .0413825 .27277 .00335698 cmyk
f
243.773 62.313 mo
236.325 62.313 li
236.397 61.9826 236.478 61.6471 236.564 61.313 cv
246.075 61.313 li
243.773 62.313 li
274.988 48.7549 mo
259.62 48.7549 li
261.923 47.7549 li
277.29 47.7549 li
274.988 48.7549 li
.938628 .376867 .966857 .337652 cmyk
f
235.842 65.7578 mo
235.852 65.5699 235.865 65.3789 235.881 65.189 cv
237.151 65.189 li
235.842 65.7578 li
.362707 .0413825 .27277 .00335698 cmyk
f
237.151 65.189 mo
235.881 65.189 li
235.909 64.8578 235.945 64.5257 235.991 64.189 cv
239.454 64.189 li
237.151 65.189 li
.938628 .376867 .966857 .337652 cmyk
f
236.324 62.3164 mo
232.697 62.3164 li
232.697 62.3151 232.696 62.3143 232.696 62.313 cv
236.325 62.313 li
236.324 62.3144 236.324 62.315 236.324 62.3164 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&
>ms1'?49:(?49:(?49:(?49=)?4BC*?O]L+?O]L+?OfR,?OfR,?k,[-?k5a.@1Pj/@1Yp0@1Ys1@M)-4
@M)-4@hM<6@hVB7A.qN9A/%T:AJIc<AJRi>Af"#@Af+,BB,O;DBGsJFBH'PHBcKbKC*$"NCEH1QCEQ7R
Ca)LUD'M^YDC%s]D^J-_D^\9bE%+KfE@X`iE\0umF"^5qF>-DtFYZ]$Fu2r(FuE)+G;r>/GWJS4Gs+n9
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Gs+n9Gs+n9Gs+n9Gs+n9H9G":H9P(<H9P(<H9P(<H9P(<H9P(<H9P(<H9Y.=H9Y.>HTt7?HTt7?HTt7?
HU(=@HU(=@HU(=@HU(=@HU(=AHU1CBHpLLCHpLLCHpLLCHpLLCHpURDHpUREHpUREHpUREHpUREI7$aG
I7$aGI7$aGI7$aHI7$aHI7-gII7-gII7-gII7-gII7-gJIRR!LIRR!LIRR!LIRR!LIRR!LIR['MIR['N
IR['NIn!0OIn!0OIn*6PIn*6PIn*6PIn*6QIn*6QJ4NESJ4NESJ4NESJ4NESJ4NESJ4WKTJ4WKUJ4WKU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>[1N=>[1N=>[1N=>[1N=?!U`A?!U`A?!^iD?=$rE?XI/I?smAM?t!JP@:E\T@UinXA7T4]AS#Fa
AnG[gB4tsmBkhBtCMRa&D/F0.DJjB3E,fl<EcZ;DFEM_KG'8(RG^+IXG^+LZH$O[\H$O[\H$O^^H?sm`
H?sm`H?smaH[C*dH[C*dH[C*eI!g<hI!g<hI!g<hI!pEkI=6NlI=6NlIXZ`pIXZ`pIXcisIt)rtIt)rt
~>
<~$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I
$47+I$47+I$47+I$47+I$47.K$O[=M$O[=N$k*OQ$k3XT%1NdW%Ls![%hK9`&.oKe&eYfj'GM8s()@]&
(`4,/)B0V8*?H7D+<_pQ,:"Q]-7:2j.P!&%/h\k30f(XD2E*TU4$5Vf4?P_h4Ztqk4Ztql5!D.o5!D1q
5<h@s5<qJ!5X7S"5s[e&5s[e'6:+"*6:+%,6UO4.6UX=16psF277BX677BX77Rfj:7Ros=7n6'>84Z9B
~>
<~77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77BX677BX677BX677BX677BX677BX677Ka97Rfj:7Rfj:7Rfj:7Rfj:7n6'>7n6'>7n?0A84Z9B84Z<D
8P)KF8P2TI8kM]J8kM`L91qoN91qrP9MA,R9MA,S9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V
9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiE*!s8W-!sA`0"9\l3"pP89#6t
M?#RLeE$4@4M$k3[V%hB3`&eYfi&eYfj',)#m',)#m',2,p'GM5q'GM5q'bqGu'bqGu'c%Q#()@Z$()@
Z%(Ddl((Ddl)(`4),(`4),(`=2/)&X;0)&X;1)B'M4)B'M4)B'P6~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
235.991 64.189 mo
233.06 64.189 li
232.965 63.5914 232.845 62.9683 232.697 62.3164 cv
236.324 62.3164 li
236.186 62.9486 236.074 63.5727 235.991 64.189 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tD
G7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tD
G7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tD
G7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tD
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7$tDG7.%EG7.%EG7.%EGRI.FGRI.F
GRI1GGRI1GGRI1GGRR7HGmm@IGmm@IGmm@IGn!FJH4<OLH4<OLH4EXNHO`aOHOigPHOigPHk/pQHk9!R
I1T-TI1]3UIM,BWIM,BWIhPT[J.tc]J/(i^JJM#`JJV,bJf%;eK,IJgK,RPhKH*hmKcO"oL)s1rL*0@u
LETP"La,e&M'Z%)MC)7-M^VL1N%.a4N@Rs8N@e*;N\=??O"jTCO>BiGOYp,LOuHAPP;uVUPrhtZQ9J:`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Q9J:`Q9J:`Q9J:`Q9J:`Q9J:`Q9S@aQTnIbQTnIbQTnIcQTnIcQU"OdQU"OdQU"OdQU"OdQp=XeQpF^f
QpF^gQpF^gQpF^gQpOdhQpOdhR6jmiR6jmiR6jmjR6sskR6sskR6sskR6sskR6sskRRC-mRRC-mRRC-n
RRC-nRRL3oRRL3oRRL3oRmg<pRmg<pRmpBqRmpBrRmpBrRmpBrRmpBrRn$ErS4?NsS4?NsS4?NsS4HTt
S4HTuS4HTuS4HTuSOc^!SOld"SOld"SOld"SOld#SOuj$SOuj$SOuj$Sk;s%Sk;s%SkE$'SkE$'SkE$'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%P
G'8%PG'8%PG'8%PG'8(RGB\7TGB\7TGBe@WG^+IXG^4R[H$O^^H?sm`H[C*eI!g<iI=6NmIt)rtJ:N0#
JUrE)JqJ]/KS>,6L5(J=LkpnEMMd=NN/W^TNK0$[O-#KdP*2#nQ'IW"Q'IW"Q'R`%QBmi&QBmi&Q^=&*
Q^=&*Q^F/-R$a8.R$a8.R@0J2R@0J2R@0M4R[T\6R[T\6R[]e9S"#n:S"#n;S=H+>S=H+>S=H.@SXl=B
~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mq"H$47+I$47+I$47+I$O[=M$O[=N$k*OQ%1NaU%LrsY%M''\%hK9a&J5Tf',)&o'bqK"
(Ddo+)&aG6*$$%@+<VgO,:"Q]-7:5l.P!&%/h\n51,LjH2`NfY4?Yhj4Ztql5!D.o5!D1q5<h@s5<qJ!
5X7V$5s[e&5sdn)6:+"*6UO4.6UO706psF26q'O577BX67Rfj:7Ros=7n6'>84Z9B84cBE8P)KF8kM]J
~>
<~8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J
8kM]J8kM]J8kM]J8kM]J8kM`L91qoN91qoN91qoN91qoN9MA,R9MA,R9MA,S9he>V9he>W:/4PZ:/4S\
:JXb^:Jaka:f'tc;,L1f;,L4h;GpCk;c?Un;c?Un;cH^q<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
~>
<~zzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)!s8W-!sA`0"9er4"
U,)7"pP;;#RC\B#mq"I$OdFQ%1WmZ&.oNf',2,p'GM5q'GM5r'bqGu'bqGu'bqK"()@Z$()@Z$(Ddl((
Ddl((Ddl)(`4),(`4),(`4,.)&X;0)&X;0)&X>2)B'M4)B'M4)]K_8)]K_8*#oq<~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
236.564 61.313 mo
232.453 61.313 li
232.395 61.0898 232.334 60.8639 232.27 60.6346 cv
237.484 58.3698 li
237.125 59.3618 236.815 60.345 236.564 61.313 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%>RO"%
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>RO"%>RO"%>RO"%>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&>mj+&
>ms1'?49:(?49:(?49:(?49:(?4B@)?O]I*?O]I*?OfR,?k,[-?k,[-?k5a.@1Pj/@1Yp0@1Yp0@M)-4
@M)-4@hM<6@hVB7A.qK8A/%T:AJIc<AJRi>Af"#@Af+)AB,O;DBGsJFBH'PHBcK_JC*$"NCEH1QCEQ7R
Ca)LUD'M^YDC%s]DC/$^D^\9bE%+KfE@X`iE\0umE\C,pF"pDuF>?T#FYli'FuE)+G;r>/GWSY5Gs+q:
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Gs+q:Gs+q:Gs+q:Gs+q:Gs+q;Gs5"<Gs5"<Gs5"<Gs5"<H9P+=H9Y1>H9Y1>H9Y1?H9Y1?H9Y1?H9b7@
H9b7@H9b7@HU(@AHU(@BHU1FCHU1FCHU1FCHU1FCHU1FCHU:LDHU:LDHpUUFHpUUFHpUUFHpUUFHp^[G
Hp^[GHp^[GHp^[HHp^[HI7-jJI7-jJI7-jJI7-jJI7-jKI7-jKI76pLI76pLI76pLI76pLI76pMIR[*O
IR[*OIR[*OIR[*OIR[*OIRd0QIRd0QIRd0QIn*9RIn*9RIn3?SIn3?SIn3?SIn3?TIn3?TIn<EUJ4WNV
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b?;>[1N=
>[1N=>[1N=>[1N=>[1N=>[1N=?!U`A?!U`A?!^iD?=$rF?XI/I?smAM?t!JP@:E\T@UinXA7T4]AS#Fa
AnG[gB4tsmBkhBtCMRa&D/F-,DJjB3E,fl;EH6)@F*)PIG'8(RG^+IXG^+IXG^+IXG^4R[H$O[\H$O[\
H$Xd_H?sm`H?sm`H@(!cH[C*dH[C*dH[C-fI!g<hI!g<hI!g<hI!pEkI=6NlI=6NlIXZ`pIXZ`pIXZ`q
~>
<~$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I
$47+I$47+I$47+I$47+I$47.K$O[=M$O[=N$k*OQ$k3XT%1NdW%Ls![%hK9`&.oKe&eYfj'GM8s()@]&
(`4,/)B0V8*?H7D+<_pQ,:"Q]-7:2j.P!&%/h\n50f(XD2E*TV4$5Vf4?P_h4Ztqk4Zttm5!D.o5!M7r
5<h@s5X7S"5X7S#5s[e&5s[e'6:+"*6:+%,6UO4.6UO706psF26q'O577BX67Rfj:7Rfj;7n6'>7n6*@
~>
<~77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77BX677BX677BX677BX677BX677BX677BX677BX677Ka97Rfj:7Rfj:7Ros=7n6'>7n6'?84Z9B84Z9B
8P)KF8P)KG8kM]J8kM`L91qoN91qrP9MA,R9MJ5U9he>V9he>V:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ
:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiE*!s8W-!sA`0"9\l3"pP89#6t
M?#RLeE$4@4M$k3[V%hB3`&eYfi&eYik',)#m',)#m',2,p'GM5q'GM8s'bqGu'bqGu'c%Q#()@Z$()@
Z%(Ddl((Ddl)(`4),(`4),)&X;0)&X;0)B'M4)B'M4)B'M5)]K_8~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
236.325 62.313 mo
232.696 62.313 li
232.622 61.9863 232.541 61.6537 232.453 61.313 cv
236.564 61.313 li
236.478 61.6471 236.397 61.9826 236.325 62.313 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'
RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'
RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'
RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'RPBC'Rk]L)Rk]L)Rk]L)Rk]L)RkfR*
RkfR*RkfR*RkfU+Rko[-S25d.S25d.S2>j/S2>j0S2Gp1SMc$2SMl*4SMl-5SMu36Si;<8SiDB9SiDB:
T/hQ<T/qZ?TK@iATKIoCTKIoCTfn)FTg"2IU-FALU-OGMUHsVPUI'_TUdKnWUd^%ZV+-4]V+6:_VFZLd
Vb2ahVb;gjW(i'oW(r-rWDJC"W_nU'W`+a+X&Op/X&b'4XB:<9XBLE=X]pTBX^-`GY$ZuMY$m)RY@E>X
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Y@E>XY@E>YY@E>YY@NDZY@ND[Y@NAZY@NAZY[iJ\Y[rP]Y[rP]Y[rP^Y[rP^Y[rP^Y[rP_Y\&V`Y\&V`
Y\&VaY\&VaY\&VaZ"JedZ"JedZ"JeeZ"JeeZ"JeeZ"JefZ"ShfZ"ShgZ"ShgZ"ShgZ"ShhZ"ShhZ"\ni
Z>#"kZ>#"kZ>#"lZ>#"lZ>#"lZ>,(nZ>,%mZ>,%nZ>,%nZ>,%nZ>5+pZ>5+pZ>5+qZ>5+qZYP4rZYP4s
ZYY:tZYY:uZYY7tZYY7tZYY7uZYb>!Zu(G"Zu(G#Zu(G#Zu(G#Zu1M%Zu1M%Zu1M%[;LV'[;LV'[;U\(
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 .660606 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@9S5R[T\6R[T\6R[T\6R[]e9S"#n:S"#n;S=H+>S=H.@SXl=CSt;OGT:_aJTV.sNTqS0R
U8"BWUSFT[Unjf_VP^5fVl-GjW2Q\pWN)tuWiN2$X/rD(Xf\_-Y-+q1Y-+q1Y-+t3YHP.5YHP.5YHP.5
YHP17Yct@9Yct@9Yct@9Yct@9Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=ZEgdAZEgdAZEgdBZa7!EZa7!E['[3I
~>
<~0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170ekC;0ekC;1,:U?1,C^B1GgpF2)R6K2E!HO2`EZT3&ru[3]fDb4?Pbi5!D1q
5X7V%6:4.077Ka:84cEG92&&S:/=\`;H$Ln<E<1'=^#$7?!^lG@:E\T@q0"Y@q0"ZA7T4]A7T4]AS#Fa
AS#IcAnGXeAnGXfB4kjiB4kjjBP;'mBP;'nBk_9qBk_<sC2.KuC2.O"CMR^$CM[g'Ci!p(D/F-,D/F--
~>
<~JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'
JUrB'JUrB'JUrB'JUrB'JUrB'JUrE)JqAT+JqAT+JqAT+JqAW-K7ef/K7ef/K7no2KS5#3KS5&5KnY57
KnY89L5(G;L5(G<LPLY?LPLY?LPL\ALkpkCLkpkCLkgb@LPLY?L5(G;L5(G;L4t>8KnY57KnY57KnY57
KnY57KnY57KnY57KS5#3KS5#3KS5#3KS5#3KS4u1K7ef/K7ef/K7ef/K7ef.JqAT+JqAT+JqAT+JqAT+
~>
<~$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k3XT%1NaU%1NaU%1NaU%LrsY%LrsZ%hB0]&.fBa&.fEc&J>]h&ebol',2,p'bqK"(Ddl(
(`4/1)]Th<*?H7D+X&$R,:"Q^-R^Gp/1iJ-0etOB2E3`Z4[25"77Kd;7n6*@84Z<D8P)NH8kM`L91qrP
9MA/T9hnGY:/=Y]:f'tb;,L1f;GpCk;c?Uo<)cjt<E3(#<``@(='/R,=]nm1>$>*5>?b<9>[1N=?!U`A
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
235.013 66.1177 mo
233.288 66.1177 li
233.265 65.816 233.236 65.5069 233.198 65.189 cv
235.881 65.189 li
235.865 65.3789 235.852 65.5699 235.842 65.7578 cv
235.013 66.1177 li
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
233.33 66.8487 mo
233.321 66.6106 233.307 66.3665 233.288 66.1177 cv
235.013 66.1177 li
233.33 66.8487 li
235.881 65.189 mo
233.198 65.189 li
233.16 64.8646 233.114 64.5307 233.06 64.189 cv
235.991 64.189 li
235.945 64.5257 235.909 64.8578 235.881 65.189 cv
level3{
gsave
clp
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.3808e-6 77.3438 -77.3438 -3.3808e-6 237.367 0 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/two <1C60D8A8C9B7BA8F1527B2EC394F787E2982FEC2798AFE55AD855A2728
5088468A0A696F4A6A31ABC383FEEAE11F0F42DB13927828F27CE59F66426680
A40736011A5385A0DA25CABE2121802EC1A430A3032563A259> |-
/L <1C60D8A8C9B74383B83A0865BA98FADBEF057A578DC1081149AE01CED059
08393756A8> |-
/P <1C60D8A8C9B7876E544EA3FF0EFBC988D299654149CEDEE7EF8A501DF5A6
B610A76FCC2A68DE43AAAD2367EF1B69766AEDC7F4E366D228E7A255CF249177
0E01672060D5F7FDB3EF44F4677610ACC755DC168685A7FDF5357A797B64586F
BD5027DF4E6218474AFED0> |-
/S <1C60D8A8C9B7AED84059EE7383C85E038B766AD65219B41091316F33D401
17AD7BBD71FD866ADEF24EE1D058FF481331D6FFAE5223E1F898254FAAC6DCF0
E48B8E57231E73AAB3D48748623DFBCB8788DA89668C38C00765BBFF8666D1ED
B1DEFED3A69F1D9B7B53815BC37EE3A89A0358A23CC15E200BA382794E9FC021
6E207B7273A171D9B319D3B3E8F440B8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 32 /space put
dup 50 /two put
dup 76 /L put
dup 80 /P put
dup 83 /S put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
/.notdef /four /five 3{/.notdef}rp /nine 18{/.notdef}rp /L 3{/.notdef}rp 
/P 2{/.notdef}rp /S 4{/.notdef}rp /X 167{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [8.48532 -8.48532 -8.48532 -8.48532 0 0 ]msf
260.778 337.275 mo
(420 LP)
[4.35315 -4.35315 4.35315 -4.35315 4.35312 -4.35312 1.79886 -1.79886 4.00513 -4.00513 0 0 
]xysh
IOXMRU+MyriadPro-Regular*1 [8.48532 8.48532 8.48532 -8.48532 0 0 ]msf
334.769 200.952 mo
(505 LP)
[4.35315 4.35315 4.35315 4.35315 4.35312 4.35313 1.79886 1.79886 4.00513 4.00511 0 0 
]xysh
IOXMRU+MyriadPro-Regular*1 [0 -12 -12 0 0 0 ]msf
264.712 255.085 mo
(450 SP)
[-6.15576 -6.15576 -6.15576 -2.54395 -5.91602 0 ]ysh
362.52 169.984 mo
362.02 169.984 li
362.021 174.117 361.573 177.861 360.863 180.534 cv
360.51 181.87 360.087 182.938 359.65 183.633 cv
359.432 183.981 359.212 184.232 359.016 184.383 cv
358.817 184.534 358.659 184.585 358.513 184.585 cv
358.367 184.585 358.21 184.534 358.011 184.383 cv
357.665 184.122 357.258 183.541 356.894 182.699 cv
355.784 180.17 355.003 175.406 355.007 169.984 cv
355.007 165.851 355.454 162.108 356.164 159.435 cv
356.517 158.1 356.94 157.032 357.377 156.337 cv
357.595 155.989 357.815 155.737 358.011 155.587 cv
358.21 155.436 358.367 155.385 358.513 155.384 cv
358.659 155.385 358.817 155.436 359.016 155.587 cv
359.362 155.848 359.769 156.429 360.133 157.27 cv
361.243 159.8 362.024 164.563 362.02 169.984 cv
362.52 169.984 li
363.02 169.984 li
363.019 165.778 362.57 161.971 361.83 159.179 cv
361.458 157.782 361.018 156.638 360.497 155.805 cv
360.235 155.389 359.952 155.047 359.626 154.795 cv
359.303 154.544 358.921 154.383 358.513 154.384 cv
358.106 154.383 357.723 154.544 357.4 154.795 cv
356.833 155.238 356.384 155.946 355.978 156.87 cv
354.775 159.638 354.011 164.46 354.007 169.984 cv
354.008 174.191 354.457 177.998 355.197 180.791 cv
355.569 182.188 356.009 183.331 356.53 184.164 cv
356.792 184.581 357.075 184.923 357.4 185.175 cv
357.723 185.425 358.106 185.586 358.513 185.585 cv
358.921 185.586 359.303 185.425 359.626 185.175 cv
360.193 184.731 360.643 184.024 361.049 183.099 cv
362.252 180.331 363.016 175.509 363.02 169.984 cv
362.52 169.984 li
f
433.073 185.337 mo
433.073 184.837 li
416.627 184.837 li
416.627 156.794 li
432.573 156.794 li
432.573 185.337 li
433.073 185.337 li
433.073 184.837 li
433.073 185.337 li
433.573 185.337 li
433.573 155.794 li
415.627 155.794 li
415.627 185.837 li
433.573 185.837 li
433.573 185.337 li
433.073 185.337 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B7F7BFCD4F35F00D72B7767DFC842FAE8A199F5544227C11AE
C2C2E034A1ED399FCEE30EED4E3DDA5CEFF9C850B151694F54FFB7DAB5AEF18E
FC8A3BBA4E93D0E93DC4EB5F5C4D965A719E24882CCFB77B99AB582C91D6FB57
76207F5CB91B312857E66A5BA7986B0D1C> |-
/M <1C60D8A8C9B6D9EA7C52091B2F321DB670D36831ED5DA1B4F0A6AE1DBF56
67523164FB9115813E3E6C4F0B3D109E88B7D969BB17EE6CC65952D424D238DD
3D16926761EE8CF9691B77724AE414414C1A9563A0BF40A108CE7B2BD5A6A1BB
273BB63CB0BA7DE0541C9602C90F4CF5524AE927CA6BF7AB> |-
/O <1C60D8A8C9B624F90A384922548AEB548F914BB385DF2ACCD11C1A973DE7
F90E35B115372FBB06FD1EF26E550AE74F9EAFD5750C3B10D7D5552E677804A6
68684A5FD460DD7A001E9E5572492B9F0D4659D828439576DD38D16E2BB2BBA6
41BE8C22397F> |-
/a <1C60D8A8C9B759462DD3040289328E0F683F711B3894968D96516BD44867
7C9FAA746D5350AF3B117B4AC08A2D715CA85E807BE8FDCC75A5D4F542F38F55
0E802EEAE548F2FF8506F9AD572646E7A47C57311AB7620557585596A5F6F3A5
51832222EBEC5B08135E3A2160C305A55CF05AE83FFE02EF308999F5FC49FAB1
E4709190FF594124A9626360300AD05498BBB95EF9BD55E7C80D9F3F68B61D3D
CA5974A75DB1D3D3AE73A6A3AA> |-
/e <1C60D8A8C9B7A66FB4E9209DE48656974FCFF6918874F1136043F0EE8172
F4D638772B3B7F4B5346ABF7A80D482099561C97EACC6F77A33F735C7F526F3A
D9C6597D65CC687E05FF3F3D831F11A36D65E3B2668B0C94721274A694DE1BF9
4BC567A2314B6F8010DDBF586B4DD5CDAA4D122F00> |-
/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10C44EFEDC74AE4DA
23DDA2D9D4E78E5DFA35F442401F635CE4EC97BE57329CAA46C6A3C6CC0DEBBD
4CB8E8B931000F3668CFD86F5BA98BC18E8B1DBC445FD65D7EC5C67C2E7AD143
C336B225F9618FB19106222772767E98CA6DE74BDC9E6E1E91AF0A9BC200F979
51D7A45F25C7DC5AD757FFD60E2D9250E771B55218F79A54B61A1C40C396FB> |-
/r <1C60D8A8C9B825FA5220A9740606B50B33E010C4BCC4C01AD0977A1A669B
FA1A38816F7F3AFEDC1C339BC9FE77C7DB80E163C95852F64B999476B735BD17
BE5250D15A9BA973A020C54D1BE5E2686C3A86A44295463DE15129469ED396D6
199BF1BFF0CA9745121C3A314D02EB3FCC22E2B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 67 /C put
dup 77 /M put
dup 79 /O put
dup 97 /a put
dup 101 /e put
dup 109 /m put
dup 114 /r put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 
/.notdef /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 8{/.notdef}rp 
/L /M /.notdef /O /P 2{/.notdef}rp /S 4{/.notdef}rp 
/X 8{/.notdef}rp /a 3{/.notdef}rp /e 7{/.notdef}rp /m 4{/.notdef}rp 
/r 141{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [9.12061 0 0 -9.12061 0 0 ]msf
441.394 166.784 mo
(CMOS)
[5.29004 7.33301 6.28418 0 ]xsh
438.534 177.729 mo
(Camera)
[5.22656 4.39648 7.60645 4.56934 2.92773 0 ]xsh
359.4 176.993 mo
355.468 176.981 li
355.174 174.898 355.005 172.513 355.007 169.984 cv
355.007 167.311 355.194 164.802 355.518 162.64 cv
358.513 162.64 li
361.552 162.936 li
361.85 165.031 362.022 167.435 362.02 169.984 cv
362.02 169.984 li
362.02 172.457 361.86 174.79 361.58 176.839 cv
359.4 176.993 li
354.457 176.978 mo
337.269 176.927 li
337.269 162.64 li
354.506 162.64 li
354.188 164.824 354.009 167.322 354.007 169.984 cv
354.008 172.502 354.169 174.878 354.457 176.978 cv
340.785 164.961 mo
340.785 169.984 li
340.785 175.009 li
345.134 172.497 li
349.486 169.984 li
345.134 167.472 li
340.785 164.961 li
336.269 176.924 mo
317.781 176.869 li
303.552 162.64 li
336.269 162.64 li
336.269 176.924 li
.362676 .0419013 .272374 .00341802 cmyk
f
337.269 176.927 mo
336.269 176.924 li
336.269 162.64 li
337.269 162.64 li
337.269 176.927 li
.938628 .376867 .966857 .337652 cmyk
f
317.781 176.869 mo
317.367 176.868 li
302.845 162.64 li
303.552 162.64 li
317.781 176.869 li
f
362.599 176.766 mo
362.869 174.719 363.018 172.42 363.02 169.984 cv
363.02 169.984 li
363.02 169.984 li
363.02 167.484 362.861 165.125 362.576 163.036 cv
415.627 168.211 li
415.627 173.016 li
362.599 176.766 li
.362676 .0419013 .272374 .00341802 cmyk
f
355.468 176.981 mo
354.457 176.978 li
354.169 174.878 354.008 172.502 354.007 169.984 cv
354.009 167.322 354.188 164.824 354.506 162.64 cv
355.518 162.64 li
355.194 164.802 355.007 167.311 355.007 169.984 cv
355.005 172.513 355.174 174.898 355.468 176.981 cv
361.58 176.839 mo
361.86 174.79 362.02 172.457 362.02 169.984 cv
362.02 169.984 li
362.022 167.435 361.85 165.031 361.552 162.936 cv
362.576 163.036 li
362.861 165.125 363.02 167.484 363.02 169.984 cv
363.02 169.984 li
363.02 169.984 li
363.02 169.984 li
363.018 172.42 362.869 174.719 362.599 176.766 cv
361.58 176.839 li
363.02 169.984 mo
363.02 169.984 li
363.02 169.984 li
.938628 .376867 .966857 .337652 cmyk
f
415.627 173.016 mo
415.627 168.211 li
415.955 168.243 li
415.955 172.993 li
415.627 173.016 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7BA8F155F998EB98B2861EA3AB552B4E45B53DBE462EFF6
0F5DAAAD9CF5ADECEB83D932466E1D32D6D58D0D419C6D3A463E094C> |-
/at <1C60D8A8C9B61400811C832F6FE03681A4B4A7CD0DB1EEEA776B596C834
16607086547F456EED5683882FA7091CC194D60DD27C5A203114B87E3F9C5A1D
E5F5EDE37579E77BD8287759F741D48ABAA2E877413BD08419DF352B1C1EC27F
47F20499014A518B8FC450F8421F6939D4B8400195961C040C6BBD29B5EBF2C0
5AD092296AAE7B53B6726C135B9690B76E02EFAD648843EBCE1964D87101BE59
27AC58B298D85C8769A213E708E1DEF77BA26560511C57CBE931E695DF5C2F0B
6F172A215D6DD1A12C9D4BAE422F7670FD7E975043258DD07C50A8D9C718F35F
BDCD5E54A9A2A51EC3FD865D03211177890FE4CD5679C71FB39126DB2D85D516
A87FE0DD6F29047EE78657BC991FCA6E14322F59203F495801D2A64295893644
CDFBDD1B90E8690B6FBD45713055BE32AD141D8CEBCCBA23FED63A41E7F8F03C
52501ECBEFD2F10FF2ED6> |-
/W <1C60D8A8C9B6838264C86BB673890AC47F4BD9148854F415837829F55AF9
84A73E38EC9FD20446E0E19B213640884A5A4877D4D74A6DA51F2419D978D464
4953C73C24D8FF2678B4D6936B5603CA1E651567EA4B597015F1B5FC2E3D03B4
762D3B98D2D5864D59579C63BFB110C2BCC545CC3BEB092CE4EC96D21196F889
DD72550015CD7590E5703CC0649E> |-
/n <1C60D8A8C9B790A862F793CE5984292368D14C25090F13C59AB6A5160615
285F0ED3CBCE512383C3878835926BFD10B9FCC2427DAD50675BA10B8D3D6CCC
CDC9457848353594E4269162567708094297D619E96D789F6B32D23000A67AC9
3D08E6B7F3B227> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 49 /one put
dup 64 /at put
dup 87 /W put
dup 110 /n put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at 2{/.notdef}rp 
/C 8{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S 3{/.notdef}rp /W /X 8{/.notdef}rp /a 3{/.notdef}rp /e 
7{/.notdef}rp /m /n 3{/.notdef}rp /r 141{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [11.0767 -4.61592 -4.61592 -11.0767 0 0 ]msf
130.212 95.7105 mo
(10 mW)
[5.68213 -2.36787 5.68214 -2.36788 2.34822 -.978554 9.23781 -3.8496 0 0 ]xysh
129.266 111.705 mo
(@ 520 nm)
[8.16376 -3.40202 2.34822 -.978554 5.68213 -2.36787 5.68214 -2.36787 5.68214 -2.36788 2.34821 -.978554 
6.14728 -2.56171 0 0 ]xysh
423.828 407.776 mo
423.828 394.991 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
424.328 407.776 mo
424.328 394.991 li
423.328 394.991 li
423.328 407.776 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
423.828 393.252 mo
424.832 394.991 li
425.835 396.729 li
423.828 396.729 li
421.82 396.729 li
422.824 394.991 li
423.828 393.252 li
cp
f
423.828 407.776 mo
436.614 407.776 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
423.828 408.276 mo
436.614 408.276 li
436.614 407.276 li
423.828 407.276 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
438.351 407.776 mo
436.614 408.78 li
434.875 409.784 li
434.875 407.776 li
434.875 405.769 li
436.614 406.772 li
438.351 407.776 li
cp
f
423.828 407.776 mo
414.787 416.817 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
423.474 407.422 mo
414.433 416.463 li
415.14 417.17 li
424.181 408.129 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
413.558 418.045 mo
414.078 416.108 li
414.596 414.168 li
416.016 415.588 li
417.436 417.007 li
415.498 417.527 li
413.558 418.045 li
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B74CDDFD10D5FAA113AA85554B21944464AFD1B3751649A117
7E4D7315A00174FB11ABCC0416A1CEC561D8F56F441A29946A3C2F85FC7B5140
8D59F42F44BC1CF8A39531C523628F595BBA584EE35459E174065775D39DC04B
03693F> |-
/y <1C60D8A8C9B744512CF2C00F890C8FA0F8B10FA0BCD74B6A214E866AB68A
96ED7F77308E9592ACC5D3631FDB41633BD4B579DF6D04CABB7588482BC92B59
696D64E3A6D99012CBE78A3625FC6B4D7A0601384C0CDE480AE038032833F6A1
DD7A9E9E435D948E8635E3BC1C4A> |-
/z <1C60D8A8C9B76F05C2A10BBA370C3E3C8D18619F2252373EF5D4F86E1884
BDB6A8328916ACC1FCF2299B27DD5504EAE84C347840346B244F11842628DA3F
859196E347613F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at 2{/.notdef}rp 
/C 8{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp 
/S 3{/.notdef}rp /W /X 8{/.notdef}rp /a 3{/.notdef}rp /e 
7{/.notdef}rp /m /n 3{/.notdef}rp /r 5{/.notdef}rp /x /y 
/z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [7.67137 0 0 -7.67137 0 0 ]msf
418.926 416.817 mo
(x)sh
432.779 403.918 mo
(y)sh
417.435 396.729 mo
(z)sh
411.094 377.277 mo
411.094 377.777 li
415.228 377.776 418.971 378.223 421.645 378.933 cv
422.98 379.286 424.048 379.709 424.743 380.147 cv
425.091 380.365 425.343 380.585 425.493 380.781 cv
425.644 380.98 425.695 381.137 425.696 381.284 cv
425.695 381.43 425.644 381.587 425.493 381.786 cv
425.232 382.131 424.651 382.539 423.809 382.903 cv
421.28 384.013 416.516 384.794 411.094 384.789 cv
406.962 384.79 403.219 384.343 400.545 383.633 cv
399.21 383.28 398.142 382.857 397.447 382.42 cv
397.099 382.202 396.848 381.982 396.697 381.786 cv
396.546 381.587 396.495 381.43 396.495 381.284 cv
396.495 381.137 396.546 380.98 396.697 380.781 cv
396.958 380.435 397.539 380.028 398.381 379.664 cv
400.91 378.554 405.673 377.773 411.094 377.777 cv
411.094 377.277 li
411.094 376.777 li
406.888 376.777 403.081 377.227 400.289 377.967 cv
398.892 378.339 397.749 378.779 396.915 379.3 cv
396.499 379.562 396.158 379.845 395.905 380.171 cv
395.654 380.494 395.494 380.876 395.495 381.284 cv
395.494 381.691 395.655 382.073 395.906 382.396 cv
396.349 382.964 397.057 383.412 397.981 383.819 cv
400.748 385.022 405.57 385.785 411.094 385.79 cv
415.301 385.789 419.109 385.34 421.901 384.6 cv
423.298 384.228 424.442 383.788 425.275 383.267 cv
425.691 383.005 426.033 382.722 426.285 382.396 cv
426.536 382.073 426.697 381.691 426.696 381.284 cv
426.697 380.876 426.536 380.494 426.285 380.171 cv
425.842 379.603 425.134 379.154 424.21 378.747 cv
421.442 377.544 416.619 376.781 411.094 376.777 cv
411.094 377.277 li
f
496.976 369.127 mo
495.976 369.127 li
495.976 374.103 493.962 378.598 490.702 381.86 cv
487.441 385.12 482.946 387.133 477.97 387.133 cv
472.995 387.133 468.499 385.12 465.238 381.86 cv
461.978 378.598 459.965 374.103 459.964 369.127 cv
459.965 364.152 461.978 359.657 465.238 356.395 cv
468.499 353.135 472.995 351.122 477.97 351.122 cv
482.946 351.122 487.441 353.135 490.702 356.395 cv
493.962 359.657 495.976 364.152 495.976 369.127 cv
496.976 369.127 li
497.976 369.127 li
497.975 358.078 489.02 349.122 477.97 349.122 cv
466.921 349.122 457.965 358.078 457.964 369.127 cv
457.965 380.177 466.92 389.133 477.97 389.133 cv
489.02 389.133 497.975 380.177 497.976 369.127 cv
496.976 369.127 li
cp
.0365911 .534386 .88867 .00271611 cmyk
f
497.261 365.127 mo
496.261 365.127 li
496.261 370.103 494.247 374.598 490.988 377.86 cv
487.726 381.12 483.231 383.133 478.255 383.133 cv
473.28 383.133 468.785 381.12 465.523 377.86 cv
462.263 374.598 460.25 370.103 460.25 365.127 cv
460.25 360.152 462.263 355.657 465.523 352.395 cv
468.785 349.135 473.28 347.122 478.255 347.122 cv
483.231 347.122 487.726 349.135 490.988 352.395 cv
494.247 355.657 496.261 360.152 496.261 365.127 cv
497.261 365.127 li
498.261 365.127 li
498.261 354.078 489.305 345.122 478.255 345.122 cv
467.206 345.122 458.25 354.078 458.249 365.127 cv
458.25 376.177 467.206 385.133 478.255 385.133 cv
489.305 385.133 498.261 376.177 498.261 365.127 cv
497.261 365.127 li
cp
f
571.437 317.082 mo
571.437 317.582 li
575.644 317.582 579.451 317.132 582.244 316.393 cv
583.641 316.021 584.784 315.58 585.617 315.059 cv
586.034 314.797 586.376 314.514 586.628 314.189 cv
586.879 313.866 587.039 313.483 587.038 313.076 cv
587.039 312.668 586.879 312.286 586.628 311.963 cv
586.185 311.396 585.477 310.947 584.552 310.54 cv
581.784 309.337 576.962 308.574 571.437 308.57 cv
567.231 308.571 563.424 309.02 560.632 309.76 cv
559.235 310.131 558.091 310.572 557.258 311.093 cv
556.842 311.354 556.5 311.637 556.248 311.963 cv
555.997 312.286 555.836 312.668 555.837 313.076 cv
555.836 313.483 555.997 313.866 556.248 314.189 cv
556.691 314.756 557.399 315.205 558.323 315.612 cv
561.091 316.815 565.913 317.578 571.437 317.582 cv
571.437 317.082 li
571.437 316.583 li
567.304 316.583 563.561 316.136 560.888 315.426 cv
559.553 315.073 558.485 314.65 557.79 314.212 cv
557.442 313.995 557.19 313.774 557.04 313.578 cv
556.889 313.379 556.838 313.222 556.837 313.076 cv
556.838 312.93 556.889 312.772 557.04 312.574 cv
557.301 312.228 557.882 311.82 558.724 311.456 cv
561.253 310.347 566.016 309.566 571.437 309.57 cv
575.57 309.569 579.314 310.016 581.987 310.726 cv
583.323 311.079 584.391 311.502 585.086 311.94 cv
585.434 312.157 585.686 312.377 585.836 312.574 cv
585.987 312.772 586.038 312.93 586.039 313.076 cv
586.038 313.222 585.987 313.379 585.836 313.578 cv
585.575 313.924 584.994 314.332 584.152 314.696 cv
581.623 315.806 576.859 316.587 571.437 316.583 cv
571.437 317.082 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
301.684 290.952 mo
283.914 290.952 li
283.914 276.673 li
301.701 276.673 li
301.701 259.271 li
316.703 259.271 li
316.703 275.933 li
308.563 284.073 li
301.701 290.619 li
301.701 290.935 li
301.684 290.952 li
282.914 290.952 mo
233.567 290.952 li
233.91 288.707 234.102 286.116 234.105 283.349 cv
234.105 283.349 li
234.105 283.349 li
234.104 280.957 233.959 278.694 233.697 276.673 cv
282.914 276.673 li
282.914 290.952 li
241.671 278.76 mo
241.671 283.783 li
241.671 288.809 li
246.022 286.296 li
250.372 283.783 li
246.022 281.271 li
241.671 278.76 li
232.555 290.952 mo
229.709 290.952 li
226.502 289.975 li
226.24 287.982 226.091 285.729 226.092 283.349 cv
226.092 281.295 226.202 279.336 226.401 277.558 cv
229.709 276.673 li
232.688 276.673 li
232.954 278.679 233.106 280.949 233.104 283.349 cv
233.104 283.349 li
233.105 286.129 232.903 288.732 232.555 290.952 cv
225.453 289.656 mo
204.747 283.35 li
225.365 277.835 li
225.189 279.547 225.094 281.404 225.092 283.349 cv
225.093 285.597 225.221 287.73 225.453 289.656 cv
316.703 258.271 mo
301.701 258.271 li
301.701 197.063 li
316.703 197.063 li
316.703 258.271 li
314.214 232.949 mo
314.214 232.949 li
311.702 228.598 li
309.189 224.247 li
306.677 228.598 li
304.165 232.949 li
309.189 232.949 li
314.214 232.949 li
316.703 196.064 mo
301.701 196.064 li
301.701 176.386 li
286.111 176.386 li
286.111 162.592 li
302.135 162.638 li
316.703 177.205 li
316.703 196.064 li
285.111 176.386 mo
242.24 176.386 li
228.444 162.589 li
228.311 162.451 li
227.818 124.651 li
241.644 124.651 li
241.644 162.464 li
285.111 162.589 li
285.111 176.386 li
239.671 148.757 mo
239.671 148.757 li
237.159 144.407 li
234.646 140.056 li
232.134 144.407 li
229.622 148.757 li
234.646 148.757 li
239.671 148.757 li
.290135 .443915 .036408 .00268559 cmyk
f
233.567 290.952 mo
232.555 290.952 li
232.903 288.732 233.105 286.129 233.104 283.349 cv
233.104 283.349 li
233.106 280.949 232.954 278.679 232.688 276.673 cv
233.697 276.673 li
233.959 278.694 234.104 280.957 234.105 283.349 cv
234.105 283.349 li
234.105 283.349 li
234.105 283.349 li
234.102 286.116 233.91 288.707 233.567 290.952 cv
226.502 289.975 mo
225.453 289.656 li
225.221 287.73 225.093 285.597 225.092 283.349 cv
225.094 281.404 225.189 279.547 225.365 277.835 cv
226.401 277.558 li
226.202 279.336 226.092 281.295 226.092 283.349 cv
226.091 285.729 226.24 287.982 226.502 289.975 cv
234.105 283.349 mo
234.105 283.349 li
234.105 283.349 li
.703334 .928038 .339055 .269017 cmyk
f
283.914 290.952 mo
282.914 290.952 li
282.914 276.673 li
283.914 276.673 li
283.914 290.952 li
316.703 259.271 mo
301.701 259.271 li
301.701 258.271 li
316.703 258.271 li
316.703 259.271 li
f
301.701 290.952 mo
301.684 290.952 li
301.701 290.935 li
301.701 290.952 li
308.563 284.073 mo
316.703 275.933 li
316.703 276.673 li
316.686 276.689 li
316.686 276.325 li
308.563 284.073 li
f
316.703 197.063 mo
301.701 197.063 li
301.701 196.064 li
316.703 196.064 li
316.703 197.063 li
286.111 176.386 mo
285.111 176.386 li
285.111 162.589 li
286.111 162.592 li
286.111 176.386 li
f
316.703 177.205 mo
302.135 162.638 li
302.845 162.64 li
316.703 176.386 li
316.703 177.205 li
f
241.644 124.651 mo
227.818 124.651 li
227.812 124.151 li
241.644 124.151 li
241.644 124.651 li
f
242.24 176.386 mo
241.644 176.386 li
228.444 162.589 li
242.24 176.386 li
f
411.2 405.285 mo
403.792 385.297 li
405.966 385.612 408.45 385.788 411.094 385.79 cv
414.209 385.789 417.104 385.543 419.53 385.115 cv
411.2 405.285 li
411.137 384.789 mo
411.123 384.789 411.108 384.789 411.094 384.789 cv
411.091 384.789 411.087 384.789 411.084 384.789 cv
408.268 384.79 405.633 384.582 403.395 384.224 cv
402.367 381.451 li
402.367 378.523 li
404.798 378.058 407.806 377.777 411.052 377.777 cv
411.066 377.777 411.08 377.777 411.094 377.777 cv
411.094 377.277 li
411.094 376.777 li
407.854 376.777 404.851 377.044 402.367 377.505 cv
402.367 352.952 li
316.686 352.952 li
301.7 336.942 li
301.7 310.428 li
316.686 310.428 li
316.686 336.942 li
404.336 336.942 li
420.013 352.952 li
420.591 377.656 li
417.968 377.102 414.679 376.779 411.094 376.777 cv
411.094 377.277 li
411.094 377.777 li
414.722 377.776 418.048 378.121 420.615 378.685 cv
420.7 382.284 li
419.986 384.012 li
417.526 384.495 414.456 384.789 411.137 384.789 cv
347.804 340.236 mo
347.804 345.259 li
347.804 350.285 li
352.154 347.773 li
356.505 345.259 li
352.154 342.748 li
347.804 340.236 li
316.686 309.428 mo
301.7 309.428 li
301.701 292.349 li
316.686 277.364 li
316.686 309.428 li
.616998 .161654 .045655 .00503548 cmyk
f
316.686 310.428 mo
301.7 310.428 li
301.7 309.428 li
316.686 309.428 li
316.686 310.428 li
.913542 .440131 .228824 .0950637 cmyk
f
301.701 292.349 mo
301.701 290.952 li
316.686 276.689 li
316.686 277.364 li
301.701 292.349 li
f
411.094 385.79 mo
408.45 385.788 405.966 385.612 403.792 385.297 cv
403.395 384.224 li
405.633 384.582 408.268 384.79 411.084 384.789 cv
411.087 384.789 411.091 384.789 411.094 384.789 cv
411.108 384.789 411.123 384.789 411.137 384.789 cv
414.456 384.789 417.526 384.495 419.986 384.012 cv
419.53 385.115 li
417.104 385.543 414.209 385.789 411.094 385.79 cv
420.615 378.685 mo
418.048 378.121 414.722 377.776 411.094 377.777 cv
411.094 377.277 li
411.094 376.777 li
414.679 376.779 417.968 377.102 420.591 377.656 cv
420.615 378.685 li
402.367 378.523 mo
402.367 377.505 li
404.851 377.044 407.854 376.777 411.094 376.777 cv
411.094 377.277 li
411.094 377.777 li
411.08 377.777 411.066 377.777 411.052 377.777 cv
407.806 377.777 404.798 378.058 402.367 378.523 cv
f
301.701 290.935 mo
301.701 290.619 li
308.563 284.073 li
301.701 290.935 li
.716304 .339208 .0207523 .00137331 cmyk
f
301.701 290.952 mo
301.701 290.952 li
301.701 290.935 li
308.563 284.073 li
316.686 276.325 li
316.686 276.689 li
301.701 290.952 li
.873197 .488777 .132967 .0316777 cmyk
f
286.856 328.61 mo
290.341 325.123 li
329.129 363.912 li
325.644 367.398 li
286.856 328.61 li
cp
.186465 .129366 .102846 .012604 cmyk
f
286.856 328.61 mo
287.21 328.963 li
290.341 325.83 li
328.422 363.912 li
325.644 366.691 li
287.21 328.256 li
286.856 328.61 li
287.21 328.963 li
286.856 328.61 li
286.502 328.963 li
325.644 368.105 li
329.836 363.912 li
290.341 324.415 li
286.149 328.61 li
286.502 328.963 li
286.856 328.61 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
390.806 323.745 mo
394.292 320.258 li
433.08 359.047 li
429.595 362.534 li
390.806 323.745 li
cp
.186465 .129366 .102846 .012604 cmyk
f
390.806 323.745 mo
391.16 324.098 li
394.292 320.965 li
432.373 359.047 li
429.595 361.826 li
391.16 323.391 li
390.806 323.745 li
391.16 324.098 li
390.806 323.745 li
390.453 324.098 li
429.595 363.241 li
433.787 359.047 li
394.292 319.551 li
390.099 323.745 li
390.453 324.098 li
390.806 323.745 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
170.573 39.7446 mo
170.573 26.9595 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
171.073 39.7446 mo
171.073 26.9595 li
170.073 26.9595 li
170.073 39.7446 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
170.573 25.2212 mo
171.577 26.9595 li
172.581 28.6973 li
170.573 28.6973 li
168.565 28.6973 li
169.569 26.9595 li
170.573 25.2212 li
cp
f
170.573 39.7446 mo
183.359 39.7446 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
170.573 40.2446 mo
183.359 40.2446 li
183.359 39.2446 li
170.573 39.2446 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
185.096 39.7446 mo
183.359 40.7485 li
181.621 41.7524 li
181.621 39.7446 li
181.621 37.7373 li
183.359 38.7407 li
185.096 39.7446 li
cp
f
170.573 39.7446 mo
161.532 48.7852 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
170.219 39.3911 mo
161.178 48.4316 li
161.885 49.1387 li
170.926 40.0982 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
160.303 50.0142 mo
160.823 48.0757 li
161.341 46.1367 li
162.761 47.5562 li
164.181 48.9756 li
162.243 49.4951 li
160.303 50.0142 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMRU+MyriadPro-Regular*1 [7.67137 0 0 -7.67137 0 0 ]msf
165.671 48.7856 mo
(x)sh
179.524 35.8862 mo
(y)sh
164.18 28.6968 mo
(z)sh
613.501 341.663 mo
610.55 337.713 li
609.749 338.311 li
612.699 342.262 li
.441444 .323278 .297826 .145296 cmyk
f
615.12 340.454 mo
612.17 336.503 li
611.368 337.101 li
614.319 341.053 li
f
616.741 339.244 mo
613.791 335.294 li
612.99 335.892 li
615.94 339.843 li
f
618.36 338.034 mo
615.41 334.084 li
614.609 334.682 li
617.559 338.633 li
f
619.98 336.824 mo
617.029 332.874 li
616.228 333.473 li
619.179 337.423 li
f
621.599 335.616 mo
618.65 331.664 li
617.849 332.262 li
620.798 336.215 li
f
623.22 334.405 mo
620.27 330.454 li
619.469 331.053 li
622.419 335.004 li
f
624.84 333.196 mo
621.889 329.245 li
621.088 329.844 li
624.038 333.795 li
624.84 333.196 li
f
626.46 331.986 mo
623.508 328.036 li
622.707 328.635 li
625.658 332.585 li
626.46 331.986 li
f
628.079 330.776 mo
625.13 326.825 li
624.328 327.424 li
627.278 331.375 li
628.079 330.776 li
f
629.7 329.567 mo
626.75 325.616 li
625.948 326.215 li
628.899 330.165 li
629.7 329.567 li
f
631.32 328.356 mo
628.369 324.407 li
627.568 325.006 li
630.519 328.955 li
631.32 328.356 li
f
632.939 327.148 mo
629.988 323.196 li
629.187 323.795 li
632.138 327.746 li
632.939 327.148 li
f
634.558 325.939 mo
631.608 321.988 li
630.807 322.586 li
633.757 326.537 li
634.558 325.939 li
f
636.179 324.728 mo
633.229 320.778 li
632.428 321.376 li
635.377 325.326 li
636.179 324.728 li
f
637.799 323.519 mo
634.848 319.567 li
634.047 320.166 li
636.998 324.117 li
637.799 323.519 li
f
639.419 322.309 mo
636.468 318.358 li
635.667 318.957 li
638.617 322.907 li
639.419 322.309 li
f
641.038 321.099 mo
638.088 317.149 li
637.286 317.747 li
640.237 321.697 li
f
642.658 319.89 mo
639.709 315.939 li
638.907 316.537 li
641.857 320.488 li
f
644.278 318.679 mo
641.328 314.73 li
640.527 315.328 li
643.477 319.277 li
f
645.898 317.47 mo
642.948 313.52 li
642.147 314.118 li
645.097 318.068 li
f
647.518 316.261 mo
644.568 312.31 li
643.767 312.908 li
646.717 316.859 li
f
649.138 315.05 mo
646.188 311.1 li
645.387 311.698 li
648.337 315.648 li
f
650.758 313.841 mo
647.807 309.89 li
647.006 310.488 li
649.956 314.439 li
f
606.801 340.513 mo
606.401 340.812 li
609.651 345.162 li
654.405 311.741 li
650.856 306.989 li
606.101 340.412 li
606.401 340.812 li
606.801 340.513 li
607.1 340.914 li
650.653 308.389 li
653.006 311.539 li
609.854 343.763 li
607.202 340.214 li
606.801 340.513 li
607.1 340.914 li
606.801 340.513 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
629.242 260.849 mo
629.242 261.349 li
633.449 261.348 637.256 260.899 640.048 260.159 cv
641.446 259.787 642.589 259.347 643.422 258.826 cv
643.839 258.564 644.18 258.282 644.432 257.956 cv
644.683 257.633 644.844 257.25 644.843 256.843 cv
644.844 256.436 644.683 256.053 644.432 255.73 cv
643.989 255.163 643.281 254.714 642.357 254.308 cv
639.589 253.105 634.767 252.342 629.242 252.337 cv
625.035 252.338 621.229 252.787 618.437 253.527 cv
617.039 253.899 615.896 254.339 615.063 254.86 cv
614.647 255.122 614.305 255.405 614.053 255.73 cv
613.802 256.053 613.641 256.436 613.642 256.843 cv
613.641 257.25 613.802 257.633 614.053 257.956 cv
614.496 258.523 615.204 258.972 616.128 259.379 cv
618.896 260.582 623.718 261.345 629.242 261.349 cv
629.242 260.849 li
629.242 260.349 li
625.109 260.35 621.366 259.903 618.693 259.193 cv
617.358 258.84 616.29 258.417 615.594 257.979 cv
615.247 257.762 614.995 257.541 614.845 257.345 cv
614.693 257.147 614.643 256.989 614.642 256.843 cv
614.643 256.697 614.693 256.54 614.845 256.341 cv
615.106 255.995 615.687 255.588 616.528 255.224 cv
619.057 254.114 623.821 253.333 629.242 253.337 cv
633.375 253.337 637.119 253.784 639.792 254.494 cv
641.128 254.847 642.196 255.27 642.891 255.707 cv
643.239 255.925 643.49 256.145 643.64 256.341 cv
643.792 256.54 643.842 256.697 643.843 256.843 cv
643.842 256.989 643.792 257.147 643.64 257.345 cv
643.38 257.691 642.798 258.098 641.957 258.462 cv
639.428 259.572 634.664 260.353 629.242 260.349 cv
629.242 260.849 li
f
609.184 245.021 mo
600.698 241.535 li
618.349 223.884 li
630.321 223.884 li
609.184 245.021 li
.186465 .129366 .102846 .012604 cmyk
f
609.184 245.021 mo
609.374 244.558 li
601.582 241.357 li
618.556 224.384 li
629.114 224.384 li
608.83 244.667 li
609.184 245.021 li
609.374 244.558 li
609.184 245.021 li
609.538 245.375 li
631.528 223.384 li
618.142 223.384 li
599.813 241.712 li
609.302 245.61 li
609.538 245.375 li
609.184 245.021 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
650.325 377.55 mo
574.725 377.55 li
563.349 366.175 li
563.28 316.956 li
565.648 317.354 568.439 317.58 571.437 317.582 cv
571.437 317.582 li
574.634 317.582 577.6 317.322 580.066 316.873 cv
580.512 362.25 li
643.844 362.749 li
625.422 333.385 li
638.223 323.826 li
661.974 365.949 li
650.325 377.55 li
607.418 364.812 mo
607.418 369.837 li
607.418 374.861 li
611.768 372.349 li
616.12 369.837 li
611.768 367.325 li
607.418 364.812 li
566.414 335.193 mo
568.925 339.543 li
571.437 343.894 li
573.95 339.543 li
576.462 335.193 li
571.437 335.193 li
566.414 335.193 li
624.889 332.535 mo
623.076 329.644 li
623.339 329.481 li
625.359 332.184 li
624.889 332.535 li
626.16 331.586 mo
624.192 328.952 li
625.065 328.41 li
626.979 330.974 li
626.16 331.586 li
627.78 330.376 mo
625.918 327.882 li
626.79 327.341 li
628.599 329.764 li
627.78 330.376 li
629.401 329.166 mo
627.643 326.812 li
628.514 326.272 li
630.219 328.554 li
629.401 329.166 li
631.021 327.956 mo
629.367 325.743 li
630.238 325.202 li
631.839 327.345 li
631.021 327.956 li
632.64 326.747 mo
631.091 324.673 li
631.962 324.133 li
633.458 326.136 li
632.64 326.747 li
634.259 325.538 mo
632.815 323.604 li
633.688 323.063 li
635.078 324.926 li
634.259 325.538 li
635.88 324.328 mo
634.541 322.534 li
635.412 321.994 li
636.699 323.716 li
635.88 324.328 li
637.5 323.118 mo
636.265 321.465 li
636.729 321.177 li
637.727 322.948 li
637.5 323.118 li
571.437 317.582 mo
571.437 317.082 li
571.437 316.583 li
568.422 316.583 565.614 316.345 563.278 315.941 cv
563.275 313.474 li
565.464 309.899 li
567.279 309.688 569.287 309.57 571.395 309.57 cv
571.409 309.57 571.423 309.57 571.437 309.57 cv
571.44 309.57 571.444 309.57 571.447 309.57 cv
573.956 309.57 576.321 309.735 578.39 310.023 cv
580.025 312.709 li
580.056 315.858 li
577.644 316.31 574.677 316.583 571.479 316.583 cv
571.465 316.583 571.451 316.583 571.437 316.583 cv
571.437 317.082 li
571.437 317.582 li
571.437 317.582 li
577.723 308.928 mo
575.804 308.698 573.678 308.571 571.437 308.57 cv
569.569 308.57 567.78 308.659 566.123 308.822 cv
571.908 299.377 li
577.723 308.928 li
.616998 .161654 .045655 .00503548 cmyk
f
571.437 317.582 mo
571.437 317.582 li
571.437 317.582 li
571.437 317.582 li
571.437 317.582 mo
568.439 317.58 565.648 317.354 563.28 316.956 cv
563.278 315.941 li
565.614 316.345 568.422 316.583 571.437 316.583 cv
571.437 317.082 li
571.437 317.582 li
571.437 317.582 li
571.437 317.582 mo
571.437 317.082 li
571.437 316.583 li
571.451 316.583 571.465 316.583 571.479 316.583 cv
574.677 316.583 577.644 316.31 580.056 315.858 cv
580.066 316.873 li
577.6 317.322 574.634 317.582 571.437 317.582 cv
578.39 310.023 mo
576.321 309.735 573.956 309.57 571.447 309.57 cv
571.444 309.57 571.44 309.57 571.437 309.57 cv
571.423 309.57 571.409 309.57 571.395 309.57 cv
569.287 309.57 567.279 309.688 565.464 309.899 cv
566.123 308.822 li
567.78 308.659 569.569 308.57 571.437 308.57 cv
573.678 308.571 575.804 308.698 577.723 308.928 cv
578.39 310.023 li
.913542 .440131 .228824 .0950637 cmyk
f
625.359 332.184 mo
623.339 329.481 li
624.192 328.952 li
626.16 331.586 li
625.359 332.184 li
.800626 .294896 .111696 .0285344 cmyk
f
626.979 330.974 mo
625.065 328.41 li
625.918 327.882 li
627.78 330.376 li
626.979 330.974 li
f
628.599 329.764 mo
626.79 327.341 li
627.643 326.812 li
629.401 329.166 li
628.599 329.764 li
f
630.219 328.554 mo
628.514 326.272 li
629.367 325.743 li
631.021 327.956 li
630.219 328.554 li
f
631.839 327.345 mo
630.238 325.202 li
631.091 324.673 li
632.64 326.747 li
631.839 327.345 li
f
633.458 326.136 mo
631.962 324.133 li
632.815 323.604 li
634.259 325.538 li
633.458 326.136 li
f
635.078 324.926 mo
633.688 323.063 li
634.541 322.534 li
635.88 324.328 li
635.078 324.926 li
f
636.699 323.716 mo
635.412 321.994 li
636.265 321.465 li
637.5 323.118 li
636.699 323.716 li
f
625.422 333.385 mo
624.889 332.535 li
625.359 332.184 li
626.16 331.586 li
626.979 330.974 li
627.78 330.376 li
628.599 329.764 li
629.401 329.166 li
630.219 328.554 li
631.021 327.956 li
631.839 327.345 li
632.64 326.747 li
633.458 326.136 li
634.259 325.538 li
635.078 324.926 li
635.88 324.328 li
636.699 323.716 li
637.5 323.118 li
637.727 322.948 li
638.223 323.826 li
625.422 333.385 li
.913542 .440131 .228824 .0950637 cmyk
f
638.647 393.121 mo
642.696 395.935 li
673.997 350.886 li
669.95 348.072 li
638.647 393.121 li
cp
.186465 .129366 .102846 .012604 cmyk
f
638.647 393.121 mo
638.362 393.531 li
642.821 396.631 li
674.692 350.761 li
669.824 347.376 li
637.951 393.246 li
638.362 393.531 li
638.647 393.121 li
639.058 393.406 li
670.075 348.768 li
673.301 351.011 li
642.57 395.239 li
638.932 392.71 li
638.647 393.121 li
639.058 393.406 li
638.647 393.121 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
623.076 329.644 mo
623.076 329.128 li
623.339 329.481 li
623.076 329.644 li
624.192 328.952 mo
623.808 328.437 li
624.627 327.824 li
625.065 328.41 li
624.192 328.952 li
625.918 327.882 mo
625.429 327.226 li
626.247 326.615 li
626.79 327.341 li
625.918 327.882 li
623.076 327.735 mo
623.076 261.005 li
624.964 261.226 627.047 261.348 629.242 261.349 cv
629.242 261.349 li
632.193 261.349 634.948 261.127 637.294 260.74 cv
636.763 317.513 li
623.076 327.735 li
629.92 293.285 mo
627.408 297.636 li
624.895 301.986 li
629.92 301.986 li
634.944 301.986 li
632.432 297.636 li
629.92 293.285 li
627.643 326.812 mo
627.048 326.016 li
627.866 325.406 li
628.514 326.272 li
627.643 326.812 li
629.367 325.743 mo
628.668 324.807 li
629.486 324.196 li
630.238 325.202 li
629.367 325.743 li
631.091 324.673 mo
630.288 323.597 li
631.106 322.986 li
631.962 324.133 li
631.091 324.673 li
632.815 323.604 mo
631.907 322.388 li
632.727 321.776 li
633.688 323.063 li
632.815 323.604 li
634.541 322.534 mo
633.528 321.178 li
634.346 320.566 li
635.412 321.994 li
634.541 322.534 li
636.265 321.465 mo
635.148 319.968 li
635.966 319.357 li
636.736 320.388 li
636.729 321.177 li
636.265 321.465 li
.616998 .161654 .045655 .00503548 cmyk
f
623.339 329.481 mo
623.076 329.128 li
623.076 328.983 li
623.808 328.437 li
624.192 328.952 li
623.339 329.481 li
.800626 .294896 .111696 .0285344 cmyk
f
625.065 328.41 mo
624.627 327.824 li
625.429 327.226 li
625.918 327.882 li
625.065 328.41 li
f
626.79 327.341 mo
626.247 326.615 li
627.048 326.016 li
627.643 326.812 li
626.79 327.341 li
f
628.514 326.272 mo
627.866 325.406 li
628.668 324.807 li
629.367 325.743 li
628.514 326.272 li
f
630.238 325.202 mo
629.486 324.196 li
630.288 323.597 li
631.091 324.673 li
630.238 325.202 li
f
631.962 324.133 mo
631.106 322.986 li
631.907 322.388 li
632.815 323.604 li
631.962 324.133 li
f
633.688 323.063 mo
632.727 321.776 li
633.528 321.178 li
634.541 322.534 li
633.688 323.063 li
f
635.412 321.994 mo
634.346 320.566 li
635.148 319.968 li
636.265 321.465 li
635.412 321.994 li
f
636.736 320.388 mo
635.966 319.357 li
636.751 318.77 li
636.736 320.388 li
f
623.076 328.983 mo
623.076 327.735 li
636.763 317.513 li
636.751 318.77 li
635.966 319.357 li
635.148 319.968 li
634.346 320.566 li
633.528 321.178 li
632.727 321.776 li
631.907 322.388 li
631.106 322.986 li
630.288 323.597 li
629.486 324.196 li
628.668 324.807 li
627.866 325.406 li
627.048 326.016 li
626.247 326.615 li
625.429 327.226 li
624.627 327.824 li
623.808 328.437 li
623.076 328.983 li
.913542 .440131 .228824 .0950637 cmyk
f
629.242 261.349 mo
629.242 260.849 li
629.242 260.349 li
629.238 260.349 629.235 260.349 629.231 260.349 cv
627.035 260.349 624.949 260.223 623.076 259.997 cv
623.076 256.843 li
623.862 253.602 li
625.518 253.432 627.318 253.337 629.199 253.337 cv
629.213 253.337 629.227 253.337 629.242 253.337 cv
631.998 253.337 634.581 253.536 636.789 253.879 cv
637.331 256.843 li
637.304 259.724 li
634.998 260.116 632.239 260.349 629.284 260.349 cv
629.27 260.349 629.256 260.349 629.242 260.349 cv
629.242 260.849 li
629.242 261.349 li
629.242 261.349 li
636.599 252.838 mo
634.411 252.518 631.909 252.339 629.242 252.337 cv
627.443 252.338 625.717 252.42 624.112 252.572 cv
631.09 223.822 li
631.264 223.648 li
636.599 252.838 li
631.216 223.384 mo
631.196 223.384 li
631.207 223.337 li
631.216 223.384 li
.616998 .161654 .045655 .00503548 cmyk
f
629.242 261.349 mo
629.242 261.349 li
629.242 261.349 li
629.242 261.349 li
629.242 261.349 mo
627.047 261.348 624.964 261.226 623.076 261.005 cv
623.076 259.997 li
624.949 260.223 627.035 260.349 629.231 260.349 cv
629.235 260.349 629.238 260.349 629.242 260.349 cv
629.242 260.849 li
629.242 261.349 li
629.242 261.349 li
629.242 261.349 mo
629.242 260.849 li
629.242 260.349 li
629.256 260.349 629.27 260.349 629.284 260.349 cv
632.239 260.349 634.998 260.116 637.304 259.724 cv
637.294 260.74 li
634.948 261.127 632.193 261.349 629.242 261.349 cv
636.789 253.879 mo
634.581 253.536 631.998 253.337 629.242 253.337 cv
629.227 253.337 629.213 253.337 629.199 253.337 cv
627.318 253.337 625.518 253.432 623.862 253.602 cv
624.112 252.572 li
625.717 252.42 627.443 252.338 629.242 252.337 cv
631.909 252.339 634.411 252.518 636.599 252.838 cv
636.789 253.879 li
.913542 .440131 .228824 .0950637 cmyk
f
631.09 223.822 mo
631.196 223.384 li
631.216 223.384 li
631.264 223.648 li
631.09 223.822 li
f
719.435 212.242 mo
715.95 208.755 li
677.161 247.544 li
680.647 251.031 li
719.435 212.242 li
.186465 .129366 .102846 .012604 cmyk
f
719.435 212.242 mo
719.789 211.888 li
715.95 208.048 li
676.454 247.544 li
680.647 251.738 li
720.142 212.242 li
719.789 211.888 li
719.435 212.242 li
719.081 211.888 li
680.647 250.324 li
677.869 247.544 li
715.95 209.462 li
719.081 212.595 li
719.435 212.242 li
719.081 211.888 li
719.435 212.242 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
262.189 307.086 mo
262.189 306.586 li
257.759 306.586 li
257.759 260.114 li
261.689 260.114 li
261.689 307.086 li
262.189 307.086 li
262.189 306.586 li
262.189 307.086 li
262.689 307.086 li
262.689 259.114 li
256.759 259.114 li
256.759 307.586 li
262.689 307.586 li
262.689 307.086 li
262.189 307.086 li
cp
f
713.178 163.604 mo
678.809 163.604 li
678.809 140.104 li
713.178 140.104 li
713.178 163.604 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
713.178 163.604 mo
713.178 163.105 li
679.309 163.105 li
679.309 140.604 li
712.678 140.604 li
712.678 163.604 li
713.178 163.604 li
713.178 163.105 li
713.178 163.604 li
713.678 163.604 li
713.678 139.605 li
678.309 139.605 li
678.309 164.105 li
713.678 164.105 li
713.678 163.604 li
713.178 163.604 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B7D7E8804D37E4619F4B22A0DCD682496A57045375304A7886
C64AF1BEA22049810980DFDD96B92D9F98221AF3CE9783C6270EE41FC0D07825
99F4E900203101986255C4FF8F9EDA8C61229E2B> |-
/T <1C60D8A8C9B7AA912E11D3ADAE9F125363B0C7D7C3939CEB5149931BCCF7
3F386B89BA0229689EED8CFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 65 /A put
dup 84 /T put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/.notdef /C 8{/.notdef}rp /L /M /.notdef /O /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
3{/.notdef}rp /e 7{/.notdef}rp /m /n 3{/.notdef}rp /r 5{/.notdef}rp 
/x /y /z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [10.5505 0 0 -10.5505 0 0 ]msf
681.979 154.949 mo
(PMT A)
[5.61328 8.48242 5.24316 2.23633 0 ]xsh
695.995 198.505 mo
695.995 198.005 li
691.861 198.006 688.118 197.559 685.444 196.849 cv
684.109 196.495 683.041 196.072 682.345 195.635 cv
681.998 195.417 681.746 195.197 681.596 195 cv
681.445 194.802 681.394 194.644 681.393 194.498 cv
681.394 194.352 681.444 194.194 681.596 193.995 cv
681.857 193.65 682.438 193.242 683.279 192.878 cv
685.808 191.768 690.573 190.988 695.995 190.992 cv
700.127 190.991 703.87 191.438 706.543 192.148 cv
707.879 192.501 708.947 192.924 709.642 193.362 cv
709.99 193.579 710.241 193.799 710.391 193.995 cv
710.543 194.194 710.593 194.351 710.594 194.498 cv
710.593 194.644 710.543 194.802 710.391 195 cv
710.13 195.346 709.549 195.754 708.708 196.118 cv
706.179 197.229 701.415 198.009 695.995 198.005 cv
695.995 198.505 li
695.995 199.005 li
700.201 199.005 704.008 198.555 706.8 197.815 cv
708.197 197.443 709.34 197.003 710.173 196.482 cv
710.59 196.22 710.931 195.937 711.183 195.611 cv
711.434 195.288 711.595 194.905 711.594 194.498 cv
711.595 194.09 711.434 193.708 711.183 193.385 cv
710.74 192.818 710.032 192.369 709.108 191.962 cv
706.34 190.759 701.519 189.996 695.995 189.992 cv
691.787 189.992 687.98 190.442 685.188 191.181 cv
683.79 191.553 682.647 191.993 681.814 192.514 cv
681.398 192.776 681.056 193.059 680.804 193.385 cv
680.553 193.708 680.392 194.09 680.393 194.498 cv
680.392 194.905 680.553 195.288 680.804 195.611 cv
681.247 196.178 681.955 196.627 682.879 197.035 cv
685.647 198.238 690.469 199.001 695.995 199.005 cv
695.995 198.505 li
f
719.729 170.711 mo
719.229 170.711 li
719.229 175.142 li
672.757 175.142 li
672.757 171.211 li
719.729 171.211 li
719.729 170.711 li
719.229 170.711 li
719.729 170.711 li
719.729 170.211 li
671.757 170.211 li
671.757 176.142 li
720.229 176.142 li
720.229 170.211 li
719.729 170.211 li
719.729 170.711 li
f
649.178 164.605 mo
614.809 164.605 li
614.809 141.105 li
649.178 141.105 li
649.178 164.605 li
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
649.178 164.605 mo
649.178 164.104 li
615.309 164.104 li
615.309 141.604 li
648.678 141.604 li
648.678 164.605 li
649.178 164.605 li
649.178 164.104 li
649.178 164.605 li
649.678 164.605 li
649.678 140.604 li
614.309 140.604 li
614.309 165.104 li
649.678 165.104 li
649.678 164.605 li
649.178 164.605 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B79D2D887F02F299142A0C3364BB3E540A94EBE139CF24AB5B
9291798925616E74ED5E16968FB6AB2B0EB582D2608BC8F2144A426C305CF0F0
E0842020B821110B3B8547ABFFBAA3F62AEC9BF1BC4DEB118E5A1D393CE9EEC9
84E2E5A465703327355D464569C3379A63B3B4090406B216ED193F30FC7DC8C9
9D7F35FD180181080CE9455FFC0A5A52F16BB08C9189CC2A6B5CA52BB23E4B05
1EC9D7FA0CB0F09006440C6563EBD71A7C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/B /C 8{/.notdef}rp /L /M /.notdef /O /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
3{/.notdef}rp /e 7{/.notdef}rp /m /n 3{/.notdef}rp /r 5{/.notdef}rp 
/x /y /z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [10.5505 0 0 -10.5505 0 0 ]msf
617.979 155.949 mo
(PMT B)
[5.61328 8.48242 5.24316 2.23633 0 ]xsh
631.995 199.505 mo
631.995 199.005 li
627.861 199.006 624.118 198.559 621.444 197.849 cv
620.109 197.495 619.041 197.072 618.345 196.635 cv
617.998 196.417 617.746 196.197 617.596 196 cv
617.444 195.802 617.394 195.644 617.393 195.498 cv
617.394 195.351 617.444 195.194 617.596 194.995 cv
617.857 194.65 618.438 194.242 619.279 193.878 cv
621.808 192.768 626.573 191.988 631.995 191.992 cv
636.127 191.991 639.87 192.438 642.543 193.148 cv
643.878 193.501 644.947 193.924 645.642 194.362 cv
645.99 194.579 646.241 194.799 646.391 194.995 cv
646.543 195.194 646.593 195.351 646.594 195.498 cv
646.593 195.644 646.543 195.802 646.391 196 cv
646.13 196.347 645.549 196.754 644.708 197.118 cv
642.179 198.229 637.415 199.009 631.995 199.005 cv
631.995 199.505 li
631.995 200.005 li
636.201 200.005 640.008 199.555 642.8 198.815 cv
644.197 198.443 645.34 198.003 646.173 197.482 cv
646.59 197.22 646.931 196.937 647.183 196.611 cv
647.434 196.288 647.595 195.905 647.594 195.498 cv
647.595 195.09 647.434 194.708 647.183 194.385 cv
646.74 193.818 646.032 193.369 645.108 192.962 cv
642.34 191.759 637.519 190.996 631.995 190.992 cv
627.787 190.992 623.98 191.442 621.188 192.182 cv
619.79 192.553 618.647 192.993 617.814 193.514 cv
617.398 193.776 617.056 194.059 616.804 194.385 cv
616.553 194.708 616.392 195.09 616.393 195.498 cv
616.392 195.905 616.553 196.288 616.804 196.611 cv
617.247 197.178 617.955 197.627 618.879 198.035 cv
621.647 199.238 626.469 200.001 631.995 200.005 cv
631.995 199.505 li
f
655.729 171.711 mo
655.229 171.711 li
655.229 176.142 li
608.757 176.142 li
608.757 172.211 li
655.729 172.211 li
655.729 171.711 li
655.229 171.711 li
655.729 171.711 li
655.729 171.211 li
607.757 171.211 li
607.757 177.142 li
656.229 177.142 li
656.229 171.211 li
655.729 171.211 li
655.729 171.711 li
f
631.207 223.337 mo
631.207 223.337 li
625.566 199.63 li
627.523 199.871 629.698 200.004 631.995 200.005 cv
631.995 199.505 li
631.995 199.005 li
631.991 199.005 631.988 199.005 631.984 199.005 cv
629.587 199.005 627.321 198.855 625.319 198.589 cv
624.583 195.499 li
624.905 192.465 li
626.998 192.165 629.402 191.992 631.952 191.992 cv
631.966 191.992 631.98 191.992 631.995 191.992 cv
631.998 191.992 632.002 191.992 632.005 191.992 cv
634.323 191.992 636.518 192.133 638.47 192.382 cv
638.647 194.499 li
637.557 198.722 li
635.852 198.904 633.988 199.005 632.037 199.005 cv
632.023 199.005 632.009 199.005 631.995 199.005 cv
631.995 199.505 li
631.995 200.005 li
633.856 200.005 635.639 199.917 637.291 199.755 cv
631.207 223.337 li
.616998 .161654 .045655 .00503548 cmyk
f
625.014 191.439 mo
626.532 177.142 li
637.198 177.142 li
638.385 191.363 li
636.438 191.125 634.276 190.993 631.995 190.992 cv
629.481 190.992 627.111 191.153 625.014 191.439 cv
631.539 178.148 mo
629.027 182.499 li
626.514 186.849 li
631.539 186.849 li
636.563 186.849 li
634.051 182.499 li
631.539 178.148 li
637.114 176.142 mo
626.638 176.142 li
627.055 172.211 li
636.786 172.211 li
637.114 176.142 li
636.703 171.211 mo
627.161 171.211 li
627.809 165.104 li
636.193 165.104 li
636.703 171.211 li
f
636.109 164.104 mo
627.915 164.104 li
627.968 163.605 li
636.068 163.605 li
636.109 164.104 li
.61709 .162234 .0450446 .00494392 cmyk
f
636.193 165.104 mo
627.809 165.104 li
627.915 164.104 li
636.109 164.104 li
636.193 165.104 li
.913542 .440131 .228824 .0950637 cmyk
f
631.995 200.005 mo
629.698 200.004 627.523 199.871 625.566 199.63 cv
625.319 198.589 li
627.321 198.855 629.587 199.005 631.984 199.005 cv
631.988 199.005 631.991 199.005 631.995 199.005 cv
631.995 199.505 li
631.995 200.005 li
631.995 200.005 mo
631.995 199.505 li
631.995 199.005 li
632.009 199.005 632.023 199.005 632.037 199.005 cv
633.988 199.005 635.852 198.904 637.557 198.722 cv
637.291 199.755 li
635.639 199.917 633.856 200.005 631.995 200.005 cv
624.905 192.465 mo
625.014 191.439 li
627.111 191.153 629.481 190.992 631.995 190.992 cv
634.276 190.993 636.438 191.125 638.385 191.363 cv
638.47 192.382 li
636.518 192.133 634.323 191.992 632.005 191.992 cv
632.002 191.992 631.998 191.992 631.995 191.992 cv
631.98 191.992 631.966 191.992 631.952 191.992 cv
629.402 191.992 626.998 192.165 624.905 192.465 cv
f
637.198 177.142 mo
626.532 177.142 li
626.638 176.142 li
637.114 176.142 li
637.198 177.142 li
636.786 172.211 mo
627.055 172.211 li
627.161 171.211 li
636.703 171.211 li
636.786 172.211 li
f
687.003 236.995 mo
631.502 223.41 li
631.528 223.384 li
631.399 223.384 li
631.207 223.337 li
686.314 221.659 li
684.592 197.648 li
687.431 198.491 691.478 199.002 695.995 199.005 cv
695.995 198.505 li
695.995 198.005 li
695.991 198.005 695.988 198.005 695.984 198.005 cv
691.855 198.005 688.115 197.558 685.444 196.849 cv
685.118 196.762 684.808 196.672 684.515 196.578 cv
684.438 195.499 li
685.2 192.214 li
687.874 191.472 691.71 190.992 695.952 190.992 cv
695.966 190.992 695.98 190.992 695.995 190.992 cv
695.998 190.992 696.002 190.992 696.005 190.992 cv
699.27 190.992 702.292 191.271 704.734 191.739 cv
705.188 194.499 li
704.992 197.207 li
702.515 197.703 699.404 198.005 696.037 198.005 cv
696.023 198.005 696.009 198.005 695.995 198.005 cv
695.995 198.505 li
695.995 199.005 li
699.32 199.005 702.395 198.724 704.917 198.241 cv
703.292 220.706 li
687.003 236.995 li
685.456 191.112 mo
688.929 176.142 li
702.169 176.142 li
704.562 190.69 li
702.108 190.247 699.167 189.994 695.995 189.992 cv
691.92 189.992 688.221 190.414 685.456 191.112 cv
695.218 178.404 mo
692.706 182.755 li
690.193 187.105 li
695.218 187.105 li
700.242 187.105 li
697.73 182.755 li
695.218 178.404 li
702.005 175.142 mo
689.161 175.142 li
690.073 171.211 li
701.358 171.211 li
702.005 175.142 li
701.194 170.211 mo
690.305 170.211 li
691.606 164.605 li
700.272 164.605 li
701.194 170.211 li
.616998 .161654 .045655 .00503548 cmyk
f
631.502 223.41 mo
631.399 223.384 li
631.528 223.384 li
631.502 223.41 li
.913542 .440131 .228824 .0950637 cmyk
f
687.571 237.134 mo
687.003 236.995 li
703.292 220.706 li
703.237 221.468 li
687.571 237.134 li
f
695.995 199.005 mo
691.478 199.002 687.431 198.491 684.592 197.648 cv
684.515 196.578 li
684.808 196.672 685.118 196.762 685.444 196.849 cv
688.115 197.558 691.855 198.005 695.984 198.005 cv
695.988 198.005 695.991 198.005 695.995 198.005 cv
695.995 198.505 li
695.995 199.005 li
695.995 199.005 mo
695.995 198.505 li
695.995 198.005 li
696.009 198.005 696.023 198.005 696.037 198.005 cv
699.404 198.005 702.515 197.703 704.992 197.207 cv
704.917 198.241 li
702.395 198.724 699.32 199.005 695.995 199.005 cv
685.2 192.214 mo
685.456 191.112 li
688.221 190.414 691.92 189.992 695.995 189.992 cv
699.167 189.994 702.108 190.247 704.562 190.69 cv
704.734 191.739 li
702.292 191.271 699.27 190.992 696.005 190.992 cv
696.002 190.992 695.998 190.992 695.995 190.992 cv
695.98 190.992 695.966 190.992 695.952 190.992 cv
691.71 190.992 687.874 191.472 685.2 192.214 cv
f
702.169 176.142 mo
688.929 176.142 li
689.161 175.142 li
702.005 175.142 li
702.169 176.142 li
701.358 171.211 mo
690.073 171.211 li
690.305 170.211 li
701.194 170.211 li
701.358 171.211 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7544E25824D816916D0EA006E6FB4A1A9F4FE5A39A269545A
1BEDD807BFDEBF268A89C3A62CC82D5F22F54184> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 70 /F put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/B /C 2{/.notdef}rp /F 5{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 
8{/.notdef}rp /a 3{/.notdef}rp /e 7{/.notdef}rp /m /n 3{/.notdef}rp 
/r 5{/.notdef}rp /x /y /z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
592.428 178.045 mo
(FB)
[5.84375 0 ]xsh
743.605 129.917 mo
743.605 128.917 li
524.605 128.917 li
524.605 407.583 li
744.605 407.583 li
744.605 128.917 li
743.605 128.917 li
743.605 129.917 li
742.605 129.917 li
742.605 405.583 li
526.605 405.583 li
526.605 130.916 li
743.605 130.916 li
743.605 129.917 li
742.605 129.917 li
743.605 129.917 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7E2CE04450FE67267486674AF8C0F70BF9FE7EBEF3CCBFD60
FE21DD3835CA061B8556F5B08C11724582E14129531E0ADFE9B1341AA1586A74
E953908F695DF17481D304283D3EC8B4FB105E0A182EB4B4B988C16515939A78
A9BE5BF78590194367D3BEFBA6EAE7272EC593C249DD5CA5D2A9503802028F70
CCADDFDC7FB8262DD25D4B1A63222F5A1ED774D199B349DF11160F7E12994460
971E902615F09315> |-
/i <1C60D8A8C9B880558B244CAC850BEB233B555EDA76BC260032590C4877AB
0154B33DC5B1DD4601F9D82FFEA58A369847318C317AA33846ABE07FDE553738
DFE267FA7A85BCC35C3AC59D6B3202B942> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 98 /b put
dup 105 /i put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/B /C 2{/.notdef}rp /F 5{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 
8{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp 
/m /n 3{/.notdef}rp /r 5{/.notdef}rp /x /y /z 
133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
426.835 455.232 mo
(MM F)sh
454.207 455.232 mo
(iber)
[2.80811 6.83984 6.01172 0 ]xsh
239.671 148.757 mo
234.646 148.757 li
229.622 148.757 li
232.134 144.407 li
234.646 140.056 li
237.159 144.407 li
239.671 148.757 li
.436622 .692592 .0521248 .0101625 cmyk
f
314.214 232.949 mo
309.189 232.949 li
304.165 232.949 li
306.677 228.598 li
309.189 224.247 li
311.702 228.598 li
314.214 232.949 li
f
241.671 288.809 mo
241.671 283.783 li
241.671 278.76 li
246.022 281.271 li
250.372 283.783 li
246.022 286.296 li
241.671 288.809 li
f
340.785 175.009 mo
340.785 169.984 li
340.785 164.961 li
345.134 167.472 li
349.486 169.984 li
345.134 172.497 li
340.785 175.009 li
.580194 .0462959 .503014 .00366217 cmyk
f
347.804 350.285 mo
347.804 345.259 li
347.804 340.236 li
352.154 342.748 li
356.505 345.259 li
352.154 347.773 li
347.804 350.285 li
.823941 .238285 .0185245 .000823987 cmyk
f
571.437 343.894 mo
568.925 339.543 li
566.414 335.193 li
571.437 335.193 li
576.462 335.193 li
573.95 339.543 li
571.437 343.894 li
f
634.944 301.986 mo
629.92 301.986 li
624.895 301.986 li
627.408 297.636 li
629.92 293.285 li
632.432 297.636 li
634.944 301.986 li
f
607.418 374.861 mo
607.418 369.837 li
607.418 364.812 li
611.768 367.325 li
616.12 369.837 li
611.768 372.349 li
607.418 374.861 li
f
266.452 161.909 mo
266.452 158.391 li
269.062 156.883 li
266.452 155.377 li
266.452 151.86 li
270.801 154.372 li
275.153 156.883 li
270.801 159.396 li
266.452 161.909 li
.362676 .0419013 .272374 .00341802 cmyk
f
260.361 161.909 mo
260.361 156.883 li
260.361 151.86 li
264.71 154.372 li
266.452 155.377 li
266.452 156.883 li
266.452 158.391 li
264.71 159.397 li
260.361 161.909 li
.616998 .161654 .045655 .00503548 cmyk
f
266.452 158.391 mo
266.452 156.883 li
266.452 155.377 li
269.062 156.883 li
266.452 158.391 li
.731289 .169406 .111818 .018616 cmyk
f
323.13 233.235 mo
320.617 228.884 li
318.105 224.534 li
323.13 224.534 li
328.154 224.534 li
325.642 228.884 li
323.13 233.235 li
.616998 .161654 .045655 .00503548 cmyk
f
700.242 187.105 mo
695.218 187.105 li
690.193 187.105 li
692.706 182.755 li
695.218 178.404 li
697.73 182.755 li
700.242 187.105 li
.823941 .238285 .0185245 .000823987 cmyk
f
636.563 186.849 mo
631.539 186.849 li
626.514 186.849 li
629.027 182.499 li
631.539 178.148 li
634.051 182.499 li
636.563 186.849 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B880558B244CAC850BEAD7A1E96744C48B1E144A6FA6A2C9> |-
/p <1C60D8A8C9B7E2CE04450FE67267481D8DB94896F6863B80623466B6C88D
6897C0E02D98B8946B015A7E238CCA9D5B21B4F67E511D786F7A2AA529AFFFB9
E65066672A4EBE7BCDA959B83946AFCF9E209612973EC1EE751C8E35AC6321DA
8A725336FA9AB81577F5266D1AFEF8B2D8434039EC7EBA3DFE837CF0FA105C85
27115843A7C1133AADA0CB8F9CD475248B67B0343ABF4A6E34B9B5C76D6E89AD
691E6E6680AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 108 /l put
dup 112 /p put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/B /C 2{/.notdef}rp /F 5{/.notdef}rp /L /M /.notdef 
/O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 
8{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /.notdef /p /.notdef /r 5{/.notdef}rp 
/x /y /z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
288.224 45.7446 mo
(Sample )
[5.97607 5.78418 10.0078 6.82764 2.80811 6.01172 0 ]xsh
190.955 264.123 mo
189.955 264.123 li
189.954 269.098 187.941 273.593 184.681 276.855 cv
181.419 280.115 176.924 282.128 171.949 282.128 cv
166.973 282.128 162.478 280.115 159.216 276.855 cv
155.957 273.593 153.943 269.098 153.943 264.123 cv
153.943 259.147 155.957 254.652 159.216 251.39 cv
162.478 248.13 166.973 246.117 171.949 246.117 cv
176.924 246.117 181.419 248.13 184.681 251.39 cv
187.941 254.652 189.954 259.147 189.955 264.123 cv
190.955 264.123 li
191.955 264.123 li
191.954 253.073 182.998 244.117 171.949 244.117 cv
160.899 244.117 151.943 253.073 151.943 264.123 cv
151.943 275.172 160.899 284.128 171.949 284.128 cv
182.998 284.128 191.954 275.172 191.955 264.123 cv
190.955 264.123 li
cp
.0823377 .0849928 .942718 .00640879 cmyk
f
196.24 264.123 mo
195.24 264.123 li
195.239 269.098 193.226 273.593 189.966 276.855 cv
186.705 280.115 182.209 282.128 177.234 282.128 cv
172.258 282.128 167.763 280.115 164.502 276.855 cv
161.242 273.593 159.229 269.098 159.228 264.123 cv
159.229 259.147 161.242 254.652 164.502 251.39 cv
167.763 248.13 172.258 246.117 177.234 246.117 cv
182.209 246.117 186.705 248.13 189.966 251.39 cv
193.226 254.652 195.239 259.147 195.24 264.123 cv
196.24 264.123 li
197.24 264.123 li
197.239 253.073 188.284 244.117 177.234 244.117 cv
166.184 244.117 157.229 253.073 157.228 264.123 cv
157.229 275.172 166.184 284.128 177.234 284.128 cv
188.284 284.128 197.239 275.172 197.24 264.123 cv
196.24 264.123 li
cp
f
203.751 282.35 mo
145.37 282.128 li
145.363 284.128 li
203.743 284.35 li
f
588.55 391.702 mo
585.064 395.188 li
546.277 356.399 li
549.761 352.913 li
588.55 391.702 li
cp
.186465 .129366 .102846 .012604 cmyk
f
588.55 391.702 mo
588.197 391.348 li
585.064 394.481 li
546.984 356.399 li
549.761 353.62 li
588.197 392.055 li
588.55 391.702 li
588.197 391.348 li
588.55 391.702 li
588.904 391.348 li
549.761 352.205 li
545.57 356.399 li
585.064 395.895 li
589.257 391.702 li
588.904 391.348 li
588.55 391.702 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B64FAD9BC690F52678A4AAC02DD6316ABFB810C919E970D7F7
A5E455614A13B8B8FAD9069BFB2FE2A058D1FE3A325D332C212B8F258801D765
12AEB16C1CDED0160D793096C9AFED70FB7CE3D486CA9D63CA080BC562AB4D05
02CEC23D39AF71224A0C1394553A24> |-
/G <1C60D8A8C9B67B16BBA98674F32364F107CBAC1B1E462785BCF024B8EFDA
1BC0549FCB9DF8956AA7910368C245DC0A8C0C2A63FB3254DF909836C05759F5
170FB85D7203836E7709128A84B99A508FDD0AFF631C78FB81F272A53A326746
58306C79BF202D28A6088B6C9A61FE56D0FE279BF04E4159907B55A4C1F46107
715003C12E059E793B0C8D3AF256D6EA3000D2B75D895A67EFDF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 68 /D put
dup 71 /G put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/.notdef /four /five 3{/.notdef}rp /nine 6{/.notdef}rp /at /A 
/B /C /D /.notdef /F /G 4{/.notdef}rp /L 
/M /.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp 
/W /X 8{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /.notdef /p /.notdef 
/r 5{/.notdef}rp /x /y /z 133{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
722.347 176.445 mo
(FA)
[4.9082 0 ]xsh
713.778 198.534 mo
(LA)
[5.68799 0 ]xsh
601.978 198.532 mo
(LB)
[5.66406 0 ]xsh
657.354 317.291 mo
(DG)
[7.9917 0 ]xsh
539.519 315.349 mo
(L4)
[5.66406 0 ]xsh
105.274 405.063 mo
100.248 405.063 li
95.2251 405.063 li
97.7369 400.711 li
100.248 396.362 li
102.761 400.711 li
105.274 405.063 li
.290135 .443915 .036408 .00268559 cmyk
f
105.274 419.1 mo
100.248 419.1 li
95.2251 419.1 li
97.7369 414.75 li
100.248 410.399 li
102.762 414.75 li
105.274 419.1 li
.616998 .161654 .045655 .00503548 cmyk
f
105.274 433.138 mo
100.248 433.138 li
95.2251 433.138 li
97.7369 428.788 li
100.248 424.437 li
102.761 428.788 li
105.274 433.138 li
.362676 .0419013 .272374 .00341802 cmyk
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B84E0A775A339A6920AB0DE430B7DCF862E785DB9E
7AE6B14847A83A280DDCE1A6BA16686796D8801002CE462B6E901D06A69A29BF
2A4A53> |-
/parenright <1C60D8A8C9B84E0A4B31431D5481E823C52558C705892FE29F3
6A28E2E378B339A3E83F4F55337115DAEFD302EA0B7F069AF6D476C66B7F850D
B18A29D> |-
/seven <1C60D8A8C9B7BA8F1AECC8ADFDE63C8D1A99E9E99B9F2A7261CBC6E4
7516AD6BB4E12B04CC238DC4E1E8039B13C2> |-
/I <1C60D8A8C9B87DE0736D2F06C496CF748FABE723262E97C313C70E0C559A
CD15> |-
/g <1C60D8A8C9B7ECD907F624365D438F0401F823B73EA66C47C7E6F281CDBD
29E1DF24F38B45400CB92D1773CBC7D50FCB7995F10368A24D5E58E4D952E59F
C7474F76DA6B34C3DA78B95EC1EF9CF6F4F63352FB906DDA03E2A5E4C969C169
E59D202129BB858FF2389396F4B948C04E75496FBEB13EFD11C93AA00D90D167
33338CEB82FA27143EC77B2C20532B0E3472C981FFF7D331E2727D5298A3DEB5
54E7B9520D81862C9F7096CAAEF2A0777B1B46BAC159DF161C1CC74E3EBE289F
453E0E8DD297E3F240E1B2> |-
/u <1C60D8A8C9B794D31DB0E3F9489464903F451A543601831F7E66242BBBF0
F4EE0ED002244C0773C95EF7695812DFE3E4919EA17472C0AEB14F2EE09B4097
AA498C1E815A80FD775F9BDEB667A640A427FBCEED6CD9020699A8564C51425A
7AC7936573DB14EC35F5> |-
/asciitilde <1C60D8A8C9B7C7F3E032C8B86A8DBF4DD3A0E7A995A37BDCCC2
3B3B56389015062175FAF58E2E4665520B140079BEB208D12D1C10BB4720E642
C800EBD2D15DAF51CE9A88357DA7402EC47D600ADB69FDF401CB927837071569
605D457B167642E2AA95635CB90FCAE9F38BBE5E56DF0308AA7B6E06C68> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 55 /seven put
dup 73 /I put
dup 103 /g put
dup 117 /u put
dup 126 /asciitilde put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /.notdef /four /five /.notdef /seven 
/.notdef /nine 6{/.notdef}rp /at /A /B /C /D 
/.notdef /F /G /.notdef /I 2{/.notdef}rp /L /M 
/.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/X 8{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /.notdef /p 
/.notdef /r 2{/.notdef}rp /u 2{/.notdef}rp /x /y /z 
3{/.notdef}rp /asciitilde 129{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
109.738 404.729 mo
(Pump beam \(405 nm\))
[6.2041 6.6123 10.0078 6.82813 2.54395 6.83984 6.01172 5.78418 10.0078 2.54395 3.4082 6.15625 
6.15625 6.15625 2.54395 6.66016 10.0078 0 ]xsh
109.738 419.129 mo
(Signal beam \(~ 470 nm\))
[5.9043 2.80762 6.70801 6.66016 5.78418 2.80762 2.54395 6.83984 6.01172 5.78418 10.0078 2.54395 
3.4082 7.15234 2.54395 6.15625 6.15625 6.15625 2.54395 6.66016 10.0078 0 ]xsh
109.738 433.529 mo
(Ima)sh
128.398 433.529 mo
(ging beam \(520 nm\))
[6.70801 2.80762 6.66016 6.70801 2.54395 6.83984 6.01172 5.78418 10.0078 2.54395 3.4082 6.15625 
6.15625 6.15625 2.54395 6.66016 10.0078 0 ]xsh
235.467 439.994 mo
235.467 439.494 li
89.7661 439.494 li
89.7661 388.719 li
234.967 388.719 li
234.967 439.994 li
235.467 439.994 li
235.467 439.494 li
235.467 439.994 li
235.967 439.994 li
235.967 387.719 li
88.7661 387.719 li
88.7661 440.494 li
235.967 440.494 li
235.967 439.994 li
235.467 439.994 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7BA8F1526653E357F812E685980A8FD526EAB670B9138
069540308D4556AEA6EDBBEB043E9C3AE3E67FE618A5F08B0F52B06CAC81EB6F
82C8CA29968AED72565382029C0B625529C5EFC682311825D243CF5588AF8735
395622840A11D9D2F28041758767C914B5D98CB32A69DDADE58DA3F8F63FA7C5
60B051E788F602CCA6376ED93E5EEFF65B716EBA37CA758F61A30141> |-
/six <1C60D8A8C9B7BA8F4F4147EF9CC1F9D2C0473B5CAB190345437729CBBC
0726D16BC606AE3147650E86152A53D0DFDBE6350EF6EE15F41A268C7359154B
80EB46F2161D8623F4B780196C630E25AEA715C6AC263078C1747EA258237115
ABF977F47316CF0ECACF43F140388696A65CB9038A9600C9B2E642994817AAA9
EADBC0D7BD245677D55BC0E33FA2E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 51 /three put
dup 54 /six put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/.notdef /nine 6{/.notdef}rp /at /A /B /C /D 
/.notdef /F /G /.notdef /I 2{/.notdef}rp /L /M 
/.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/X 8{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /.notdef /p 
/.notdef /r 2{/.notdef}rp /u 2{/.notdef}rp /x /y /z 
3{/.notdef}rp /asciitilde 129{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
256.867 106.618 mo
(OL)
[8.26807 0 ]xsh
352.867 150.118 mo
(TL)
[5.96387 0 ]xsh
591.96 228.791 mo
(DM)
[7.99219 0 ]xsh
223.367 310.118 mo
(L2)
[5.66406 0 ]xsh
213.867 185.118 mo
(M1)
[9.64795 0 ]xsh
413.787 336.118 mo
(M3)
[9.64795 0 ]xsh
289.382 357.618 mo
(M2)
[9.64795 0 ]xsh
659.362 382.593 mo
(M5)
[9.64795 0 ]xsh
701.38 242.494 mo
(M6)
[9.64795 0 ]xsh
548.473 387.127 mo
(M4)
[9.64795 0 ]xsh
381.367 385.277 mo
(L3)
[5.66406 0 ]xsh
69.1309 288.621 mo
58.4365 288.621 li
58.4365 276.08 li
69.1309 276.08 li
69.1309 288.621 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
69.1309 288.621 mo
69.1309 288.121 li
58.9365 288.121 li
58.9365 276.58 li
68.6309 276.58 li
68.6309 288.621 li
69.1309 288.621 li
69.1309 288.121 li
69.1309 288.621 li
69.6309 288.621 li
69.6309 275.58 li
57.9365 275.58 li
57.9365 289.121 li
69.6309 289.121 li
69.6309 288.621 li
69.1309 288.621 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
56.5337 271.951 mo
(LD)
[5.66406 0 ]xsh
2.67627 274.951 mo
(150 mW )sh
0 289.352 mo
(@ 405 nm)
[8.84424 2.54395 6.15576 6.15576 6.15576 2.54395 6.65967 0 ]xsh
86.3666 282.349 mo
85.8667 282.349 li
85.8674 286.483 85.4202 290.226 84.7102 292.9 cv
84.3572 294.235 83.9342 295.303 83.4965 295.998 cv
83.279 296.346 83.0587 296.598 82.8626 296.748 cv
82.6641 296.899 82.5066 296.95 82.3604 296.951 cv
82.2143 296.95 82.0568 296.899 81.8582 296.748 cv
81.5125 296.487 81.1052 295.906 80.7411 295.064 cv
79.6313 292.535 78.8504 287.771 78.8545 282.349 cv
78.8538 278.216 79.301 274.473 80.0108 271.8 cv
80.364 270.465 80.7868 269.397 81.2245 268.702 cv
81.4418 268.354 81.6623 268.102 81.8582 267.952 cv
82.0568 267.801 82.2143 267.75 82.3604 267.75 cv
82.5066 267.75 82.6641 267.801 82.8626 267.952 cv
83.2084 268.213 83.6158 268.794 83.9799 269.636 cv
85.0899 272.165 85.8708 276.928 85.8667 282.349 cv
86.3666 282.349 li
86.8667 282.349 li
86.866 278.143 86.4167 274.336 85.6767 271.544 cv
85.305 270.147 84.8647 269.003 84.3438 268.17 cv
84.0818 267.754 83.7989 267.412 83.4732 267.16 cv
83.1502 266.909 82.7675 266.749 82.3604 266.749 cv
81.9531 266.749 81.5706 266.909 81.2476 267.16 cv
80.6804 267.603 80.2317 268.311 79.8248 269.236 cv
78.6221 272.003 77.8586 276.825 77.8545 282.349 cv
77.8552 286.556 78.3044 290.364 79.0443 293.156 cv
79.416 294.553 79.8563 295.697 80.3773 296.53 cv
80.6392 296.946 80.9219 297.288 81.2476 297.54 cv
81.5706 297.791 81.9531 297.951 82.3604 297.951 cv
82.7675 297.951 83.1502 297.791 83.4732 297.54 cv
84.0405 297.097 84.4893 296.389 84.8962 295.464 cv
86.0991 292.697 86.8626 287.874 86.8667 282.349 cv
86.3666 282.349 li
f
136.372 283.349 mo
135.873 283.349 li
135.873 287.483 135.426 291.226 134.716 293.899 cv
134.363 295.235 133.94 296.303 133.502 296.998 cv
133.285 297.346 133.065 297.598 132.868 297.748 cv
132.67 297.899 132.512 297.95 132.366 297.951 cv
132.22 297.95 132.063 297.899 131.864 297.748 cv
131.518 297.487 131.111 296.906 130.747 296.064 cv
129.637 293.535 128.856 288.771 128.86 283.349 cv
128.86 279.216 129.307 275.474 130.017 272.8 cv
130.37 271.465 130.793 270.397 131.23 269.702 cv
131.448 269.354 131.668 269.102 131.864 268.952 cv
132.063 268.801 132.22 268.75 132.366 268.749 cv
132.512 268.75 132.67 268.801 132.868 268.952 cv
133.214 269.213 133.622 269.794 133.986 270.636 cv
135.096 273.165 135.877 277.928 135.873 283.349 cv
136.372 283.349 li
136.873 283.349 li
136.872 279.143 136.423 275.336 135.683 272.544 cv
135.311 271.147 134.871 270.004 134.349 269.17 cv
134.088 268.754 133.805 268.412 133.479 268.16 cv
133.156 267.909 132.773 267.749 132.366 267.75 cv
131.959 267.749 131.576 267.909 131.253 268.16 cv
130.686 268.603 130.238 269.311 129.831 270.236 cv
128.628 273.003 127.864 277.825 127.86 283.349 cv
127.861 287.556 128.31 291.364 129.05 294.156 cv
129.422 295.553 129.862 296.696 130.383 297.53 cv
130.645 297.946 130.928 298.288 131.253 298.54 cv
131.576 298.791 131.959 298.952 132.366 298.951 cv
132.773 298.952 133.156 298.791 133.479 298.54 cv
134.046 298.097 134.495 297.389 134.902 296.465 cv
136.105 293.697 136.868 288.874 136.873 283.349 cv
136.372 283.349 li
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
153.354 240.865 mo
(SM F)sh
176.994 240.865 mo
(iber)
[2.80811 6.83984 6.01172 0 ]xsh
410.098 406.062 mo
410.029 407.033 409.994 407.983 409.994 408.913 cv
409.993 414.584 411.264 419.497 413.508 423.647 cv
416.875 429.877 422.405 434.357 428.964 437.261 cv
435.528 440.169 443.135 441.524 450.783 441.525 cv
453.988 441.525 457.2 441.286 460.347 440.821 cv
469.075 439.531 475.88 436.481 481.124 432.139 cv
488.997 425.622 493.299 416.279 495.638 405.854 cv
497.977 395.42 498.375 383.858 498.376 372.728 cv
498.376 366.795 498.262 360.985 498.262 355.543 cv
498.262 352.164 498.306 348.927 498.448 345.892 cv
499.212 329.415 500.764 311.267 506.578 297.388 cv
509.482 290.445 513.432 284.587 518.834 280.467 cv
524.24 276.349 531.112 273.925 540.045 273.92 cv
544.147 273.92 548.681 274.436 553.689 275.546 cv
559.693 276.882 563.796 279.349 566.523 282.93 cv
569.249 286.513 570.637 291.312 570.909 297.421 cv
572.907 297.332 li
572.625 290.982 571.172 285.742 568.116 281.719 cv
565.061 277.694 560.439 274.987 554.122 273.593 cv
548.992 272.456 544.315 271.92 540.045 271.92 cv
530.752 271.915 523.38 274.479 517.622 278.877 cv
508.978 285.478 504.01 296.059 501.022 308.02 cv
498.037 319.99 497.03 333.396 496.45 345.799 cv
496.306 348.88 496.262 352.147 496.262 355.543 cv
496.262 361.013 496.376 366.82 496.376 372.728 cv
496.381 387.501 495.646 402.906 490.729 415.107 cv
488.273 421.211 484.791 426.508 479.849 430.598 cv
474.905 434.687 468.485 437.593 460.054 438.842 cv
457.004 439.293 453.888 439.525 450.783 439.525 cv
440.898 439.528 431.135 437.17 423.928 432.18 cv
420.321 429.686 417.347 426.543 415.267 422.696 cv
413.189 418.848 411.996 414.287 411.995 408.913 cv
411.994 408.032 412.027 407.129 412.093 406.204 cv
410.098 406.062 li
cp
.0365911 .534386 .88867 .00271611 cmyk
f
719.979 88.6968 mo
609.908 88.6968 li
609.908 108.255 li
719.979 108.255 li
719.979 88.6968 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
719.979 88.6968 mo
719.979 88.1968 li
609.408 88.1968 li
609.408 108.755 li
720.479 108.755 li
720.479 88.1968 li
719.979 88.1968 li
719.979 88.6968 li
719.479 88.6968 li
719.479 107.755 li
610.408 107.755 li
610.408 89.1968 li
719.979 89.1968 li
719.979 88.6968 li
719.479 88.6968 li
719.979 88.6968 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B790A862F793CE5984292368D14C24D85F1154622C89385DE5
56F262FC00D8C56415CEE28ACD6F9EAAD20CA3762BD1E498E9A121822DBFB9C1
635FF4F3E0F57899EE7BF7A1EBA8D09E28A17FFCA944FA184D7045> |-
/o <1C60D8A8C9B79676B23EC03A282945F6B9BA3FC96B94A352EA6965D03C46
300E822E9400A32C57489C384C0BBF14085A1FE36254CC88C2F26DA80FE4BE81
E3FBC64BBB1CE4A5FCE6AEF371492E9D8504035C> |-
/t <1C60D8A8C9B821B336899C0A411A14A41B3F7FD72EC5319DCA4F19582C70
AB43B5B25B037D9F70BCCAF41E05C288447E6D0303CAC78896DC7AF6BA8E289C
923C2C4B8CB519AA426EAFE5402D54F959CF9B32FD990316D3D74F7DFBBA78A6
DD8825> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 104 /h put
dup 111 /o put
dup 116 /t put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/.notdef /nine 6{/.notdef}rp /at /A /B /C /D 
/.notdef /F /G /.notdef /I 2{/.notdef}rp /L /M 
/.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/X 8{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /.notdef /t /u 2{/.notdef}rp /x /y 
/z 3{/.notdef}rp /asciitilde 129{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
618.641 102.118 mo
(2 Channel Counter)
[6.15625 2.54395 6.92383 6.66016 5.78418 6.66016 6.66016 6.01172 2.80762 2.54395 6.80469 6.58789 
6.6123 6.6123 3.89941 6.01172 0 ]xsh
718.435 69.0337 mo
607.257 69.0337 li
607.257 28.2842 li
718.435 28.2842 li
718.435 69.0337 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
718.435 69.0337 mo
718.435 68.5337 li
607.757 68.5337 li
607.757 28.7842 li
717.935 28.7842 li
717.935 69.0337 li
718.435 69.0337 li
718.435 68.5337 li
718.435 69.0337 li
718.935 69.0337 li
718.935 27.7842 li
606.757 27.7842 li
606.757 69.5337 li
718.935 69.5337 li
718.935 69.0337 li
718.435 69.0337 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
IOXMRU+MyriadPro-Regular dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77BBBEC320BF45033662E0846C6D7DAF600F43B542B038E20
8CBA971F48BE27B2158BB1E2C3D179B771A57E9F9ECF2E72DD7D02E301A82C16
6FDB33A21A23FED2727F41D73D06BBBFA1087DD1> |-
/d <1C60D8A8C9B7E7C1E9415B382C0EF9C60E6021BB1E95C03A2DD89F360B56
63D6551C4C39C5506F0B5916330D8761AFD7B1B7AFD2B01F3C1D7C981BD3EEF9
982FF295D03CBFC77917EEBB4B17167D69AC6077ECAAE3BA44137709C4EEBB4C
2CD3A2B93DCED388AD49D33DBB886AABFB9E38F70AFD27773BBB85AE81FFFF3F
F60B6F91C615C0CD7E0629A20701802295AB92AB907BAA81A72F666D01972B6C
079C75CFEFD41DFFB9EA> |-
/s <1C60D8A8C9B70FAD2F81CC8BBF4E6A0E18D42D6949A9CEA98F96BB91C9CE
EEE4953B2FD83F05669F83DD630625A425EBBE7CE79373EE324743431698E23D
247D1ABC2EF04C298E5A1B13987DC1A4A8FE49BE4106E5A1C884B4074CFD17B6
1C7D93D85F5BD451BA630B50AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRU+MyriadPro-Regular /Encoding get
dup 99 /c put
dup 100 /d put
dup 115 /s put
pop
%ADOEndSubsetFont
/IOXMRU+MyriadPro-Regular*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/.notdef /nine 6{/.notdef}rp /at /A /B /C /D 
/.notdef /F /G /.notdef /I 2{/.notdef}rp /L /M 
/.notdef /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/X 8{/.notdef}rp /a /b /c /d /e /.notdef 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u 2{/.notdef}rp /x 
/y /z 3{/.notdef}rp /asciitilde 129{/.notdef}rp]
IOXMRU+MyriadPro-Regular nf
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
618.101 45.2861 mo
(Signal processing)
[5.9043 2.80762 6.70801 6.66016 5.78418 2.80762 2.54395 6.82813 3.85156 6.59961 5.30469 6.01172 
4.75195 4.75195 2.80762 6.66016 0 ]xsh
623.609 59.686 mo
(and Calibration)
[5.78418 6.66016 6.76758 2.54395 6.87598 5.78418 2.80762 2.80762 6.82813 3.85156 5.73633 3.97168 
2.80762 6.58789 0 ]xsh
632.039 141.104 mo
632.039 108.255 li
631.039 108.255 li
631.039 141.104 li
f
696.494 140.104 mo
696.494 108.255 li
695.494 108.255 li
695.494 140.104 li
f
663.346 88.6968 mo
663.346 69.0337 li
662.346 69.0337 li
662.346 88.6968 li
f
132.374 289.664 mo
129.23 289.664 li
128.993 287.749 128.859 285.606 128.86 283.349 cv
128.86 280.267 129.108 277.403 129.529 275.037 cv
132.374 275.037 li
135.51 277.099 li
135.743 278.998 135.874 281.118 135.873 283.349 cv
135.873 283.349 li
135.873 284.882 135.811 286.361 135.698 287.752 cv
132.374 289.664 li
128.222 289.664 mo
86.3723 289.664 li
86.6881 287.486 86.8648 284.998 86.8667 282.349 cv
86.8667 282.349 li
86.8667 282.349 li
86.8663 279.702 86.6882 277.214 86.3719 275.037 cv
128.513 275.037 li
128.098 277.438 127.863 280.285 127.86 283.349 cv
127.861 285.6 127.989 287.736 128.222 289.664 cv
85.3609 289.664 mo
82.3686 289.664 li
79.105 287.593 li
78.9426 285.962 78.8531 284.194 78.8545 282.349 cv
78.8542 280.441 78.9493 278.616 79.1218 276.941 cv
82.3686 275.037 li
85.3605 275.037 li
85.6821 277.192 85.8687 279.692 85.8667 282.349 cv
85.8667 282.349 li
85.8671 285.009 85.6821 287.508 85.3609 289.664 cv
78.0391 286.916 mo
70.3886 282.062 li
78.0579 277.565 li
77.9265 279.07 77.8557 280.677 77.8545 282.349 cv
77.8547 283.94 77.9191 285.473 78.0391 286.916 cv
.290135 .443915 .036408 .00268559 cmyk
f
86.3723 289.664 mo
85.3609 289.664 li
85.6821 287.508 85.8671 285.009 85.8667 282.349 cv
85.8667 282.349 li
85.8687 279.692 85.6821 277.192 85.3605 275.037 cv
86.3719 275.037 li
86.6882 277.214 86.8663 279.702 86.8667 282.349 cv
86.8667 282.349 li
86.8667 282.349 li
86.8667 282.349 li
86.8648 284.998 86.6881 287.486 86.3723 289.664 cv
79.105 287.593 mo
78.0391 286.916 li
77.9191 285.473 77.8547 283.94 77.8545 282.349 cv
77.8557 280.677 77.9265 279.07 78.0579 277.565 cv
79.1218 276.941 li
78.9493 278.616 78.8542 280.441 78.8545 282.349 cv
78.8531 284.194 78.9426 285.962 79.105 287.593 cv
86.8667 282.349 mo
86.8667 282.349 li
86.8667 282.349 li
.703334 .928038 .339055 .269017 cmyk
f
136.745 287.15 mo
136.828 285.935 136.872 284.662 136.873 283.349 cv
136.873 283.349 li
136.873 283.349 li
136.872 281.398 136.775 279.532 136.598 277.814 cv
144.24 282.84 li
136.745 287.15 li
.290135 .443915 .036408 .00268559 cmyk
f
129.23 289.664 mo
128.222 289.664 li
127.989 287.736 127.861 285.6 127.86 283.349 cv
127.863 280.285 128.098 277.438 128.513 275.037 cv
129.529 275.037 li
129.108 277.403 128.86 280.267 128.86 283.349 cv
128.859 285.606 128.993 287.749 129.23 289.664 cv
135.698 287.752 mo
135.811 286.361 135.873 284.882 135.873 283.349 cv
135.873 283.349 li
135.874 281.118 135.743 278.998 135.51 277.099 cv
136.598 277.814 li
136.775 279.532 136.872 281.398 136.873 283.349 cv
136.873 283.349 li
136.873 283.349 li
136.873 283.349 li
136.872 284.662 136.828 285.935 136.745 287.15 cv
135.698 287.752 li
136.873 283.349 mo
136.873 283.349 li
136.873 283.349 li
.703334 .928038 .339055 .269017 cmyk
f
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMRU+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf
216.139 19.9595 mo
(25 mW)sh
209.113 34.3594 mo
(@ 405 nm)
[8.84424 2.54395 6.15576 6.15576 6.15576 2.54395 6.65967 0 ]xsh
76.4512 311.771 mo
(L0)
[5.66357 0 ]xsh
127.457 311.076 mo
(L1)
[5.66357 0 ]xsh
648.357 260.614 mo
(L5)
[5.66406 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
/IOXMRU+MyriadPro-Regular*1 uf
/IOXMRU+MyriadPro-Regular uf
/MyriadPro-Regular uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Guillermo) ()
%%Title: (fig1.eps)
%%CreationDate: 12/27/2018 1:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fkt*;Pp#oU5l\V9"0P*@[3KjR7\bMjG.XsE9U+#onuZXD[)C1!'h,,Oaf`:+F^P$RIdF3t@Ln6HOuDY70dI7pllG\$Z0(i7
%caL<TDVe^UI)!AnpKsH$i8WEk/qe?/>oM#&W[5E-n["kdpT&eVr31G:gl:>bO2pkQU5*r%4jRUUl,E8!p^uE?hnJpYmdfN#2g;`L
%/jFa9h-T!qIJCe7m`16TZX7!c&"d*srVlBaqY&6JgZsbVs44r+]Y4+Hci34M];pk!:r-65Gkq<9l\iCSRGWC<s8Ml[o'JTdDLNK'
%E4icr4Pnr.]D-X5h"a33kPqdbFERQUf:Upunac)aB4J%H+9+U>r9XaQ*qU.r(\fY%hHYPVHhe+mo^_B&hneItk`boLqVsN$+$[U^
%5rTd,EVHNks'P`/IrRB:&+DHfQ!`>"ci4loI.cIYh<k7=#OTRfmJD)DGQ7Bq8TTo1IXCnYrUn.M94"ea\8tp0d1uF:rDR'R$0$`\
%>gE9b"$@,"IpR/pcqmI"BoEoJ)M`CsWg!22qHj0clLN993;[=.e+`5_O%5W9c/$Ft>l?mR3/B6sr*;M_a%t<RGJCi%qC%Q9q.8[>
%Is(Y^nlfI$`UWd+Vfn`mg37i%gP`]400d<S]tOF;n`oi1(MC]jJJEW^n`/_:f>uS405nS<r>g%6H()PLX+8Z_L2p<8r)'DT:ghHl
%CY,u_;EIp5'kn>72;c2uq"jFDql?2n\?Y%0B,>*br3s;=[r&<ZIoc=`%HkBGs/Z-c?Gdb1r-3L^_gic?qc0\2(s\=%na-jkWGaDl
%Y%_u3'k[\s[=oWEZbQ9[nVa_7K]2:4?iKrUp;`6$NG0VtpcTr$?7UK^m1]nSDoD,>kr@\#j2dk@6L/D9iF==q?RarD.H+bc*KOB<
%XnYSlpe7fCG5)G/<\$@g^YsBaCq%=&Fut(o\&2!b4+-18`(uH7Pj%f#&K`tRq'GGcGF<frD=XV"Wd[,Ub2<eX%*+(ZnM)#MNg;oI
%6/d$8"p]k>C$[l$r%a9?^Z/Z\./]**nRQXi3%4]"A&hpfN8qcUGttmTp_XJM^Z.,j,JnPfW:N.#4I801pmkdRdIR@JqqO8NT/s/K
%V2t*^5)*RcmoU;X,`eH[PD-n]n1boXXu&o`^Pl[@n+[\/OS8d)Qd-f]^Z/f`7f:PiakMLsQ[=7"l<^./lV>m)j"BoXj't2s3]B0I
%*WU>S]>cFDh7@G#Ljn;=3'c;p3'_e\8'W4:)"B[O`d8`HaRd8%j*,kT#7.O!/lta+l/O[HVsANW9r%TG3mV#b2h`H4Xt@s`pQ+L/
%>NX&&cKi@2ppg4rR't>kEs;J%InAf@;0cgGg@GGe'hA,[Xk^.QhgsAoHQ/R@A2QL-SZXs!Fs=WVG*?Ba>A]qs[MmdGSPFLE9o4$p
%]<!T*`Vc`W"+B-(+dGg:]]Y@0:]A3u%_p^nrdra3A5N0F?TI`8m3dCK_LIn]XV^feD"se!PJ=P1rk&-i06ho[B2JKI?\\a`h1"qH
%?sc7`E=MG"Y:opXJ+6;SUCXsJO8BC1j/*gjq/AGc++<#/IIo]:CuEWoJj8iJs'rkKg(.BjD@U62n*j.oa!6$=T-X=DU%k/oBFE1e
%cf5U^4RP_BrLs7<n**9@%]TiB4cT\-M$8Au:Yh!!i'D[2J-Hupi*9V$[a$aADM'tT^W2f;nEQ-?K@cr*Shb%'1X":!r.&:rDG@`;
%V+UF$&dg=DfMe5am.R^R*.+jPW5CV^hfr6c0`DSW:o-#?m[u/59UO^^m/aR3>&Rs<0Ws'JeQ-lTgC2nT1X-M3"4Kn!:K%q;2&n\q
%RC6tdmupn+'fb3])6bUrpp`fY*mQ37=EsGqCYUt2fO"=IW@XS=k:53CrVnds2E0@caa[GQQuUuQ"Krbog]sA\qLfWE3Yls,@&(M4
%P;]5c+j2A\UC6^hkWIeh#C6[u4SB<F$M4,B$TQlG7Nt8E?+<%?3-I*iZ4FGuDPp\G[ko<\I>n&\qCqDtl[n(k*$2Q/&4)m;HQHKE
%6hH>rgV.aa&hRU1]tgHjr24ZJglAP9U\1M0iIa4o%XZ7Bn>hA*1Q39KA%p+C62'C0\6*)80<]R5[J(Vc2%&`G^GiBD$$cq,A`fno
%hu?X,BDVJ]j*2)WLHB:9R:"^YrI:NJ%m>Xt,MNn;:p^8!H\Sc;?qQm`nU/.B2EJ@`%:+1VBkqL1Qqj4M1h)Go;Zi^t\;_#GD7u],
%a6?BoEmte?1"s!)hMQ0Jl(c;9,Z8i:[Rj!m%9DOu2P+93)ar4G_^F21BBD/o+qa)bT`X\"*Z61,F\kRHA\77$_7pKLH5UAMi@rq7
%EZk)*?\Y>FQ<H:j`4>9@j(oHP"qpZa`fAlsYcI(*VaLK]1QEjq^5b#el&F(S*P:<rbe'J'Lq7hI<u=raai(sTW@3F'kpB)*Tm!d@
%bjpr-9fNh[KTd4$<iRhdHU.4'[Y^.l-4%bO^i(1K$.'4qEMt=.po\ro+3#!R4/rQ.k*LKq*2Fap6+u%DJ)m,._XN&iU-(ls!_q(9
%m<g3]9L=$iCpJ;0#q^kF`(`Ehp\kYi"7:DE::gC_HX5B&*f#$@S=-#e>4DpR::9%/KRfA)fY^\;"NCnr8Oj4J7]b=RE!C>PmR9Zi
%6P(KoaP"K@<@+_DjgmB3"4@8s8_bh&s6cPC-O(>IoZX[6Th`I3;!AfU25a,P9<'"tE::6Z(*82&fXlRH@Bl<tTGnZYN*E_6YmMLU
%m2g`8G+n0Tl0Qke*leE$j/S-lYK2LKmar)56p@/,Jas"_U_MK[(a?\ZR8DK<e0;`KDHKZ!iTh@Y=Z\0%gh=HAh3F!hXAohnW$>ki
%PL\MF+4(:LP)I1*.-o]&re:sL@o5,f&>kb\%j`D?5Z5//?ZGIu=-T8bR8M^%:9/8CQu86^;s*m5mpn5qa:Rs2"r5(1\j9)[G2*q>
%0f[$<(eK.&b!-7U6e1kieTF0lOta&$I394o6BfpQgCR$7382pp[>l>B=6FEX,Xl%#pUP9&7q0]^A1Y7>'5#\@(5]tI^H9g:,81f$
%VJ+dq^XH._C:h3N]@;/o\rXH5C>9@X3Gp%k]s._blI.Fr,LVTOV!LB2p`kni'DC.GiHCmS#HeO@E6seLB:aC7-&pl)O#A\T9OT#W
%"#1`TU[u-rUGkXF[r507`0TZ^g@7(<CC55BU3,V>M$*o>[LMXiY@lS4]ZZb&Q9,;=-MF[EdKc?K`AlnPBa1s!1]tdXgVK#ks(/l&
%I,[3=M*`[HFg;VnAisK4,RVsqSRUA>Rk/(,*SU/4K6rnpAj?+T4u<ssH[^CLX.)C9=lFQPZ\t^h*pV0R('tk,=N2J'J>NZMK:)c=
%O'fNd%Qdj%B>U6q?&AHM\.%R+]Yf+;bTjmNWe_q49.-FNd&3tWT@T[p1bu>ARH/67O"":8%P!n\Sj;H+b&5+,5;)sDWlUip[q>VC
%#'PftO@mM:Qngr>l5k.GNoi6F:"jSe[gac#OAh9!h;V5KF?5_0r&^lWd>8dh6`SB);odMQ"Zm\>.&2Tt-t1/MgGMGHG810\0]9Og
%7qPjD44H:CnT;/'O,ZsXRE(\SFjiRT5>+OBLHA^aD-sn)`;@mkC7I$obVs&98B/>co;he[b-"8dQm0\WNbK?Pl;O+^0JY=_drDIr
%L.=m!!:gr5Kf?+)[';.-Li^o[0.)k[KIT6gqOP:UT4#ID7,d'JrIG":D;*+LX$T`TjA4M#7m9r.d.7oFjhnu0%\>^"?`0'FaV3F(
%9OGP'F]W$>A)m[-lagVuPT%t)a,E9GmCB335?.\"iK@AM*MYhWh?U(s^5cA=H=dgp`?iC,p61fG.'J7?[i"4oK`)DZ<[C5;2Ptm2
%Elrn8':Go@TDke5:\u$1.U8!-M[0$+,\!U+d>o#&lQ35EMO^RemEXcP<hcn\7#J0Eii2r3HIkPN-<>9POk.?m^UDuY>tg[f=aB2R
%pk>WBWUPk(\q,*DH'&*UZ4;MUOi>;E6^uf(iYV!s.d&fJCH[TgP6S?!,<?]oD+EV6.M6LX^&2D;J_qYd6edeO#!(f5-`qNlS6G:4
%Q6V7%4?@1f1bJjLfQ_[=8f[]`i0gX9D\1s"p;&V6A>Yn/2%iJr#;ihF>;4q6[*l83m;L%/8DC!h5f"n?-`IT4W1J<HkD4\fgT:sH
%G9)+*qSbDAN8+$(j@]`.ihEAa2Jq1c/+fY;,Viil%mjEWD-t&I&h?BheS)ORW(<@6U%IHn?C@=]^#mOf(Mt<%S4=93LtYimhtfP/
%]Y*e,K1aL<HAeMkl0!D27hneq)0.%q3`#lfK5jYa8F&W-/7r6,.n(/hQ#5g0p<sN;IA8hth1[]=PYTUjXR]Wq?e(D74?RPO`[YcY
%gcsJ7NW%aOf^@-.Uk=;c$M?n`83oj9#eL\<'L'IMnVjLtLLJU6c@a;%`Y:T\#M+*7=)H+0N--gDOUb0_7H7G$6I\f9psUcJ`$>uu
%IOtDD@uZ`s`o!0/D]:Iq(;];*ok'Uh-<\+<[ZMK7r\eX5NLBd<_e+'0fk1DJ'o<%kYJ`-`1EGEOPD7&&>.$KOX#W+^Ut^Cr/;DG)
%amnl,_p)D-[?4g?\*q[>$9`7Y%Hj4mg[!V_jjWo.IJ0/RO.Y:DI.>N9?]=[.s8I-;naaTJc1fhVB/RC!rpJcAQfuuklL='+p<8L`
%pV\.,5$YhumeZYFl@u!Ns2_Fflg(VG+0M:4=)Tb+s8MRaI_b-MhH\mMq=O*elcXd-p&=OMit&Vk5$ZmUIJ''g(O*>IYJ1$YF\R!c
%?[hb>e^oR4(F%Ij!2ts-^Us@ALQC"34fX#$7t:F>d#Y@_Dr+fJpu0cb48SL;lMBo0X,hH@D_KMa%4_6/CQr2?]mTMHp>bi-LC[I!
%0%O+=IsZ<`#:'4ep?KQmM`3=1.D0uul0e!1k08tV7sajK]A%hI]_Nd5!4l-9l1;+8gqNeclF_K@h;u8LS#[KQ4o8;7s&X+kY&A2B
%^A?g/pHMp>]Xf>;4F$D`X*5@uYZif`YXktS?[qnPDgqQPlJnLT5CA&S]=P\&p$mgLb=h`uim"B^Q`o7o3cek[7Bj7>@/[(52j\Hd
%Y-28H]XkdjDa9*7?$pngl'cot$@_cb5@*'\48A+P(Y@Pa)ZoqVk,Np=U&=skD7IPZ\!e8-hi3VEK*-A+3P=';(LA-GoiDBE)/;0R
%Y93,E?h..1j<f?/4nD<nk4%nr=21U:Tpi1\Ks1<+YIbUbk!"31n%JU?rUK1OooH;jrc!jDijUtAht"t*m9]do^%HaOnCo%&mpNV0
%hS"O^qoA"5Y:d?D$Q[P^p\"bLI:8CGcu`Mt^3ZR'EQPCkEp]4\AZ4nBhRhdFY5"usY)+ZUjq=QOL)[eea)A@]\(qG$nqb!Rp?GFT
%#iNi"`34XLQ9J%>o?#kbO[&h9POYE"?bZ:Nm6mFN`qVdtnEl!,mk0*0p1r;O0A1E1#gM>jbq8ebro38T$eO&hBA.ia[=%DmnkF:n
%r:^/>8M'skdrs$N^&)pIm>p_H'9PBH#O'\sYS8/c]70^M4tD-Xk5#a=pttLW5J@*Yc$-WM?i5<Cp@aQ6B1HXonr,g3LU3W%TCDG6
%r-<a2p&6$SG^k5=h<j%1<WW5@p@e(Do&``Wf7-+<rIBCGj7'kCk"h>q\*kur@#plWc\oF0O(m^Fl\c^L$2U;PndUQKe(r!r'iKXA
%2]o7&FO@Siq?fdj2](uJURD0$nGX%NdHRmt*djXXkV5e[$_>8uqtcBR$896m]8Pu60HIXllS#Gm*!-TLG^FX`q<sX\pA3e/%qjX4
%3!_^TGr^?ME.tZ<0cBoIA%MH)+5d%epA4'l4*^EWrrSo$rcpT)d2mS_m%UQJh9FP1gu5k@++?3Hp@e3+ZC#P_YH`Y&JB!)Mm@2hb
%IH3?e`gX2g+(tjSR(r#X?jC!_+b'I/eXQHiJMS;fqj0%In#kM@-LO82O4nDgBZV;4hqKZsZ+CNJrrV3Nc"&%O?N1s\'Goc@X.-Tf
%b&9ILIDdT`K];@CmCW+b/jF`RO=kqWfKJ'UNd(Qr2#aPZJ13S7hXkHrJ%NU.q<$]jc@5cIS"#=[QZ(3a(XSSr:sga0h=Jt$Di%El
%0/$\n!=aK#"H?5EN_hKFokWDL!GMi=+7_-.b>9/mcOL:.i^9Q,$>!/E:j-DW5j0^'O9(AaW5*/un`>]/9'sCrFh?=E\%D$VHe8ch
%#9s)U$bNoA]0[^\%]p-9!<b-l&,QJr6JZSR>P,8W*tQ9*+3$Z-`']->?bSLa6\Vg+Cn^4&S`)7B]DqhJHhrbP;/q4'BE-4FQ2Z+8
%rHCP"KT`F-;2V:OI<"hmrH5\b/^VcSqP*AmCr39jgu8`\BXS;nI"E)hm)96GJh&Y8.\ZeU<c",3[!lJXaU(Rmon@^#SPeTnYjt.B
%C-1I)gl:'.1KLG."!5B8N8s+l&=37A+8k!ar75e6or*1155<NPR%hD;h8/L7c>DCW<Tltsa[MZ-OlgZ!q:BfT#eRskhJf\d5_b'a
%km41sS;qVF:)bY8RUri]?>:jXrTk'L4'ngtr`ZGO4g@]S!7Z8N%QUe$\e8TYk'i-\PVai".qMR-(T:2[)`G%.SX#b1rN$tc"nnMH
%i<0gl32gCn.6U^06)djVSs:Lr9%hQdje#Y`<-FHl<`T&-],Sp*M_,'UN5%h3JM89E@8DYH"d,o`JSkGX"ajr5n.lA1huU1XJ6uE=
%r[<\^6fa-p.o;(!&elP?L^ns9:a=ob"u$i$&6-I*r<S's4H;qc%QI$$?H95T,sag`J4N\6CnPU<!%ACCFou,e3.td$dUp=Pp"1t4
%8fm^5NsJ.r=<j9I[SVL1a$#YS4N8U_.n>46Z*=E^P@@-TJl5/Tap-!@!Jq%ZIS@dE(fgNM@-d[@,B4N7HiTe2Lr!Lpq<-CX&+6%)
%@An0t]j7%9m2T=@lXqJN6B@\Mr<#pl.3:D6lS5PNRpd5b\=6upiKrP)_^rd)/>Xgc2-^4<>/MZ*,fM"J+iP\C+i,;?Siu'C@Llj5
%_k5?GLU!bO)j4S>j,RT.iXB=UiX;00?bV'Z4"A=m%"^!?)F@+@/1H)iLa--@&S-*G`2.b>ck>k^aJ!J8r7cE8)Y7SR:/9rs2Stk&
%)G^QnRqd[f[an1/em7)6,B\ZViF"El'1#P6g>jq9B!^A72FlCL%L>`.AC'$$2h8$.^E1DGcT7muT%7[)nu8pPi=#Run*GLZ&l=,t
%f4i-+@7meJp+-(iPOlPe,]!<CcP`g*#ZRJ:2)s#.rP"hNhf[fqr1P&+hIs)Oh)Gc?0/a>DAg7s0D6oJ=:]$beAiWTJZ_t7ffV$6,
%C3rd'49+3\g0_ok&V#5!8N]`$3W)T]l^&Oi1,XMEeU'F1o:.]7g%Qg`lhBT+j8.BjeG*-PDg"<dH@ll"Z1[n9?VdWjn@/NWY/0jn
%._E(i2=b\?P@_'ul:NL1TLSbEQtI_i9'f0;Pd)`XrZAfgf+es3]?+_nHRh0,>:hL8*&^]pPThDH8Q):I+GBs3K.ss^80c63)Y!gc
%WTIgcMd1N$>:LRAPmXKup2$0F_$n;n4UHe_&ANSnhhem5QCSPi*P69#_+ON=$Y;[/h#g3IKBejFYd2LH,--Z]p<+6tr3EPd7l`1T
%:'YqOX2-Gs5I\G$U07g;4Bl3M;;=QZPltE(r)'-&_]<pqL16-V=P/<ZKlpJeo#rM(OolOVm3;qr.$>]/E273gM:c6Xn-XW\mK"@h
%UVI3V1CD;MBs1'O7@WT3=2i`\ioN3J6B.&E_@u^R^cJE6($AWfD&q);=9^ViQ7_TANa$S;RU_W@'4=.f;*?g3EN.oZ@F541%!qsf
%Fu/KQ@a5*pHAl"C(W$s'KSD&f;Zol)9BI)>n=sCsis*`&i<E_F?q$+i4[pPPN/A(!$OmaV@6u:lLkGp@#F]g^@p7VDd7Y!+STJFk
%1ruetO#C9#ClAHih[WI&V;D>pE$C]p"L6j\!Og/PVKN23ggHX4LqsCnlMtt6#C1Y%8((W/J2D(52U<MF8!)CoOP^;q</5Jn2fQ2h
%&rTPUXcGVN="rCSf)&7q[I\P.KUn^::Hr8(\A*q$-Vi=7T<WqH;i8rIfZ0Shj7JRi)ES;r*2b>aPW?]jRaJ(R'@0gS.!#aT=3oPi
%T<pj\->2`,UtmXug,qB0a2po"jHC?-b)U/Z7Sd6]0U&hd@`dT)Dq4/lUKdcCroo@@N1U0JM4'NZH(YlHb>;(FQmQWg88[:O!/.-P
%KYRhF7gQchcMX(l94r6("7ZEXr6<D$5Pr>S<k80Z4UbhW%Niq:;f'iC:k,A-L7Ahg,EP@l`<-:`oP2a0'QR8^9'<.4kdpT&ol=Db
%-19+'LP9*]q0_]-be%pqlZQS28_%3E33?HFUiT`."GfijpW]G8(A%DdWSDIHd!ip'Nc/j^/oT$Q0#,0574\6:"tb0ZYs5a(#Q6U7
%Z1lHK4,UkmX_l7Z^":j,JTl'&I6;jc9D6qHetJSoDuSesgq?4E0*GQciuHB2ZnIja"%i#6E<jmOB$nJ47/*ST2V+T[3sOFPB=81M
%R52$LCccD9g:NCR42o]=dB"!jkBm$!ZVB4fSVRs6K\H-#/:4U2fJ]GS$+<X2>PMeg4t=7*%kSP^>g:\5LqCeC>9=*[D'p+64WTeX
%Zhk2BJG!CM!ue=#5Uu\s`=c:k)T_V;3cYiR?ucedgE:63?5i#PEK$[fX/J0,O\I*ZmgArq<:OD5ZB[b3,^U$*bp3Dc7[=]?C+:!_
%/TJ$tU(up;Z%bmJWa&lE+M3PtXd*0np/[45"`Y(m9e0h[L==S5mA;PsU4bsl.to=)3-m0^$tL#t\=E>G)Gbg)3b[,RC(NHrO/k@Z
%e"bm$(]6s9<NLk;bsKadaI(%NaP2b1E'r9e(Yh(b`_C<$C.W%G+OirLFs%c?[WAkSZ/)TYXaYjjC*u5_o4o+^`Y-7M,^-pPG!ED4
%m;_m<IlHoF@bE3PDWb<.H[AP8qab$KN[1ho]/Pke<\f0,NU4YJ>6\NV*c8rCgImY[Kh9jC6e9++nSNWY)'4m3,9qsk4q@r/79sf(
%O75;r*O-/gLg2,ZXF%6$*fu-k_[)E,,a3fGMcap*(h!gJNM5MPbTlqED1ums*gT200k!07..cM"2Nh\j(+(Ggp5F5/\AIc1_G)i(
%/jb1-B:K[m4@+i94lPA++Ye'6:a8YmYgt!%?tl?,-_a<T@U)u^?U3Hb(F?/IGY^nZJK!":19hQO4nmHT\Sd%)ZRVCqCh>oeghSiR
%Q=dDNT7q$Mg[7\c"1H<?qi<l^l$r<[CKc%&](r9!?EB-q)^j-[assFK:K]7'k7d_=NVXe;k'T@iZ_HL<=_YTZ3p&;Hp$"L#B0^(F
%]MH\G?V=ajFjH;sd+`F+Zg<-9OZ"ODcL'/'n$[Anp'a,flZpbLfuVc]e]Sjio?[C;2Vl-&SaS#h`7Id%p%.qJY@$=rNVr6Ue4],r
%)W]<-8`$m?\].D)bh?:O]l$5rWd<*,H;LfV:=3pa5#X>+XL1IbpFMcUB"\bXV!'%'&#hV2AuFjp'P=$=cDA!I9IpkkqntW5MQ(b2
%ppE!HijpFS>j*!%[QMtn!`,eA`hmHdG.jbkCt?:sFZbQ8Q`YY:H\<;!%:g4LVO*.6fK=aV=Pg^BSK5Gb:4gCY#PD]dRG>i'?o?8R
%okr)&9r`:Qbh&EQ-W$I*DfVfumAa\ujg?h=,2qr`in^%3]MWYZjG2I-fA+)<=/(s6.:ZH'*E/d)WS@*_eSK+7+Ig]_cj"po,4/IS
%mLa$B?D,:OTAX?&T'cnT2hIZ\RuE\mPDkPAYoteB#/S)@E,Wd!8+JngS;Vu9Wms<FL2@7+eFFC^URJmbcrp2p@1I8?KK4T;L@BmN
%75aV8Kl7n)Fj&W2/:4H)B_LhMFk`WG2IbL3`gq@_mtlb%ZgkkL=G]/&*TP)lGEeBLM9Ts+#Zk^2-*dCPnr35JW"[kbaU6+4^cffg
%>I"I=4g<:F9r,7UUqmtk2X!`E23=L<M'\<JR-'_gaB#esh,ku&^<d'[A2fIC:LhFle?GVn?m%PjO_fjZnJ'hWe-s@ACrd:);Z'4^
%(n*")`mbU#MSIfGRDTkD&7K&b$[aLEmR1\YA5ONT<:Rk:5uE]N*DoFj,)p8JI1<!&)P%pESS>24TDPe`d1G'8D#3_nKr^,0<m!NO
%UG&T">o^nZ/C)`D7,=4H69A3EF4E3"U0.uF=t"R2NF?tu.kj+trSjV9XIQ_Xq.m\FEQ-B#."@\P0.*"!\PLK*f&p-g,)4pQ`G_Y5
%)pl^NB6/P`B-E2\cKP7les"gEd*b\T".[^C;2+Aj\LmNkl.J3_^Y9XOVmr;Y:a;Upm6l/q(-#&aG!=[Th$MCk$sW74O>>3^2Qc+>
%)k&*We#$(226MUo:h.ff\1)n]i=_.aDP<?o[(r*E>EnMIfpjGuV(Lr-l\l'opa_sh:ua^2rRVd:f&Nl\j)C=(Eu/orCkH.t"e3&3
%XY*#KfFBM]W[A4_,^MV7"[<?si`0#ibk2hsBYeijU_W[Xl?o=_C_>@d<o\Va_GJgagrmPsegoQVm@GSjVi!3FVe.VF7-Hn()SiYX
%hDZ),[Pri*ldYBE;jS?5i#(9&N*U4RXp5'^eAV%NKa$S^6eNrgjtRFf6Zo>Z8(B\iS43j=Y!<BB3.rG4)%[%<k(c!Z3G'O88g1&+
%^1,):<.Lal]5lO49WSJ^M<\nV@W+hPI3^[m$[^`nqY<\AQ\Rl%ME(\@R"df";E.5:F/H`c%"$jIab*qj[$G+l'ZVfaZ"ILs]o$(F
%jR"m=C3.uUcrGqZX4'M6%YrCj;6])c'CGO;(q"uFg@*.4DatT`l0W\A1+n$6Za\EKDtH-AGl!9Hd8W3(g.b;R_orYl"]hPk7AH-X
%@Ld'aOLkF-3^\FG6&g5$*Y.=%FDQt+SIqMDrgQNPfb6J0kiC:eQB6>Dk$m,#,Wk-BAUfC/_0<.bX<1YfkXl8s_Cll<SkR5F"CbVt
%A\j`'$YQ]b9F'6H"&t/Z#+kj><ZsiHY!e9e#%S>8$e^&$LHHXB3-CJ/*,mFVTo)>f/f#LCM0NeM3045/&Hd[o'L#*Y^a;m*5dA.^
%Zf&8*&(3j"E2**pKE@ki+:>p;`POkn#W)S?@#Y+TfR9Q*p^f1R`m!m"A:BFf44))9Zr*65hZ_=J#l-G.);/FD<_2d0GTI>"%-HMV
%-fcOLP)]o;c,2$9;h8Vq@R!N,ds;R(+"DU#N3pL@Pp1=Q'Q@fKJ?\9s[YN.VU7E8q:6+Hld2Qo8S/>e>`=-Z#Z8jem3ck#528\aX
%!h"pRScgZPSZR]J\2r<]-l&3U'8TK_@Bg$WV#fa!rlQZ"Gb'l%;RBJ8@+^9tVG'Z;)D\1%R!&!n>;oE4I[5TFIe<i"-\1)1jhsJC
%0i^p>C'dg2F:*jjh!gdo6Br._MAX88E+eUX=VMFKIMbcO+ATnoBI6Y=oIe+R6a=085Jig*3._CkM2<^`\J+l&:u#^am)d9nc%ln,
%c-W7(]&'_A=p.GZ%,+"sNp*U1NKkim'^B>q'GS)V;`%L.i_&F!(/8erPS^.2J/X3")Pa8eRQA>c)FbBe`C@&di$8WkJ)g,odEsI+
%R_#7C4IXF1\,6h7j7#UIa-t/GWB3e^,HA2Lgh=if32%&&kf"rL6OS=E3lk!#A?sTnVT6=*WJr=2>L6eRMNNmNT2K-@B5?#LcN<O4
%Y&$Lo-Xl_nNG[L.X\8f_Q[CsDD:mrcSGeVST5aHNP#J%>%IA+.:XLPg3(sraYQIXA:J6T[($^mh:PY8i1f]5U9_'tE[,)h$GK=L7
%q1H5DN@P(99A,N,DQ)WU>?uo!6B\-sOeH.D\W7k=RVuaWVB2.t=TaT&'io\&oG3Gjhh!El=M"3WJ"\mfIu+Y+DE9'b5@9sG<BTt`
%4Wd^l3U=\P7rjJH#8SnqZS%nf5TX>n++4Qc4rjlilJ;;TP@YcV(NsA-AfpLdN8hN5>M0>X-Vm07T8J;#0s3UgNlENn*C!`SHs,r!
%BgT@rBh:35DBJIl!%gX]c<sZuSGlL1Tk+S*p3l=,$C7;1.Ve'e18FZCP6*VuQO%=)jukSmXRVu]5?R=kok0RD2*PZ4$gp9V\=PYC
%*GCoMX`=PC(Ktfr#OZ!bg>:"bC](u2,A;q8Ls#ng5kkEA$mt5?qLhmt8ulYmSo">(E35;]W[540)RnH\i5QKNV``)#iqc">7UO/<
%R=E3+P$3DT]>$\H\!.P;neBSus3jarUsg_b&+Rt!:ua@_p@hQsLQUrGScAj)qZ-3flO`(fhhlC-#N;k=\>HTE*;(7GF;rFUDaaJ^
%3XslFm!>8Ajdb/O%paddA8^O6%`ja]CSUC+^s)rD=s]l,n?N^_nf[?ABXQMe;go(olFW:QPZE\&nKQ)O2AXpfY2gA8i(-A`730J`
%);&+0!Lr0&%;.1<]=g4k++uLJnOnR),m\66<5W.M!i,1b@C7Waf612<Za0$-e@7I#p!rU]&(F@U6qulX(;F0$9_0.FhbT73^N>>2
%RriEC;WF)^+&h2Nh86-J#5=r8=\V91,p"Ln1/C6@QAAq2NW<fVSc7eo18+;,bjQfOd-9O2?_GCfAGE,-C4*nIO3(Vro#4OKe9n7c
%Y?BnC'reYeW?nOsP)c(8HKT`0DK.u/8t$Hh3Q1=(`jE/7([KB0j%?Tb1.]0-EAH4ddKsgV"rBZioFkjs^`QK"*BU1/jqu^?j30g7
%SC]\57l`#_e@mS]<p!`.EOCI#TZ6E'm<EPp)RoCMSE?OOfD9:q=_KO;cJ&93C@!Wp%pQ=@*_*q0#FMuUX]`ab@lu`fWu_"D+T@=1
%WBCf1<5J^lp$?b)a$!(B1Xkb9X/oE6fcI3FfOg%I>%/:k=HNBJ"*ea@m;9+CNQn$CpIU]iOA)!9hs0q&a\qFODVr_/]=EB/aNh]N
%'-N^3'0*UT7o@irjp\C&iD0>9`&1fU_po]Z$bM72l&g&9Q+;q5ELNG?ZE3A]VPX0A)F*t3Y5+4^24jU(F3EH:NR*u8BS`o'Qk@E+
%%-Rl0Umag"(:c1s(7kj=&gMgXjs,75q&CS*C,pKP293m]<i_(!ckPT]1O,Y?Usl"1gj.1d"4\Cj;_:u/Y\Kj5nB@AE?"fh8X]1>T
%kh)f!Pm4]#piAo,2=jMP:KlA>0&<!,^%[Oe+/e8_7/HD>0.,pjVERbDN'^E>BHN1@q+:E:B4;Uf+"D?L>Z<W-Sflf$F%:39_"./T
%30j58%S->\EM@[Q95$m</T8c\qH.IsZR)FE3,J-#S-Og_?q;AmWBB[K!?drbe]dK>4Dt+-IBV]eT4)2QETS5sY#o&jMY3g7f*5A`
%6n>s?=Bh5R`V'5`/"R1VXoIG^?V3Y2<Q;ik8sM;nF[54k"8aC7Qf=]/8>PH.bu^1V@5MEXmdQas8g^X38m1amKO3j)o7In3irf?E
%2uZUoTU(TXXqK+1#3Q4bUF.bb4pl:er'.TVX5,#Ur9S;PG*-9)\3V+kp?(/=l.jp3k?=mGC?/]YA`AM(F[0/N5+BLE4Z16^.i'+T
%SK0<J:<U,a"Fj)*T*8`u,$.PJ06al/F0$`tS0HImFHZ:!o7*CtqYFU;8[]WiE3r=_iU_pI;NFgd537lPraYD"lB1,jjFQu?9#E#)
%0d!7Er9S`?<tAgaj*dJ3:Nn`.;D='qDBFhEH]-ZF\<VRac3AFXJj2AOkDY]1.a\]ZRK8;JQ>@_7Aq/74/dE'o<NKb_dc)<LN,joO
%74HRCPReETiMgn&\HPbLJr'Z%3s<T\X>KnHM__oG%;MD"SoegE/+_NoqCOpEclZZhB."5)s0B8%DM?JVg#r(Ggp`epH,eD[;_K]8
%)#%\04QULoO.eL%I`B5`p-&,0q96FRk6D6nprbAZO#/4IJjFl1*BL;NmhkR`\AJEb%ek]=Le@%k_gUF5I;-]+pC9nr`gSS_*<6&U
%N:f2ep1sTkF&r/hN&;oE*R=c*$J,)jXS&Z$l0D+c4uC%Hc$mB!J#Wbcj/N@bi8,4F^Q?Yu5:WPp/XGoOC#uS',6DVM*tWiY^5$2g
%e>Qf95eph^'4]628*2NNV\<XW:T/7F4X*<T_a^sh)=Zl=P-%u2\/nGoXrr-T>CS+g``fak[.K]^c;%lJE>b0"NDd#PQ'5R=F('*N
%[c@"bLN>!3^>A0&Q$Lg!AXOf7,_,I`Y/ZqY4']CPn%Pk#ei9&Co?DO&Oo3#Hj#j+u&^aauIu`c'5<=egZ`(T0>b>:A@MU8HmX+cH
%Y'k1(LJ3m>"g]hP^=$1:9H=#3af&C+.CCsK,m'0F9Pe@!@V(_P6=sXeBPO6-0>t^aZS"h.i&$2@Ym$!DLs9Z;AL!=i<IA`JWJ0h7
%M,;O*/&U3i(7J'+TsI!WVeLi#1ps*U;[V7<m7ORT!6WoX'M9I8.Q2$d^XAjSDO%lX2`%Jba2lNieWfpSW!^ubU+15!Z!3GMMQfPP
%ZGeo_L\^]&qk>XFG^Be+5G(R+=_Rl@aa8p90-kXIKYJboQs&Gn9X-fjC[NVScj0.8<GOB;R3p)'=dtO#PR03\0u#=*=6"`sL,k%X
%^9]R:#krNUrEBR!q1;np%:E6EBb[ek!H1"lZJmqA=jPQQmHLXES\tbOJu0&OU-OZH>P0Qt*ACN8#98QYhf\isl'.+tKON`A]>na'
%CPfH$nj\SmFeX>TWZX[Lo5sm>@-k/9n)MNgfZ(VSPrRDA3=HP>T.5lA$'mMTkGZoG*l@],?E!&NVc27*n:$8pe)\n4:;Gl;VYGY0
%'&5tj`W[Hgc2g%$,OV<-O1h^ofkA08DKNaB`YJJnaZBuJb52@Gpdi,<`ZLf7#>alCbLG4N$bEZQRJQf#QSd$3a33REn"6WeP9QpL
%1Ffg4U+5PCqKca,s"?5nn<Cuq/b4QP=(-8`6[rf;&MH^5-#LVke/=LlbM]n?`*mtO_`5acV&>g"$QZf/*U"ulN>\>ab8oqq#;J@j
%+dj:@1o/J,8!`1,F3r49IV9Uk2A62.FsZV+@1T-)?Nm^/p0Z#A[!pOmJ"]6t9$8eg].s[o>0.:$3MN1dB!:F5mP?!1'tP&SGIuS4
%$d`.C\0t"RIIl`Z)OlN^1(Jg9d8#r!9+GD)i12.fPZ-21:2H@0?FniBr6rjK@`Z=4jcu_,<^3D:E09V&&k=a!kXAC=/ft>J/(lm=
%(WZ)%*/e!rll.No0j*:laX&nh$V8R&Q2!e^\7m"rfLIRZ2+r5r%Wk%?9'S(GBij6V"ZRKo35#Hm^]&uJ%4/$9d\O<%E0RLT:$o."
%kq9b+)QF!eV46i-hPb%)Qqp1#gVl*Mg1XHjUPNZ2Dj7K(JIe55H]tAT34bE%9&Fs;2SZ>*9#p'.9Wua5k-gc-X!O<?UJ;J["PBqJ
%NE.LT$KYEa1dk>IGm[h;5rXIs4G@Z8.h/^5\*c2(0(QG&r#*JKOo1R#oiasZP`E86Nq=-'8]3D_Oi`;\5XBq#-k4i8%GC?<EYAcm
%jVf_b/l$K]kS79iXTo#NfG=q\EJer/j]NSngsZ^mE41\2J-I^`n4#>nL:O3#mFnWf`L,$\1%IMc?EDS44J<M6:G$;"Jl4/``#=mP
%)?EfK8gS(+@R_N<S52p&N6_MCYbVeFGqXNuE1/QSZ$U9!auWN^9bZY$MbEKuZ1Qs<cJf`*^_:Cs:IsibH=?'%?Y;a.+.Wdj%(dei
%[$MQXj\r2@)Id<JDfBq9m(!XPLhL[K%PP:kj)6u^!ubOY*^+;H:GgZ%mdff5jaTJK]Xt\c]"YoWcY(#,\@]9Hf*et<T)9"caj6+/
%\TZg]lJF?no"8P&c=s"J-2B^O&!QY2PIjNUNl=0kgbQQaSfA"f!Sh[8/C;6&njUT.;G(T;:.N>j!ih5M!8XIWKKi":kD_0P?LC<7
%P2:I[U`=HeO$pjIHo'_F'"QR=cUA\^"-I-e2p7NPH#Lfrg!:'?*G7u)bT:B_?,e=cPGA\s1qm7?idU%9UHs\f^p!tM8sl5I(<sbS
%hjhRj0fV`/7ka[pq<f@8S/Y&:Ws63b2CQ^_O7\b+\RB&4B9Z1-(rh:l^(H%eT4*?m#D@(N(`V\k36/jBJaSEg@Z9&cCAEjgjYa7m
%8>=D?;LWP.HB@*Fb\hKE]^(aUWb:ci*#bOtnFWGgBB,EVoX7/m@@#"++KFshG6_>%k,#:F4co"aZ6Mo$ST`M%=DmDUeGDN'GqaO,
%)eHjt/]Dd(o1VT5c?@ZjQDRu%a)3tlkJ)/c6&e#H+76!ZP.8/$8E3Ss;/MWQCi)3K^WkWlB(4.nZsH[1*;#>b*qeZLk"c6a,R-@c
%]lL<@?+WDnrq+?;U!U-1T&!]&o:)a;O]NhRlU/dZ>:Rt1Ut]0aI\PU_SX\6*-FOED-c=[#6^QY5;CGb$gM"+UeR2&p6VF8g27'M*
%&R%5,2&6Ua3.lWlhB>cS1YF<Znt^+%Otuk%4_=10%<D&pe<FfuHFB,aX`TEFg>1pr1"_YR!]A[Pkb>0DmQhX2[U<f\URXI654nhD
%F@n7qo<Yi/T(QF^Q>UjW5:sJb>nYK?F#,j'm])GtWniZ[dT(KYqXf7/g$RuhmVnqY?bY`A8FQ";n*`a'Mu)e5pS1N%7dk7a%jDdu
%>LE?Fd&Z"[4\O#+7RPe,kM!&Eh0lWc4gSq5aS#p/f2@:)`#_X3P5SI'JSSlBk#g5oT?SD&,&JSbZri-_Q58*$*!;[u]t"b6WrO/A
%BVH:MYGHBFI5OgDQKPJ45IOPF)0*l*-(FL:9?/WEQ;bQq#@6KAn2W@$lM<+Gafa,QY:6QCX6Xt*pGG-NY!$o[otp?:2^Nr[9e46D
%\N/:VCatK?@h"mD:"=)ZA_ZiPqsK=ETX=:jia-3R'Q'b4CoUt1'l9mVgIb)STi8"k;LW*_[A0\[7o@0:;ki[O#'s1?Gu:.Z;4MJk
%p,\$%j[i1dnlHP4CbIQr/F!J9W(Gd*n`@GNq0mJ6WmYQu!2G@KWFC.U2OYtJR`%:0]K5Yhn22r8m:KqA;V(FOed86]T=<$[I#qie
%]_VTtmKcUgBi3p>^J;H9QT*.;loO";pG/XBB2']'s!2[^FOnqo'Ks:&5+OR-m/-N2Vb^r".:[;:S/UYZGLpTbd3JV@pT#1S+6U1`
%YQ&php+/=lme'mNGmpj#-(Xa'HB_bKU"FbiG3jkC"Inl2[TD3Y]ha;JV:XUV!&]j1lYt_k"TdRb`?tu@r;7LHqE&?Veeo18-UKc\
%cL)ICc6KR9Iq<MEaSK92an]kco.eJ[^\sHG^ZERUl-s('RjCjFm)uA7Sc"EB33=R?e%M?jQ[b9WBB?IaY)iOonBB+[d;A6,rY?7b
%YGp?Yft<2E]!>JMf[`4!KQhkKDo_i2"#XM;<e<?`RBDt>cEF2:HL%-a1j$sE=aO'_CQ4aN.Oit3WO?hmn@H$4n+Br=aR_H(&SZtj
%76/]/34kj9(p<b1&O++MF;DX,,$Y*Irmk+R>cI7=]O'4d\b=W"k2<TBGd!b,,Q)57lT",nEM*!D,'^bWF)]bQ-iR3=4Rif1XqTuA
%CB>NUNh.ZIh(R+UQ`)+apirKM-'cC'^fG(p2V6ccRdF_;h;iJ(EW'cTUcsC>I'79/C0/Ml^E^A&M3X!(pj8/[VtohqpkPelg$,U5
%I8515LHk;elTIbT`-Z%_G:$WA^a8BZ*;7F,s4PnsAEne*odUQg'!uM6%,1TE9YF)jjGO4XfR)g74\Xjlj;V#.[,uj-aYl3+P,VN>
%H-cm>Y22[X&mO/K9=MR+cD#0K`jM2o[9MtZGLrCA61/ZsRmc:2UQYM[bd+S@$cOL>PItcKATkQYK(#)&(L#UJ[u:u'Mc?9\%C'S3
%W:<gqZ4YQ>MXlZE`"t@g05_>.g`X>@6%![)pu2MJ`=:gb)oNOOLbEWW?ecd<\3YL^KD=F1n\kssM]9SN2i',)&7=38r[utKU0[8q
%-:E\@"Jt>GGNsRZ:3UKg?gBII+7<6=Co;!Xee@]cMtC9'1jurnI>0cGS0`D-CQbi:(I3,Bq(,*=Y6_1lOH7n!V"E/iHsRKWfgSYa
%P-1+JX!Qb@RBm,uM%QMeQ@r$IT5'OlH1JYB-0ORAmK!>CdmE`81EX!BUs0`18[`geeK-7t?/<4oc1fBUWS2c+c/'o"an]F(mG9>,
%hiiphnJh3%k9T:SSX=+3lVHR?,K`/C]KPeX_b4;5FkY6>W[K]F->AJi;jWglWpVEPp:EF7L6j`D-EkuXGAcZ[gF'&i.;MLikO()u
%B,bQ-<oa+g4R6@'!+%_F19\?ug4t%O:7j..>p$$(r`8<[``#HX:Y2u-hI7OmcV7Jj%GH<cb][c5R;dDb^K-q/9iV%Sb/6)cL2.GA
%p@!3C.MTb7l.hcj%SgFUg2p(bPDc2(LjJD6Y9u*`Y:!IVGCXGgeipZF1J)YE&qLGe\.lI(`N7<X2!SM='nL)pr`kt_MgTSsFDkXJ
%]n5LJffJ@QegH%5?*kZ"%J7dXc]ah/js"_.qpRFTT+lgFe(J47iVBQ>.*?_0HsSNR_`^dXkf!0tBbF4QF/^,5BkOkorV+'q'AM]8
%Q?md>=$#%hq>4#aEIUF/]r.*_h";>aYJ3jjnndE+Y/Ws[>LoBjZFf,p%Z@'-"eiFT?d5"8F'>(`@!`W)>YXjDRZaP*D9>s\a)4Wt
%H4$O8c!n9;W'_Xt_?Y-s>c)crU8DeLi=;T`SYh/-'#VD1+j+"`o#-Q6pSE,'-A5U!G=%(Q#894Bl(-&oY"S.=FhE(sU.^:;5\d2e
%Uik[tin)VmSPK"ST]6<Ks76p(FIK\H<)0bf:6o)SFDA;^;`H@l2aNG$d^_Mu"oOm49b0=_MJK4QVL!;W4me[FHi2t58S6PD;s3SJ
%]n>V*75]tW<HD)-9UNDkElt`F=g`HT<U;]9N&C_a//-I7V50Y/V;3'ueL.3D"H+ihm6!D2VPft4W1BibAZXptQ/l]FrjnDqp<[CN
%C'p<8gCafc-eR.ND4DrWm??2rM/9*3Cb%U,=]4!<Z0aZeD4fg2H/IGOV[!+UG>GgKcCZL=l7PZr]S&e>3%pj"f'/?h;Ck9*4\n2n
%"o0lJaD'dgr)cJM2.pII9L=_[[q)tj=KPs&[^*92A(4]8SLAQWjj&9WgqhRbgm.\aa6'qHjg:'/5$c9f/$rQ@E.9ljRF>o=>iYJO
%ZEfuNNn=#j-[\Xqb`De8LR!:jH[q_dj"_'QM(,rsEWjDG0n!I6#UMBN&\)7C&K#p*pdkm]/J')@#S60!C;abc;XUr6.=99SQpXSM
%D06F+T+W_:i3pt9*m[p7[J('*2XD)8rfh/n-U-XC#$-9%Vh"jj&eikoP!<HDX,6C4p=Jt'>q,F%q8mc!T:TW"6[nIb$i)0PhDkGo
%PoGMA=Z%"fDq1M`k?9`McCPj8W5>I0rOhufs7c*E`S&MtpNIEd+9(=#]YD*@qs`k0:R@=@oCSs-U0ZKU#ufH*_a!dc'!A.Id5A8!
%WHFj8dtR+PcA1cP=j6&BAtA%2rJV(o)a<9Co+[aN%?o(,G?tpKZs:puG#.MDl$ArJQPrZ]]m\>0%r<\Fr8H8:2rECrh0clHq>RFu
%qQ8=uo('c'hpZ3_J+h.+a,cR22m<Zs?[Vn<L/Q:=DpXF4**AqS<W[)aTGd5Tj!B.=qnjd"L@t84IcS9D#Q4S)!<)Ll3;_7Z5Q@qG
%m-RH!s3j4'k>L2!remg=H]<MLS!_(RXk/atkcYp0IB=1nkS[7+=NaNs`.`b6#b9VJ8:U[(!hX\Sfrq&i_8A/]J4RR<?,T?`F8d/h
%h0]Dk9@!43Se%M/r%ec#TD]7laa!,&//WIaj!D'5_saRZ&a=m/o0=^SU7M++mQq5)hs<=gH8]\bLG+(2ht.T7pT_R`-63EqIjc<U
%lZjC`Qujado.`<HWR`cf:rqh8V&&AnKFX"rj7?lL*Km7eoHur"3KMmdPg7HKe"f4-S4B=I>/@!r3PZiHhIPhU)#W'gc.3crD1tuL
%Hp6UZZoPpq`J6r)$[rfJjIcr9^gTPYRu(m,=aJh)rL1cG4q9rb2371\nJ5eR*pWQgU:3R`Y9FE-`cJdSd?ZsXR&cHfl0#1X_<E>2
%V:U1\dS%>%9<\<B[@],7UgL\8ZsUBHk,g<6eaEM*QL4b;emo#![r`#%<cuh@fa-:\h$C?aqi1)D%Vso+hOP0:no6dQYf+2\/!!2.
%/t\Jl@CeU&2R^A3n_VVS!qbS:iN:C/LPNDX?kD%Pr_5%kfOm0pp/$:%_sZ&Io^>@E#*eOh-.:Q$JDSppkm-Gm,86t"'poI4efj$=
%U]Y1K3uOqX%tN@lbe`!RVF);=&FtQu^T1=Bd]U;7]pa(kAOO>\(-c"c"_rf;CrGOIqcgN(A5ocHMh`4Y'&;F\0MG^!^F)CULL_*&
%M>c8>A3fC>NE*PO+4G8;-(ifK_fW6me:Ej+*[?INp,D$WA?]VJ0"d-$f]&!s-L69_4W1=a,id6Dm-h)#K1T^W%dE>-6uB#>6t+J=
%YVH5fM_Q[i-F!>K$k;Rl*`j&S#c2Yl_J)(FX@rYn5@U6K"<28EiiSKehij?7.,E9CUpmZ2/P"N)V=mep3XEP3)eb!l$54E.$3k9i
%Qk!u;60K9ArN9%P8\=i%oP2tIPnE[kBgWN+G$*/-rpFdFJ:^U$M'AIu1r2fOVEH3"YY+QV^*NkRGAOA/h>*G(URbehG#X#R&4Ha!
%]0d?d#sqc8JoK:;O-SEpHUu.bQ0@+26O&b"=<5iCq2!a,T7ug(8cZ[!PrM6DPk#CLe/CFjS%qW]IEY';fR"lBE.U$g7]IUA!`0PZ
%#J(AJ-g2[lCt7Pp2)&ZONHWO`PkELc!,#8dEO:aZ!pinMq[q8%E^NrAr3R]aWVI6kF_!lHFpsptd._(fltK794En[[XXEU^bgH/j
%al@Yd6X8gIZn&q_KbTDe"kGbh0m1?!cVZi"J=<SDocMhq3kAip9&i1*gFm7F*\m1N98bipo4S+Ag9,[PbG#%B%sZW^0']P.V6i!\
%@-s74Y]d'S@-s43nXN=GFA%s&];80u7'TMaV9?">ROkpk9G`*%Vb]@N$a(N!"[=TqrV#?2K4kAt2fD,,nC_Q1_Ok]65(34BlMC=[
%0E6DHJ"=-"GWD:2?G:r,o]MPo52e0.)IZp.^ab#@;Q+P\'gRS!m4T$j"s6D]n.iO#S-.F$",F?m:[3PHDQr*'+/RK'btknQXT:DP
%+dUW%#t2Io5nn$-"-pP1/ld#ll9O5a-jk31/:Ca,'h_8@;<LN\<:P9;X0ksc4K>?/.NT(Y`*Cq/*arF+YT1b6\CC-H7/\W1O+<%]
%08l^J#\;&h72%'-;U<#?%_cTp2bS89VT3a7[4Rk-"daNN9fMiV_LZ`gnCqEhJT6`d'71'=odhH&_&&jNC/eYENZ*`,(m[8J,[BV;
%N4Qj!l2Lmbn':Xoh'0HHR#L.r'u$WQScbjf##>hkK6uM[=pcd.3t3:ERuEL+Gn7Qg#N3u#Hf<W'OI#R0J9UVS*RZL15@EZEO0O%-
%jt@oK<YtFOnEIGe4f@5?T'u:rfEeI'7@Js`Ak[)F<J+)ZeET$tDtQZM^^&h(D2V6nksR>YU8eEiG,a#5$GIAM#^ga`bGIEBY@V8Z
%%6eX'eT2)3B\EJm+4IN0@'N=\bGH5+g-i")'R\:b0_doF(/9uq,d2%=#+mg$l8]$?2[rarfp--t^qll6QVBF6'_>KkVr3K1o6ErG
%3T7c?<P/i]d<(":RqVJbJhNQfk8;XWC`<)d&Atg<#+mg$l8]#TX>QL]!P$@m2ClRn%sb_1)LT,nXe&J\8^m\GpsIt+.gbS*P`^>-
%KB]"Z_$"`aNiE8Ll':2E;+A4[Bt.46H<DciRs+dZ%c[k9\o>!N#K\2?6_*(j:!/XGD[6L*j&0?PV]p^9&;aVUq02<7b5)B>..ehI
%$AV4a_g+4>Er`;UAd!_T&u&0L.$9LBCVXB@.$Pf%%mLKYoXrrk`#3e:JKRC,1(cfj',jiG%sYT"@3mU1*q]OZ)R;%>hbj?n6X.dP
%S&rL6:f_V%>9Er;jp;2B0.j!@h191O%ur.bl&#9saHI`r!I!]UE?^dHL`l$#3q4VH;SE1ffVO<8oM!=d"s%8Dop\XTX3c'^rgZn%
%rZ,A+;,i!bZmha.:o3t-KDT5Ro>l=ekOEA2r,3"eR+B<?jqK'ST)a;s.3Z]ME/(t:(?X?/3'SH2)\kQg8p+m)_MhO2#^q"rqm@"o
%=Mcag"2I=!>3VU'Wq.H1TI]1C%7.2jq)kl\#?2s0h*.SaJUu<Dh5[i3;:UX`mrZ!XU:J8.8sPhYCAk)"K]<OtG[O3sH:$Yf!C"G1
%A@Q\PG>9&QAI'jMH1>bdi)&7N^uRbNhs'Qp0m_H40qiW>:^#a&$k49D=Laq69u9JtU<X/h!Q0'[J5daY<4Fa2Vk?<AhG.i'`f+sB
%@Tu*4r*$?-U[ba(P:ci!N_tNKYck>mj\^u=(D&+?&K$_@21S^O;$O=[Rcj`j?`OIRh@6nOY^>=rXp8&`Q/Q-B@h)5$mPKqr$N):[
%2M=m1#SSl,edm"T,X0,@=sWoE0<@q-'r\t%\,icQi>'iD':BaY8:Qd3LgmQL?rpo@_C@#h1@[\`$YkfJ>/QGmXSE^5eI5Dk(`^H8
%e80(_nfWLLJC(IgJ^(@)Mh)QundiB(N+A3Q;67Q/;tg9Z_OtumiGjqtd`>BLiWuR6JASl!6dd@B3,/m&Y>K7"N*2WC.11CK+q$(Q
%E($8J)k50BAa2g3_*^\9AD)q%i8cR?RH]D&enF>6C`gG;RXF4a@4hddKP<2<_jW^6irI0"<#tYhdGS=Q<h'5#iGoJP0J`b=ER5FH
%3"]bQ-PW!d#_S-G,c:VH_J(6A!a)_Wc;.SiC^uGI$lhU!L%f6uB5/ln(_!KHB75;/F7?JOl7K>7FaJZd,s'9/lm'No,Y0$P7.WAG
%\OhmF)'(\=?pHPB!!4D.)&Q9u]L:FMC'Kt,ak'9l*$Pt:3354`TI0LDU\AebNR;i;5Y=Lo4u<>$!b*'9gB)a2iI/O00oB#Qk;!AU
%,YnHh<o'`ok2RSaV1+Apqo,S3id)1P-AD7E?cUgW0Mkb$l'q`-F&+P!d/o769R%E@<,.9(MUJL]Ee)KJ/Bft`g[0=(j9+<p0QnUY
%n0/!set7MEffEM-I*>%"4to94p3^Zp'0'r0'R21.[MF;^,&`U!L;BE"9g^W\=o+".VT^21?NlgbklW'Ua.75YFW_ld2'?&,<>``S
%PrN9Q$W7'N!Q[Id<8,VK;SU+4mETem'<WJ\M_tD`P4)<Y3.&K6"20S/5G6%G5?s^!;[#nJ7/5\cnng-FJO`U3n-iNrmGrju(Z6M[
%1CT45T*Z?R;__)Yec=\4#bs]n&C,SGKVR7SJ[FYA(ti[sT(GF2#j>0eJZoi]Qr-9n`Lof*Pe=L?s%-lm+Bn-gk\L`?&9/g.gL81r
%nUP-/K*;B=2[%[!iF2IM"[/Q-Lppql9$qYX+K<P1<0p#5R&^g1K!RoJi0fEW/m`#4IqX'1'EcTk"<<$P'u5OF6hjcR4<-aaLQ/-T
%!]:B]J94=b+(5*];E8'1#3IXs'OddbTU)o<`>fg!$8\2F:f4(<O"Mia&`jj'jDjN\_*g<5N[Ue[d%[1M.h4m)X(Q;eJN8PM(K4:D
%$`&IiU.ia_^h?[RA[LY)Lg_K$Wdk7SU)B+88>Q/q@Y\/kKR.;A\7PcY;TFfr8I_oO+u'm9K5d"d:AYr@ro()Uc+TX&SP9^#qcO`_
%];cK;148SB9om.&q/KrZO$(k##2gSV)'!]-N?P=q0_n:Z%58Ys37TKP-F>n^$@:CL40'Ndf]J=PnB1Wid?CSa_gE/aWmiMH+Lf(U
%Z?:22@a0NZR"LPRT=?LfCZ)YZ[qPQKS0*s2LjSfH6$/L/;m&1kUY#q/?ucFt-0h0`r:,tGSj[BG`e>RA).`<3QX1^[,81A&fqkE#
%nEC3g))+NjV_u8'4[2V.T@[$r"f`kC$3T8b'I+M>XOTRZ%N<<J7t7s.j<$Hg99G6:?WfDg:>qQ[N<^Me;a_b.*N1#a!]a""3f,6K
%F19Jja81D''@-m4J6iouXQ,DM>1kTdV#dOri2hCDLPtL:4DUt@-cs15,V3RN*[u$7#+sF2#A4u?*8(\<b60XfE(s">0Fu:1j2gN`
%fLCID8)`M_c=^,5&R@``.)mYJF:mhsOsr$h_s`he`A%X'$#G8Xb6e]>qHTH"_6sAD>>22[K1QeS1V2%S[5o:IHY"=7Hj(?cd4lj8
%nW)R=cspJ+L05p0r-2]#2BabDOWm98o(G/A\n^pVR)NI+Ciqe[=M>)ur<j1h#d,/YkTj&/Nkq%iY;^R+0NnN3paV^fU4Pl,JHrJZ
%;!9tjS:]5j9[tOV@$G6H`([nmJU*3r+?45be^=BQFp=U59MuBUJF=2D:hN39>r=PqC%j`]bVK'GIQ<8-J8BJ9fI26F^i30\E"/V*
%+WrLj%#g2\2X$<kX"$=Fc<NIo9F;rG(<EGQXAgP`O^=#5J_:1_,lVin%sj`SK0DC'_Z]#EKgfT5D4E%9Qh/Z_A:WO%eg6Jh:2UuU
%Z-^q7e;uTY.h[3b5[53rbm;/1b24<QUeVX[JFo[8i'F:J.]$UkYse5@&LeZBQQmD@#F)JK:dZ/b0SmeW0OeO5R3%(b.\as$"!):s
%oUZ-kV5o/K$BO)/<?N?M23,c/n?,m=K:VrhC(E^dM/+`?RA3"M<s`AE=h-NCSIs`gN+3Q0@KdE#,9=hh<94nbLm*Uf11,`Vcd#Mk
%Ni:qa?tm,O#1euZhm.3k^qC.OJ><dAN]C.87s(F8XTjK?VW:'JOX"`pL^*5sZ47D5Fu]3H2+@FPI]g;^"7-c2^'nk&7FQ"HG+'_c
%$m[#"d5>"ai3VZB7q@jsDJ=X5R`(:WimLnEN>nT1NIk4SSG4:#G3<F+ASRAlkg>4[3BrC-I+6iJbcpV(gYP8>FHOQCRHrPkJF2FD
%JbK7o<-r8EN(5r;Ut(.%N#4WghMu\cEK=[t_o?hul%4e-+n-$\6ubV0@0)NS>1PQpSj!MP=:GA5ck0U'Q;ZAGNb\&3V9>qTg<'Bu
%*mrO@[<6$ZNIr^q@#6WZjZpE;aP(BN0c5/YUHL#m2JOs.r?`.dM(DD:pkS.i.+:K)3<k)28AN:ll?E*/Yhq/h;oM"a7"B:!_Id;c
%/8YEL[XbK(XA$2pZWQ=b#'?eEoi#PlAA'l^#c$;C)dR/[SZ7?u&!J"*=9B\FiI3mDl3Y^INBEdWaI0fl=%'"''<223G'+p=>YK"(
%UG[$*apR='o#')t<\4?BH7f_h]GHdR8l0B)Hp/gI(Xl"iIm@snE9%qU)'bl%g`+U%Bre`/_+p(t*`:0jjEWfIhfj;[@jR"jQt2p/
%m.J5#(;L6+Gu)<I6hm3HdQul]8?3cPlI%,``dnGD@J5A*FC8#VeVT"pPuLEY!HCs;Ai5D*&kH6([%)daW`DhU"H7p`,l>:&)M$.-
%;F;0.##P8\LDG.YGofFFo8-^X(qTO5bn"`g:\=*+p/gd!VT;,G$A5[bODYQdb+o_K*0J2?A2,,;.b"\X2%dmZFK_cU7AJJ]r:3[e
%@Z)9'P6TR.!M'liQj<p!?(qdbI7&Ele(*MV,Z\r:ARGp8loPq>dkZfS#eO`H),q$Lc5";Ya0Z/(XIr"]VQrUIROK+.C3*VV=ZFoA
%#:)2Rp8,\73h?F6-@BE.b]H:hDhu?)gCo)`nJi6Tp),8p&;`0QdhV-D+PS/_JDRn@phVVW@K6TjPp?<a'4ZFrYpce/2@ibr%8D'f
%[:=50!jFX?/u)IHdQ@M.:+O:Kc^#O2e9)fqg8j;V31=Ogoi4SK9]Y3K5WSg7oAilEW!XTlSB;f$Q\o&cD$9^>=#geA^@2/\qc"7q
%1ukHg'bPm7H'^9?'if;YECD8mUoB)e=qg5<OK."=`,^K(?e1"7>,Q`f!`A`+>3V9jD^!8;9f43h3=T"V(g-&9*o%#)cid4^NQ?AN
%"cK/[65)[\7_tm(!#@LOQ4!(&'6k8,"SAf5j^H\hAe]XGlR=PapdRjCaMo^pn>I^'b\@XX,"\G3".P;N82gI<*c3M?ipK&]3!Hl7
%pa8/*7XZ+5Ppe2Di%*A0XsqF8M-;blIq)_V/YbFuPf+$Th=;sjF!9#U8dmQ5+Fe8[]P88%-!=9:%i"@tY\FJ9\[QhS[8Vg&I0^Vu
%&tW$i&HFu\]cLL!neD=sP=EiD`"QBX]hr?JN8l=]>4M[lA/$/EG1/X2hdBCJ:4\552XPr%;KDhE8f?2G;1MVP_A%;b,-j_ISL2?+
%K\Kg5'L7;-e!U?l<n\`"RphiVQD9*^#^S:(*_Fj>fo+0l1_ug8P$o=JAD&f$#!I[Rdtc&M=*cBkL,]=gjr'B2'5\5W4g6XO%30c&
%AS4sTeV2\Rh0$;N&k3T!H=34cjtX(ZQ)t&-jJ7kTW5`e>NN1DjADE/4po*eZl4B<fiN*S=*^3-n=AB]%KAB(8@[eGnX.gT.;a-)X
%JQttFacV9e+SWE&"<pPZ`5&(h<>9^g(0cM4=bC!Rh*$(])bnb:U\"Qr#>/N/P/`2Saj6@cE+!"kVO]O^]LIa[&e(i^YS!9aM?OpZ
%9\n?=X?,EI<Ha<Ib6_7=])dpegngNDj`,_P'@A$LWc_":$$c)S5B`s+:o'e7=:I;cc%`[E*99N6+:P_8%Ko7L\<pI:'t%n@Pg-n$
%V8u4M963M%9Odgn=%R%8>oq6X's/OWNae19*>*X8g-o_7p`bSo!bMN96Y+ZK8#gKCK^uei`?su>Y>bt+$ITd27[Z\NJJr.^-d`dj
%A:CmhjI*M]dKp09(bBZU6f#Htb!C/X^pbU%ZH07R`,%`R7lKa3ljMK7-e.tu^Q%)s71Wsk<huisC,bOOPp3.NND=1LOVXN.+*=tj
%:_uk'J7kBH]6_\]bpgT1Tj!"s;Xl?Z.!ldBdE/c5JL<RVo-R&F$*TPI,%NbH6^7D'AP`T\Yn\!5@p3H3hVpB7Vn$@_""M<oaRQ7H
%m'=rt(C*[R$R\C]_Dn$.$<CTA:.iN#-2,Pub"Fj=39%b%k"=C8$dYtl!W&:kU(!qhjiKgEF2j>j3c*7'=;(nI<qE)+A+>F.^bsc?
%.u,r8Z/J7j/L=T;KRq+U/isfY1%3hl]3*!ldrG>X'o=@7Ud5I91LZ>-21PMo76UPD5Fh]$s"ptl(365"_GreV/-%rbFQdua6T]Ub
%GTP7%rosNhd#$XV0,>`V:E0B2)$RH(?utZ@!l.nANKF?hnVHLY?'0Agf-Jk-U)kStW30#JNmOKfA9>V/)3Lr_r1u93gkRFe0*Fsk
%YVUeI/19GDEFY_EKUQ0rb*<UO`KMWt/*Oh<]f\kpPrmM0M%5IAXdB.6k\jA;>t[&g!0g"Y*89&$FmRnnFH*T:&YQb%SC=:&al6l%
%+e;=@`#<%U)Co,sGqkjt[3OG+d?fiFG''@DJ!h:Tk`Qa@PueQ'bf^D'@T7M6B8i@B/)n>,12FbsF;]sX(qQA(idfFN:nX$ONU$P%
%4_up2mY"H-+i>GT4m8E2="Ke8b^pt+;='c+ii/BK`u/J8=TJS%VAo+ACjrl_9chhA,OK_K79qt$D]frQ8`VWQo2@Ho5'5hec>"12
%#`#Y80UcY[E,le'CXF:(qUp6C8+X8W@'!hl,(eB\#c]Qr#IDAL!>jS5&0$^b+!6o][i-`s`f\c.NYt!KPPS^Lg6[A1:_&QABP\`q
%;e6%[%B^G+H)(1_U16G8/b?h*UIYA1p5*YISO[@u;`8SoNHA;#c-b\5eUZc78(W+]j)-_R-]0C=*3]r2L^$Qo6#`)l&V=fG[#I&&
%Ui%0oZTTHHF"[f2R3nS10Sq2[+!c48:H5]5Z+UVF1:0[%9el+j3It/;_BJdpQjKAcS[)nl!%XWI5X't!Ri47S$+D3.568'h#EL2r
%jG"GE6_MmWkeg`hOOSUcP-?6SU(4jEDD"3d1X#bfCmEJoZ)7j0`FBiA,p_)=)eN727?u\]b4E.CQ*nJ=RC.Gee/<NTN>6ASTuksG
%)N.@9e8TuT[PSR`Rrfel,RuQ$5es<R;TC.U:aU7jeUh#b0\.[WK-W'>0h1>$(Ynqt;80I6@K!(l4atGq9WhmroYt#.?r7?CW8sa(
%7m,(V>B7\S%4%B"RN@^nk[^m6MKZ@GQVgo8,c]aaIF,),?@kXU'1Bq-><MK+R5kQeLQ6?+/XpdG5eX-J$0Z].9mJ*^Krj9]:4lFV
%$%BYjZ\lk_(SDe$])R=')lap2lkb]Z<6Pne^(JC,1gB.g^8_\Sm%_ikQteWPeajVX"@AUubGo0=;19@Y>W0Q2[3[=NR%,5[A'EA*
%$MJ.g3=FY6Eb\J6(W6B;][W,Hcc2V]g/uQ60N2^gO]fa5p0*e]Q32tfAiDO,.@@k;d@`34lJ3$([V5pUnJ*B5jo^pN83.L2(H(T:
%]aktfXOc#ME?Ia=2)1r*TZ&<!@MqV8L9:qg6UI\.A(_([kO_K=7uLeQHD]P1BO53q%$H+-Xu;0BYalmnR0.^HV'W*u4'Z>M.b965
%Z"$dc+%0h,C/mkKgJ<BMdKN@jX3@9G_SCWA4RF;,LXe+n`"Up^+3!RPi@n:blRHCZ(>W[n_pr]QA*l*5OhHW#L;E6-Q-TWcg$l%g
%LCsrYc>FZ@%-1*aOaAEGQ/4N:`!2ebc#F=sR71h[p2$0nEF#8'bH)\XWm)um,I_Ag-(\b5^B0r,mG,o$;Uk4uBGZtO$1pV"!]UOI
%3^_6ADQai9i]SZHiqX1%"\u]+N%>+AV5W#GhIfHRE@5Ik3'.oT`bbWN!e7=k79GD85[[L;%8S-Ef:X"427LX_Nh\30_Q16XW_IPn
%P$j2]]r65(#U%Zlo:]5XMoorrd,SgkjoFa8.E[Xm%`)fa43u#B`(Ps7PcRJDLV:NUnM%c.WN.N9#D7qq"];(c)nbuo.GooG#SA+P
%Or2<o+Ua']H5Q&VB&R9i]4Q_CX`3^;LqV5C<?j5e:=4F7Sp"u_,,f<0L,T7=LI$%i'IB37BEm^Vj6]7a\I1[Bn:mU-HR)E)HlS?+
%;5?uB\/=nP\;_WXZbI=Z`PXZ['ktA6b+pD`1`4.f8sZg8$5[84_(BIXG`JWZHLP1Ek<fIjk=AS1B-H.u1_1b.Dhf,TV=Z#MRp29S
%IBDuqW^_r#:kRqGJXGYk-L_e2kY-7?,.k)-;Ne?W/+SmG??rp'q3[]4UM(8hRc:`l`F3Jl?NEptT&f7CLn]ui.3%$3A8#=q7<PEW
%UoqAj;%4m9!P!?J0r+BI;KFRY204MS#*6p"qH?LDP;=n&VM',dcYcTuA(AK:6#EmJO^JY'kt+lb+k@3,b7QF?d&S!0L@/GYVU@6&
%+Zab]S'j9<X0(OZ/&B'/iN&QR_Ms]^<n2;F2*7RQ`>HY4d/k-fiDd-$,o.':F0&?7PLqEU*F0HUlT%(I7LF\O_koGa/EI"9jnL65
%/hNCckb9hX<16p`@6rM>^_]."ERa!HYf0T,)I1.<co47lM.>JJ%V?%o[NBAP?Ibi^4IPq3iU`Y&(tGRn\UlEk25joa<a/h7_.hP\
%=RkVa;cY##^X<dH07"hfB<Q/:R#A`gc5n'@0._8^etc>c<GKub>$@r63>)%\-]*7YD=!kMZY/d#WWigRiCFp1:bW6<A31"\P@_&_
%SU$6[71'EVPCh3?A+o=SGi]e$76N$V'Ih\m76QE<n>]+%d)(YB"g]U2EfaWF1fQhXY]HMBh.p1MqV/:h15.*ufk7*'%#rU[[O<_B
%"q9PEjB9_2WOR8T<Ycq%In[OU<H^^?RWW`5eN_q=$D6c#:!`?5WN1\p:Z2mC,ar8\_H0tY%9Z/?IJ;kt.lE,bmTD2,YIVKs\[COH
%93sVRN)1stJb&)!)b8J<BasDE)1&39"ud0FEVt42Y(0tlc%<bXc3W5?7BX\X+kH=\S"aT@!E_,%=\NY%fkCm&8&#qnV&]QqP8IUo
%Q:rN!/,@7:*U7C<9O6g=A,_M93#&BG3"C=F@!?huo')#D=g$:[-n5\tTer\H#+m66_5Jm@(\b_e&7MOT7$2R%]WW\;osk;kYS4I]
%-"_bI[S_2%GjPkKW`mUL!6&YQ'r*N^K2[\o>n8.sfJ%=QNiM#84*Z_&F((f'A:YGX&He<B+tfSOKVPhMKcXa%,8Bp[71*oLmt5+5
%/\2nGO,j.MYYd-l;J\Q(:"[-'IQLjKK[X$s^L5DkH_W&Q:Vfm?2tVA'h+7/lFf)".3<kZ!j1\tYQ>Fh"cU`]7>"m(KS:Y8)(0%4N
%>h0+'M(4@f$A$j.UpE=]?KAYt]L/MC#+r;Zd4KL;LB^7[rQnFh^fd!nJX_t0W4b/J6@a5fehe]6\UA+1QIp)NCW2N4'"B#f!#/W)
%'77E><`#:M;rJSdeE8@r;^l%I+IP\S/fg/*+sqV8d[2sVV51>A-*.kfmt7t@3NEgJ#7<U]2ejE;8@h(8Y">WLKGR:eM2IK`7]Aq-
%pm+bXFcF;;nC2"g(celc-51*N`UcNWEXV.96PtT]l*2PIM!>*[F3f8EE'^1M0'5_0#H)2T;KC9U)I34"@^0_qP^n:TjBEHGRa;^^
%`du!*N2#u5_I>3iGkG?S[aC68NQFtX*gp_*Yc8H@TlAU#S2/&]i07/iGd$'u(h+fMeHk6kQH=.'RtcikbU/0Rqs,Q@_Z6c.Y[<=q
%%5.;%EA4qFO&%pke=,S.a21"Z[*red'c`9'Z4ItgOY!!D><3D"7hh>8`ol.?j'[?g4W7mSfQep*S3DJTZ"-$[!_;T[:HSm":^Wk]
%*&qtf*3Q)t^?l/f6kb9hG4:&M,Z6I#Jhh"m)'5*g270ZK/"nSB9`:!JFiWQ5DQF:g`5a2nFtts\QgC_$9sUo'IH$JDQk$.,7>NDs
%M4(5V/*spjk@l^pUEac9EmXI$hHGT"Q0)s0r&'VMhJ:V^Xq9rP>5YBiOlM]\@4Xn,\;%q#e582W)gb)]8^,`m#e>jGK7]n<j4,!k
%Tr`:;W>&H+oG+u"3BgD2Z"8B3?GdaQVm1O\RRrW$*+Xad#ZW'd-qN#rKb[?X33M"#I#,hZ$k8"SCn(os[7@eY_.K)m1Zjj!$EYuD
%-qWP@78_5R'GaD!(H)0>Qrlpf4"\&ghW)_;h/$!3.M`d]2aqnZK'(-)Manp/]34%<Q8M:UfcWR;kk!#QE=?j=&=BEa5Bts@XU3^r
%C6k9K)IbY*0*#Ur;B&lf4=&#4@VuOZcHl^@Sk./$,e`PMF\G+\BQbUd^2N@$j!F(-)L$8P33d"1M$B'9\V7_V;ro,V)h[5,7':5\
%4/2N#+i>g-D<U&rQ361ZU'9^)eo4ZAeDcK"6)q5m<Q*a);/O8=R#NRAeL)R`V/?nH%rF8m(fDO&YsPQ&SL[@l'+pZ&@SRDmU(*:K
%L%ld/P\]LZ+IQ.^h:uD_M(k:u1BQ!/G)4)t%5i<C+2--2iQgR<_7U'fY9Z!t&tdA\R^75LZoAOq,)E:u"d%rSPmaAKZWArm?qV((
%On$kf>q1J>l]1MZ'"njH*PD_hF$ai*8&l<eUM:`O;@M@375N/f;_PH9][J90eS8b(A8BY'F^Z#]3L[F125M2d&ZGM6?"iY=(]qM"
%*":RY/PTff,^:d&H0W?"32j;kTIW45#FWh>=KSdl^/i1%U@q_inB=Zoo']W$WfeftO!^>o=,F^T!UH4iT3tAVP6rZbA=uC4\"$O@
%iELoj/j9Xps'q3h=BM`hoS&gj8OFZ?Mi<1^9/Uo&MN+;`CbOWMLlr_s'tj2?cW\F[jZ2/p)jR=ZYG,#gRUjC<Aq)?`Mk=K<K#F?+
%/Q(iL)G'SaNnJHjYV.RX3n5Ga2J3EO$>/G>,_Il>c89=9AY+'n6H<ID"_?Y=UKRff_dHUaOSal0>X#f:1JI`qhA3L09;Rl9lGqkK
%DXh!hUlZ(PC.<9$eipYPq)bj"<ce%3&rP#\+d1dk#nZuJP,E`lP1<)i"j4TB2*7s6lHuA8N(?d5kGN",k$gf(D91AZ>_\K(KmN)Q
%EL&+RddYjPapbK4i?6THmPg7OF*oCTqc1m].06R9Gjn1FAsoDCEJ5\7(":u,:"<U(j</ZmG(WZ[g=tk0&Dft:U-VK<9]CtarSiC#
%1n%9)D(q6r?kJ$9n8dF5)A^TV-aL'k0Fuja[i0k/Ef\El8.D>?VkQ(R&l'PmN^89Qa;4;mIMgPMnUb@26\!(d@6Vg6#hu-^:cL2J
%\'ti;8>)0F^pEh*N+Vf3>J""B$O9rME`+eCWM+Dl!AcP[[]_A3M\cWl>uDnT[O#u(6;%]5!F`jZasi(b(4;8?A72&UhAF3;fZ`ar
%0Ts]HDmTWpBRgm*QXULX!TIMN9oPdo!d27$C/ZDg`V]ag-N:m/#o#:7'RWP!"W`P.NCY7uqIK$3BKN1bU&ZSpOLZH(Q=Ps1c/pAr
%\M8JQjeh']&0PP&Q-J@>L5[OE`EnGV:NPT1p`um2breXEVp4_03F.e^,*]bU`t^f3,47iH:*:7:A&or>Bp?q$.j$%YX3lu.ng("h
%[)1drVY5tMj?o.%,\sXFT(&L$K0[R3cGF%WR.a6@lst38oc%R>(V(8<7H1#fCi62;.UG/0@8P4i4K<<H_9I?Za!XoND!%:a05K8=
%n8NIVXGsU8_-Nf/R9bOqX`tGE+jC0GB$5$Pl!%foSFg[_8Fq.r3IFY7W1",@F\tf/4u"A'd9MmJKl"f&>'%gi=>]E2@_A'gGM8d%
%TpV95e"H+7=G^X#+"X@hq:7.p]X)-ea9,DdA_L$\TF'L+!UK*7Qm.H:-89gJZ;P*8*_n,Bk!r.kLT[[D"0u.8"=Dm`>R47I.LoC/
%AOCO-+4QB18g`iR521&'gsnA1Uu=3OZ*B;AA0+F2.,qPR4S#9NI#DF`0NDYTWPLH[o)ZF%$.F_,/BLn]H#j9.(Mdqk'g)lTNJYJ/
%N]];hhB7*I7a8,eLR<<n@QG7mb+e%[CqT1VZVaK&B!m&rKG1\&p;32[aqu=?U%6('_pSAgc*F9*mnU7B3o_eAES?frF'1K:Q%<Z^
%QU@&h=%90nk1pqmnBO#,CpA-&1ps[8`%J;lB=Gk`GcZ9U$(j,hW4t3,rcb]G)gp@-Z;erDi7"P>os^eM<RIo4#+mf92%BOVppB9S
%rNEh4S[#7jG_8e]0U9RJppB9SrRNgi'1,kZh8(I5+NZ4s?ML>\Ac8`F8RFhn1%./b7,Bf--n>kVJM0O<\Z&YMGY?CKk"d?+ASgZ2
%#,_njUfOfi-=X\K%;8B!!0'7oeOX-pO,hJsel22VBLY<fZSD'+KKhK1[A&J"A)OF[o9$M7-n6<k'KB<gc"<&<ptS\?XqL+3J6'uF
%GcU#>Gu^8r5VJQArUlnbdr;="dFAG.1l\A,].L7>8!_L;9q6f.4c?0VI*o<sMdA4\q!uQr';sbdc_BY.?SjodbiYX6M)\ctE>hUF
%/=LJG7FRh3P"!i[q3j_cVr1J!U?Mkh1d1L$\J)L!^2q7)$TkpC8^\p7#d>>*EYt6'<>Zp^H$?"%eenh"l05Z_'U0jX`K\4splrY'
%H;;:\4jl0e.V`3H4gJ+<d<(!W2Dd=I*Y)dM8_?JFpa:C$.8Lu"Q7Y##A%ik[9CQdK)B;]:2Z#!bU,\j.K*:A45+Gn_l%3UW>nm;O
%jS#';X2.@J(l_.DMN`@\Y4L9c.l]5d@n[Z_3plOAb;?+gnKiGEh&KageMS-V8Jr?phnm>tM4TVW4[8'%ACi-JR:@e:6K!Z8D>.Kc
%/9MVRd($=poO6470D`=cU($-J#lQVTin5OF3EBb^G@,SPSVCoCo;9p`0\T5hW0f+nF`;+WYWF/J`Dmb+@\'W5E,D.6@'WHV?0<qr
%Um]-4:7cu[4]um@E/]p%?G*HUDH54LLo#t+,Qu0pqGT,F'&Bub3b&M\[cEm@c4GBNak#IGPF6K>\&C4[)1oV@1S;XuVUHV[9IMA]
%jOsadZ*FH?)V!,NAC3u"007ci>]_al*RR?``GlK,cH.omP10\1?*:2V=[G4CP4_7V-9a*+(AlAWc7!/1gL.8m[W5bbllmm%73tC$
%9kT1\F%]Hc,*A)SD50KhamS8X.!?#!T\M75-1\q&je<SW!DPqZKAJ>>C(Nrl7CP<hTp?DVCZ\AIKWl,O$QA3m,^jCbCd"lDV$hR=
%%,'F^7Q#CQ$SQ._reesMP+f@nm'p_3:SSP>Md['I)A#J+AgU'rOeJ4K1k"SQa*&`do.?CpRTk_`;If;s"ptE"<t\*4L)\[t*[n0n
%[H[gVqhTGPY9q@OK%lYk2W0>=CBq/V+<`h-=XD93TuQ#,.4rVUm_fXTV,<Wh\P4Q5IJb2T5>JeL('H!'Vl3b=8==0PVB#nmUM/^?
%^Es9j/C>\IgeueR-(KhhP#GVK25ACKV6iFngs\itSg+3f+>.(@\<\Zc.#S#4)0S!C)`iI?ek*F`SN;^mC,P#al&.RtF_]SIP,@gr
%B.hpJH-#9:L,AJqFtg.3*>P]mC#:[Q4[h.%W9,N8?mUr:-"=Zs".HRI(dY?#lDW`>$i5H?]NNBY\?dp!`;D$C'C?Ij]f+"al(n_Q
%',JOAq\'7OU:d^rIs1sl(?^Hp#QN'rQK;]%4,_drhV#?BV:8-Q;)[QQ,M3mA#Kd[&Th\2El`WrSWoTpuKJ"hps8C(h0Q<-NS9;mL
%1h,iSpV`)b$b4toK.:"eB-Umlj$Xn&W(b(DP[Vi_BMTDA7Y=q.eNM+KH*!3`\WQ,01ui$\D!oN2=ug2fYQSATh"B:/03ddE=H3pA
%")#50(4AEc$Z0:C<e-]M)M+&E2p"aU5-S7"X=pt+*DaGTDb'(cfmlMP`*&.%F;!dq1>(]$*IR3Z.#Ag]G2+t?2QE*\cne!fUg!57
%E>AJal\\r'K#SSYh5r2V8E/<3l#'>:BH\3*l.o@"SgnMM;SB80[+FqmUE7MqK(;[qEf3\+WIiK''F#.D<Il7:NFWqce&!6)@5D3A
%`5'3a"rECN9"KETNa+SNr#n)sPN=nnm8Oq6n-I..4Un;lNmWTB0gFOh3l#qH<uYt`>C@(HokJL>3!dWHMbGtg!=a$[WN>OG'>\qH
%PJ34ng,--g,eGdF6L>AVX4S?=^aC$iV2FdH#bih]bSPK?bb;&fq98YV`b[SX/\CO7leuO!3%(_-]S.N9X6/.^f\N(YjHT<EWKQoq
%HQl-jOgBT-Z=pEpQH<Y=n#*G`j:m!E]Hq"AmPO7,f.Q,-4+,RRWg+j!)_&qE*(l41H+_XLV_plaL7?FbJ+@PYlP1<ReXk2.I276H
%h7!5dZ`WONRh@2FP2%#=U"al&"!*.*PhUY+P@H@uS^u0Gr>[Fn[*IU>-.f5'B5&4kj>K04C4\UbE84$;"uTYFmQ@$+s4t!C5/M9d
%@c&%p\;fne)"MO7;'35W1?W<epnDhbY^^01S!5VG1=2$CnIaD"&Shq.*]>C.X4`.,o$\Q%];50^d@;E2Qk^l>(3QT?!l8m95m!3?
%g"^*`F`+R.4h***$FmmO@3mcsCs$$U)`%<]%MYhGYLp]lc':j;(Q<NYG#;Ib;N,c\@HWH"8gj.V$(Ml%/q(m2`;h-h`Q\be0W8%_
%Kq31?%[:K/]r\r(F;LLZGnUeJ?%b+^TlPjLN^lS?M)oQuru9h>(_rCV3sj4m^+FmOcD3NWO,UZC@o6#5NV0ED-^K>.Itrt7ed([D
%5PErNa0+L7&q)^3J)H4c]4&i4mLc@gUm/K",@q`nb=;esL-Ul(WcU&=C0iHjs5n^Eq250VZfYhXLn-W6R(M/8A?n+P<`;pIA&gap
%A]ul3M:/H]C%87f=eI1t/n+&Q@@M)LGqHiMh;]j'm#D>c(lJRdlE<HY9+`Ws6M,U/q0#[7cZ,60qqQ*0S+^+&@A,J>ZXb<=S`#&8
%@0W*A!?rs$"K512_jOL."A7t;EN,B<&EqWT+5GMomN\W;le'jlGCRefo294!`X8rMZIH;!ff*8ajOe0l:V^KU:ArsV6pQasHcuSp
%h"Hcoh2lRc'Z'F4*FCS/cBNhZOa9HQgd(9MEnR]-!*"i?i/OKWZ`I9e*hJm\Mu<'"SA0<@gj:e0ac'tfa\?gE,U&.](.T,eR)Y2X
%#?NT()u%ck:H=N?SQUI45.UAtG1&s*DSL0?JoU?^;cA.4^-:;^:O_r1:$1]XT2+kWhtlRd5Ptfg*o.E&<gmE<'aC0*-k#\lq.](b
%[j-<@:CjT!s62Jb/G,8nqtpB)^O,S;kO1UKs5oq[I/%[RmYskhIeAK^2i$t=qTYKg05dq!4\L;'PO7&L"=!Nn5GCinp+/>\o`'C;
%BDHKGYlF#rGM+(1j_)>Up>>lHp?^?/8&,#c]j&?Br6t3fD4?p-?5,%.@?2.,ask(fORHq,1?PRZfuT`$K,3=f*r]pSO+$b=i_MQ5
%#Q+NfIob5jGI(cYKjbQ(l_]3_KWJPBMXra"qC5LtX-c4'XR]oB0fF*j?_E*$'O94p!f]o&O+;X`$C]eS8cLB:.JG8/QL#f7:^JiA
%cUgQF\M3[9/BX0+.?Bo)[7hiMd($*`*'CB?NQAH-nm.l);m&OIqMSo1qo*GL-u24XKS/C7G^PspR!mi&C%c@Gj!`K!R`k-,iU-M)
%Hp5!_[O'JI-V5/)XauetSE:rs#aHnHR1&,,WDKYcGdB."Q`@Dt?jl=^>B79Kqt4G&nCaHlk=WLJP1/T`_Vn&:6E<;p-&:P'LCJ%)
%^BtP/g2?>Dd/RfNW(O\,>I>&);$,$kR(W0FR8\"KlsnQ;b:/cj`-+i][`*pC+CN#Cd7]0Z8o!)t8)],WMSreQZ+JapKi,M3-LA9i
%Z\hr!?lpXBj9MMMs1,QqbYkpp,q)Jb!VAX1dc/[[Rj^F"JgL)%Hh3:u%8gOCfgha[EU6%(TU).*kSk``(t1N(QaLouJ+?f/b,RRF
%a?uPD(Kqp3@kH5$,&[iB/nFO(R8fiM$.Y5J692J,Zs,qP@qe5K5'B,a;b1#_Ko=D\=nPB%eqQQC,PRmX7SK3GQn<74p8=^1`\^o>
%IVVDJAWqs&+bd=5F())n^Jks`be,m7r04WVFn>'djnd9i^7L!^Z["o`jp!;O-OL^DKscBhT\fY;dd.YhXf-BG2=0@c/YV),nnuo2
%15@=SO]':hKo2=BTbnFmUt]XNMjgaaT?(N^[4LlT]oadE%nnsp@<A:p9EH)/+ZWS&?@lK!,?aNRKShk"O%Vgs[ShJe\N!6cI4T]O
%I2k#NMpaEbn$<`u:goW59Rff/$iEYEcA)*m'"5<k]8\k>h<6G7_\2<VM5R1!<kt\lUKm"0N1p'+(>lL>$\^In0+@AY2=I2"r`*3W
%GtZ+F'Ac\j7e2"pX[$"%(We.>?D%Hj?C5!j2A:6Q8]&J1m_[ae8orX$K_p]4CbSG+ZG#=PF-hu,ilKO927.1ZkW`)"K'<T^/^GLR
%"/0p#UtKa6&-j#\^g/:,)\ZhqHn:Pr\PSGa\8a@:W,a1K\t!e&UFq<UN]Vo&(!`+47*D8_ScF,IRjD%i2)l(MmPn,P`]@oJ='OO,
%hhf]=6F5?$@?B-3#ue[CerOZnRoeE&@BnFeft2H0(Zq.hS&i:tff#$I9!lfFQ"pQ<9?;b#DV9Tq.bp:"([@i+6M4T^OK_WHG>lO;
%he8\fCA9eAMO%6306\?tbnb=T4\^*JWO$M>Ad]*'2:@p"GLP5uac_I'iKA>%/QC3JjQ[-?<o:it*RWi99a.Pt9&;[[7"<L05;nos
%f;(K>K+!n-MT)TG?XQ<e)UN([%W:F(Q+Fn6ZZuR*;]*GH]:n"4:6?n\Ab#j*_mEcd,X?9aHK+@+q-s;"nHt\L&B^o#ZOCNZ-/-&A
%a_`"&g)(AB2S@mM[;UM".n@VhjWi\%=$gI52H*sPTo+-YmIZq[_*0s;L7s^rf>KAO?>*gF?!UZ]^")9>[6E;lbjU"Fk&GT8id:qV
%Ju/&:E+V:!d9k_:<V5e30@%b>(gF9%"R8\BD1n7^S&``:p6?K>PI#J,OC_W(*aS?k8?0ed%*52^Vb`=MZUKtOP?RCdNP'%2GB)Q=
%_(FP^8)5)+j)+Ekg=U_[f`VbbQYF>)l3[mBCU5p3_i!^J5-6F3O6'tSRf'i>kg:sccA*_6;k(`<Q586u+-LpfkOi]D[-$%-R%e;8
%mToK$\j77:&%S[B,C6obpd9inUTK/6=-LtI15fUu'Gju=65AL1FIF(VEOa/hfHq"n//5XtebQJNr=Qdk`!#qAnL:G64$27Dm)(0C
%)O"t9^']MJ0.PJY<#:E<@)"S&;7/@W^=gQ"ag(;_7h4f-]iu'XS"=;S[$^-]S-WjoeCcUChGCJg(/UY/eQ`\e'.NiqrjD'=_eO[+
%@c;\&h??V52W9+/%d^M258L7:R);%ngcE9S?^]hhTG,_6c^<J%iADM4:2\5UFGj7Ud0C.h.JVQj@ROo0STP&,3utm3dbqooSZDR8
%<'E/O3Xr851i*@fE/.7CIW&BTBR%!CdF!WHS#S,JS#ntiYHg!sCaWYm_.%)k:(up?\"=&j-pr\k>D?"lCr+B;iGJo57^LTdO-q9_
%R)g_N[J:hHEV,m(:(sG?eF^j&F^ENa6=pek['Zp-,^hSP3eRieZqXksB\6LEV(Ae[>NfL?$]9ct@J*>Q'b74K=C&ko+:bH4hp636
%.<gqZ3Ym=o0AW6JL8,<0HOF#pdN:Ydmm?k\T!Zo/acVQj.]$C1UTYW4#$5<FoCk2u,X#4"'Wbo=JKN,X.9"XU[l2!-"Zk+;O5:4&
%S\('GKdp;s/L]o$jItPq<%0aLDOP%&NV<(RK;\&)<P@IG/"R&O@BC7T92"?@qqf^W!>Dn@r*u9A(H1nRpYc9ZBE`G"@PD6/2Y.aO
%W!?6?aAt=L"tAO.)p8*kW=G#2@ImEj"c/5R%'e)HD704p+20=,NGehLpgnR)WZ6Ckbb(iYU:\b>*5U.:S;^:PTM_]RZq_EEU'jUS
%bGne)<boNNa<"Wc=tR/$Shb[(I8I>IHDV*&r`d+G'@YOFDls-f$"$1eGL1,g0h1"[MH-p'YIXLM)#k/X?T)I^F`(p3qS^"m:Sh*T
%_e^<.ZS$G28W.6O>Bje,V$;7HC[C^"0]IkC`,?cB=6N0j(qAZ$riRY>T=-Di6n_/m'HX]qg>HpF$"MG_M\.#0iD(%i]i)G>W%q,5
%:P=\"aK&OWT8L!1lHnd-OS]e(Vd/dIiPC?+Kq!:u:;.4%pC5qt8#M`pmaA)O0HEAt#k=i$%(>0SKU8fe4YM.Ah76PQ<TM&ckNIYm
%q'7,44=/fi\F6r(``D=a1-_?!0hS*AKs=bL7%,.#X)t&gLZs.`Lm&2sq>a`,KH"5RbqNN5:rJ6451ktQN@*M_M!5?t65[U\)'o[6
%%8C\QS@%@*TY6K3lrRV/lRS>!.!VZcb#SJPluY;^o!ho%Ln<._8#@(rHZH7"$<&U+E;g,B/%K%D-Id.mX-uh\CK/1Uj!)+5GaY'3
%_d'WQDK$\ur]BjAJjQK_IJZ"8H.&#Q;b<''mQ$,jbD"dN:hMkKF@n#_N6,SG]f<IrnWk;VG#r@;?!*=:^RGa;E+dL*$b,t?GK?kQ
%UY_d"@!QVKO1TtU\)rF:/s+u&6AI=$YLS=]@J2$me^KL<qQ(]TT(S8Z?-C9nO3ItXQ>uK=]Md)C<`t=Zn'1eJh)Tf*b?\ND.Q,E.
%%6n[+k*'HGRk\_k>pgWrep68-($kAH@[U*FMhh%$%3H6!%p"T#LF&l71R&CTm8?r!@>\/M3G[0QLMgKP#_UH@9R5$N'g-,L6!_%J
%JsiC_9%/6#D`31sgfemm]Qr="l^5GQ@`3-UKDQtJN07k#RX0#1G.?Y_#1&qR9b&TAd7q)6X&,3Z_-)PW5ns`O,`H-RKNn$(W_77o
%j),p2kcq<R<+_p(F3e#]GP.Z>LT-\!i#BhUTht5qlbSs%<\nNGADD':1MS4pf9l9u.VA;3dO&KE6sJSQPf6F!Xc/FPlpZ0k`(b09
%OjiR8X[1u*khEq?`B5diBE?h"9YPi\_QWP&2D[1C^X0iG\foMmpKOs?cG=Z&@kB'M[is2)RHn)Rg?11i*ah27_7_oC2qnPr!4>&t
%<C?PfaqE)uPa3o-,'LBImdG.j"XH$k47jfgG_Qd+G"of(l0C2C._^tg=#@fB0+L6K+=+"*'Wr!A\Yb]OVID?H?\AK^[(a*B95>:R
%S:O*b(KWoBIMMJnmd!PfZ<%AD0(FjRXi^G'Xr"i'DBO/\\bpIfoEAbmar]D7R\goEo\dVab85h0mJh6Dk"7>/8BQ`)M0q[P?2FTF
%KNga$55't&o@<MfnB9kq]q@;.*:YpDjer^>Ua9Hs[$,ss5VD&S$6Et%e!jX-C*%E)m\Q&11PBr'*4O-6/Hp&bpJaQ\d0sTe43ue1
%^>I-pUbNR!^D'"J4IQ#jQ7#.0^pPfa!F^8cU"i"FIAVaeh"4R.qru[8U<,W[^849^+eCm>;==9Ll:/;a5[km'kXJ^]E#^ao:31!@
%_j&oF.O)keFe;pscZ95,,)j[*bqZ<&lN6%I%]l]5Zq2u/mLA9$84?jp$7R)gVk.01H3i/E8M@UAG#<AN)k,-TEY6;pmTmjpqo1(M
%9N4*D&hZiuh6(a3.f0[SI.@;)[l6]Wm78!^s1JSZgV`h:1ojMXBXSS7q_/OaYWNI%cYV6_,.@eWjK:9FD4(*,:"[\o0#E3Z\XnD2
%HWm"^,$sg%@ElSYU<'Cq#O<Yd=1RWgh5t#tAoD$c7<Zus[sYG37-/kr4,OF)c;BReR,q]2_'PhE0_jdme7Ne@>_Y9^:Q9km=N\NN
%DtRMp!eoM)c"cFu5jeUUaB`Jk7"p*-MQk#fGek/iH'^FI0jWZ-Md2iES-X_F2jB(,En>o>4D2kZculZtCZ5fE->4hI>/nNF(dYMC
%#[9fo[sGiX689k$]qk$7MB0gd%<c@#$&EC='9a]+%?Hp'OtP+uAkspbLb<eZQoo!Snf;j]/n6cjZKc.=jk`64k@g8[7a[b6/T:sR
%$D8Hc"kBh1fE.%L3&p!^nj(./hjWRhXPLM=34fD'9?d9fSkP'U3iGZ.rY^Sh]dNHubK%/>pXFtTB'D0l+4-P\oVG8KVrurQDV#?Z
%AV8du$mKd\:O"hrq+/"/6n%Db(MFt=d!+?Ig-Tpj#od'XeVB(E=A4rn&K_XH`C;PhcHc%Y_5kK2a)3B$c^pNr'nG-pJ26d"/NXjn
%_1\2f7NQ:4`C/osk@LU-g?*UhS)_p^!j7Z2I0QCQrRJU$PBUHQOaumEd`j)?:88t-kXG)Po%(!.r5C@M<pN*WLoJ[$1jT0+]-#k?
%N9a3<PT&D1X-7\WOL,<8Ru^Zo1L$IiJIbJE:Ll1X9:N.VFJ+r/LK;"fe!bgud!)[%0q/7q`AlM9`H9/8hBNolU>125.TRRlZ>ZML
%Y]pjE\oqOL&-Z/p!atYK3e=%AM0%H"(I''PVV#MdYhj^]7opc['OQ=6T2K[E31BL'%'7LEkKU]!b-SqEdJX*gZOWVL4n=afOk$AE
%G6kG_1Z9A6C9C4=DuJ[HL>hTuK^8E)<oq5<,;!i99atV/$&mV-L!tR*s7j+cob#O<]FSUnhFtKU_HkG7f\q?1pM75<9mB<Uf^`!W
%R\;+158*S$R<&'G`*rQP6C?k<T@8K'*f_NhXrkRYZ@4oiCU47oR,*u$6$CebLoGbXjdhjCRIMaHJC["6(4YFb"C'0a/VH6@3]BCB
%>0J5%:5hnogkWf#K1f\(6s$qp^?UTO"Mj0FOWXQ#nhEFo&Ou%_&#R<E/]/_Mi2kqK/fM.jQPlqd.I?)7g1%>"J&011!K./Pc,%FD
%Z@uLI2g`uP>\8?BDXNWo;XVi8ln#q!'H`nQ4U`K#pY=h4KD1t'W<'TV;aHPQQmFD._"8M%ngdTM]G3@<2M]%>Kp8,*p"1V>2/>c9
%TIi;tR0+Q%C8Fntm)$T!3]p,X7i=X8GWe;*![mHgOUEc(B/jJT9=3X2lu4!b1^b^Mb#<P,U4"=4?!#E?/iSkB3n36@p1B_,.ZoKc
%/(@Zl+RY#E5oYrajt-[7X=`(ro'0()$j"45Vr;XQ\E6\\as5]h1oD;6]*U'#gE`AGUNo9/6@8H]=+.j!T0pYYju+"6[X]C'%>:e"
%pLCSb``nOf<WR6m/>ZJ[mDeBen9Tt<LMN9AI6buln/XD%5g0@c0m6u=f%XRd)Re#fpC1L+q=B*(E"5nn[[_Ll4P_AQ:J5&#H.[fN
%^]e5'o"Ru_LUE2@eLp4n4E#WZ`HLE"]A,-&Og3*H`%2M3cWL"]X)Gg#hb09gi>%J--0^./_ieBga1LSFfk@j<b1p[K?#5el$riC/
%JD/g%_@[rmD-:M)&sM9?d:9s%ZnD-%]@H@6GFV/rJ)TqB1M%pOSD/_uGq&e1$$Ceh%?rqkq!B8G?UZX(jt2h9(@6K2m_cu#Lm?]c
%13P!O3*^eU]B)bCE1p<r6DVOWHWdJ`/]eg<j:&poF%sh2NgXP=.(1u(Ja/EsZ2c#-qoi87BOqfuYro9S+s/eeJBnS[]seX\T9YXe
%7n_!q5hM4)r+A5M:gTB/UHpjJ5:aSPT`Q0G$Xrh8LVr/FA+7hbO(-r4DJ@1OZ8#?Xp_9]GC+>rb@.&1F#4_NW>7I7Ei70SVk]-Pd
%5JqI_/sc<gU(bd1`;)o.-8LQSlcDZ3aBH%a6`NO1`"htl,R]W8M1g;RkrFT,&57enm!B<o[K&jchfJd<mKSO'd`8,M"0;Qo-tka$
%=]7=eS*CN?$:flUIB%Y^Z%r7efdT#H_AuI+C@H;6XX/Cn&JgOA\@u,A*e-?m;W_k.)be>'`@.PD\h.%j@K)u'MO.^g1r;Woim:)'
%04N+r/L5@d_Bd4Gg!WC3K^clJK-.=Od^O\t0`l=A9@/$l_fo6N.1qbjfN)ra'n$'#8"c,@V"F!q&a$KTdI?Mhdf?mbbCKI)8I'VA
%SJXVjqVi)(^];ppqDln^GCi`jis8Y4o;$>V.(E&*dD)LX"$D!K"ZH+<r*.%,2B"rFG<mTZJ\2ZF5pg`?bnm)B7u%U@l6-C7%roFL
%#DQ$N;PtbE2o?2ocu"1+`L5l@k\KE5:(V]J>-k]shJj@:<"F._E*Bq4,*sK?[cM!g$Vl"%U+7Grn1<9t`kS^:\gb4[Lp`F_n^?%k
%EaiOO;c'L33p\qr0D"u?U-4q7A&>h98RGpG4`Rs/8Si$)2$[rRW`F]+XVFc8*N(MU:s\@HX0![kP7JpCm+6mjaX!JS52W_`Q-'F'
%6>h]OhG(MM7/'i?e'8uId9(W!1P:j]-9b7`$q"<"/`)00e$R@2S2slTbCQUSE-RqP;+D8m"^mhO6*t;MQGF"=@PCH$F/Q!rXOEst
%I6kFFQBAih@'l.9Gg,Xe.Hq#!ZBsK\++3GHXBqQ?B\CKFI8r73R>>HY51a&2WI9N>8*Cd>9<`7Q&_kRX8KoumZ(,eELQ"J46SdL/
%D`JG_RHX3@%A`$8oJD=h<X%_lE(2CDQ\%E:<@gJOYiS/,pQ8X^h,""=pY4cM3YutM@AAoYZf*IHdp6iYO0ouRN8'f)YFg<g#7Y2m
%Z2t&2\Ah]a$^p]GPg7*ip,Y3Fl,3'e$GnP`rD`jU-048oUAoJ&jm>t+_-;prHF3H/>K2u$b)jWXpfomY8,D-k-E\f-Jq+cLmBZb\
%i&kEo7Xm?2WZ%RbcEr]gTr<NcLUOEq4l$Q[-tQIS[;%O&(t<&XdjCZtM#P7>*Ab+G.@@c%7^G)n:?I^[a7D_QE$I:IeRgK,CI5u=
%iYo'93950\pa[sVXISf[\m+!PE]=2m5UK2?Cq$Psq721![Ws^P!2L>r65>7k>_e2Hmcn(&hhR.)!s]g(0[VVMDm$NF2m$)@K4m(I
%P+@O/[:H=L6KGm,7YO:&R?<nf=V;m@>`sAE9o/RPZqNDs6)''P8U+Qr#hNUHAAZL=hR&Y[.Nd"=P$U9qK,5i%Vp'gugX`4RT3kpX
%a_66!=>EiSh]obm7PsGrbS'_VH1uH=&7L%8+p(r(%S%5hC]6IjBi2(a(EpZ<L"OT]-,SmI5R^'A_P@AFb>[WcA&h;7$^Op=_S5!"
%7_X^u8I.=5'oQs&)'X$#Wjp`*$8]N6p"btcJkSCQY:jHXli&i`O9qV%GNNe#I%#V4a^%5nb[Fj=,JTUim393(;kk+16&oGPqM]r_
%3LHpc?WO<U+Qg9gAsGXK19j>iIi*WlpmQOp5W0t\<F_JI%)!i'UP'/Z!amjZ;*A4Ua'?dqVV1NeUeh3($q1HjU0jQGm'p%O1RM21
%^9E,aJ.BICUHoLs4;S#TE@NUN=;P&a79DMD;*@ETKK,9+;/EZ%<5"!uQ,H8?NiQ$dNNG7o9f>A^c!B>`H8Em]D\3MRCj6drfKkd'
%QF0Co'9\EmY`]jfg[G3!&6(RB:RCb(a3pYEd<Hqt>G-Dm4=\XE-/[*,<&pX6mN9sMA)UT'7NN9T?AMKM>_U<POtT%48jWu<IbYCF
%9-Po=H,jORXrR4)dQ(&h5SfUJX;6JU08o3YA_lA5+11T\p&u(9aX&Pa[p:7^h0<H%3pY_qEeQbrfb$J60qEFWYlgs_/D_%D(>pJW
%BcHJCpHD;8/oB6\GJdhC]^(b9=il7t3fUg(%9--C\tlN`LQ8hI)6[tB_fQ-&(%Srd!IU/fqXi0/`'>(*h^pEjG^9)))40W!aHPLZ
%LT:k9LGYW/\$\V!UKebC4%d9VeJefaO!gu=&IB%]="6+,5M0uqh!]u;eXmd?L`6Q2ENcC6_7tbr^,[.:9nZqBE0)d^3,\%tI)JR]
%E1.JW.RWC"d$/S`)S0:D80!">(7fVulB&9(Q+M]sY(p"[0VJSk2+>^Bh)7NHQcjf8YQKTm^q><"7M2f^\6omq*bN?9TlU6mipJ[n
%LuLbGH9,S[kltsn/_I\5>`);E&fK23!g![nK3#:qGqpSF%fG,D<"cMZ3VPgr7QHu6W>h>BJaTKhCtqreL8XiHKEA#AOaA^PcF^-m
%/$7lERbOS%b))O3J!)HOF?D=EOWS'M*f&lLLt4[b]ePN!9a<o-_UalYdnG-$dUsg\n"FO#)<3:s&A[DKg(RR-&WHdu8@+=<G*5n7
%O=K[T)I`&N).52[O(l$dG!lXNBu%(+2'9VA<gKgk0TcBALlJ4$1Po&:'/uOkE'&r2]7K4ecZ2lW#N5A@,KS;bV[&$Jei*jV)foQ/
%01*6FX_P`h5^"T-Z2g)9ncK[%R;%U&4".2ToImV)J3e5nJiX0&IL*T?g5Z`aR@dr3/YL_+fBG.1!UsNBa$`A8Pe/^u6>8d3-(Qb5
%3c-Q`MJ<G2;J&cO]jJmD3+cph5Y@&Gj(e1H4ldbQ-e]J6aPn#Sm)*EmLM_a9SOIog&Pu&!iS8QTJ5hG8rr(c_]K%dAr4RU4S4.A\
%e?CKLrd>hQ0IuSP'(SA892u@;]>2oJ\<.&O4Io^!i)$DsAQc;g"eQViT:Q`YfRE=a[Rn4YcYUY'#9HRT/9*Q&/CQ^gDE^HI`7O:a
%b(GnW$u!-`PnX,,k9'kJR[ldHWs]N,`^'r0Bd!K]*B`8WN#I>cb09Ab]54K0l7m1t#,nAM8-K741!D&[BHt7>nW(SXh%FDpH=;--
%RjcIJQtb^JFmTQ$9/Muc*k6k=Af=8^"!2Sq-8hP[AID]Fr"b,rI:WomOc"f!1?ThM"S=tAj^t_'7P&jT@ZshJ25)NpZ;88i&ZCse
%I".-<GZ761lqj1c&c1)B8lk'h'88[_BV54?T(6QehYMNB`^RI+T75unH6br%=%''=WNQMJIBG:VTM:mnC5d:D57,&\++'Z.R9Y^]
%@b'3Y5aH)XP7fg/"=1]W'XX0;GePLj+#>W4hm+fNQ7'm!>;0[V`^(h]qgTF&@qp8!/(1aSo6hki)=Q[3I'/<e@kM=_nmq'05LnG#
%0e>q-[L=)TTXW,Jn&!\Vc4*[qc`KOaPrJt1]+4&_lm/kY19%a78Ol?(#,Z3=:eW:4-M,&I4r:MV_U0ZZc&5_qcRgs$qc3jD]]=tT
%$XkK0`;k[jkJYOQk/r<ubWmcNAX_lLb_"2`^:lj+^]C"XS3uPIY>\:Pp&*T2rl+14qVL(VI.#*WDV5)!CE:SYE+bHYrDTB_-_lI(
%Buj$YVUZu1m9(T\10KF[%p-.EWZBFD=0:ZOcD\'J?e.e`fT6s-.ilg8+f:,;_:ntU=\0.-EU2b8?u#<6hk9D[Yf*Z[>@)0<m#H*E
%3r'U\+WCqh27F>S[*@4#)Su(mjKS%4!ouE:!(VW_&!9)]<i_:MUj.I:5V\3@0DFn!X\8E*1.?&c,s`,?"bA6nG\33jXeUU4\I(cI
%DjNc-.^iLCqi\35ou<PbEdrQH6Pdj=#_]dN^ru0\8Ln<qR=rmJY*I9';07i)2p3.a0N7CiC1]4<oLT-3/QBq?l$\8%/`7&^6S9H.
%TZ.#,PpP.G+.55Q6\^o5J%<M9jnY>Vo1<JI7ldhXJ<CG1F!7Z2/o?,#;7%X^Bq71jT(c<ARn$SXH<uC>Jo>MJN?E$Aa"%f6d2E)G
%h>+@%5[f2HjWofVg?sf.=.A)k()IMcYsr!:aS1hPM72F1>fTVrEPDQ..6:f[NsIT!I#EHH>)J#KCq.Oo.<aMYPuRI-?*/dhrqC\@
%+V4OMd$"GbA'pI2n#BSM_jW0%crd0nD)b,VG?#n-C=.\WV(W(,GnM6T4?M@h!^KY)IlihmMdO\RM.9WifHfDADd$VmB1u*r$0NF1
%l1>aIP*J'%F<P@L,=?m6QDij>hX_Kqm4+r("%f`;n+CfIc*7*"P]"&*fn[SJ+@*b7Uq85mKpCld//At5+$:0fGMj,)mbI`/T7BBN
%7Nb$QeB(Bf!(nl-9WYGGi.+35G?7Gq$C>PYm=,^G,7BoRhoZ&;A?d10_h4#fk*03sm!-%+i%XFSgWq`R;.Om3<-fKoT=Hi6el7#W
%!t>a6ef/ia*#^&ZHqWZiB+(coSIjotH/t"$p":\:>QQdIH8a3Wd;C[,P6i/aj>)d$@/5dN&IDojqBG)V&&F!Z!.D>Rij:9bI!De[
%,=eQ:m-jm*FGpae::BM_:3lEHmOaQk$=guE/5hX[6aM\(6faAqM<jc&0o4SfJQ$V'9S7i)T\`,oZTiKT3AFKh]F_.<A\s"goECc3
%-5/fo)gNH3f^G(_2+1Q>'kh"\[c#6GhT,mF+$0r,F=pODm0o)!9V\k-aY\2Zkd/9V\@TKr"\;KS*]2Ih?W.+F5T=j/'MCl8^[iE(
%JKfdHee$]'Cm@<;Lo&+FaJ\9(W63UZQZTS![O-\!H86.*=m!Mae9Q7OQ#G+MUMgn.CU+r95Y4k9f.XbIZADT`9/Nh#,P`kq:k.[>
%5JJTAbiS8t/`[\s.d>oXl7Tq3;ru/b!!d;@(g!Ak@SlN5r/l.2ce7m/8=knjgeLeE2Gf,X=i?&b,_td.4G:B.#_HQ^;Oshg@DdB;
%"=HDe$ftG9!`%-m"oAFOW9S%'Oa2%LA=^F`fk?:!*gSC*M[G&V35,a1PU\\:f81kh-.3D$M`@JccnTA<RP7E04[tfHSK8ia#(<(_
%7@!H<k+1RD@\?<edi>Wjp-"Lu:NNu1Eli3Q2NfDBPt\1G_/-JXP[eoa.?o,K,$!O_KK:CK;kCgW1EF.N>1S6dFp)Ju.4#s3p_L1N
%L_O:&$4eUkfXPI=-YOu1$.D(U:n<`?>q8fYHWbsWo!.cskXlf`<!lM^f^&lB8;V&q"7u@s9(hZ\'2+Ne9F,c/g+od$RPi`rWjq\C
%M1!+IKlpWlI&i/d+KWRj%J!kE+W2A%V"nXiP^,kj-iR@b=C;DGbO,!=!j]/**Vp[mk4#`8Edhr#=5$JFUH)5\FP7IT"[5S%q[I0e
%8t^`,Tjcl*bT9J.ICX3LZf.7r40u(DE;@HWHZe4jeb]Q6Jn!\Q'=L;PSU'_I=H78&X3Z)aRB&)nqG^[j%Xi'-YcAsTjsOW+TU5+'
%$3*\%H1=9tEuqE+6>Y31B)pIKh+.ZF=^&u/0YN@WCR8/PB^D[tRV-O@$>oG[\@*i6.I()hDO3GG4-XThRPF-5Z<:gi3kX.AkS?hr
%+>.5$,s5s<+&t8HH-./4NMR#/1\aqT^W"jY1r^+maE,R?A9-0m/*%6Q@Do8iUR;K^EeH_l4a"3;CF$F)VW(e>id6X?>FluD5NFHh
%f<22pg):c50PoeRl?oqCs5\Q>."^47W>3"@$5G@Kh?fX!"odFtZ6>PFaup&%\;^Qi'nMrNKFCDj7%:>7Vg#Bu.^L[k"cCf+BVAX*
%+^;b)9tIWY^qG:="]RuL+F?QLelc@R#!V%1Y!dFj'hRo>*7Ia/IFb&sWo'.U#VMGG?H6R436J.5#Ia06nL!Z>lLRs$60OKn"lX0M
%h9mYc_Ee;^ngl">gK/D<O]./C5@<4H)I$8'Qp6Wj.u7+bRI'#R*f--`_]ZF57;,[';/B\#.+H`*:B>a2QqH1so7\;>>DN<!%^4]p
%haWb9ll,r]TV?h#5)R=X'7"0a'"<4a5H;PH>3]#(;b?VoJ]`jEc-g/#A$6"b7OT,gi%gF&DP'(Z073GL]QD=o30PIh"r7bf.td7C
%+[5B3^KYr#^7O`tBbhhf*70:li^U5tP:6^Mg+l3#fIXd`^8_drd,mG]KnW6eCSEe2XUQPRAaNpQ=0%L(M:liKDImA:Xo`oeZ=&n$
%W[QBfiI&(c8bVfS`jMkCFHn<K8Ek\F+R@E?&r6B'RGnXHLZ/@4U*Mq'Ah\Qs*uM$%PY+J<[4n<C',$S/1P_IBfi4Y"O?O<(J4bo#
%.A4=ZGYu2-\Bm7l4TZq8]Y$A*H7@t53uZHlp'1(S+fLI7G:i4*$]R]>31'Es3DcAnQk5D)6=Ss6,o!qW2WX<mkq)N]:;mW9.c%'1
%1VFj6Z-*86qAJEpT_R1cqC$VlI8FSl('5'OA%=_MU*skF#X.@&qPDsh'USV*Hb-J2Mg-csQL]Z'a`u`,Phm^2OHd]KE&&pW5`0V+
%q0#D($cS6@Q1]Z<Nns*^0LD>#![lr)hc,D+?&A.i-^Oo@QYMe3D&W^0'O\qD4\n;i;D2)%DL`G,\P]8/'=Y#CYI,gK>)'nW\/bC-
%&\[eW;B_'-%4<A&.ga_=RVXrBS&Et;/FTa!.TZg!.\=L+H0GpLqbjRfjDG47%=&9U7b[p-O(Dh6]9nN$KJakr3&;jKmMSe=H&Eph
%)*#ot'MdX"[6p<CQ3SKSpK1Ze^;"=5`],h,X/!Oh^,\q-F>rP*2LM(a_1om\?3kS9%Prbo@Gs73_umf].BF9pcDYg*_>)8laFj/?
%KYXDA0#aS+!!$>1>9tmp(FST]M8].R3J`J`/(1UdY*;\>7D2];TdNTrqj=3e'o#Y+-_[c@:oU(;%H28?\DP,7,m-oPP2PJgO[TCH
%dtBj*PjtHi?6Vs19[!_C=gHY-^+*pgq17LeK3;=i"65qgj>&Y5E-uA#<u-)!q,@P%mr3krM*+%kL.9`nU9T[h"`HKF:C(kAKC_pt
%A`rU?=\#a!."aq=[^+;@W(V`"T!"(I-!mC,g?cbQaMHMZAm063o:T.G--OrH'/o+JCjRiHL,Z1/-r&pupgen40.h*`9o[<$UV]O)
%`4a<;$!Ms&3<"=En:>6sKa@c.XF,WkTI6Y?8Uo0p%6'/j^j'oCo]rYLQZmE>a\h?q*bNe(!@\#I<?$KV(i\cq;.JN\1Wk-V"Vjl!
%/N8u%ST2\T=UMbpTHJX0%:c@n#b;>H',.I/bDO6jqYcB%rc,gc(s^KklV`cY$>lrI*Udf`hEjZ!O?Vu,j[tlt/BF+,_piZ)WI&7I
%[DOSQJ7rh9f[=W$9HFXk-$Y8Xjj&X9kQ)JCn=a_1$@j\\"<2c,Eur9_`fR4$1qL5mIgcAo&J@17P]Otu=k+I*ddQTk,Nj5S"8^]M
%btRQoX_\VJ^1X?_&Kudsl@ijY)lZ9:oG&*Je-**E27Xna>^gI/98S#rWi$o<9?9'WAdES$?7eDHP'FJj*%Em]?[!FS9m;?rjF[5W
%)OLo.9IIc"M.bqoK#1h6j-&sf,AXDV3GsQX(#=SR*ujP9mD=*1R<d<c`DC3RK/]m#L\']anKFp&DrYXT+kpoVWg>m\Gc&IrIhAW5
%9$K)'X8cnCIgd.tWY2\hd`I?nltS5L9??Y9<=;o,?36]]][Jm/ho7>G%Ul:Apb,`jBd(?1Ycnm%3`s5<.$MmPJ$E^.U9g_c]AJ:j
%lNn8<:'A$?;[^9m\3uPm:!R_f^O#tI4#dg"D@iC*iC'IHYW<+Vk(+(HAKB\W-F5DI\>7"fN=W-h(f7CZVS9-;i&m\'Ls..=0RR34
%qM?'cWBfNtnnID)PS`5O-_B(AJ0SkZlB<TrD_j)'$'@$mbWBMp2?VrR@;mP`-e5DndOuaKd'9'<3oslif75gA:dKgN7^3\JmM.%+
%2T+`bVXnYuRmmr@%E8JH4CT6M4pUMm1mgteiHRnbWbH[K>HXq]0[_M9Nt"e4]uI3lE2eI@=O@lg_+92rN`deTFX"6Z)?U_"m*qGo
%JkJ?>:rSQ+,$tO6E>EInC)5nb\VCh3),p2lYhLlIk3P)fe6=?N\goc1;dk8k,J#^C-HrmJR@7a9VGsDQa+uEFeLDkS.]]BmYlth4
%GMJ+cOF\rL&ZV(_=52:k6V<9:S%UjqM@95=+M<QTL,raBF]0DNVAX'_KTgq6F"_Hp6jG,KAZF_$I!'<FC,NuleD^'m&VUeHiP=2<
%jO>tZh+l*+7aXJrRC,_5lI1F5:"(C;@iTq^cZNX8Lq86$3cl>Aq"(<7Nk;@Pr$5+7a\e`AW8`[?Lh!\g2J(1ZV7iEKRIX_j=G#_B
%!@DT6`_=C60O;l]6AK5q01R4s]D8E\"jg#=P>o`()Xc&X$^k*_<`6I@i=>F"%Ik!PjA,M9.[:3[0<lDQ?QF52Uqgr`"<d'j9,e^^
%e>G,6Kj9G\:m%K>2J2DYC4SrS9/@9El'Fq-%$:Euq^&J?aD.?d8OOEbc7c$KAbT+6"\M0HDQp"G+LHX?e2*p*Ae-p;6_o+*)($<o
%S8=,aHA4@_!*jI)A88FVSKO%ED)<ah9YW0ci5B)n;sq-e#5W"92@'&8OH5uF03Sa'QnKs2'K6j3'F\r?LbLV?[1F>GEo?N"fp&S!
%K[d+YC%_daG9+$r-$GboCLJDT@]/=sPecSF/+8[h^+Te($a"C7getIr?(=\p,A[$/M?@[0*8j+cmMHN?]Z,a@a$EBn1F7f.5a?5&
%$p0KgFYc'+)',"gc2ln+$<1:/C$.(<NH$M81t6nUdu"qoHF-.jN``O)jVCq\_/KHT=]"+fN,:lD1;KXJdodu;B&+V?/N,;oou9Z&
%cIubT?ZH;*jGo37R$992e]T`64=h?SYn=M%NMjXCNl=+7#k9i=nQWZ(;S]-gj=<4M&oqBW4)<6a\n#=2-qXjVGP6VJQ0Kqpd=tdR
%_L`1rPa@F7FAJnUdj#nA+kiJ,m]eC`7p%jK:urb!='f'DL_DjEM[32HD^2l7bUc%;N'5WoaRlMAHM=d9"DJSjb^F+A+d9eo5DT>u
%/@d,p>Y,eQ/SLG%5SkB*m`V=?W/%mF_Dc)-DJgKg:kfZ,0c`NBV:.`DVSbGi//A9C`f4[2=R=(f#\Oj9h$G@Y;>2\IDC4-t1MTBR
%lLF'ROB*G(ld&Ij0p\Y=/bW\ka[-E!K&_.nF(e=n'J'7/Tt.V4UG*L*,TG*L2,j3u"on@DkUZ.Ib!4a%"MeXlL^/s?T)+e]Od]L8
%EcKYf9m\eWE,N]]f9n`'*R*K9/l.5V(Xe"4>:k"r@Rch[]?jA<2q!"I9S46tL$5OS&Aa5`I4B:)&($eWB*jfH\WCINq#ko86P?2K
%#t7`P3E;If-b<4\%iGq!U5YHE7g\"qacupAUCR'.'2`F0VVmE>U>\3,<G$Q]g&`5W>Gp4BZnH(:cK'A7_6F>@S4Z;?*,RLGVUGjS
%9B><["%@CR7Hs;lX7D(sjTPj2TFc99I-c04P0,X3(D3aQ@p4HS(ccqC,#r7A$OK%4TSd^H\'d++6p@S]]u$E..C.*5/Y`I`5YYi:
%E"nG0E/GA*)#RZRQC-pX):;I=QKN()gad$G5@#:nL+G&.pU*;sP]`)>a=rsi[d_H5ar)gVr0/D-;]*;#]Ps/ff3^:VeE,[\9FT;j
%!m>!uKpS)LZf$o2-reG*#9#SgP`luu!\*IQb<+^/ZH?'9^M@'\3-E,8mLbb=%pE^'D<0=aE/+_Jb$I'4GEDlaL!;W@ha.&K$b@<)
%q-Yhu-!\Rdff`"L($:=?n72[(*8(0':<M9m?k\S`V`;R@(*VsF*E@QWcYpem?G^k@4V7j[K+ius^5u2<Df]^o43GoqTKl/]<P4*S
%i*p)?h^';XQ)8IN:*.b;bDeC?8MB1G@O%.Z=YHtW"WtFq/9rSH9)P'C\e:8>jl[D0k,cA!h/2?V[W#YpQ.T3U]NE.\WPc$Q%j9$C
%?"[?ETOG4A"rE"#/CBN6(SR_6ds**<,;Sr(`8@J=TLX4a(It16<:5p.15L68]!.n'TRsaf$X=iU\YOFFBSbfGN.N6;]s@ll0pm&9
%QaJWbMZ^]R>/u:FQD`$_'9oXde?FZ&pgT^mZ]"d)nXVK'P[P_=CS7b`%eafEF5J"Qk$@T--:%V,\.!D9((rf&(S$Mhcu#]bK8gna
%Y!0ir2BSb":1YmTZ`mnGo`AbfO=hJbSN0ko^dN8m*8jt</*:Dhr^LIBHjWM,27b%8U3NH8\JlaM:t7bRN;aNQKd863Fbr)\=BGrN
%dM/%JmE:b?5!bgd=_1D6ip&8WF\;hUhG/CM5bhS?8k]P6ZZSnDq"__Ff[`TOa:7A`SAT<J1?'Q(gB[X0pi[]Ie1D:<TO/ZJ7&&Zi
%"@H[';c"*JD5EU6S8!hF&DBpXA(.\3b$HtA(U\mt7jBKar7MrFic.D_N'N+q+d:,A]&rZ#n/]S+Rpf]!#b'"jTQ2N`e&hO4,iPga
%Ya=,Q<WRW5?_;F!WKQ%Yfe]sh80deIC+S5qejGt]ZGE%^;6.L"+)O^,Cnai/[D1?!kDL18Has0]5.m&52sUV=Flb0:.PMSB&F9`"
%E?@/RSUL!cUfsKHqr$ZXBq^t%.E,#OMnMk%GNDJ&f7a+`S9=hd&H/(:npPJ.1WJJ6*-k7)ME9j*8uBu(-F7-r-8"i38KKGS]#J#:
%2g#/?UI:09^j6(EEt)qG&e$'t)&aHsSl]A*F$tbVgn9JB-_Lk/b<D52-SC!CLVF%1I3Ld^im'lscduR&p+.DbfGdG%3"r(nh34aT
%iP\qglIEk%e6:Oc_t=)'&n(?X+2p@9rqCt$17^\W)s',Re<P\2]i&,o"q?T$Web%Ia9c:A0b[l7?M#0/\h`44FW=7>G_$^9ipdXL
%'i.V[,3+E$cD:HCZi3rJo5@oShRP1pN2i,/O?4"`bVJ2[jmWMT&dL#H+P2/jOH:7u:oeic[[BjXQWrF:s*$ipar%e*:Mr]5;=8k`
%4r%I$@e!pjil`A,>LM,(!!DiV!gFF<@F/Xa=1g"hfLi"OJWuVX;"sFe!(B$R.ih+TZOL$u0ra0.+C;sj;V[MG&87jZ!rF1sCL^u9
%/%?Lt!fE#&Bg">#l+CR_5q%fV!4X(]@1!J$;S]plAr_C=?WmhK.7Hl8o44ZBZS:65ktUW!kg!iZ"hlj`A/(OC8!$d@,3i$s&FjMG
%C3GiT8r=r;@+kqWY4-)i)GM&k"fHq><(GNCARLY+-HR045c@i>VROp6lQBsdeg6MA,.jPB*Qh7OUWt]fb+b$D?sl=j=4btY-)h_D
%[ijgp.Iro/`?HVb[t_MCn\Ij+)_P!@fd-%-M:N(5%?_)sEP<b'YpL]40\K'-;G;$5UKFCU$$3ru[ZI>"Ao#0gmB\_9=?L"g$;6!j
%?ac&_F?6RUaq^<s$KfR`V*JI1-U=(gJ<P7pk*fJ*j&3jr#b(n^I?Y?rb^ihcg7#*slHRF+K'2@]?5W)V(1DpIQ;OT%TGFqSYn!(p
%.:]=_bPa6`Q*qHu@8?B:h>TPcM'H`@I&hcLX<[jMS-tM!3j>8e#$E7oQ`JG1[0&j)j^jJbl#=.Q%sYTphL+JKAZj9E>=8<kKKOI:
%4Ws<SVbX9_0]=_Ten+^>/5P!`0s-#u:feu<8\LraUE1DP5'ec.<'n8Ehiq3hP3k9%gH,(VQ-asM.<6A0P!'Ip'c>,WNk8_GWk?q:
%d6KUq7d2Zf/L'!T9+&$#'%+QI-R'H"J_!:n\.19]4LDu72j1_sNKBT7Ll-5.doI#=+3k()6E"ls3c/<iXof*3dX0neK[!@A1O>NN
%f7a_/C&rbV!JPEkh*on2V_+.gX\p)ln=uGpkUeXL8S!ss5-@q`NnAt*J%N$B[ECX**$BJUUS2F>Dd\-pXK&uODq22jDUi.`95/BR
%!_!r7g+V9!o[gHAV^*@NEpKtDIYr[D_P8Xj(D."EJecpikFdi-Ne5te.]Ue<A7ChsGVX_L44$R1K-NjJ)Z5j+bR!#p`[0*#>r%@Y
%a0h-3aq(\!^-#^oog9[->KMj[Poh82f"pW3Q"[6G,nm$I<o]J36Z$pAiRABa/h62/$(]4<m1(O>VIN-05a.*O-Jh]2"'INS-J_Ln
%6Z#M#.4%cHfKX4a3GJ*?]$mrVMT?!seKLB@V'KTD/-LYn03LC1CB+GE%(\pRC&8P"NtRcpS9I;%i?P>(4=a5[H93fTXK:X#V(Na+
%+jbI@-t-2D)Cd/D^q.^+`@)%4(G?JupG=3mNCi?`!]V$OV+.clGR!:+Eo,\]k(aCTbFer)8b]e#Xr=!(-nf0S4'm9Dqqee3%IPOM
%<OfrZcqQ5un&ZRc$gjWSg8tS*6&:a[[^\:l>6$l@PU`:tq!LK9S/]'0gZ1h`MkZ34NYWC+1O43I@lSU"#IV([,>`_fIZE"apM'OS
%/sq@'Cjfenla_](8M%n5<3H^ZIUJ_hW?kAaWe4bUN5U`qbLOfX1b[b=R<'aGF'a@')cJRtfJR"8(s$5"qRbK6(3Usn3_t[RUTE20
%6>Rj\(_D?'H[*_l`f"'hYYK:L;WFQ[*g(oI`l]W3Ld$p%18&UQ8iW2P`_6,L_@i[a-EO/l>$-qB')CDld)I!4XUEZ)l9!%O)q-Nq
%3XX:[#1h!Z>e%^m9OMtd2"'Bd-CHc3Y`pJX!HjGI+*?aKc45=h_P[qdHA1\!cin(9,CpQo16(W8!'./:_WQWZ\N2DU_FjJJm*rbu
%!ms^tP8Qfc_#G`J0?t:`RJHt:307'B!#8u)6fo[r?.cEr$N$DVVkX=l6Mth.:RlHi6_%0PP]N9n=#%ZaAX+p]0XTDc)CVqk=8r`k
%KdE`NJulgl;:m"P.LZkhf"L^:IE+6pb)M*)F2pGJc>?l$=u=V9<M%]#Glo''jjZ5TRAc*fpV]n5n;<=?Yp@Zt>uu.a-,l-ieUK3E
%0HAjp[51eIX>X"8A!puKs,t-5YehEk>*qgWV8/e[c!',?[Y;)l)Y@jFHWpjmb`269[/bY),G+@md#Z`<+/:/UA[\=\lmO>$Yre=3
%"#jK?1\$e[-XI1O)::p""5=&emDM)r(:r6FR6rJZG?W0G/U#19R>D'(=pQa;/GNEs+tOY-n\sj!j8t?U4_;iYR&k"WUTg;EC?1Xo
%ApP'8SYpiOhA@6$C.R;"?udd()fQWdHZ=%$bEiH\?>`p^+P5\[)p2Fl`@/!3Bg<7I-1<Fq;5^QKJ*l?SB8KJsfek!'?ro7AZp^YJ
%fDq!=Jc;=a$EW&uGe%`%!&op#]dR.OpVdTlNK!1AT`UAFh'e>+E/5"@Wq50=BT_sUUW$9sA%rb]=2W(j0'"Tpc`fS#)nR\fK3pRj
%)S^hC^?K1MNcm't!h[QEfid5d)MnYOOj:K=kFJiJEn$bC:tin0a**p*P4$\94sGq(QtAC,1]V?)ZrBUTi/*ZgZ,a1]`&rqH9<5bG
%@c;U?_E;0q#3S0#0u<cV9.PK<!^,^tm#okJ#D9g-QK^"u:1!.%C48lee.5QV]38AlZ4%Fb^N1t;&&(I()l>u4ei/i*UE\,r-pgQR
%>cJ<-Q;7]+F%uIfo_!R>U5(!-6Xa;UoD+hgU\i^XC@VELm=WOS.5+\M;#qufP+U-,m3[LY4fg>(q)Ipp!R`dQ2NBSK6bp`%WnYbL
%9o8OA2iqap+9Jd/#\tGVnDTk/#(m5u]Grklj0/^!2dPXD4#P@_s08L9.3:r(:T!9<6=FcQF,ql<HLR"efJ<N#b08XDF#!d,OMauT
%HRV9-hpTgkArW,ckIF!jQtqPg<OQ&!\X=>i(XJe6U&^hnCLS+VB1lOr*)Mf1#m&,k(_0m_PntUb)]^0F;Ei_7mP..d?:#Q4U_s0a
%]R_4pMiTs&A0B\u@?tu8$tL/g\_i3NH)=J)apF5BCCO[k-(.K(0=j<`8LoYWE4F>[[m_H2PHl;c$V1ZI(8cUOW61cu9V(CIBSh7m
%!I.M%<n*\<\K_bjbOQPr?L"1g<l8kV/C@REHiXCDb31`Z\QO)IdsQ^VF^b^R/b`TtM]]3XC"WLgWZNIs&Js)Va%#YdqG!a>-d<np
%nX'BkM\Dm7%`E$MR0e.]EK)M6\%,t:B3&OH_:6Ql_k]hmi?'lADUs/1e:[EebX7cZOJHHZ@alD2+^sNSs,i=1gs,,e@LJb`MD_tu
%4OKT`RS9^a=2gR;46Ici`G;7Q.hJLKYTq1<Eo+0@hnTZ<V%nurpEa"q2JcGob*/eqW+HH-O[PWMboE+O>R<ItVWF9Y`Q&'pGLB[S
%GTd\63T#fU'BJZWcj=8Jq:c^Qga'BR8)T0!,d,4$%Yjg&D#8Mj5oJ>+E3=^s%r3m\3H#dRL$$)<E&t2*^*+([hHm3ra]^]RKr>HH
%$$+k'T\L";5beP7=X^*G:g5u5FO$lZYkB,tS+^)l4VYbIQ?eUE`%<R$(>([%3O@0)eeY&JAh961SI&j!lAQP_5VSCs0*Fq)e[1OF
%*__GPX*u@m'Pr2<YN+Id.pAa7P&+X5A_=hEN>.[HYBlcCBSk>8T);h,WL-bpZD7Zo!3i*bg$qr?Mh-u>%J]p%hn?hL6PZ6h+>WO&
%+q@e@aI8c]]Zf+IeNX8:>$F6OJ(lGB0qhW@]i"UXG=<\9;MIYC2?;Y]+_aZ&4U3c*Yp6U%Yf[VUdAV4:9S1`g>Y(Mh)%U&r^QcY=
%3($iSciZ69+L=JWT^+-7XE)AG+*a6>S.3h:1:]h7ndA_c,uDu@X)4^(%K:B9`rd_J(6G!a(6SU&QD9P$3I5)Q!=C>3b0Q38X:\I?
%o$tbAf2++q\^_8N"mebmi%)Ttiq%H;fbmn==AcA$)S1V293KG(TO)678@lh1h,55*;Qd,-Lra?U:G,<16=ILl43X"ATLm'7bG7Y@
%nBasba__.&Bq:h\*,B!pEYed!4T.f;p=H!":I+Ot%+KYKP+m6@7/8]))?N`n!3*%jb"b`D1(XtAa(g<\'o]5GB(ONd`!:b><2oH)
%`1PgdjWft75i`[?djp,mW2aPX2%,,H@2iUY68%93^F%_7j@VcLPRiHA2UW)CDqSbjMc[0;8@L@KRnE,Q!%+j1ksN87NTk!"1XRC@
%$C_O>,\b)_eal1$ALhoB(;(K^!cI@&b)NXG`9T$75,66Z]ln&l$Q5'k\JqUE(kJ3uUF<tba5+n]7SYdc>=Ve?\>$%(JOP7qP"C(m
%O@gi^WsQAaE/j\146*cs[D?&W^-?Vh6G%#m^kc52X'l)R<<:dI3Zp5WX3*[[m?7=:1NP=HC!/+[&0cgW(Uf@]MNanc1YEuci@'(Z
%'rl&kKHroV?EpMe&`Lg34d/N.KU\IoC%8CF=bASqn74qAo(*8Z"=p<W6>*&2@J0XRki#q.1K&79#*5Eaj@l)o9T.10;A1V7PRHRE
%:nn!0C!I+3!j6^bgkG7B]h3jpcZ<ZtOT_W'glt@Egh:a7kF<Wrc0u`+F<bL(lgEkhEYB?LR3%0`Li6<sJle-,*Qp+ASA!'.hR-Md
%kG@FJ-:u)m,]!$n*bZ)mQXmuZ/N(":4r?G!BE:EZaImUGfhGYmI%e9Ep(iU3@G4Co(nd\"OPA&6-UC.4A]_p1rr?J4M*8UT$O;+L
%g>X#5%,_`R>f@,;]50eV)8f'6U[p0?o7-t6c=%uQNMA8j@s@?ZAj<"#Te3<08(Y85JP-e#&)V>O"(S<sg_01/KeI<pRJ:JQN",=.
%bq_jb)#Xs"9L#B1!4^sqW*m>\KIih-d[@o=/K9.J\4!G+#b7Tc=il'42^A4*(;`=LQi(nN0CR32TJ`W@keqg/1C_SiRu`SG1*C4A
%:i,c:()E!rO/K]N4RB]u2&XY-nGeHhTNrOr&Z.F_GsAf7$?)pJc+@*_(r=aRr"@N<)A@6PZ>gqT_UD*uoIN"?jTb;?8RQh@NBY<H
%s&e(mMdJDu#7EEk*!82][13[5n>jq'Sm[@6[bu8&lJc2PU(k]d#haj]^2>HM"+cEUN;7.,bus=L,NLM\'fD*I(Klo"^@^GKc-7.8
%X`g@Ee-VcT/.4(A8/Uf!CKIbRNun1Qng'%_-$hQ9`k;#_BT>,ei;3%MHpR-t@71lc<0-9Bs.WF_52Mqji1?*/'R6m=/W@V,`g+DJ
%&A$A1_:pCE?,*r2A$<P.Q59*)o+j_1#;ST9?RBl0;t]F"TS/jj<Tt:]>0&'fS2k<C"mL!D@[eYrHEo4->?FjCJ8Q#V?P?S(6oY0/
%:_Wi,KkO'E-A:i6!fC_Z20G=ll$fS!(uJonAJFfAFKM#-fK8GM/OWZh+rSBha;?IKi'doAq.-b0R?$iOI@ODRNX\T\<L)IdML`C3
%(X#AJKJ1^SZ@J7N@pTR&@'HGGRU9B8%0HkCRuV!l);2L`3'p5r7/7c-(Kc&<UM?i31#%YeApPTk>-J<L0=/UeZ@h`LIT_+&5I]-O
%WN;kqVljK)!%pE_AI==@kej\R!b7.Pha&n*65Iu8`i&Z`D+!`jN5-J9%!;W'1JJ.cfq%XXXfc<=OZ%icb]9-A_Q=6B/qf3:pds'f
%.3&d(+EO'mJr;toA1=$<3Y[".fg:_7J1(hVkp=FCN^fa4Gp,_:Q"!kID1n=YFnGGL#+8[t.`l@=bRNZEKEl[-Ke2uY0;]"H#eW8b
%qXLWh9B>>8;J-T)N)t]Lp[l`".KAWk1I`lg*!9:erS&:4SJk4&7^?Xf%W)Y4:PDQ^*F@K8fnhi?7.ILDY^pU")PbXKE?D-+80bLA
%7/(0Z$8Go1@#^0l=2Tat)h]hT5X/NLmUU^7.k_9sr6Z$]/mWH<I,cXWS00/Y+GgAQ+_9R"XcoSmhL5f[]g)rrgWO]1`Ph8M\6gFl
%.RY9#;95"6PB"N1FUbns/^5(#eUS/k7]*EN2<Z,,JWF,igO=&232K+'Xa+#M.l35]F!J5#+DrZPT5_)u_GSO,62>U4X+kV>:]"Cf
%7"6u%FU@b\r3l+oqDBJlN=CRaE['-<Kjh#FKG3\a=o?VIr@+lhj^^BbeHJXjI]\\gcg1?D5'*44Xdjh7dc:k)2J"sOQYtXE;J%9p
%A+CWlF#=*1OAPpN0hjTgD[l9N"X"%R6B*gPE]"XSA<BNq*_C]sW2[a0Bi9"#&)eX,3*TM-2BMV[Ep:#"*gLZVK\:3<SEuM/M981L
%r0#PSA\u]mGtNtD<p,MZY41q6'^5qGQO/6LX;bBg^:^tRDfZ"Q(@"0CT^s<tSZ5CAo5^Q58Au.<A+I.#3AUi_@CeffB83*3e:X1"
%kReQ)<!BnHVk*VsR<@PjS^^I5`;T72mApu_(%4#P/*&]faJa;\BC\@tZFIi@3dTT,\qP*QW'e/@/MnLGWb,!KbQ))(n9h:\nrTR`
%H/Z<oQKN7'93IT@dBpHh:iA3t?+T<9B+:FY?6T-!huZsJdcEXZcg`@Eq\18b^S,^++t\l_rgBFf=dhpLn,lSL(<VcO>=cu:R`/p#
%q_2[&dlpH@$aY2NUdU@<Q1E(Ba'o't!S_DH"JZr-,E/:<O]EFfl'aP!5&PN%+h\7?;O?6c23ecq>(7NRQr0B5Npt6uMIMP(ME^ru
%mR[_Y0p1f+De^FIZcEO3<;iDIJUY^T*?o1R%M'?<*DOR4Gs@"s_&#ufcK')gKn1(e$9OXaQ%*;T'aLDk*;:R'ScGYqL%i,`)iR[^
%Ien,-&EJfk/&9"S]I5OE@f8U5.:1((5_#2ub&0rCM@W#;UMSnZ)n=X-8X+hA%`&pXL5:_K1jLRDaBJ=_iYfgG\l=24Pm&c1XNstH
%X5k""<kOB!ZuU<M9gERJ9GHg_.-:Mj)S^hCo^nR9Iq9Bk>,llb<oV=R_3KE7AH$jD[L:G8=s?,JHO%We$1s]4m^BK-*!Q/1H7R6R
%#)SP\kY(0>>O>ZJ9C/fuRB_&6L#!lEbWJ.LV31@.6gGE+WL%Ic0eJYr9?,k!#:lW=oY3&>ff\]=b@Pr[$$XomalT43O]3V?5"4n$
%R;`a=5[SNmg#T<MPsTSg!3MjKq=CX_GYtMqUl.Fq`%kHe=q>/Yp6j#O6C,`!Mc?j5d(mCAonF,0BsUXu;'0EEKIR*E^\W-Fi8VHW
%Aq45TNXZ^3%WH\h4.".E_!0a8\;"c$?mM/[8nEOXcFV#Ld=buKoYp/iL9VFKD?4,RB/'q-0+oZTi[cB4:Tl+#Z8u_)3!UaHNlSBL
%i2sFJK3kTUW<b;_^-L`iO9q`r6rttRPN27LbQB^7b07`(,aQ/cFC2q""Y`\,nECD<@27'RXYT?3i^J5Q^;Jif>d?clKF!uWRf0`9
%G@=6P?O!Zf$Ek/RJ6h]V`:rkH9$Z"aeX)tS,s2`:J,q7jcdg/Yj1NdGqG^l<4f.<I,dlmpHE.]*I,*mB9+8c3ffXr3T7VPBY6BgE
%H\9H5D#C8s-e"7>H_bPQS3^St`:<;%/7"\4Y'tKaWLk_Jq_#)JG9u3["u>q_jnYYjGo)W0G]"W/>V[1af7Zsa'2&qgD)!]0HEl!F
%QDTr/aCs"14R13UbjI@Le4VBs8=rPWTV(HYY[^S+pTTu!$#n\Fg]?D?c,XauAd\cLdD`DRCn6:s9d<`'EPW%6\p*]8T(_>CZPr`1
%$4Rsq0E[:_U07l.W[,cjX9/beQj_1M\SV."ZfDoALams:=L(mRJYr&_n:452^uIV"33(RFW-sg^GltTu?;'BLpAjp"PSaWcKEt_a
%]?RWq+s/4W$1s#p[-2EZ$oQF&=D2U2MXH>O</UqO0-NjMMo$=(2U_Qk/Y5e73[^Eu96K*_=LD5c7<T)d=t7Lb:sgoNk]]TS/\@3_
%TML$!Srf;i*NEg?O'([0&4.l;=bGDNme"R-15.R74X+jqbN]?!SlTB;j:lSsZEhn0TACk,]O@E;&nQlhC,eHNX'nl47Hj?.c#_1F
%%of1[lk5uq2g+uE.dGXHPm+B*M5tZs3M!*OfeJJMK*"3(oIVg$0Dg+3d4LRB'k&jBC-<b:X(PU(ZCM1(Vt>^[!@=VM9KdR2.gGmc
%U1<WaL<f-;F(Jmf2crJ5hC^g0DLuG(_'s;MO".Um'[=:^3R%=d&L!cakSqlFI=6*#h(?\!.tHaSdHqZf!%fgpE<U&ZZiVc'Q"W0=
%HkqWmBgp+6[T"f?>%q:qfpOa(kiK90o<8$B&"=#k?nH'EY$hiQ]H6Q"f[b4:JQi's*ZbC-E5@5BAg&LDOl-R7DM>qN:qmsV=A%1q
%e%&:Q$)/[7<c^d8U'kSTE`488U<S;Mbh1=I2BAPf*Mje_eF>oBOteTlGpS9Z<&;?_`AlP9#r@L22ifghn1.pf#5NoeIY\W\aBqdQ
%'P`8O;ald0)t*#<@7NY'X;@tMb'+A%20)cE_QQ4r=J$:QdT5H6,G#e8SU`Mu\JNG*3HS4VX0-&,\M7-)X\O$mV1CP3]HF%=c6@fX
%<P7CA9m@(s$^@"\*MFn:VkFX8?IN\d"nu+`H^7XY!"Z*uKk);8.j9iGO/H#]+]CL;H+(>i!\9S4(I/.iU4h5BQCWuX21]f#@Kr)O
%YFj&8e2R\RW4`%nf=/LnBqY$@r*J7L1+huU_qETcM_S5+om0#Z]H<5MlGk;%$-\>d)qLXnn'1hMQO&IdB&dC3q9I/P<+aq,brOen
%)M'fZ5hg:rF%S>f0jK^cJo3au@<p,uN9hKVWFrhZ9NZ).Q\P_)4g:`ggn3)p7GdQ"+Oo9N1@4*tXM/r^Eg3D=oG&BjGq+aRPi)',
%j=plAjZX>hf)p5.-BdOu<T#qC@oSGn6%&j\ZC72Kd%d1</:I5m9nLd@3Hj-"!.tr2C*-uuMj*r5\=HW\SlDVVJj_a?]Hc*3p0?&L
%!6FEL]%/@jhoA0D#-hTKTnP\@mk[UF*;<i(P`6CJHIpHfH'k6F>hGJ$P@ieRbBqt%pm$c+,uc*6JKjOgLNZ2B)%SBn-k;Xd9_[nF
%f6Di^n6AsS'%L&K0T.<B*;<l)pY.s3C8"n[S=p#E`HeK%5OXq2+Xfg2A:AbA_+L.kP?]>/-l+HGpZm#JFJB\<jGS;V-uWE!^+c:b
%3"=`MA`0/";bh0OSleson]T\EfNC)C:gpecJ+)sFl=Mm.:j6Qs+(]ZbIP1:Q;nh-&\@t)W=]=K5'ee%j2+8"'L/Un/*I0h0H1]^I
%@<f_(NWMR=N"1"jII#*_1WC=lSdG$]lW3Or]),6:;hK"Li?Z-iV.T?SS-k[rn`+BA%9At_Q-$r'i*)"b1JhfH[XNu]hY%R6HSUM\
%<+@dg:ilKi0IW,3&n5@$oMm%b:uIY.e>"S<h0VX"AH:\CKV_NX7+EckD)lC'rRWR9RtI;l?4$MBo;m4m"(K?-;3$S\,aiq]#]tG>
%=)^d)fj5UM;jA/dm0\HTUq?`4k2qL-=^TpaH/?s>r6\2*U+VQUOaGSX2(uU8dZhWn($@@'cJ6l?7ha+k@m<REJu&O+YXYQ[3<GCo
%7h79+q#kfMC^GB+DBS\:,kEKaiIhA'n&\agHU>Pjpr)rPV)3$t_l`>HW:D77[FZ^PTIj:D=6mjEjdZ1<GH;uO=G-rW<BD*8pP`u"
%HkX-?#<7A[ncj-EWp33MZ/6DD5d8$hmVHP7M-E^E-ZCsS2o#W,WErF[:PFq@.O2bA@A<`_%B6s$n!sd'@X-S%)ot/]AU<*!=Qu:?
%B)@M5GmZs,;,HG9QId#DN$5TITg,NH9)ZajBQlCHEgUXT_aWcHjilS\cgL_MMkr5=VOa:JS64Gi7T?2#%eIY6:]86@8+a/BmN9_[
%$iMrA1#sifH(u<\O0aelW`Vl1VTjs>KA9&*#ob*^9/Y:qk3!8!<g]rn.c"371W@OiouZY[X*ofkbRgGYf4f#qi0%?-*B#e?'Z_fa
%lMXR%VS4@7@E@&/OJ*W7O[@J6k`qqna)Q=M2l\q`RV:Ys&ZKE5GDiAg0XHp@*J==pnsV4Z<a)-I]^22s#,MJ6KQW$M,U(<?=Im>s
%GDgs`3?DLS*"J.te'0dQ_c;<_o^kd[(SdM-p'5Z&)iI15a!-(=MRTld%dNcGm9WAQ_^(*t2H$b.H\-o_Z"@@5lI@%/[<:+olJ9W!
%0SX!b5/-BtG6SBKO8$LJ9SPu&e$a+*$?6m6\BflO_5o"Z+>I+!j,l<:h1Zd=RT&PlG3I'<<ork\#(5Zr].c0`AfIbN/4P9(<1!N2
%iRMV_/qGZCd*i*iD!RlUcm"as5L-S:\L(F?"jCDj>&j\_G1!@f+89X:[Wb%d?uJ7%H\!GpaHdkUkU_!M#E9eKd$Q(L"D<V),ARUM
%j!-5=;Sal1k;Z`7@+7T!4r'B@Adb(km)+3#,/ZXaBZb3@VoRD/>9\ap]YL'iRYOg'aJ70=?g%b^Yk>8X9?bUsYWM]smY*pfXI>RE
%*4^(:>RS69.c1O%[M2OMcKEYBTm*k+IrlGpPr+%!"X6Ve;eLDrTed-'j:&'8j,o`CIe7W$C>M8s@=j^/N]t*\]6Dme]8%kb)'i!%
%*8FD/nEf9bBsjHNbe#6a*-t]i.!l9r_?hBc0'0ThZ^!KBDYQTD9W#ELA09*8Ie"<8fjF^NZetc>htc`Ur7U!%hu2B#=$M3/nbkEH
%o]!cDX*8JeqX^aP>e`:`s4)&E]QnL<p$.s&TC)2^H2Hp"CsRPW.5\g<j%o[6U\l?!g[tMpqe,_Cs02Oh?[(0FTB0_#I.lIsqtBC,
%rYN?JkC'$#gEHJ2HhV;o%Q0Cuh]MZ'eP<">nke2sYiOcd_fkI3YO/ubDZ+>MO+"l'!S\XpK0sl,a\C@>+RalsNp?V6ReC`2Eb/iW
%Mu:+F9(ui*mgl+&h_,e>oVk]0"S(pH6@F7K`K88g^KbNZO#8"r(FGs`d#X*]?gbeBGHp4@^SRWQCI*j#m/,MtTh*CT([db[[c8tS
%I'/-1G+mM^<1tX$^U+cPBOc",Q3%15m,heZiVk0++,3W9WfT59qQV@cWI1c+>dP9RdGP]].LMk-'B\9(B=%n@>Ep=.bhcJS!@-ac
%DF;G'_s0tJ@I*VXptq#&d>#beokF3AR_U(9Tr:Nh_@i%=pGl!9""eaD_qh?O&H1Y=?"c*m<Ogq'qHLoOU=mDd*OslG9GJ$lOAra/
%Jt_T3e1Wu2a]k^@"09)3gsL^5crF3/XnOJ-[%Mbs/VLLc(b-',j6%-?ZO9&0VS_0+)^^NKf%IpSeh5kBc`%:i(IlSmYr)oYX[TV]
%j_bFAq@JYEhLtd\4'\/#*h!gC2kg$Dfg<rp:UfO`[VhWem\a>=op.r7rJ4/\XLI&<Yk$rAo!3CShJ,EDA@[X7b!&#h&gae_Y2nHO
%>k7!6[NK-gKV_(j<d7St8N]TpCr-j$I?;kkq]D8S2gBHdZm%k+$b>N$P#;RTSmX:D"mYP.'K\98&#g9?3FuRa[QnG1X"a!3PA`6+
%DXT/V9,k2HX9OnI>H;m?Na:u-LODY'SY/^F+`G1Q`DpfGI(R`s92rE:6.Tj+'TEGu)7Z<GY0-6p,?b@BpuFZ+,+95S6p&sl`*.tE
%fT>4_P^nc%X.O9h-hs2jgCIIJ@-N<0Io/4D3%6mEU44/(a(g?r>c=ndm\nKL7l='C<1uA)Ci]@XhSLThNF#lehSL9ZqaARTWSI&!
%<*0K\^"L@N*V51b-^X^Ef?^JQOtlUs"89LeKt*tKo:`4h#S)E$\Z6%mjJ2KBLjlG'6E]D-ZV^Fopu=AYUq[V[$9FZ\O7"TeJuCbL
%gS`DPc++[7\Is13P:%GkO*iCbCA5)e-%ZY$U\"3R+qGO.IZ\:CfJeTn1PM?f&i\$dU0!e5Cq.Mk.#*n"*FZ:`f=Egt4mlabg:Q3n
%-fine.D/]8b'%8]Im>:EfHVHB:p?6k!UD@Vh-PLAB'k4e&C%pe@CM"sKH[2F6J31/jLK0G5E6n5$i@&</I79_E+,[a:\HJ\Wc$Z;
%YDEOs&0,??k(uEa&a8W1X7MdZ>hrufg/pcUD-"bIm=$PY%!JTiPr`6:NgjA7cI#gU7OmXCQG/im\nE/ehO5LjRj:%%K"j0HK?=s3
%6b<,((;3Q'^)a8hc5TPjGMZ\lVcN:AXt3EX9`J#?<:CZ*]?9i2^\`VLZ&;/^:3&50-mrki8.82,<4XT?6<@4L<om86/J#UPMJE]Z
%7^..P9M9-D4:#E3FHWcbj/k3]L"4Z"/[F\,hL]e8>[TdqZcVXKc*slESm00,_,GpTMHVm`Q(Xa!YOm\SYT'M-:b`WZ7'YY7#'ohV
%P+>+.=32:8+m,KQdbC9BdCns^I6MnaeUQP)h1*_dLFS5ad),aE+dB&)-12R\a06d&9Tp4MW'",^2q3:Tqphf-)-]q>cqYpb]bmF!
%*ef\M.!K3S0NY^@),qsO^@^EL:&NYHJ+;k@gdM"8\)9.,mFKp;<st%%plMU_M@,j6>1lWWWsH%cT'['ukFtf3BJJ?V$H<Br>Q\'O
%Y%V\7I'eTc2JMGo.K4'`=%H0#f/72UP2[!gVL*.1ZF:t1hnHG[@F54N/_ZOBqP>;&S(]_Jlq'K8pZ=]<0F8W9=ADZqI@Hdoc1["0
%-d7\;_?qZ65uZ97e/]jK/S^pcXA5Kg3f5I)5`jU-%5"S**T!DRahXaQhj\g@=6O%,?27ZGN%UbmXkpB&ZJUA(IF-\tW[%hc4(d,X
%?'GH);M4l"IG/1Se'mkJp5V^9-+jQlCum(^B"Al&;:I/c[AXo=d$j-"mU$I1#'Q]8F1_[QQe+eZ<j'Yq0'K.cPY+`D;OoPu,Urre
%X/J_CT)RO-0:'1/]7.E':O3feMl'&g_;`Di#Itk-3XZ9A/W4hLb$eukNfH$)Ai\n`E*.YtCE\RN0"I_''DnHSR*MMYrUkrMRr=tQ
%d!SUn(_KVC*;"?rOHXOr+A@Hgf'LQ3^5l[lX-V[lOCusg##`E,:$We\Ci6t+$M`J3BsZgCAng]-LUSC;2ep^Qg.f2b(35YWda[rS
%F`Ls!\=Oa#h'Ch^YrG4Z(3Hs[=Wq=U`Ip,&-AfT1>%-6CU<]1^\!QP3=$64mcN"O16JR<t`F*W-U-6T7Br#GB&'7,BePnm7/_JL`
%@[*(V6d8)o!?>kuB1ma1f:lFYY8u]2WG8j8-5Y-DV(k2e_l@,8jjc]`.^pV"pA1[$9K3)\4jD-rAlU@o_!0_-6On,F]^:JqL[IK3
%qML<dGL^"-3u(&sLaM#WXQr$=A&52`,S$Zj7a;$l;2A9IfOgf_j^l<H?s7so6DTb-g/:R$951!K3aP=hgfXstdV;ZX1_Ed'-2#Cl
%&%W%Y;0M:V0dc78QOfk1css0)8eGs,j/;Y<BKE\,.nSGHOCn:hmDHYN]?/U51gpqZB"aFQ>KT!m7CCAmbd.g8Il7#MU7aa<K2S<+
%p,,a:I3(5mYM(nZ.H$5M<6T0V_PpPrA)URWj4XVeB:c3[eD$(%S#V'RI?8E35l"DtT8q/RCf<I%JFg(\?ZJ_pO_[06jkEIsQ3F[U
%,U_F@*%C@(Xi7F%m7:YdDr9_uP78ch,XJ@T],meZLYAM$=sMe@&i=)m^6Fd11m@V1#(8[gJMgCge.R]Wdbus*7rTg@g4`5)HHQ+;
%:];P[,pMrM0N_6@/efVYDB!TRR86B_AdRDl,p/+r[;*.^5-#"nfC.3m(83,eC,/E0>R@WKPaYm#djk"XG*QhY[AjgB"5F;*_2F^U
%;m\5X_p8S0>*4F^-18*V(n'oe1G4s=P:`RK8@jm?==)6#[,C\jpjC?:V(ZCXa(7[`^UC@2B0%]f4Lu>RkBaUuV2X"skX3gE&b\W"
%+<;urR"S%<iiOf4[HK$_1,GW82FJtF5D9j4:!7=CCigt*.^O7K,eX=Hb2T10Wm(qK:@sE2O=-BmXmk?[+8^<tTg%E^KKiE_:"cc6
%2Dnq2C@]K#kS!RgW2,Kelm)aCm;cX4[_8U]ld[J\4/TUBQR/%r/!"^,k^HC>&u^X`XBAhb$p#gP\sHH275E*ZXJ'=@>(q:Vr!FY'
%3ebJA2B!0GHM/=@k%_7OA?);\I/'BPG3Dm24%I$orah7NOc$X]6KkGKd:e:ZR4XjR/^I[i6JjG9I2+NV8*0VF*A0;4:PGQh$gOWF
%Tq?'3Ni=oO\=9;uGFo2AeD)tYEs[/0Y]hH2dg]YNn`ltS98Bk.5Juo-*V.e+.4fjC!UH>rJ=oc8_.)54@kl39iAYS-:^f$X]VM"C
%IQ&olQ2+LEfT^8K%.b"u6B-1I2eblaJ!*i2A$BPnj/7>G/Jqr\URh_h(o%pC_QL@nb0qc%'sJ'/>?K(H2leed\tMN(CaQdY[8K_9
%BgJ79\o9E^m.QL+3Z9?@8Ws`uO?u4;f%GhgWB-<E(N\.;DcrDjM2>gf,D!f0D`(`6m`B:*Be/Y)%33W^PN7;[_1eA4G'"dOS]5(g
%>B.X(*c&1*PBm[J0ucmaji.+jUPNKE`L4C!j/lLpV(#ZY]<IcM.73@&#T&82\#`I(\]mG]@Q@OQ+JRr0RW(mGW']UMV[KVo73*=1
%l!4b)@DX]L-J5._]%W[Kku2:nf8jd?fK<NXK_>nq7bbORJJ=qED.0m2[RW^hC\)_;h@R;=hn$D#\r[1T"dZ<`DF'MoR6/D/2s(BF
%8i_*aGeU#WVE0Pdd"2MrUl#j+_k)m&RjVkD(UH+8V(>Q4mO,8&]'m!9=.i#g]`kO'B+))m5W.L+Gd,-Nm?ai7G\QlL7<_Z&4UKG<
%.rLI$.5#GQ\#memTkQOMk!FK):"[_JS>(^cfa"WkUUhHuG4F(>-VB)KLPZ7E$l=p:)5n,/&Y!4&7G0G"0]-,uCXgSpf%p%c5/b7k
%^30<a]oE.<!^j%O^ZB,X_;<Wo\(+p7"a"4KlP43?&$8tVN8n/s_+\+e3A[$P#).?Oj"ND<LE&tnM3b;AM:rt4Ql]tu2l]&/ITk"k
%hhA5#M9nVZqk;ZO.h5!`<q&`C`]C4gXZ'_p'*1,<<Z-(fFg!KF=%q/$reS('9E)2JR8'&#;B`o:0klK]Pi4N1%buE"G-+*dHWhFP
%q/:-!(YR:sk?";08g[N+9bgjB%#lkgT8EtU,@o;<=(_DobZi',3G8@O\1^a>[11aSoO^_NC9.?='aW4^T2MIW&LWrm,1J[2-4Ift
%1uBr=mg/mgBbd>rq&3j_IN`JHO)]0i9Fl%6WlQl9bVtC:0e=_$6`Ur+3]SFugA//?9d6eQ<Eg[_gaMke1OFSW*"`)G0K^+gIigLZ
%'L]\mI3L#V0Gh)'KK=i^5aP1i[.E;]D\IbWLCT!sKBejV9R6;'G\aW!"EOfWjsAAGpEGZU8:UApDr:KA]B_BtY2B09q/_lQ,&.!_
%Ie"<TpoXO6@C-"(fDkDKrq#gK]r@Y%`S^7Dci1-H^]!kmQiHjSeWp.2(Y:<)>eb^Yin^4knNVHpm'$D1oD6`25<dsdq!S"Q+$X#D
%s6F<IZ[_bVGOJknroW<$f<8Pp]6^5Z`+OSspMW7>s&&dU_k4]Wdf8j@p6ka"^OGmc^Njo!EgQfPDu7d$%_qtO(U$("a5:--s5BFX
%hu1+DZLmIr5PY4rT#0FbGl?pF2\.""J,WP;4(2NHHMF04oQUK7g#)htB<T(!n[n;KEF$?55Q0)fjJ+*,7Xom^)ZBL%#5%W`s*FA/
%_p@4hI.M+Aim6M2@V7:QqcYYgrS%kO+$S,*5Pgk)%IA/J?U&pcp\U#TYMQq)HLP1m+$Xk1pf!53]E\u6h:;C`Y>9C,nGT,Qhd'H7
%nDJcqir.DWIWtHL5ON<8_J-aWB9+q"2fF3EiVLI8:V;2#E8U!Es7Q6]eHlKWi/\ppW:@]6I.Qmj="ceNppX1V\Gj_TYH7VU&\`#t
%GJAOkNI1>*+*dH0h>cn#H'IFep"PPr?=*SsG;$]/k5+2WFb;U`?aAuV:ZVMfIe/E0HT8&#Gf0C-oIkiCqsDqG(E_MJHhb\E?Tdl[
%]6J\omG%Be+&4k(5>Yul<I/UKrq7.0?U+GQCn%#5diUtrqGM1ZI'ubq[cs,gRst>(`NH5Trl;M"n'BSL'=:LVmOC:;Vbb5jIJ=1k
%2GQJh)t[s:SrM4*EVe]P:@jfgS;&]J3.5,I5jS(*n#kQ_q";]+AcHd%eE<_LYd9>cL"`IY^0(7ar:Js1W-9n$?%4tFjmi:ZNQq+T
%T=t6tRtn3);pgIu(t#At7eDKqmAoR)00Z3[IMkcJ0AjM@p7&Ophu;Tnn&8pQFagkbXY9KFr:4aB':]0fS+(e=rW)9Wr8IY'=!s@@
%Y9)(\q#/+DqG6L%5K0&c6uKdRdE8@mJWG(@r9EUOhd8NoDgd@a_\XENr;?r5dSmb,:,l<Njf3S#C-<;KBfeUb5=_B=8-JeJM"brn
%qD3BXd_iQTb87?XGh`/f8%UAq5-XY=p7rb=-\E'l@1,8a(]0gH*r<PEk/EfK=0I+%p%mt88M6%`^O3-1rp8V&_s]bBj1g!&BC-Me
%n%X;LioS_8eXI)aI.?T&IbSaHm*.[U7f&?c\*Y(4n(H)Q_nePZ4FI+j$*"iVJ$eP7iP)oOpVNQlE]fU'rl!TIVrR$QGl.@)]3db[
%Wqj:\bMPP>E-lWGl%HbE<0#GF=6ljLQ4LH>hLBeCMlV?>INdN.`B1C)eH7Iacg?sGrU/t9Im)R-rUojLf-fOj?9d<C^Nf^t(OuF;
%rc*/hI<b;MZs1WNi:Gja?b^r7F2G6If8hehLL3FkhO^BG^O=$44a[pWqKRUkV]S-l_=6q[rE]cN:2mJmkDqL)2fIS9r'#Muo&[o]
%O.XF*XQ*Obk-5-dmRh?eLQD&WX6U;JT0dT@N08\\=CZ`,rT<Ca-]ZY2`0W,`^\m1GHMA'7?TcmN+0N,TCPb7QUQ4HP$[VS\O(orR
%G]S:Sb*i-r+0$Pm?i?<-+5aiJIduR`Y>;[>5=9MZH2llc9/"W4V5IgRT!2<mbb&rG/j3U5*nU;fo#jHSST:m)b#RsX,+$U!Nq[n`
%Sgnh24?Q_h`\)ZDn(bf\i2;97HMQZ3Q[\#AgQTH+SZi9ib+!h!0&8\E1Nr#(I+s*DfVS)4__/Y#Ej898]Gs`/Kg0(654?\cjd1m2
%3b@bCQ/cu+0)^Q5Q_%"Zm3tB,:>*XbT?P>\i*Tg(qnn]Ck>QgC:-hFBQfgS\H%&RJRjY[+5A4[nK8t>9"KjudqqqA3lM]8&YM]?*
%O*hVur]i=^T&KkJn<s%`.n/V'p[:7am<mi>Hk2j+o78tF\;)(a+gcUdmWU%5K>-82G!^$=M%NF1fu5Abe;WR;nc/O#=O6`9O72$`
%EP<78pYu!Tr%d`[^O,_K^&HMa@m"Oc:]+h;HM@,3?JP.kGeP"j]bo'Fj&oqU?]=0+nU*(F`VBGMs8IL4lpLV8Y/NmKe[\B.a]!@X
%=ae-u`?0;!cP(jXDEg9sXPPbgF2mK.A,IAcX.S.ao'Yf*m0Qd0c\-S9&RjNF=4U<EbhIUCE2:LA2")$?.'MO@]))8L=0*KmJ\8Vk
%p?KVP?^rmij\HrdaZPdN*KTecU3A`<a!]7r5rh*7kl!c,YqL_oj<WlBVd[)a^V]52KpCXrX70\FSM/jVI/EX9-^B^ue+rl&Sc@[/
%eK<ZIip*08p]'ucX5/=+h2,ZsT<k/fCsU8A]`PXXs*T]&@/6#,)WTMeIeJElM#8CS"S28a@pFMgN:c(3paU1-6J;B[Ha`shYP*J7
%s8Q0ts7#Bk@t&0W2J6C=>sgaO8j6Thanp"q>Ok5[8fjqfrTO2*T:<:_qbJOr5%2+>p[_6E%KFUC$hmVn"6[>V-[:?XKGWlS+$Xa(
%4Q3@%[,^jJmZ?lF*^4pjT=c!7F1Xg]mMGgD-g\SInVE\'KFrVVDsLe!kn3kB%j01H(jQT\Pb5mM5-^U_,79JjU@g8?EiWGn09tR3
%]uj\sAG*pRlOVn.>^\RtiAeTs:Rf)jHX03U1<+fVB0Ls.r((;n-`1j1c464_9`H*]^LPF31&Z/es(Gs+R/RV>"%uTXDI8rX)kZ0c
%GFuWk*<.#!5Nb/!j7qdsr_mt6S`BM.3;tpus24GLIf8r['1bulg+DkaL@@uE[&7qsr;#XNlaM@kn??5+s5BFXqZkGS8tEeR&+TAN
%4dqL^ii2hJBk>9proiqqUMoFU[r:,QGk'pL/*?%++3f[mp]L<]h:K9pFQ.lnrm_)m^sDDa3I;L5YZL@QUuD)X]o)NRIeAJ?=''=S
%g(g<^YHHcq])KV%YQ!qcmH^e`?bO'tp!qf@0A_(+Cj:+^T&#B=GN7B4pj[1;&(fR^50(uCIgc56_5S7Nlh]c(LJKTM*ip+Ui3B_&
%IJDa'?LRp]1_81.-]dW.qSfkr8saQ256K-VhB0/a0)]C,ap7#+[oY6WGOjQM1$4=<eTQ*1a5_LB&,0(OmKBsX[\s"pNrSZ!XK$L@
%n,DtHDE3*:iQf2#H_SfWW3[l:m"tR62iRO&bS0)U.<S1P4],ifeCbLXk:"ZJW3[l:m"tSdHD4_qg,8I)&KYTbg>ht[IdKVZftmA=
%*,OMFN).F=p1:/5TBU![bXHOR&]bWZT/g=JBDS%:;Hk5,U*i8loD8=$5J=T+PRmQr^W'W(^#bI*jA4ni51@e>\Ms=X$$Ui^5O/nE
%YrDL%V1Uj4lZaoJnb9BgcYrB8iD"cY3/c7hU,*86^U#_g5tAXc)Rs.h^%qW=(LL'/[kfhoa]!BFh0>Zoe\artcP.+dc"['.%Cm\]
%5&kce!<)ohGh__@&UgAVotcI`r.pETf3c;-qB.leh:8RTmZ+2g5Q9$?&!)!Ir(<=G7r57(48/1X>O(Zg[!Zc7ocFs:H#bEX2D:\o
%Go>'(QOhrkhcu_*/`ZSdok]A1_VkE<rTY*$VLSSI6[Kls_hWDeMY`,IlL]1G5s4lhXj[T6pLELEBBRMMWkUbUj5`jVhUJn'k36UD
%rJPaRS1p\DoB(,++4&6%Zh*;e=R*6ak)3QFZh*;c3c@d`Dk*@WT9&RjShRN!k.H!>MlXVms4Mb.Ail%59)+qhr"&Zn&_+ahj18S[
%:EjU*4<rMh8bU6cEA/LHP2QEBI3^5/qXn3uQ!)Yfh-1L%"HYV$R>[&ggtc8&XLt^[HL[Kf:L?9`O8peTg9E_pEUKU\o+9@FbDh2L
%*!l$FdWf\*gB/MY5(tgW=Ln2<b'9P4`4iS)?iU*imaCmrX&n36WRn$Hr4?E+e>mu<]f83sB"-Z]ri`Lib7C<FleT2/IZN6uMAn#E
%kI"CX&$N`9J+sM%j*[1Rh2cNpNPEq3]b?J,>o>^'o^^[&Q`p^qjBJ#/I5+D:\q:G.p7^dI]1qM%p.dbm,5JBRo[&HU2.uP&F<^Ng
%2=ZIX*UN3;`dQ7R&"Q8j&tOCl?2ce($J_u'q$-p/q_gJsh7HC-^kCN29UP^=0k#9oh#5*CI>E]`?[Vh6YJ,JboYm#,O$ELthVES]
%K=so+fL&*br@mPD%G$",%(e_$\r/C0opnhGK6<dAXaC"GoWK<cp%7^eI/<kk/UMo$dsQE,]:/#CQToumm+%:aUBYor&H)GBc^mA7
%_h$Z-oNb2aokWVpI/V#K5'chrGB]J7qTO/"b5^HY7F1kuE8=+&gm>h,6R(cA)ROg0:`g\,#7'p.4/f?$&jA:RhtD^E*7R&'frr/<
%/GAB#IsCeU%bL&0\>\kUMu*;C0b5>j4n2?UInLkGeFu4[5'X":*pSB5qL/!4o7u\+hIUa%b<ru5+/4hm0@.B1qUOUj@gLj;n+9B0
%o\c?jT`43MTRY%<$I?CiEUr::R+-=.PoeYRgd;nFTe4E&cKMrTMt56Zofc"FQ`ndQjY)hlhk_U2s'8u\rVYd#c`Q<PYF[t-o)J^0
%77f.^qtS:>=5WrK?"1qMWs]=`rP;*i]?Tc8S\)W=Mr*W,pH;DiG@\X=V:XS.F8((hLk#(>O$A-iqa^*YOurmEhlgGfq^*jYJ+i28
%IshPA_L7W0+/IkFf1ik1EoV%c&bf!7?[mgNkJ""M^4$.o4[aM\\[QqLrL]kTo\DUsSK@^3k5)2=;7qt3"Wq*$R3)Cefb\#Q--J:j
%po[_LU?.DZ,i/X6>[G/Uc-tkHfA5HTb9PoL7JAae-pld[%X`c$U?t<^^kZNR+*&%/&(9&,IbA6BNK=[WHt\1\\*;cH7`aHh"7<og
%Ha(iQb'6+W%`og(JbCF3]J"H^6i"Mb7cD#l,^8HTHVZ[KhdJtbSW_lWQfau?np@*j5AVbASTAoI7Me:29"oL1q;M%!#G(d!cfdYB
%^E5N4gM"$DO'M\iQ2H&,anIM`rtf*SmsJZ\bM@WW`8F#=Uj"keqogW6I#"rXD*rE+/ZC[ea57D;lCglF+._ium=BEcR)D?*[.cgW
%I.:<Fp\O8NmZVtd(MEdBg:nur[HGhbhLSbKn%Yq!s&blllH]RUm]gq_!s@JQ=i@E.qrqmddJ$kfHnWWU5@e!cTmP'J4EWS)?Mg7^
%f68,#9E1N3r;JMkpc\g!msi4m"NI]F^\Em0Yi"7r^+ZM_09@RU-WThijLgi=jRnF7n!cFb,GBBi7#Jam6Ufa^rVo'P]O1[7l'Hno
%m)onu#5##Go)"g/J+`S<G?C+,'\Ek]f2"/@(&m<TOk\\Zhm"m3]<>R(q:U1^66@g%hU[UsI(qZ2`t+^8??2e?^59d(hZnrKrA2sf
%s5M5B0>@;U*A5K[%o3EWUFD-4g0T.OU\MP_C2[8aoaphB#lD9rXWi/`8'dfW)hR-7\n>q0DXU^djF/>"hpF^GlqY59r93U_qs86.
%Hp7#M,;"Q?fg!,snPA]k2SZgXqPR,=oBaHm?U"JQ++C9Z8bsNYrll7oHMJP;3<3dmoC3>UG*a;!r/nVho(O5UoJQZ@]DNoQa1tFJ
%nf.N"5NQ8P.C@u>]Y"+6no+Qr/t^=^^\jKNNPBV]Abj.YgE5P.eK"A!;Y:ie\&nYpo'o4/p7LEL)u9O-f+!4\rs\`Hmf)7+5!NA1
%5KDBaGE/B<%mU"-#-S"#e,R3!Ie(f<Yf`SFIe2[]c_$%+#:S5a]CiktItd#EbZg]SYka@[q5GpADmuR`8BT3Pj//WDDI]gI;HiIs
%^'+8>XMh=4ohRgNpnN?<pnMs,l,R&PcXm$@:O[Qajo6\+#G9+`I'o;*5PPXKs4PF7p$oqZ%;bX=mH:7JJ+`BBRC\Tkc:8sefXF$<
%jr46XP:JCG=Y9)7ZW[:u0cp-.+-HR:o`tAD9Wn0<2'2;GOkY8C95[Y>9tkY+ZA[WUH"j7_`CihoqAM"O=_K`KgkLsnLc;m"@Knb[
%?64D;mI3:_rT]FqW3aAls67R255Y8MSj.[t7udQ5B29U6huC0Jd/EFVDVVUBlWOrknQFErB?U@.aM&FXmVQm9O26QQD7$Dm'"r@q
%,m]^iZufMXc_R/hq9EX3K<//AEdV?.NCc&1j7"fP*Cod2%_;GeFND!\V8dO[C;=an]M2nakP)^^WMFK;Z5h@<LVK'k**'%8_U(&]
%ms6pYC>R(lP0IGSglm08N@R`$G'r71T0\a=$8GdpPn3&T*/-\ch&pgD=U3\_f#c^Pesl[,pqCsu9hqKl`HhnB<,M^Ad=pmt&@n,]
%#4"_%OM,Za$cbND7h3-Le*Z&fcDMd,(\n)ll(S0jSd3?\:h6E9Ce&DHGt+_U-(i7a+uhNa8L<\WM$!Lp[?nUS<cYYeP.\p::/Q]Y
%8(!6TU8NHLo&e*72_n"p9khaW`tuJ])0B<X.e5c9@/sHk05M2"GXr%$RbsLFf?D&l@smAV&RaOcmZj&t07;A-&>"\1b#3dNH3f4^
%QCP)BZTrqb;m\Ls\Hb:5W_I^^W"*A$JkQeEhTO[+"$)>*Uq9%J>`p_WnWeT=_Yu,\(h0JcI%c-jiJq=P@Lq-'FBBMuF&g8LF]qV)
%2.TYMNO%jE^3;_hfG\59'e0D0![`FPLgj2eUA6On%-ba)%O6Z<dR_J/m>0e>ms=bL&<b4![59;I5r]*YLu98o_,1EjEE/Br;J:U(
%2C15dNj!fmg_4R@.0Y=Eq`s7u+[f0<382'S1"%*I6`G<q4Y":Ioq-B#O"^AG=Jl>V__a2\.DO4qpt.T_1l%NX=-g!M/j,T6a9(j&
%W0=Z>h)f6j3KqQ$MYCH!qB@Rc')iVk=f\,bn5G<U1'p/O^U1g)3I10ee=Ragp9"W27M[uh]d@K_SE"^]14n.VZuK\<!uRrWa(el-
%SS3U!][YFf3P=Y5o8VCB!HpoMk0r%G+c%G53JJBN+8jp4^`Yl9U-.GS*opF3juR"B_u&<h"F=gf^mhE79/l,o0bcZk>S.;LWOm,#
%@i]s::W26()AQTlFmPg4<1gS$JdXV+(.!(2CtDXYBt5W9QgT>:bEkkCIc[2*L@BB[Ys]u=K+:72IgQ093O2pK%Pb;+]MTGXr3B@5
%]+b@'dE=(U+$4jpl+<MlFTM[V#LYu2Nd43+bh]gI@i"agQ_47fpJ\AjGqA.1^AAo_CGf^HYXK:'+&[5?;r'0pBo\E9ITWpr;!qS6
%342L_rqso_^)\thfR+VXjI0tA3);]jiGcpji&0]7nk0W$EbamtTP1$^dp(`*7"jm>Y@/F"WkN<cT<@<r:8`Fk/g3,er,aV(FK$uk
%:_2pbeos:g7\8$DH*Ym2AKJGp'feu6ghP0pLZ1D_m,$2!ht[\rn%.fFSj63X_f.'iGZ2mT_rM4P14M<OVrt=!\]i^Qrh](4*hj*a
%Ncf:Oof`VD`Tf3KW:r#YE<F,Pe%n//5qXogoJ<)HJ*jk>M*HYf)-6e4qY[LN6h/>rbLCaE;6kW@<5LqQTi5_(itFgsr)u3FU`[mf
%l#Qi04LWu[S[Sm77jJa7^6E$_W6SKCoIlmKI1X4>6Kmocq4FB^U9Mu;qbNj>mJW[VM>)oA)/j:%>B^&G)3TK)CjICdEQq%d*p<MI
%_::&uN&TKV]O+u[$QQIB*=j1-"m1U!GNjmfJ\l!-)4'(:k?UR?&Z+62NqL*/lTb=]Y8;OkgsUFprL_cW[hHY>gZR2dU8o[2lCM>:
%r'.W83WHY7$R3@JC*ep3$WjCHR,i"%0\AH!#3(Ap=*FLi#otJ%Yl&rdhJ9k)dm*O%H1ps8s"g/=2LL]QRS]2,I/<C[hXL8'rmTn/
%YF^4=ibr0(hY-!5T7(UFnRW-PYQ!js0>Do-Mim6%_.TU\`35Nc7$#B9&cW'4iMDDLhr"rLCq*ZbO%4@Hlp$"!9X!u3p>S#uc2W+d
%NP.BF5QA'f^NoP'X"RU#YmfWO&qiJpr.e4&E;b9)PUu`B8`Fj5r\4gf_&d&4oh';0bK2A2c?hmb-e&Ni('j4R^gdVi$&=A3`Y_%F
%:".,k$,[#_),[.UIoD@5?R%]8Xmb3)=)l.i!QT8B+BufTbVHM\/<HAT0nb[M$OCANO8b&n,FPPbi?G1d<bB;o((Q[`Oi.CA:WdNr
%EcM3_lJeAlp*r*oQpAT]%,c=OIoOD5B]Adn>@d40imKDdYb>[6\%EM#&hXLYTa^&qicF*+$g3=M)^4h6Dik\'7S4%1otSZ>&o1f)
%H_+1bcO4>1lC>[:fdVu9$itX>dqV,,q7D)85*>U#.UGR>iJ(k;o[=mFH1LVE5C<3@X3Xq&Up,9UI;sB)AK3kLjVM,4K&.[KgVhGZ
%]].nRM"N0K<-'-:,XI>2;i9q>3:J[:qH5bOn.6k_*p4^tIFE*`7:l1uU->OiJT,5@Fse3267O1*oHVLE2aK!P/:.X4J0i!5U(BgY
%"C[7Rl";,E<A38?[?c=F&?"i<KH)],-)1Id7+kRc*#JfefaaQqD8f<*En\!<Hb826,B$iISr+qPr%H&p4G(lsm*1*5%?^3Lm`NL$
%Iej^q72?Q!7!OW@5Edn=$s-!@;[=NRqgoHU\FTQ`S4=P>R6Yk7XtE$h?A<S9<>D%tprQb&]BDYp"S/*CmT@#+%A2Rj0G+5G`C"P(
%4&/r(*n)]C3%t_6`hEK0/:Z6PV!D.=>Fk&=S7bttCkJnD9o-8Xm,4TOCT6]LAAJqK?=Dq/]:TVPPncHaqIs0:D4\sC(ds1JOdV#D
%`=t;'P%qji%nlP<GOM.?L%Y*X$5#9.V.4pa;.Y#eT#igXj0;3#rp^n8%7k,JO;"Pinulg7"iRE,<`obi>ndPglJhk(!7=(k&\B5?
%Pb5KcO_^:@e:b4LWZE(.&q&lY'rC"@5ep,9km@/gQW'.u8rA7@,UtG]E(ST!ocq>IC+.;dJK:N.M^\K'MJ*qsgdEqq_[.Wc,S(M9
%7B@)T:_>u^Fqnf(j"hmD4G:R[\_ab9\;RV2SchDIVn&DNj4^MYL/3%l6HXECPI`"ul31YJ<Qn8*Gm"m.2Vf^Bh%8C.7!XBn&S,aK
%R.;<.'c\_dL7D?W;$p%5[8'+oLu,>3/*]GhH\O8;UWiI>$#$iF#`]r^@.7,]61Ua&:(2UtHW@lS!U,>=1&ftH]n"MHf^HRq;8Amr
%(fQP2.81d-al*n'-mB.96"e=P,2S)XMa%hPTQD!Q!2N=+\G&OCE(N`KnjCWX1.Z)a*/kB_-Fi+;M3,YP-mDga.MnXXmECPkRJ&e-
%-P5Xd+_!)d.nWnU/@+b&eO!_XO=MF__ilaWka8O>?Zaq2`:(N#?qQ4en0D\I8;,?_Bu(Go:8Ck1"Aij]P:T+Wa;TlV+hfBIX;-jW
%fX*,Ti%!>J$6a&0&;^pJ&Acm3_[-Uh@F#%7;]I$M@e5CLb(".+:-?sMRq.*FbZ/eWk?MRiGb>*`+YkVn14:1``rh0bH#1Q#W[rF5
%\kQ4S?Sp,1`=U?q^F0ji+CN;,$0i0I@'V]lSK[9B5S<s4;j?6"W$r]H"t),o+9u:<"^!@^$GMnH<n^ZC9F3;n/V^,eC=M?a#m-no
%!#WfkAQkRn$<n;c!fR.0eRj.17kY&e*CCI0E)rM<!?m%j7qW'9aGOA#aI1`<[WusBELb88!2kX;0_?6Y&iCjk-.4de7uGJ"_&R,R
%'M;3+/V%sJlKo:=R%%Z9A=jOr8?=.?Z/\"u&-6)O2[Uo?*/ognV*,S!6(sbrQ3oBWJ)m]%O6$,h?<QbJqf69:Y&<cd'@,BRQ)=u]
%#a[;62"F_B?of$$i<SI=fjdhba33$J_[#lD7/@.a,h6nMDa^((kKCR.8fq<nm:S`1>gQt%>>iM_Et#'oZ(8TC(WI8<A%kW[MQ?'*
%SuK:l!?#VI:QYW4DK$(t_h_WLYRt&6&2pg(-(6_,s#5PX@Y]/gFTfqOM5btFN]8R0.?n._NVo)opc`=[IG7fHRsPl_)>St!O.u7t
%DQcZD3?YH)"ANTVW^Re&`Rf7kHBuD!jRc$6^LugK/r@b4Iotil&S/gm9V+Qs@c[[YrJ:%nG$<I%3R#BA4ek/,WrUM'Zu7DP.:e)g
%#m)ha6',*&X4Df1M,Z@0=f?ZU;!5bF!l6f6S'Xuc)Cb_d;X:4#T]p^,W9M0Q44]#NR#3Q&LhV]rp^m0-/ctc?NY8cNN84gT?,9G'
%b#`Uo_,cdOA1LemXplZj\>kXkBG'Im&Ph?(`DA's1Pe/GAO4=</;ldh<B'dW-;$&*KdI-9)2O0hO:bZuY]@[LPlnq%H387A7YS:4
%!4GB3/uc@tRlmJ.&[#C%L.875j@XIG;[mJ2$,`\XN:=.`ODdT27&@Zb[-[VM`(]'b[`->uYiVk\R"A?.R5Y#"rIK5W<@E6EqO<D;
%'ce*jbF:Q4mX!T4@)%6M;!pODS[bKXl,eTn`D_=6.k5b*>*<s$DSRTi=UX0b-Gp5L"[kpIbQI*Q)o\1%<mNmR3+#@<,`P&TV0&(*
%6`!'<TQ"C@4Q'SV>Z3fEWU/oI_8$,:WJdA.0aM@>L;D6O;di"p!g9jh<JZBkkajT_"o]#B;&D=S*k9n(!p(hQ:3,S;^R^e`^pVcR
%qoo&;"*4>SFh.f;c'T6op<i.[MJV.3"lGs)gelRL6./=E*X(U_W>]R\TIh#r%7H&O5'?,$Hoq__PF+Lkich1X$%g&<JLhE!=dBD<
%>=8?.>U!dIjS2-HT^qW6TR]*Vk4*\EnYX>7.im-*Q-U_O'mu#uR%oQ5[rqV`>:6?N$O1#GW0]M1%*=UpeGqh$T`8Ic$TT2U[X6cD
%^?)p(`S>Gkq^p`GoFB.f`&1$e/>?f)A!%_O2gTCp8$;[rB<U=]H!GDehD1ku`cs5n<$GMb:p"$(2$.a6.-bT!'cdQ/;hUG7@O<?Q
%+dd&q$4)M)5j[FDAqZf@-3BDA$Ckh+Pb<8``$&"NFf40CeGid*Dq+#F4K4SD0Jc-AWZMt<^PGJ=((?Z]3eK^52-mUV+dmPe+7%Ze
%:1+3D0JIa<',/$q*@Xn8MUd:#Lrj:^n2nc>NUP(5_6L1)d*rVV'IAOUJg`_='@[R'Q24:$UICsb%q#A!]hrYQ<l$mF?UR<oU)LgK
%^VqLPOAt<aHJ5m,80:<m78\#dQ-relTc+RcE9D-fDGs7JGS"p+&R%[*P_H.W?R*4Q/2C<^:uTRNo3d\]m5=S^6s-fIEY>*>FoNd.
%#FPlJ1=Yq))CbZ?UP=rY&;h]9h+$T7R,FIP@d;18U8S0L+OA9HdliJ-7egV`hV#?!2TF4g^>2Mu8R#H!,t6h1=et^FGE05)c575'
%Y3U*"LoP[6m2b1P]'.d.+8'FpT$L4]2\1DIC@Ru?m/9$ET^tA"p14I"S&GTuLjuc.R4Z^E13RU[b,:Y<_-piBEnNhX/6UsUH,UWT
%8@aT-?KSW-E:+p%5.*2FJSj`^qBQ6ZDu7&HlPSo,U#59%^1f8&<]I43O]_^V*)ZX4#%gQg?t@pa=W&#hm#4Oq$6gH*22Q4$0lW*>
%Gp':I'\HP6$VE(PpJB0Pq'=7?V$8dWkdt$7TP3$e"(9uekc*\m;poUrMKKnj5L:GWrqNIX[;,In\+_;HG+?nqUuec@'%Ka.n=d@,
%R2i3jpl(D><R<R@n\p#&=/W-i,Q1m#^ll066&;A?\Qi1#dID&X+(g^l7.3)<bm@J$o3PY:j!(,)iS%mlB=@8c<QX,iiMUXP.d&8G
%,c]g]o.*9uZ1J$+7o+Z0.&_LCG^?+o,4c::T[UU,`KlX7U<.TgAAVI:b/u.mrHO!)\p>^K-g,liY+<FRk-=mHAgFJGBNi"QX-F7T
%mUERX%\/!@g,os`POpp\,&0%Y6t?r44'F:/SK\F+)sgC&X?JD^J=m#F)kor0DBlMM%"5%r841nr.J/QBC.-h(Mq29]aa![rN\kFP
%D<Nkmkg4Y9KBF\t?0d[f6'rGq`rUteL#l)1CdA,+h&>o-TE?-t1Oj'2\jnprmVRbp:[DH^]=0h'O'!g\.r\aa#ERhXfQJ"%%ZJh>
%d_t7A)jDI=2*)b2Te<8;]\R#!>lH,Mr>&Vir:KN;-i\2O8G(fR#$C_?Am_:i]H6LjCY+uG<73Q%$g[Tr`R>Xr0nEiMZ8[mcd;mUN
%o()\,K9*1Km3c.Z0nfTM&l"q1-47+:V4\Jo"-K$@62e#+1S!K;n8T$Q)8Caj;!0eN+F)!^d^1E^85h6gqlPD_Nuq=-LO&Y!"Y[Lh
%Nb<F"N.W[b)i(\DFVa(A>3%Uo!9iPu$/2Y_S8B"f`XBFX/dKZ51niAYS\Cm)qBhsA)KA;Ie2\!#h.3=Z(d"\*.Mu\I!H?[1i5VaW
%F11iFAf[)0I./p-\YX1l"Yt,+3#S]oZ$?8B/Hq$Q,IE7T*Dq`3[)AmDd3neC-lEbW2CF:\j2"=U)Bst:fu1^-Mi&>sFl>^4qOF:H
%iIaUXX7jVfG>U;klH2IT2FdKu:@_,")J6Wj5leel,*.RH9u)/mA[UTT*ohmA+]$rY";Fa+qOdI[e>^?#@I?!$?Ic=jYm,80RqI&C
%VdrslbL[%8D45]$aS7:FP>+=3!AWUQ5Z5aT,_XA*;`4]5.(VK>a?0uL8\bNrd,h"%]S.iNQ6e8<'5/Ct'A!S0eM\!G[D[rQD,DHr
%-"R'^O.Xi4A5oDIiYL%m#9JOB5D7Y2_FU%PM2B"VG`m#h6E3<NAjV2c'2dk9"O\Fsk$$iqb+HU\*PZ$(G>44<gs3"<^q4D(</TD)
%LSpZHWW\t1H8[aDdcX.:,a6?<lD!rEd+CS1$FLc:3Pr5hQQdItbOap-.e4FaKupV^_W,ZKLd?fE7.W#g6jY^rkF/hZ9/;!`ZisEK
%ij+-kI+(WXLHU8P'b(935u@I`%LnIr-b>)T=Chb]BgEfWRIGh<m@3'q>?-2a$>;+n`*7u5Kdd?#!-!!Y`(8*3/o3gr\`*`BBeiq1
%%0tNl@NVhM%g<P9qG8Pk5U6"3X)pAL"DjGeMLIL!K?=^^b23WN2lIB?<e&#c>0<;l/X8%kPQa%k$eM=IjT`6D>,/t+`36#f;aN0?
%K\CB9)A/-f%#&R7lLnb>.$TngjoKpt5KBY=!("'H!FD@"Xf30eVVncBF"5S[5nSW$`/0RB:g^,eeAPAiHJ%',G!*T42`jh-6)#U-
%L`>E01#<ML9cAk-eX7RIYQ6*b]PWB^*.mdZc^L<"=AZ"+/4VXN2R,P3Og5"e(186O3EB3pE)X5,CJ%+uL@PqAS(K15k0O>]#&mFh
%&::N+0k>`0I(*b5HA&/tFWfFNRhY7k"i4%-aQ=$j7M<c\U3tVbal#<m@f3;A7;+(`S;CO(mAR@Ob*"Nr4dg2O*$Ih[N!O8QRYOt<
%(C1/OLi>lufiB]ji4E'3eIXOX`(,M;Z]P`a$;-R5N"$[^pSE0@$;P_q0W_$)'\f6/%@lbJbeDD\F(`:VL%A,mfsG/i;OgZsS-MJn
%hJ%-5[K@\/d:j"-&TJ6s$552ENMq#"2nB(MqoBIqD]3aRZQW5r1&=;o?aZpArB%5$_b.6)#[fC?=3S+O$AOBa=CGd?qI8/`&Vaa[
%[,TT7%;6f,,;p!t"_A`_[%&]@%[ifo$n3E+h/s'a%OndgF1F95#RWjpOFndNjJ2[MZX.u&jZCG7r2]nbO4.AO0IR4/60,gN8;9>Z
%c?<M^FXKeg5ceDE@1:Ps.T,S2Y!uHBb"Y0dSBubQ37+lUl[hGZ&7-Vc7.kjY.Ok0u6PL4*BXaGdWSerh\kjm"h5a&A[WBMRH[W,1
%2/7&%19=ar!uB.8n9^L1dl*^gbe?OU"4HCd/Or]U3!mjTk=lD?`G\=0X'mCb-.l]C?NKL%3?r3/-4NSOh*J"h$f5IY&`STK't$BX
%U.ebnHh^a[i=L@#o>+rUGpb(#n[Sdn:io-?J^lIX(tI!!(a+stfF$?/[\VU(e:We>&ll4O2UsMfOo[BF.d@WDi+%TI6,k^CAX9V\
%74F[uPF3nF&b6;p=l[r/<iVoTO'-QoAg&u+)-!P'occE'7s^I,^h"WMB!pFIF\NQuFDAi+*$poRfTFJc,6[#/jBP`7:IKr'\<)oj
%F3\F;QSUbt8B9s0Js#g\SdG%*"Iu$+"P/+='Z:q=jqo8DL:'PC4^opQ,LikbXLfSi?0d<X60niW"WLK+N#Lmim&>#_DuaBqGa1`[
%a9krSJ<Rh]Y1K784I4XVBGFY%)MYFT",k7Cjq&el5W[Le9Ji1ih/M=.hkk!/@_TE#>ONlAV\WDZ3GY]$d)/V8#GXBi*,a6Q5R;Q&
%<HD=Z+Y)&E*"@.B#[K4RiH=s9#%9nDHcS0Z!D&/g'oh-[Ip=0SL2A0Z3MW8_7Z/l2Ug5Oi$aj_G.1osNa/#(W51N[17'eF`ctIMD
%s-N+(ZBJt/qAVV`[1-Vd#+s4^Ic*d)qpRiq^WF1YY.Rmu\`g,JQE_$l"U[AU)nD3-bp/D'dLAAd*.]#OiHS_@/i03GE(1em&Bnc!
%lfe/,%-3o2mk2EseruOSf.4&P!BO4DWN/q(@n(5=@[M<_c3C'TB%N5!%\n'Mou(+i["pN&EG:VIcZ7VF`:]42`%QoLiefot-'s^)
%/uW>u*"I0W8$e'))p9t/5cnSBWtWqkQ1$8bU,OS0\QI$J4QMCdSK&!B#PBc]\1h/Fo9g3qN^Og-XbaOo^Sp6gAL+18bLTh1_JF.F
%2Jq<.HDAU>g,*D/dj4,YMH5;bJ0uY//Gje!,`LM%C._MphP'c^%R6aSY/?^-((NW>SE1]G;9Apb6%_LOb(;!sJ#KL)'mc,P+j:i;
%!i.I1>Pf'&6Eo0BA76Bt2WUqG)pdfm,ud-VA_Ko.MLh(^eZV]#PZ&_O`0Y%/W$[-j6+.4D'jIhe9KZh'&0bMfdPW;4basU<KZ3Zk
%L!$"8=159LUHiouKF2OL"A-E/74'P+YVX&A2!lgBW/,1m8KG<n)F\f\k6"0hg_j;ULbIdj%eqeG@<bALNj)3&,+uhrbfPa#>1%;R
%pCII8%@Kp_3]7?Q#r<&]DcGpHVa22f2pfPN:ct6NBL2SYL;FV)A`"ADU%QHF%XnJ]jHos\(ME[%'V>iF$P$]@`ur"JmLd8k`*e\E
%:8er*D[`*]63,A[NW_RgE"u=,#Tt;'KWn_)gdZN"#fo;N5rkTt9p7;BUnL2:6=)q8@gA`SAQWc9_N7=paCc2*WFu?TPLbPkZ[@EQ
%i$1.?$E\S-QqGDp5=#r?mX3PI2OMp,)D)_A(Q!bPF!'rmq&$Cu+p5Xs-IKnZ68TnLNd)pKdtgabTR5WaG^Dt$6fS!?=>KqLKe;AI
%#?9$d(uaA2>-ed/Y#OU'OF"iiP/H#c^I$_q7ofKXG=Ft7/IV)KA4B%C0'YQ$$RAr3ZAkqhNV/_7)sfp;@&k&n,-h@!'a+PF&7Oqp
%(-._[@7Zo2X2mcLb_6AsaPSee$s+72XH.*V%YWgdL?f\n7G%V*'57go7JM#`:bW[4k[(m:4<co"?m<IM<2OI5/UI^RC(P!B^Yr4%
%-rD4VM"JL=7$T%M*8`DQ@*D^_12PT),S`ogNtah]:r\;ZRnqbn"mH6T)]#21QEddWr<Z=d/OupZa)%kX,h<]mUGCgj::E\kXXu#C
%,m)!C&YWrB%4/,Gj<J-@dg0F@6S./UHK@PgVX6k4`G<5jb5eeibPaUk##&NTblUYsMOI!dQtIgB7&l)'5!k&4if6J$&*>MT0a"ds
%%M+S/eMn$i0!!QsZQE=i&;]X]kR)Wt$3pqUe8Bf+"pN07<A\n&@:1XsPR1u.X5.HelU-PqiA-=KKt4AV]V(Bq4JY+FKme#<-7OPq
%=s^'6n<V4ogegdu"A"I&nM)5=L[8c.=U\TKof7ZF%NA%4LS]sW`ZT8"`K\sI#QpCDr5b@,4`RSQ[$a0mYLW,*WWK"t#L'ie,!B^D
%!o4S.1M%I)3]j9T7VK2Dm(pn?1t'nO07&k7[uM&'9+cu2?dZIomNTWp([Bc>O.0'=2CN=92c]s'HANQbD<3[9aHI/[Ys'`h"IlTh
%b9GdIHFf_5BEK]^\;/7)S44D&HEbU#I0EZ<;<)./`Hhj,.FPFaoQ2u)U&aIKcR`a=:qbe[cAEABT>"t`6!+4o*6bM[66-XBR#hN,
%H,\B$4sCA>bo;XKOm9*=04-9%L:RNMB+RK3_hG*fcI97=#\&i%[m7_gou.Yjjk7l9Z9aU`QTK4Cd+%^\4X:$?eRh\08+n(c$OqP?
%&`hf[N$5joeM016ECBAKWV=n'@J3d"q]$W?`FQBXL#K8\n?EPs#rXDk(rZKj]hhZB2Y\19":g&sF("l-;X`2<"EWOi7T9rG(C[/V
%.p%7hFVpYZq7lm-*_<'<OLmWkF]2Y^q#'^5Im!_te&rQ?XlnGVV1e66b?GNpkg5S8jeoJHH[CfX.K/o/QVSZPFntt"jiaPtA5Z2V
%cfMhnK_0aYl'JTF5'chlbGS_Gh]En<g&CQ;hr;ts\_I'Dc<Ya/`8!BpN^'WZj+[M#>FY'[^&@<:f&,`<h<a^S^Y)Mur:_;=pXh/!
%^j$0GM+Yjlh01Nua1nD0^\OAlhqBd\f8<gG[nGY($LB)Z2"(M#F`^^.orm9LnU9_;WY2m]hd=.?hlQia^E4$L6*$QBTOdPQMV:80
%;]El/Y'rTomh9GJh]M;NIZqNLs1NeEB/)_->@Dg4&;5ja64[fH!d3h(G5?Y-hq*[MIXf$-peCa"rV,m]e@g$7NZpj;Thk%>N5Bgp
%m"K66qY/J6Ie;Cha1IDiN;i>8p%tFD!n&4]\EuRM*W_Yf2<OO$^7WI?rPF&(iP5&T^*!?fHs_gAlnOG8htR]o`JsXgZ-C--@D=SN
%J,?fa\8V=Th>_Ql[V4se(&Aasb;[?IM<"jW6P'.la/aW9iOjm7[a4'k^R">G%Af7(_&@U]E8hN0Ja6$8])LMtht>a"2hp'Nk3N#=
%bD0BL,#YqZ8_7',hOlI;"*'1L^>&%e@G>P39mHJ=kkfjI?WQu[=AO,TD8c[59O*I?GZ5O\$GZX&"aW9e<[)iiCe8++nD5,'AF[Y6
%p[donOW2WeDq9D^56p\([qD7Cm/Nc@cp"[P4G'aN/bKoOHL4.ZL0'>%2n6lXCp5T9$_S,i65'2fP-j*]80uur=UQC<R[Cn:MR+HP
%(kF+]:_ZJ\8E7gn.AP]0!Q`WS'r/"bdMU#PPYG*1Cu,1*s0dC6gYX7%[ZOIr-dYp3KK(="(b1&9aI\BHX<h+P'@99=8W4f58:=X1
%NQR:/3qB(RAKlgBDp,rkh]+/1N\(o4@6[^f)pu9-dW!S]Bl44dn_F^Kcaq$F//bP)X=,FXe+P?1gSC;,)(cXl^mV6Ue9!F-[+V$F
%=f34ffTh>e'M/Z#7DpJkB5Kf8:abCJ0J'/&b#ill.sY[8>MLY'A7DI8_sb+1quS\"XHN-8/c&`4;<os-2698F6#;^"a&MFm9'TuJ
%B.&tB_-Z<3A[OkNn_(e09NuO8LDTS[D1JIHi-)$GAqb14qZ'4J=\\H?5EpjGMAIO&c4TB=5m`i/k/%r#W3%YW892cSF!PaA/HZ"r
%=Vt>AN.tgdDOaD;a[ccp7T+2t*(d\X>H>8R:g(D"^1EH5/*5p0TMI^AgG)7Xpd8\#]=%ahF(VI3?lpXp>6IC0OMjZq8F])fF^(h:
%jY^E=[^!n6o^UIB)hcZo8*l-cWMV%gE0EKOVkDKC:EUf;4BJQ;.Vh;$$X`7C/rd3=\0[5'=Ul!?p7T!)]WD-Jd;gfa&Q:GUP9F)m
%]),pE%:[/(146Bs4I54Y9igK?2WJ?PO0epqfoZPR(sa*XCQ;ZW(0*D1:/4$C`aS;iLb0()NO_"TBB#&m*BSO4b'&AGgAOdD?%RO6
%9S'@c$WKl=3sLR?U^F1j3nEg^Jgnu;p;uscM6i"[%n'+mY%YKgPH&Vm4C#kbdBCGBU#,"ho]BUi9GtI,DeD2jhr;+=j'hnq?7tb+
%9pmpZ_-8a-P%cZUhiaV/N:'N%RZ)JTW5LoO3]1C,SLen'79*AWE@Sg8Ms-pL">pX6UE,4Xarq7AW@ju@OMnk1a(R<d[X4OL>5^uK
%)6"O<UM8IroZ@[SH\a#fdU6t#+"16Dq;`ZQTjbA-'M-Lp<H:sQ4%s82=V*_mLCb^[lR5Z1_\Ag<*Mb+nR7&%E\H%lGZ?61"`@&&u
%Tb5+!W&j5!NT>j@Vr2]Z2H:&OY#Dug=#_Bpe9<#E/[eO-4eG]-j,aBD!_INN)RTi!Z_8Y"(DO)_&V$sr]hF@^33=/Zdc@dLd3e%^
%akH/k`EhoG^h-M+']0[q8hj"5TU:lrg_Dn`mRb"ofVg),PJYnModM);m?e:9W[e@"[lnp2ekN7"qU7uV!@Tpg4J9,QjX!aFW7p[/
%?lhO.(,/;!6j=k?M'u;afW0q+D!XJ5Hg1e&CUH!QMAY@H891T_Lc(WsnZ7;ZefP*GGaSU?pslm&25G[<SRSrcLLP>O)QkgJBt\*l
%9Y5FU9D-1@-9][f.^(p=2C<.t6an^CCYI('>>9i7q*A"mg.n?XW->&Ag:r8$\1h&pCZ/9@f)$[f%l7^(I[NVqq]djO-2[;!ZpN\i
%_U?HDgZ.n`b\q/(aSr99etND5$,]AEmqGO6\.=4t>CoEt[dNK.]*bU7H'!YX"%]f;h>%t4e8?4"]C!mFZL4JX0$r?)p+e[3-2E\G
%N`E.<+15%*G">Xn^/lOnjP?]ER7k<ZUm8=OY*E`_/h&hr<J:-`+8U>l13:T"eX@0s\`dD%QVCpdht&Dde9=eEcMhhVl5(B?-S>i#
%^$IhCm>KASe-fSWP@U'0iu7:OSY)uajW/6;SYk'shhIPRIu@Sf9t'`PHKjYJ1a([l"E-.5VN>!k)Gg6-Xh@##&dn_*o#&=G-p'u#
%lI1nP@&Bi^/.+:WRi^B6X'%B\G'!TX2?h1i5"fO-$ea2-'_SP&Hnc8Mo:2p9Bd6?$/F*foLPPQ38n.V8ndtqnNe9%dr]9=T0%r(i
%L#gjL\l$XqFM)IlB[W.BIc]$l9&pbi`Oj[PNPn\pE?jj-n/snZ&:&'e'T$]-Fo`eT<'Wpu<6CRo<>e/N'Vln,W!>VeAW_,BDi90J
%(Vs.b9kmI-[Gs`a!5_QYAX%:R'"\^_[lkYr;;ruu.,+GQ`iE9oW,9<"'C6Khe?K.&bJK)C@*nnLd2@1TPL/$EKgT)^6jk\.QQ^WW
%jessVRUIGC9=%LY)RA&ZI\epiE82(X=k9-BlY!]=g/DRE2L/Z4Y`(Nj#.JoI\S\Rkp=&!HSu=3n>J<>]5BDe!c+.qd$:5cnB70m`
%4&u*^1+R)%:JC$f;Orq*m`5Zi&9C9<FK7dVp3XGG@W4Z`$[3*I2>m#.,E5mm,F)-3h)i"Fp$U!-Gk$,NT:Je=Q+1na(?SdllcO%n
%\V0![gH*ZamP\ScDsWtQbBA65"`\nG=r(Md>HDP8kX(*j6sZVD5m+8*72J=RTr0J;j`+Lgk1[c#_`p!*`h[s4%,B'bS2]OnPdk?\
%h58QNJ*XN9Dpu@DZOsk#pf&CH0D.3Q`k,rMBULd>&!GKWND*PS]J)o]V@@+7E/6b"Gn.a,opJ*=<p);1;a9iqLA_Y=(uB3t1nHi7
%1*mbFRSocW[aB+*\E,oEgPrQdg_OYIo22]U39Eh(4):%gXP6:9Ucu,&+>k2/k&G:7^9#dQ[B*T<>>7DP[K%Q.TPRc?@E/JQBj%oU
%opd.!qcr_TK=#JkmtVu#>N1ce9,8km]XFV?;B5JV!r)ntlhErt/SS'-8R'UpNA_)k-JaFB#*L:gP/;d\'57c,.s`;e2Z0aB(4KfC
%7ODr5oNA!6m(;!_p&83F6rRQ_GD,0V[_,hQRQ[g*Z6L!k^0-#^3mNr=f"Ba(*I0TXNYKZuA8ANCg7!3.>+,W[8@r$iP9e>KAW8TA
%de(-JrccJA83r]T6g`,(;HW=sW+-]J[o'W,g<@,;,8-e(lSe)ZbeoE-Wf@-O@:i&<,*A*+RuGoYLmE-U<kjT9EoUEgm1+cUSV#9"
%5?)P:YNsZR/[fh,dOgIWDDUM]D`6j[`-A"m8[jC7P&AAk_El<hVkjk2f=7qLWnS'?YfHC]@oT7?,*,2J86aLo=n-<C1[12p;hm8p
%D?tVH?%=6cL'&-4bZiMTXd@ZR`H#\G>bOHP#DfALh%.IhZ.E,@.9i6d5Mn">]\3]reh([D7$'mhD':K6[n5s3l]s-CLuW/O[qt1H
%O)j-4X?drl!jfYDOGtO/VCh@JQZcjLRe;FAWb#*\;kgTS[jil:KQ%cgV`q3B%&NL*3'=pg_VNXX;!D^t"ln6@`^ke>"PK4uo"+7;
%aV\aF1hT#]6s_oDdV;=Y5ZAK_a;?oA\2XRr\U^8O$V?s"g5olDT+>Zbjm`%AS&;68eocOrRG/a$Dq`i"DiYC91p#DbZ3?a6U'9]]
%HXW;cpZ%`#RKdKL,eV7n&J>LUREf7EN>i)n/dH)QW_W,XcM<O$js=u'[>OoVeKk!a.Z&QT.''\&?1"i/Qk+KV(+"W&@>!+uZa-\Q
%.GL^Qe<)KnG!0)F1M%9-SIS4q*')XmJnb>L@!6"K60U'SK!ruC\LEi1Ulj7$02G+(:9]*i>,)CaAT;;6k^h6O26osoD93\jdOo=B
%;+J!O"gB,nL_s@nlG>3J1I$Q^Q8S6&j;WQ;Fu'u2Z$MsCJ3=jq/kg]<N^QmN>.hElA9gZaAZ)AaU=H;rA;Q_afaga0#_c9tIcq%/
%9Q_UP"#-S=YQefoW7Y9i5KqDtH@)3k.H,L2p>'0LCu\GV*G85c(+_&,e"%r!@AiLY7_=BpQViZR:Xj*]be5aS[]NETTrPT?;:KVS
%AVg^E*:,^!7k8<8Y=[Oe;+9i3>t_GZm.e0!YWlVBE4S+XMWWP5Z=K!6rfj,;cLu?Q*,UIDAr_IL?/,(@,;o*09lD1Fc>@*P#%a,]
%R`&VH.WfKh=nnj7]:BCH:"S*^3F^t.\rTFP?6.>DJ-#&j+B`?A]s(8$qV+kM9"o$??KY10C'#nk:AVn$=Vnb-f=io+UQ)Y(RS<"*
%&,N!=[`jj]ZurQ5Om?juVdh<!\*2d]gU1,Co.]i#n>#O%]&dqmr68AMcm?>Wrb,81R_V#NK,sXY2N%4%fIt+hnCaXumW,MJLmlQ/
%b(u^p.aN%\PkEo_^?sRuRuQ>X`ceWg"(GCba^M'd\lt94ZrQK`YU0(O'+&EZB,\!d?Fs22l,(RI%4p?WDHEY>$IWHN2E@8&c(AGu
%VRfQ0-J-,nEUEeGO%^6Q[3gU>o=uPG*VMHPXP).GNT7F/eoS>ukCHVU%nP_['.=O[rpWE9_?4pQ$,)W7Ua\qnj$-)(-Q=u'>QQsh
%ki]=n6JuN!WKGeTQ5(MSXVoV&U<so9m%nRN-Prc;XH1jX\gM&:i<OL-P'EBr9&7jS7>JKR/(Wma/G^a")`pSh953qb+AH0P<+Jh7
%KKk.;mdWc"e*\I3q60.i)Ko1N=[4!54-Gj4qCtQgJAe7D>Ter'8X[+S`>NXVQXlaI.+rI"S\]FjX\u^ropkl?7kW.J%*Fc8UeRc[
%(<[bNe=3_eYU)*nT%C.V>:gd"'r9*?7)+Xj5;_C2D$rujOu#nkDTFB0/Xa"ep$fk2/A8_lj!4J>>XB#2ZL.pqd4.ndfJGDj1ZgdZ
%EQf0df1)]l=RF]PnH7CH:l/jg2CD^[F"Ge-bgplsHbBPZXK>0aen!Wtj00k3;HVt1K0"63CBaa\Z.X"Th6V:51@+$1AF$&!S.sg+
%k)Ta!lQnlQK9eH&hB(S"chrU-Lta"u1q)rJ`Yg_`Rftd^&Pnsnh(!6j@Z.FX`'ncZl_1^&ETiA1qX1#9i6lKr:"enDRS`UD&LspG
%]suAA0'c2B6srjm=mN=o7=jEbmThXV)@Mp%0uYpbJ(%.CBiALleb!.UI/TcSXXEC"I:d8"\`h^_YbOW+kA`l]:79H"Zr?,?8g/A=
%CSkUH(p`iN4d[#<5XpY@P-(;8AuK5J!$<"cDuKUp*,+qPg"d6Q;n$.CNG.//(']@H5FO1,E>cI6Hst-)M<p4?=3;GJRFI@b=l-#=
%7<b@M2KT.)`qZp#\B_qogCd][DGcOc]j@$IDB==dLW<W-bEKAqb_*;BNHPG2L)g^3\4gc`mI@iQ3e5QJD&YN^BW`A5g:Ds'(!l2l
%3UEPa`7uARMc&h:q*nn&EY,i;13n"'P-"UD;&Rh"<0FmQ2H9pU^82i9*f/('O7pIokb>4%=F?QK)_!F"ToIb1<*/)]4+gX`g8!cr
%fdqD]@V^^<B8C=6c2H&IQ=f;OC88ob2-B1Nc+hKPD2UN4VU>//+BflY734k'"utXopXi$kd]Cs??<XG?XRmq;g2BQi\EU;C,=Jp*
%E82uuP.!/iA.ROA8G6L;U_sTrn]Vaq*VsA<-'ioPFgXPZ@gr"CO-9mI*O\Opip1#e2U]0k)g*351UsH.g9]*8m1@m:D$]g=a`A4:
%.qhSk,C=,3A'[_TZmS(7Gq$l+cCd<.f.W1i"c);"0jNP%MIpfs4F?%iQ*d[;8tD]*]PXbAo$q;9QJmg_Z^tdpp4d"_m$MQkJfT&'
%L2\9LOFBAjGEQjA#']R*:qC/u4GM,M9<9O37R.0'FeEJ;<(0,lK%>Ki+dfdhOiO;Ygb6(qlbDIaY@N-h&\J3j9upDo2'JUM2'JUM
%2'H=Zf7\O)f7\O'f7\M\?F0[*)oLFJCI5`>Y6k"-Y6k"-Y6k"C]I)\a]I)\a]E[4s?a)!eY6eE1q`rDZI"Kt'HjsBqnd/V9ne#1q
%B6D2B'4)@C$!n;9$!n;920dC6LW,SS#d5DU,9Pl%+eR[M+eR[M+^]lRKRAC'KRAC'KR=58'ClH9'ClH9'Cn#*c0g>oY6k"-Y6k"C
%]I)\Q]I)\Q]I'Fin=#H!n=#H!n=#HA_.u@u_.u@u_.s6h#Hq9Z2rHP:S_uA6=4M3XRZL;6RZL;6RZO\gCM#7p=c-IM:@O^6Y/"g>
%3l,Su3l,S9Bb.E#rD;H11YB6,.7:ZJY6jFrY6jG!Y6jG3]I'Ef]I'Ef]I"VU]G4`ddKs4^e$`#i4n1<O?%^a^FFr+tFFr+tF:DOi
%dKs4niX&p)i\bu*mY@6K%I"#!g!=lXCI1(uCI1(uCI5T:Y6k"1Y6k"-Y6k"C]I)\Q]I)\Q]I)]Tn=#G7n=#G7n=#HB_.uA$_.uA$
%_/$oeWdX@/F"'mks.J4b?8[f;hWs&lL#Jq^TakBn]s2URSA"nU)BS8%G4bVu]&r[<HLUdQSpRYjOS3#\T^KMmh;denmlk3i.Agle
%s"`s"bV,/a86<J'D7,\=*PDCMdLWO2fq[O!mrm,sE_0?Fr]tp\+HhY+?N5gXmCiK4[13XmnG5L9H2Srr[eKVa4a?p%D?mA;Z*okJ
%&*h!sk:te>r?.ZEITh,GYFe=%n+@4>PJbgRnbQ&2@!=:G]mbEUn+CaX-a0.`fmE[fn_WTh0?m*PGl>fX&$LJt-,]%Up25-Rb75&d
%Ium^7J'T1uonRY6lTbBuO*d%mGl>7XS+Vq??N5"#o_Ncq<bHlj1`P]GolID4?9bo0n+@4#B(,E]2L3U-kk-%N9>1<f-OlF:8?HJR
%+2.[8bJXAB&<C/te9@B<^Mqds3d^hK&oMVLHN!a>=GD%lqNpRYS"dXVocL_3rVL"<T;ZD+Ih6g+Ma-CoDB?N!g8k"F]uo&+A`mdB
%AcMa(^Ah47(>9<<mBJV=53iB@2kpVjP3?]"l.p!cc&\[F]?_f9I2q*l[VI\PJU?Gpo4ZQHdX7:@]\O)5D;aIDm^!eV@j'6pbL'X0
%hL-HSSAjaKYGBFT?`5F"8$t)7nF"QWe@T5fqID:[H1rG,-#IqUNRX;;g8O/i@hSF8ipcBB[C,OEp$P?8#p&rg]=4h&8X_*)Ci`^K
%HbFIin2n;cbK&l'B>_8f?CQ-LW]iJ6q\b*Ee%*fb2PdiDpNbOm(T2==ZAh%Ck<@X3>1eYU\^+;X$RuT6-;MUm&"gOo!p[9VpG:p:
%r_T*7n09FUMs<-XAFo33OG7cO`PkHUZ$>Ec:Jt;Cqh7(Yq_IIPLN?h0D@moO2rD>_UNTIhDndURVpAZXjR0oL9<>VA/O.J5ljo<u
%T2;d#dcT:s]f25+1fF/'SrP%P[^XfOIpAQAD!hXKH5L::<&RP85$NRu)sXmY#a4SDXPqt;k+I6Tl*QM0<<m5""c?&XIQ2Gpo^7ii
%X^dd.1qmjPR*L-2$^O>@-d(T,0@\t9j(5[=k1aO\foBj\pptW15a]96^=?Td9e9nA<3'N$m1q9YSRIOA');/Q2e,9V=*jQ*Z.k-b
%R=9Rmr[6PuGC<`U2FrH8m7a]Je-d;qeqU#'(i)?;got=Z1ApuX[tG-'q"5#/n`qP[%_mHt(;Tf&]:Ar.ihFT>nRtO<gkT6D`id8E
%XtQMYna!Mfd]rc_(_F<p[7j`+?)"9lgi`heIb6XYqJ;7++/`Iq<4+*g4rLTDLHX9e5la+:_2_:B4YFGJ%'p_O\AE0(T0mN2^&5[L
%NRkHAW*_W_FfgNb1g8@gCkFc3,MJ6k`sXJ0^G]9E^:+$fB[$n*f1'OS-#Mc%)em:GDUd?T:%*]+9<U2^2>T\D[F.a>Bs<J9$`43<
%AnuQ9m@i3:21F?R>1<AGr3</#(m9$<C95^aNOk"(bUj<$>Zq:1F9]uQ?31K:3OV?u2Tj;M*Rq4ERd$`Hf,AQ\->@>*<r@2aK)3_]
%>T9Q"XNVaSW#$NO6T6FMmBo-L`jI@54"*</C57#_dMBSUZ-jO0^UC_BU`J<3UCOr3qJnbNGXk3Cqln+&qB:YR]VF6"hi'Z/Vrtr]
%<n!&)p3b6SGjaLMoBs[?gi4a4V;kbC`X7!GGGkDDlaXs(ZUgW]dWcFjP"&bI09Gp`Nb_SU00cPHU"en?9rL;K>an4/2F,OFq6fJ@
%^d@IYY-h]9mFF`gWq^(6XW4JTVmS:h`pDEekF+u(6drFT&Qj'qAaladEpQ@JK2(XNM8LiNpiWNh4_*fCVn3U=-=bACU+t^,0q0W.
%4kS.pgX?Vu\/h.IG4^3=JJIN2\9s.m%mO\-4&436m'ooJ9fSGd!BYVV[!OTp(OiKa%!fn'5@oB2Y'W@(eJfM&S<3CV_h5VIRhjdX
%X!tmpmc[Y(D42Ya2l2.!_:=$`Vg@Lr`s(n@O`j:18Y'fjTA<g,Ai0r,$5A-_VH,)"dAb=$l/R/lpV61Iq)hH.`bSa4\i`/odU$aE
%A=#n1Cl?FcXITrtDTQXmBTr)e)B@"o'A>0WQM-X=#aVPtGU$=[UP4>P?1PU?27PQDm!'.D]Q):,L2E/4mkLeGhIF9:bBqIZ/t%H*
%Hm9pL%/dc.dpOb:pSWBa8G:)Oj@FI*fNV^S-1@NDG4%j6a//?8aa<eHUrLW*9[_4\fVl^YQuCa''0e%@eVs$4(cTq#dB`53;<3J?
%f[ZZFY'YZ@([<XEU"N!u$>Z$V)`R5bWY=D*RPs&D1`.Qr2-pt%95*&/A6`Tm1FBNKVDlpAS)1)\PaH1j[@L0bf\#G%4_m:BSXHUH
%Xm_3gD526\jlb@aU<n<VQhJp:Tq3hqXc4J?OV!8^\W[?0SZD3j_MAM>as/s\Ok/ag7\'c^YH(ln3bW8F^EpCrD-6SAGJQ&Bb75aS
%R2-!pa"/7a6gn(M@Ej1Q"3V*&0;(F+X+aBZO6cHW]-3W?36W\HTu,r^[FtLrAN%uJKH#&k.d_;r*GOPVdja'M+0b7OEKB9>2GVW%
%>^Q02`5Q"j0.ieV;Q$EUh`6qYr3#W9'YG_U4E'H3M5Z9m/_@Y>ek4ZIAYn)^DK"91H%'nF*J6N;Y&.dggfptEkdXE8bj"RuA(mDF
%g1-iEjP3K<^1#`*km=r/"9l474k)s4iV</l>OP;_(C]?+66'!]3\G-*1\.96i^r#)1Dj2WX>KX@f!^qJJjpo6rg=h?\bWCi8oF/M
%oO<)PCGi.l-S=t=IC><X[?sb!bkJY';1]_dF`8qtK$I<&MT2CE[$W]*f*WEKdPCPlYK`TEC"Y5^29B(YU<gk=[$ZmrdTT+1&&U%H
%KTr+IkD"NuBN9i@-U-$.LW(+[A_G)h[`-c4%&[BE]P;Q'?[=`rIUBKdGgb_Xd$Zn67aX5&US<#VXKL`u2k6hjSdqc\<(#l22=oZ8
%hFk`ZL3^VuWU==>`42n<p.@GD..)3dM;F/)5jWS54W:@0+'(>IZa%[DBN1_7>ho+j;j*2qeaTN"VR]J\)q9/CaH4$SboEN/fPrn*
%9"$T.PkC#bG#m,q_a^))od4C^#*ZX7<0W0:$V$$\%D,OTC_Pe#anm(c/=P>\UR>LZRaDj-h[XHVjAG5bod@=BS[I:7UQrfhW-2PG
%T%[[*]5\uJ<SD?_d4/od9t2i4N2O)kg1L0nlI,IQD77u!8\<ND</"ZClYN?p$oiH@P@[\Q0LrV.7qC=sJ+/9MC:36/WRl>6('d<R
%IG3Te)]Qh[']-)VCiE[]ZLpX`FhA`dNO#Y$7bh5L2<SsJa1//uAKQs!27pQ*)jG4,Q>KU6r1:U]kY?M50<K$0"ZRYXc)>p`0?Cu(
%hHXefc_fN4aB1#lo[WAkXrh$!Ie=2[>.YA/=#]#Vd\G\.P6qP?3d0d23MSKP?Ni3Nbq%'%!SU,jFKaG)Ybi5HYbUmP*51WfIBVJr
%k9b&r/fT)9+hUZ0qPL>F3dK4jELu)_"ch/%X/:i1nNZ5@=R*SiFDXtc`r6.14i)p%]MXc-GsEQ)EJEt`l7A:1bEqj.]]h/3g[>ga
%L*koMgWXp_=/4J_f(IRF?X/d5O=-K0fVr%LH>]T:.QX;/oO\5cSuW>QBgar^BQd^-Mq7Y=N`XbkmUU2@D+69$3uLiKN6j5u40MOG
%LgIIWAR,6`H]@8*"8aaXHK4,]QZW&fa*-S6\<rb8kS9UPa59"u6JPC'H6MhRO6]fcnt3BQMLTM^o/Z4k3u5/8q8rL'_me5n+25Df
%nEIQ?c^qnOCXg7e<SRLm?9E.akA`ku?L8/JSQmm%&fA`hQLk)_p+-..M7O27jPYM,!l]VlJ(b3.^rcNQnuk%0)V7[BncjS(I4=Z3
%pojJPZA`)8CRprmmi@P8]&sG&?KS>%bCkGDR7/oQf&Pi"%;^Jjs(V;Br]+T85ITIqIuRh*?R+jKHUGB7^,0L$k!pbsVtb\qn@.E/
%hFin)]:GaGA!o'^B+3m[ob?e;^b%Vj^G)@Y0:3^Z_7!jIrN<?*\*(msb>&Q+moJT(F4SKUH[aa+lPuO;guL1"\#coAg$QRllQY^T
%I(r0%U[38>cX:gbq7CdMpO'3NaI[bPX>S&m<[>i^@S?`1!HOfWipFmI<H?Bglk\An$\"<V`ZJcu_=739=-M0d7@WBrj,]bbg3u<t
%g$t!6J*=&#cR.tgjo+nn:4Y"3n<YALlh_JM[[WFuoC#,2%\%AB;]kW1-g@ihBu`i0:\m-A^'oD[bP27oA]H",KlP+9lDi1.j8/bb
%]RPrLrZ^adO:DZi2Ct=&<]RM/gG+.@+C9C"2UQemcC5O-IZqXol._Henu`u8T(qom^aBWL*IsEe9X?>[H/QmKl^i?Ja85+h2]]N"
%76)p?JSEFmHW\`;]:?Cq^htNKgp-1V4/P(eUR_,C^h>)jgbJ(Tk-nr*4YXcX1;<0:2naX/m'In54kTth=^M'u`uk9<ZbQ@aQ`pDN
%fooL`?G:[^jYrO@#0gNSlI2(QT3jeXdGOir:QJkrHMZ`]^O>YI=3mN<q!2Rb5Q0l&QiCqfqth25p:pI-hnK$ZeM"Z4mF1Tp?8Vj(
%YfY`NCnk$+n#q36o^VOF5(<1dZi@m\GAlb2J,\fVe"8jMr;>6+hu*8mB:o4-Vr-,goD-#,9TLofjm2pKs5W.#qW3n_?@M^bjUZXT
%IJ1-'56(F;?i93NF![X.5*`$Q%+6N<q"!qs?@I%mp%+O@eX'YAn7-\<&U*T/^]4)(YF#9e/:I='rl;qjI"T35Vu5jFKr+m^bJ4"f
%]6l5Lq;oqAP/8f^>[Nk;F]l2V>.;S!)[QuJ`G25f]_/l+*LR-DR\H4'T7ZY??%^cE>S\<*gG9Yb(?=cp4?AB50\&#hNX+YlXcK*^
%EX;_CPgJg.*/%47[jrmVqS;8\+'@C&BupqH5\2iY<:#<:m&giUZiLd\9[U),kW0gO-"JrT[T.)I6a!2qUnHHu+"PGWiZ>4AA:1'P
%Ocg/Adn+8_2/BHlLpcc`AtZdUceIJ4Tk/#FN#N,.NhJ>r\g0ecG8k/geoVbRGl[[I4cO&Y37:h%(_!NS:_BBZ5?TD&1e,Ahl1#CW
%/.`/dd)$0EG*-1-$F,CJ1N%h-Y3eD``k2X0b$qTn!QtjmBuI"QDoZ'B]KR(#-@<!bfR4;l8gf6sg*Z]V9S^ANX#]6>?MP)ul&Zk"
%;\a$-j:mh"jeFBO8="J\#b1Ok8XN$0!"&;:p7Wm+PfR^,`Q2**cY(*H3BJ&,^WCGJ.G:ma2]5AT!P?R!g[]R_Y)ENP'jSaAA6qGF
%XNdp>+97TA&71\8ADWd+Fgl<'Jc$JU6+>UqMdGNtKH+7Zm]gE8n.n)5fcIK60GdH9O:tHbR3U1m6E#2nVbE6WT]@NeY*+\!D[f&+
%ZEX`"4+/NOO\G+f,:jpOMNjFuh#hi*iMsH>YR.:/Ya9/m'^ccC3DXc.HK6<S"I2c*b9]X=qF!8tDESXWlXF]cA;>\U&6#8gZX^g<
%l$SAumc^0A]#CV%!*j\P$^:'/(*Q/6'S[O4Q:kVd*-.&O)aF$GC[FTUK`eb`G+".eiM6P6K-0UJaeUeKHmWQ?g4X&^'jn6Re:\T;
%\T,Z8iFl\KV`s1K&g\9!Mp;ceY`Z\GrsgrWV+_2\R(;EI'Wjo$CfXQH>-*`Y!7Dg;[;$!J(R$[=lgc@Wl(/iD']s*XK`n]1g/o@P
%hF!EU2pV87eeKO%=0Mi7Q#%(\&+_67M'V&"0ce'+*L3,bGEfK\J]4=gTZ"G2TqpncA1-iVdKmo,)D?F`JVUktIe]oJ!$)@ijLeN7
%E$?^''3`8D&mPs)+'a4+'+%3JK0Z;`U<?.;M0qrr9eQkDj/uIS.W:#3][:/8.c<@$cE)1p7)$Y#cIlf_P.<cmc1Ms]Jg(1-a9PRN
%r-U/8W^sdrVU$9I/P,5u'Qe`,H*H\]UdN+P89rlRgdk=fX>;>na`=WKKODI[[C@JnmG_WmMB0_MRNta6=[>[^b+u"ij$bA`<`Kn;
%XeCk:((:Wg6"%[!S0Plin/>t33GY=DnKf;R+poeCclJ4T1?"%<F,e(S_Fs[YTr.nRe?tqQiZe(kNQ!_-e,_&i\DaB[M(!l^p/KOG
%_.(oSq@H"FIu6ge@mb4@R"U*s_q)CKHY=-n%R];gTY"`06rH9&Z9oXW#p\P1,,Z[[[f[k8^KJ[=F7$OGdfum?lAFQ+:Q^u!TZC-R
%K9Z'UB.Y1c\O$B?OnOJ"RkuNg3!C3#jkJS\->Y1n_W*LU6=T5ZSW[iTf?;g#7c6%u'oK\X&6&23_;M?K'XkoWDuh#%PcT(p9bWG<
%jaS/5fePhF!"Ap[9E;TU!(DhD1@ja:9`UP5U2c_sM'bKB1/Cc*[J5hhN[Lp(.MfT764]'\H]'/RlnbA982'!P@QX]meMY&Z#IeAl
%2Ejk1/o^;'PrUr@%g8eN$jrUTArlKP9.5o="3`.K+0J#^io()jcGm?W&k6Q%S^%9`Fgs@3&-d"f?o8h1<Zr5<1dD3HNO4F82e($f
%1^9&C;\I#W-0j;BX@m_O?"V%m6F9(W6fYHYQ\SkIk;^8Z<nKqt<@^_+L(TlDaMblgBB$0mFWFK5!6VDi"gFjH6X`h.Ha$uh@<_>>
%Mt%H!m'q8F)\Kaa@)@g*X03<l'DkTo[[=Xo2K+o[_LoQ/G>p(KmV(?(qXuf__HT1kq[c@hR1L.7U-j@f8Au4G$Sl8HXEX5U&FC5<
%o\YG1&LT[_4\Rrh7LQX,g;7I@R<^b00`E5K""[SU1!1)i9l=_9Gd[X7duN#O0If5DjWb%rJe/&C;oG*ng6Vjt3Je<8i$1@966A$n
%N3[XTQg#(_."B`nrT"0j1d:[/_olEc>b&tR^U\a_l)-alo&T*iIeN=IIDigK8C-\pO$>,C:](VCN<tn&3('lk(96j/>Hcj4VTV>9
%EF2*Bn<uH/*pi#F9LCWA-7BC&`,Pke5`:2rRPC,t*5lskUFI"a8tQJOlE)^M>Fkig*pmM*)B,_F/T_;HERG)+Uku1.qa-drGHGl)
%J^.^.d>`Zt&D9LgSe<\"W+AAZ$4hj@_7\6d?gHu[_8PctAk.CnA1h=iGM&+R(%pM%\`cbq#u-k%jg4fR)B'GZnP7ue<jaoS0PDRf
%4DaVFb1RKKgi1dMA.RfhnQ^/F@)8XHqA8N'BSU;]'qU?;Fp03>l>H+)fOS0q#usu:;?&Xfp!RZDE'j_o`REuQTa<[$l\V1.K`X%3
%!*.d)Is?><kqA\,kf(^](GWC`5BkM1N$;D-dY&g'5Y`n6_6jUKXIT9I^*fHUSOcJ;bJg!:Wp;5a$J#gUh$E$TE_'_#!s%8?+;,.B
%4n:&'`$$CXG!?7UYoCPg</7.K/B:S]`m<#>7;R-2"i#V3*>VdG^W3p[:fJqi60N-*b.>clT.3UjK`js=!r_0PW[RZWO`dsJC<O^Z
%,5_pHFc2>(-ipeS(.$4]Fpb5dni(@B,=d0L;Hf)/m\S(i(fWAm,,\_3rB.Y8Tm/&U`F?DblVl___he#*dq,2X(EGY46&;HM.uj4o
%N5IWW*3[-s(4@U)mt=@e"o&9E@!pN$LlJ<OF%XtEiV6k!6Iftl!J-g?C/JfINK9W:CY*TP%2F_-CXCrmT-,k=^hrFd@1(1=F>h2P
%`'^&[l*TDT\Y)u3Z_h_i9%F1=ambF$NF::N/I<S%)&T-#W,6D6Mf>l"hC$B_6,13)J>R)FI1=^qP<NtC_=fftSN(5'.Y.*N<@eU9
%-,5sLisL>pc[6!]X"\H>;I4ebZk[A_J-ZFfPAAeIac)A?PLlPC1]HfOi*L.t]+QbCUOt.V)I3%s6)56W:rMO*Tq]k6l.Qse1C@f+
%.6Kn#h:@.^WZl0XAsaBu'gPJ)7*8sP!8!M1#pK)B%]g&l?rQEDcElQ:G4-gpY7c%I]fGn5(.K9K6*%aEG6PhM^%#<+2%uq9KoKlq
%/luRKlb6AgR:YSRJ:e36%k3R;kj)WSMYUFlB->3/ZgQh#24PqS7\*C;(sJ)mLmpg(98"'bC7pD2>PKG7Q.FIl"1Q`F&OJD]""-FF
%X!>!*B,hoELqgQW`JXg"0nin,I@_nq^2A8o\^IE)KHkMg;hS)0+nssb$\9VfIHq;rP=9FN=9?l<X?;-$*VLiP#IX[T=V'd6o;Sb%
%g_oo+Z!>MiMq4R.%R2\05ZM^ZinZek23V#L3gBi3<<s**DhV\Bf<NGj'hE,a'=TE7XIE:RP0quces*AI"mU%4LEhPETZfe(X[M!6
%"LZm,j(K:A:&qV:EYDBD]?^Cf@"Vtm<]kn6&8O*4@gaVlW%:;9L;I,GjU)<#K-nI%bdA:kG]`MXG24Gk8hPiXL!IOZZN*89!/j6i
%#-qQV>FGn8*[QK`93$L'c5SY^#L[>M(2&f]>G6CJ.FE\F`_-m+_9'uA7SD2LXG4(pc-I%/I0'GCineDJ.AR6eA/-JcQs@#L,o&9X
%aJ*clQj$pZ@@?k_d^2?bei\YVa<_F5oG%+5JG!nMI8rLaEhU<,dr6rEa==9'?6a%_.hX<TW[.0!a3i<Zj>qq(/[=1KANq0SQHU$W
%&#Vdbi<N*5)/'U_`Ad)l!^2/<gFS;74lPMB/ZO0i8.Q!rkEl;1AiOF:fYM;!_!S!L?].D69u8%r?eI3Lo/@9,;711J8O,]a1i19_
%4N)Impa.or&KotmjG:J>[8(l?#U/3'_'L[hL>iaNJ^#kUmmm*45!%d/kK`(q0K-`!R5[B4:;%cbMYOQ&\i)YeJ<RI0#5c708m,AB
%H,r0Q`3MZ7GJIYJ<Jq.V=uJhI'+JLVRk\_/?IoW"MG+Di92mMLZHl6.aCJ/CMQ&NqOOV,JZ[kVtDcF+GMoC$O#kCdq]Wq*e[MWE1
%=7:;*^8W1]qpHI)fUV"eR/7/`,BAK/V>N!fmfm\\BoG3%E^fSGJe1o![qi6FU"A_IeS0MW`YUMV:s@ufj;u1@3,K"gX<m;AVk_tp
%O4;*;DbVND2<:Rp0VChDM:Nh!"hjC;Iqs3MCY'^@&:MP`ZA@4N%JOSE[rsc8n_](b]6lE(kO=,MRcct36.HNf[P]6D+Hd5&n5qM3
%KZ8+*>6p+=$i:nE(@Ese+soMo2a",)(c7SE@:uFq><sI.R80o@a/Ld$S"cRG-L%4A#]s%KkjXM$?.7R?,Hd;d.;s'icgl>ggJ1U8
%dBB>3:(-NZ)oeLOAQE3m4-fL*[7T=Ah=+hg'o6+LGH,O"16'!30GEjZkU\@Zn'D:J=+!7m?ig'A>cLo9P7]gncK#YF7u3#<5!k&:
%S`5Q.eS1ID_mpM^3?VEHWZffjAtgJ+m5!PCIn#3nXG1^ROUFqr:8;ed16@<YHL)[eR^\cp)'m(Y0^pKk.C;@kMMP!2N?d2,&jV"K
%\Q,IBHrZE=+b>Lak'>^oE/<ii26EsWQl$*'g(mTKW>S)E"U>(^%c'`"WuX&;"Jd_L8"X%m=d\i=GRq)5!MMOO-^Yl1XW]@Vj*?Oj
%0UCA`h@rWj[?L.nPrsj;@T4N*Gd3^Vm$qPP)P^q`a&&5iQ][@C+&G%.+GH3MTrL-)#ZhcbG.;gRQ[.s#JW)RlYXN^<Fs<^Ec9`B;
%^gIeaTOGrA21glk.ns6dgiMd+JJi%p1GfXfm.`tY(gJ%g9onn?d=O\Dk=6jSOMRBoY=4\0%TZ"M)tP$fAV)FiNO)"u95>I[BU0`.
%^'cZ(>aC7S1gC+<fh?QO`%FpDZ%Gm":\>><]b%'l>R)i_7M0^03T/aBgko.',3.V.C'IO1c0)rS`1)A3!*jdW#&?F;]Y8Kr5%GH:
%36_^u1\V<Tp?#p0M%'oS&.4'4fe+K\k<^iY%GC'LR%BUu)AK^PT#Ulr-0,5nh1XFs=uh_\><t=\WnCFpD@&]H)l<pni?#H>ac(2a
%nSs]a[Hd.X*+./)%WH#o8/8a**iB5L,#"3B#856&TLf<&)n_Xtkf:9Nb.>s<*4^jF-f5OY=hfZE7amXV[B0cl7M$o&6c@QC,\JDR
%=J:C1P!<VKN@69(1]5MK/^6O*q?+6f?&_7!-mD_'(.*L"I#8LG)UQ\]1lWZ$j:Sj%'&%q6+D`1EJfZ=V/nVJBL6.)?Aon43!e\^T
%qT+5C&kFN@$BUuLZ3SEjr.Lf"CM9aLU7=Q;@X8=t#gDr"[*r3rk>W.MC3$h.9fR^>SlUZR+L"n!B!LTs,TU?J:_sV\1cuIp2:X&W
%(Eo,Q*s.JNGrr,7W3.;R4q:3LqJ55(K8M3LBcos%I:#Yb_S=&&;6DeLa;Hu?J_CA+eh%dEJH6o'pCUlCFLEK5bR/B8Ld)Ms@4+I?
%TPeMmk,MMh2RS&g=c9F(Rjl3aBnl2p.AlKo[!s*>JUMRTE<p;hX)RGl6d.o_(A<rJ8`2]B1'W:XK%;b`V$(`Re4/ldWIgVDiRCA-
%$QkVn`,;OO'IJa>%g(=7.:@jjloB?C&"tR4P\j.[WWLo4/[rY(U&;r+=A\#V1'ii:9%'hOl[YQcDTD0*r=O`O5YML(4>7&&Uk/&/
%q+#(M;Opjn/%:=.M4%8&L3lFc+<7e@7\E``-/!IB=;u=kX)Pd=d#\Wq5.7X;*`FrQdVK4U6Os7H3_Q;8Ms,$/)&:,C:,CTp=q_3>
%/<JTalpD7d6jd+7^8OgNR3=Z3#R'#-=L&L$=5sfJ=r#]@^o7JP6AR6;bQ@pA$jb?nD8\g\H9'thaD-:!_dUD_s(iY_CZt.'_>l<I
%"s^HB<LfS*i1dNj*9'M#97@NBK4#A1I)R#g_cS.HY7rQ)7ttB`7=>LlC0;>9n#GQ7<WEaO)&[ZeUa]0HG4)T`((g`n?3IEP2.m/&
%K1`Tb:(CUJ3sFe]UO3<u@C'CF:^2k($M[o7=;kh,D*<3L7"=T]"bW\&o&6!f.8+e;Zr,AL2$25-McDRF\0.61UQ1>b#4.jp3'i?.
%"s!$)5"q)(1$Tg?c'_jh-J;g`7&YK$/]"L_RiRGuGTgLI"h;"\J>B^RH(Hg^!sl\M&s8e++[?B8R"roKPpq-HeW:08Ftb6g)Q2nO
%4YS-%*kMHoC=)H7U,<Bl>E*B[_/=dD<2nNL_I>B,YF;-f4i9gIX=+_b:dkCJ/?-J4S!B4K@9k9B)D4eT'@;Glf`88^n7H'].IkXb
%fSSf'DNqpJR4kr6'.$maH]5*k_H:qok,-3P0SZ>L`hI3Q[kQfn+>ICLEH]$TV`O_[QjVO9Id@[mhot/bf(>ubAh@01$6TJOYmjr:
%N!^^;:@C4LbY#r*!&G)r%8mJ9hABM7J8/+h#-_+"ZPcYU=V7?=8!m_PC/ueM0esbP(?)KV@gVb-.6l0mo6RJWg\j&l*"8^PC<A6X
%B:oNj/e-hP;3GhMgQ9"ThLpa->Z-=<cp7Xqf'Ehk_UR%l.cFd_12d-pR^#bH*Q038ee+\7"GYA0rNMu0)3W+'K)gV8*,l9I@)-)l
%g!WX::SPB4hNlFV?k[8NNZPJFq?aD`^]jYO0K!]#b1n;u:OmdKYR3co2r=^>77'G<q&WjH.hCYC"GaVj/3e6q@U9u"8Sii,e'2;s
%W6-V3'n4)j)R.1O7O.)%O]a2KKCL*]L\t:`+MoYl6P3k@YskIj`l578R@8ECrgX9+$k0)O1d^u:.\)YK$jhY)T*BTaKMe7iXE"<O
%*:X`"EhW+26itLk1<i&e&]4_c/C6ui+cf1$<[1Gq5Z';(S-NE+Ii,eO&8tKmRg5H+5bJ*)Vc<9'erGDMek6#E.=udFr/J7oYiXAJ
%h\#p`@YtXX*@6cdfp-j@!2,3NpBH0s>#1_UE=H>7]oET\)+H<\ROp^=S655^J/_Qi<\T-ic0GVq"$aeEUJ@d7/S6,i!N^*tV&sYZ
%ZuZ[1X5K$?BeZo9d_H(TCX?m8Z\FL=b\.8KG?gFOj,=]$pcr(3W+\M&(]_"#XY5?:ZN:;oWq)mKZs-P;q!')YJiFJg&UfAB1Gm\t
%@tq'JL4dPgRL,,<(]oO_JHIU;.ab9/hAjr;MS0=b=f4!)&1KF&&M`#fq?2tX6K1O'2,m)sl@WTnlIuSiC+,!M8oU%4ng%PS14g^*
%ZS7,ilm:qA\e[1Yh[7#$eOpF%n/9+-1tQ]g#0^i36I<Ea.BDT3^iE09qpYh;"AX+eR%PmO0Ct&95]nU)GsMl?":&[u#'s/@-No-&
%+J9O$<Q=pPM'Xo0=&hNsdn-0*h9p==6^-"QJ2]7,"S%A&'XJged-Q+V-EAG#eU'cA^%1/eqWXhiZHitJ:GXqd8E<HY7Vi,NK*X!,
%M^J$bjNpUH&5Fr2?+^S8Frf8gU@!^i6omlp4:Q^ta_`p"2)6Um'lSDQF[fmO-T.-8SY%^6+;.m0SZ%PD*4Ui1>ND%,#/N3R"$d"f
%cKfu\dI1C/D)<ALTQO7RoV2]>:N`.4notX6"?ooZZ6On2HW$I;(ToPH(#L<f-sd3$hlr4Z6Mp8?S2LQX(<@WhR&/&-1EM?uGe8HZ
%ZAkDZ[BPJ[2G'4*iGl4<_lZLuLlYEh"8!_q)ICAs`"NP.L&Wj:"J$'3B/^.%EeZakOQWJEoNhOI]4E$H;-Jeh7f6_-U+"(_6],m)
%5S$X1MMQNp1O[s<'(bI9?V^Yc;8"4lp(3G7!&43['o7f2WsV1hLaO"<-+,X>QNI`54"m>^<Ah#\2e"9;#l8NQ%-2WZQmqn>O'^_V
%Jk:2n5uK7qU;@#BN)s8=/^'Wq!D4S6"1%>hYsC=j*'!(sGmOd2m_Jn)5W#`d/9S:*:mo;W:NPGgp48S`q31b-7u1A&0*9@Y_'$\+
%=UR[f2"Wqs&ML+&YbI)WSMPhr)MfO2(DMUX(t*#kcciH&qJb\DpJeR/l0'#%BZ$KXTWs/R,P9s<;3OjV?-sQQUS<NE2gmlfP@H9I
%5s9([Qjlo27R(;m2e%-%L,+_p$;F/_*dN#4oWGYo,Chrp4Y1KJ7XMOI`(0Nc2C1"38-[@cUfB/'ll@Pf2-A-H:Y8I@"UT<VFc4mn
%Sk*p>+GV/DaEfY#ADRlA9I&-d;k1sL#+PjYD^t.FA3`_*,>,8S6/@rI]:kat,LE#:0D%CqSAis_AktgF;lKZk88l;IN>$_9S2A)_
%^1\sZesN/0L1N7Y@88r+'C!itZKUr?e^t&B1_G8G!\M\9E,fA'39UWp8%h$DZ"FojCrGcDH%<snf#F-2M?I#>h)+[hk'GtSYn&&+
%d9aLfS;/%_Lf=bL,6SE"q$'>2o>02KU&hG057E)#,KNH.0Ltb>qj,.^Z+4!Fp8Wsh/rA`pF-``e8k-Ep#K;/..HH_^Q1?%eXn1Hc
%+MdF^.ku-3oC0Cne1htJ\(eGTDYue'K$/>0X,@nb6u@Ht%V-qh?tsu_!3\-e<iu^t:TlmD*@k/1"%-*B<,4&L'Aa[6@]Poj0o_)Y
%?l<]3LZW@tXI19k-_Mms'J%8i:XDpf2"%HmJe]%DffahD#05dpo5gT(1_U^/JRpd40r+s[<=s`#&ik2/:4!cXK1E<[,*A)A>*2u[
%J#;Tc4n"cSRu1MeknNmc6pIXK6OBUkCSD4e(koMB:n0G8pZaa.5sIERHD[o$_lhp;6T't"*ErCE3(GL3+q7Z/k=Quu"#DFRSm4Oo
%5:n:\PKOs5C*BJ,a*r7`Tb):Pl@pR"/P>_r?AZ"n4/=n'I283SAQ)ME.l`6Bk.rK?glPHd?!@V>J>G`RK^a`^W(]h?FEXj5c(iW4
%BVOJjb.OYeZ2<#_B=EJ"<Y/Dlq_4a>f$5&qHlAo/ZW(#514=*7%#:k,VCMrn7<dEEKGG8\@f1LEUFMXkNrP+gfl>ZN6>[<@5WXHN
%,Y"\W=onjF6O&ZSRtMBW@\,cg=h3\+pdu=Y'FTZ:/h%!?<c@M3%/^<]M*Q6#9'#rJ8aDu+N5:e)U\`I(*Eoe1.'ut*>?DIeYD)7l
%^mU\5)m.!(>:NW.9gI5Rg6K-MFbgfeZ7@ZhjQ;7"m@g(sZQ:TR,K^)=,?m%)?@0h!;Fa1'\:QS!9tP@Pa>ZD/7TPlW(<c]gE<GVq
%-o)BSK4E+lF+b7\;B'2D9[u([Mo$CTId.S(dmg<X(qp#eJI8&*_D81ob)"B5ObCda00E(k6c7_B]K'-f@NG2s&QTVE%/#4_@.!I%
%_JY7Dl2r(lE1\tiSD%=<P!@A?1"RA_io"A]?;I$o2d8.CEdH\_k1q)5`bcVu`;FAjgC`u9eLCje,[q[]?%\#\&30J>3Jk13+'M&C
%)N*('Z\s9/JDOZUHe.Ll9>,<nMN"QY"_XL/>dT-d$-gDS,!K^Gk(X&4,G7A%P7@Kngr??L'X=EFGTW`5+H!i:f`24hcON3%.T=U!
%_,05^*"f@YL2:lK3(-.VeiJ2M"sdlfr&V!HkU]%J*X;"ZULkr_2`Cn+nU;ibSg][cY:PA4;AnB@EZ]F-fTJ;2XT0hUB#(_[$Vt&]
%_EQhmd+!$5+>N('HECYQl4=U9_m_^O!QK\kOn9L;%7<J>&]%@A9F\P"!8*r'Sb9^C@Wr\<:m$7F47M=_-lV'8`?;t!ot[4g[0?=9
%A/;Lt[l:&i4"qZp&=PI$Sqf.Q^RUh;D^3DG6\c4mB#LcKd4c++OmnWV4"a(&$<1X+#h+qG3E+Ej\RanW=FMfU8(p[*!ifopUXC(E
%6-2W-Ku^<$JP$Us076.60P.OAlee@&fW#0_1JRYgW4bWFE-/HM2Qssu&-,!7hLUFpr'm(>YYpX8<]%l/RQ?<cpC?p"6XJs[2['8_
%-mF:&'gi\^1:!9H[>V@):jAC+=g-=eZ[f2fR[kFTeS8Yp<4-^116*GA8JiFF+A'O/PSJNZYbEZZ4<="a8Vn!=OJI3G%khUU6$4`j
%dDH.kL>^1P1h6.k>K=%u=hRS:QaQ5])C@7GGm11-Q0&Cl<)jU&FpbjL<0`BG]^,hN`+.Y<-!.YnL]Q?a^on"Ns40ADRQVe9/^`bF
%/?L6WY0f%6pn>MC;@D^n\8m7%TmKp,(`4hp`ur!>^bM%+J-9fdddT-\B7T!)QF]O0/L$Rl@TcMpg2WAM!3(KLQkgqW(*CsFH$@cU
%&sfL+#nTG.120^9otmX7ni"lNRL&/NGUjH2#G@<l53uk=25Gm*"hHT7X+HN=)]I*ugd-JeA#es5`S8%8:o$,D/tlS;ahY>16j_#^
%]]Ocde,-[Q8]#3^B,PA@k9(P*[BiD\=V2G-Ts.l87L&:QM.>12F@u+Xfk2"hh9PS',(ciOD,DnY85"L[Ob&<??BW,IY%GP$)]:]"
%;Lhnl]2'!D#<C=32!V[;57]:rDi)I(ZT<XDZ!bG:LiMmj"GJaU[rOKH!j/P;7=Rj-n-X'K8^X3IUE9I]fo=YefnqCqJ,lG*J`G_f
%eArr@U8h5*@fd4W4phP;k^$3&h7B?T)`4W\n/0O)OC,n%#Q);RV5Mr[.>?2fhRd_/BF[DRWE<(C:qH<^@Qk7aLIC3Ofq8Nf$c-<=
%#k8uF6d^<Q1F'p+q$iu"/s!@WMQ5VR+N=D?"5S9f>L_VK3:!5:%D)q77T^[sJK?kjR@7a'ju<a9+]HX$Zrd?`i*>So.I%?M4#Q_<
%)7BQX,T3N_eN:F)!C.G\WhAQ-o=8>41+@N@!0fmZ-4+P/j6SBS3[$+kPY8jlaA^O!9IP%lgcpBA]T"HW/)5X[7;b@4%UaUf%!hqL
%ZN!<C\S9*>)jlMALuZ;?VHu7(g`BuV0cT+U#DgXXH9k=N6]?Q1hVAT"5=0o(/A]NXf\=2%H0`gK%>W3LbmLE^m":pqS,'>Q*tbM=
%,HLKeU+SksLnRSro14g,dm;7D]i`(!)H*qE9d\/92Rt6PfG*h::5ffq9S`gU$La*DWsDh=!>q:L.EmnJ:a0Tc$/]^Uk6QH7/0k_T
%8"jWu)08UG1UL4!l=#9UM)CgFe<If;!+De]?]jT+bL14N?tU7u5`6;3I=iU\9F]o5?Ad7,?FWV*'5Id=Xt<`5caR:pebW@`9gdD8
%#>lEI0KBY>#CI"!cb;f[((U,<38hMJ&Ni"*a;@C6!X!"ubVVAus5!=En59W1coJl*N$%ZYFq"kSZIs$u%K-?$4SjkR@+q.P/RNhU
%3%bBu%8jY>@5+EafRh=M<@jK7CX3bokp$b1XERRRU+F3j<aIkQTt!ORC?iq+BFsG;qN8pBJ?)`(!u*V>UUdD'J1!Be[Me-&)B.RJ
%1QuW^9s&-5V4nbG_b53B.9%d&1ncspm6=[P?-M=[>K+S04,UNM\tTrbF$]E4[d\GbVXnD$7P4GS<j;6$."kW?a,H?NAAXoW)qYG3
%MVkr<\;qXE%7d]f1=*)RA-\5^5nP5m_VVMA#cOG7NZXX/(7-1B>tq+Nl,oAWY=h7`QkBMD(mq+g`Ye0'kV>g9OBQ5&=:K(;3')]m
%5LTm.\_]SVf5Z3enqGpq3<RkmjT,Z:k"PjL\KM_A)-.$@SDi\/^*t=sk6:P".3a*JfcsO3Tfa7,jrgJPaQ8.saA>>W:nVK[Cs(As
%L2Q'`K#-tt[kD?Dm&NGjF"HU+[#!Le.2nPc6/MfXblZ&o4!_E^$$(qPL)[7`MNmY2JlC;_r;c9..fg5_,oE6s=XHq[5LbM7DV@gt
%b<6;+7\+TVH[iH!Xeb/1Z0WKoLd<3f:3)qq836pYOD;kBJ6l7p18tTqf@G^;1KF>PZhH(6P9`_Gjf@GMGes#]C22[a'<;.K6-Lll
%3T(%0+Mg`0d-Q5]nT-lKO1_0d)lsI09`bJtrYf\BAnlW((&9JiDl2_"k2bl#kc(";f:/'4#+eqMAUcl,Z<h9&QbKI^h_pA(<kt1K
%oW1_7Dg6\R^C")1:;6Y4(4@YF(M>p@=&LH*j0Md$Me[GOAn,Ji@iAJVH%qeZbiEq<9<V/40Sf<a66E')>!]B_N-oNBh^*3Y?Em[&
%,"E5U?A39_mr.?X4m=`WV`u&I<;pZ:!3&M0T<7YAE.V&P#&+eH:),'U<E*PX-0/-^<SJm?*FpUMPJrPre5"eJSkA\nA#OcFj3P<Z
%l&"YP]]t@t_;\ID`+Zb.`g6%>7!94>X6=a_cnK"`+*J6g?EmLSJF9F_M_^k:,m:SQ'V[M'N!FmQGHPa,X2jLrJco5_o<,CRaANKb
%MmOWbkoPp.OW?]$.Y5r#e-//n@jU5hdM00J;ULc?3X[`;:5nZWfbTT=GLQXRe$1/>IsNSWmnTEX%X;<IeYQiGb%s-]D9FF/#e(6#
%Sk3n((nS.@n/Y9%'7ei"4"-7B9B6s[Q"?N(9m_-_FGkEuU,.&hSJ04_87:hVC,J(:bB6R>+cd`V(!Ob-nmrAQ:SBnY6!$)BW?*P8
%FD[k(g7U:hAX!L7)HT$>=6+!R^;j!t!t7h6QR6#s4D/\e0Ch\_V]'6fL6%TRl`W&EIjJlR4GpiPjkp'0s2X$qqg\I_s83u=l,Wi$
%+91<gs3'<u\,Z4&q9T*"+90g)qhMrdO8o$r^\beFm\dhsl2UXmJ,$YUnF-AT5Q7Q65Q:V2qknpge8k$+ebp;3a$5%Kqg\IGs&dnQ
%$dp3eBD@73?haQks)-3ecA+gArhAN3r:]FTb:B6os5aX.0/)OJ[_I4/r8eY@Ja@<Ypc!]9j8SFqrVE/crZD-o?Vb#a6I'7*9aT[u
%?W+<n+?02$;>P;r[n_88HH38tqADkY-YjJ?)0h/!r^_+8]2=N6:Y'S%*-1s.l,a,t@K++C:sAJ9C:^A-:EEJ?B@au)jYUii)W`]j
%Ml(=-p5%H-Ve)$lXD)K\kOejIEEk:X"MK5&k(NbBk^dtH^gjFXr2tX#J$OZ`?>sTC9e"l<dnqC5#fJhtC[ag82<IeWrubBLCa#:$
%,)%3k.SF_Ln1(g`'?TV(L1)8LM8JC*3Z5oO'P#(s?P-s.[?+>&oiJD(s*Gsi:HO]Rj`\u-bO(m$FI9)d1ip:U"A#khV/41eYKRRN
%BVPr;-a6e,!+7=&\D*8LmYYO/r@d7JVe!Y^g#n/nYBBRl)VW!>[F@a(+.?)3.HFDX4,S/YPiGfq_r/3)ngdC,,#:gF"'3^4U,>4r
%=XYI$rom+1>+!7%+QaQVb'1p5Gs!F?QGkC9UlO#i:9^8chC?X;#T3bJ>Uj=3&Y8-YV2:SaHBeB?)l3O.&'@9la]">AE2bVfBVe.,
%EU$/0!tA,$nY'*!Ej(OPZI5Sm>\dSmBCVN\pBb[k\X4e9b\Cl:,X`MZO<gnt^QumT0ks8=N.bM5O-j\t0sh;FKM@*MUPQun6hC#7
%0m]4Dpaeg:d,UB"q9kua[^L4QkbG%?\3\)7BsRg;VOFB%<!e?/nfDL.V-FBo=-mIcFX%8XbMi>&FTeO\Y9RhY94'IWka.:e#&-YQ
%Z&[[B.9+S?$T:^2+^#]G<jJO*N+g=+Q9cQ^=rQ]4?2,mRdLg%W91o`qh!#F:<Z5a2-[3.C@F%;JO@F_C9-T&SZ7.0Nk9D;A'All?
%cD2+*;`e]rgX21$_LOT`0N?/TgKW!tSZ\kA_n,p.7"\&c?<K44f-6mbjj?=90>aF)!\Zmr^1e@<'eL3-:*c'^0u,IMQ>>lCSA(Tm
%nVZUTN-bku.=U/GeM2"F5$Ue;D:JV.g#+^/!h8cG,A1YU%8U!*p]VY!"b!!RMIab6>KR_T0=ZP4>4!L`;Na!G)9B-DQN7`7`I;b*
%!FK$scCn*<Um@43Goc_EAeUFS=3<l6^=S7P4R:(I$L(1h+Z'S7&+mXA303RtV*+/#8kGk^FE@/H!Z=J+2M`MJKTM9-DUZ)DgGhC)
%q=hC+Wam+*o!2McR>$@$d;`4SVP9rnQfi$1COAPL:qPr?e'+gX!U]aS5c'>VS1=b>NfZ=D6ZKEW8!;*7E:,Z"<LCO64^8]@a^qS(
%=qTDH9N-HISlNF'_`>:tD!0Xm35T0#/&-:%dK(Lc581<R(H&fNrc;\KS@'<]guR)EfdQmu*KE>LJ&$kSO$EE(!JXD7W<XIF]1(&'
%,mKomX^rj_!b;V+3<\i#?2^pY_TA%t4!^rm\_>#W1%.F.<5XOpaaH@_JMMT8grj?UY"0@$1d*pM*3*(KF`Sb;6CepT83mA<T8?gC
%0R@Em5qic3<G0;)B#:OdMIgG,Q$qj&AF6B\cP[cKMn)fHmguArWulH@,3&9B&b.7d-NI'<^7Whs>dnRdV2kn#,3jIr"cOf`!o]gU
%>=n@UW&]hQ-H`BUpr4H1-*0J@<YYP*W`$WP:DlJS=TG*#"\6aKbiLU[]&_r#E;1'%Pb]V`?1UTT.=JOhJ>[/-eqA5gaun(!q!eCk
%@S7s-EMmJgQKj(^Eedl`<LfLSj?4^Y2hWom(j^^1,K:Qe-JT8Lp[Fl"KLac*M$+MH7Kop>\FUXl)J9q`pkXL66YF'Cf!i=DH\tLH
%99t!j&H^aKX!F:aC4f?X!CL^^i%j#8jO4<%<8a#t)S%=F+E4)I:5T"pl_?2WOnskg"&[:u;XMiCi==W?$N5+F3_1A;o8HnMP!EcK
%QT\=R]ZgB_@6.up']:,Y!GABU_XpdG(;dK-<7%&LLdQH%]uW6)DYkt##0VicB1ao1)0U)"^a$/Z?UF8`/;u-Ce9sM+m"&PAV&5qs
%,LS^7/9D%j5br/A8fEioG6GBS`\^cp&C\[Td0u--DGf#>C5;MFaCQgh:E0Uq"(4U3,l2;-O4knNe/j$,Ph[IhFG2NI`nFG_b"?<&
%(a.-3"kM4LV_ldPju#As;2A;]A="^nh9i@pG9Zjii\.Wr9p;oN#><$]RURD^rGB]DV%TU)/\sr;.D(Ut_JH*l5U)o2+Eu?S,gVN<
%FRIT!,tUnKE*'-C_VeJi75;/TqQgK1(POb>+7)\d`CuPM($OF1>,*ug6qGQ7":&<W:)6f5F@<`nd,UCj"b:qqPQSIL*!!9N,FZ_L
%\>p<`+0:>gUruJN(Cfc3&IP/%(fBso96R+$1IQ(D=3/nM<aiO8/Z#<RB9_*pAPP#@k_P@h9SYVRG>"KXf>X]q<&Df:=gSbXm7/9q
%8itkOHG89jYK_AX`@>Vo0^sXqD)&Wqn_Hj?!W#_/8kcAa3i9\b)&0"jP\^Q!M:.`:&XI@:p-[qP=>:qB8IDM-;o@5i11U84r<&2I
%4B3I(9X0>oi(;i9:S$U)h?JeV['M/+h5i[qSUZ1sjgaU`F/@K1@+9k)qnffU]TS9+omt;bT5[4&49Z6Uk>[Ct0O_LbXaq(TO_:4o
%=[hS97C6dj"pF@s$;aZYc6?/'+;BNcWQmge.C]@q)thU$VMo+\:KaY]\t+&@1c-rGMiYmq$(\c.@WA'.-.)-MA/eGP%).tl/p%4R
%3X3Z*ehCc@geeenV6g^&g=:E0/1CKKmS7&Q_d,,L>`h8eS4EKln?"^Ore1K+_*RZ#gK=jr94/&;-[5A-AAMN)1#M!=Z%OSY^/ilQ
%0M6jl,<W+,c$L-*%h+_GXH8JoCL(C28EGZ$."dB(6?7Z5)bEJO=>HT[)!&L#6okW'<iGmUjkZWn&r9M?URd0NfF&i/8MsHDJf"V&
%iNt"5]ROWpKQC]6".)#BOg3OlO;-gKMgXkt$*JRe"U85-'Ci;oSu[pj6NdsE2:uW<"IY5'.,Z!BGmG_93u+3OBHRioL8\+45@5$F
%.a&,)SqYoA;S@sM_QV>*qlkSI*H3iPK.S1_1k;/SbkGShDcu+K4l=<SP:NT4e@jg)`-l=:RKg`SIM9QsPq(VI#2;=fObS1^3BoZ_
%pMhc03(G(td1Z&g9nZ]F2M\rbira*>+uGA]jh+"p(^2/"Fc9$3J&gg/]%07=T)j4'b!fZIh,1C(q*os&NUu,!&VOF[YcDRVW9'V5
%=gX'..X131-BnQLRH#aA8;j&H?]UddbQV2^p^re3KE9$==8a!,FU3L/!$'DA>4K7%%?lbSkolkU0_>(_#JL-YM"gRhLRpL=MD79O
%Vp^to5VHLnNJBds#8/C+r=#Cs3h=9%Ja%9dooahW+<6%3g:C=i6N-\XNKKM3o*8pn]Selj-7`D1/gSk-="*0/fUOPfH7&JJmT,=Q
%6*Di&I$I$Rn@"R>V.CA:`QrnTH9Vp;!WR.EP5$(L$Ae2"#E*"ipEde!aknb^JLe[bGBa_"ZO0C0AB3F\k4=BKk=i-JmZ?A>NN-?i
%MZJch]/Fa7Zglu,?Z9H4c+d:7;D1bW[^iI$iTd7S[UhW;eOjO6pqW4i:f\>feT(ejq":VXZBlAfJP?Td`R4s+#aN:MMI;-KSgQk*
%#p]LRT<^qqdaeMXW>4$FG*Ad0?"F0RR+U98.%e+"OM%7/b$EDG;K=q.hcm,uD)#CY.g%ls$Dg9D=8HsWWecXE!g\-3D7oSZO00%q
%jFJJl3N2]>rn@K@emsBI7nctP=Kpq^A<Ehm*ViNh`]Kh6oMN<ZX+/!\ZUZ)Le5Re7HBt^n\CGANoiK-B\C+lD7;CFJ66&)]&$+d>
%W&pJ7"[FV':N=+ciB42UUd*Kf'iQAJ`DHd)`qAEgTk]Wr^k$]t;:Q^3_I.Ba?eU4H]D['<$He3<\:A7[95$fp#W3'um9%M<MA>"e
%DfgO&YIhkl>kLA5B]I>9UMYRWBk.&>)$59W-*#5ZVma7::Yp\%p&iT?g+eIdJu2KZ)`se-,h)5]_5hUXYUY]1@:[NH=N7t>^VS4k
%_i&iHJ39%s`a.[L++'ijh@il5IPo[C]jTm.]]lstn(2=Xb@Rku*jEH1Edt^_Plm\,mb)Q<;+3VDdR0*UHA.^T;NDr9h's?\`eB-r
%!%+6HO7_>?@^s>FZEBO!8"dKfjC!Uu%)W6&+q:6<?9M.t8dgq_WVh%q@(;,'<sJUo6UWc8@,;FA`L$&3,1PSP-"=`-?^We"d@$V)
%]Q9>rSI),`^:'OZ$.2`'-DHfG7LlIS?d)"QpZ>Yieao`KAP-bU7Y_#GZ:g'^"O^.9-p8-9"I:-Drfm%'R<_d<0"V2Z&7[?@.1s>G
%ZhP8d(cBK2ZG#IQK(=m67NcO`C$'(U%M.2t$Y:AkIWH!`Sk]jf*_U.'ih?oSKrK'-lmhV<o\6T9At4h@(*[9aTt@j,I8$AH6Tk7_
%<^t:F2ct[P*Q7"^<7k/[-.Z(Qg!:^F`5'u'7L)O&=?tZ/\i#gqV6kA/P\9:C<[bp2])6ASZf^--0$H?;/G$XiR<u?&Q1qX*$?kgZ
%s(@Haj^G)\E5t&Hp2tT"r^?`*+ACW*]]!m?+@/VjQM6pJ(4gR1hRuOD]$49GZ@qq3"M2ST=-]q%XJVg2X:\GP_!fok;KWC$THE]i
%TOkTIR4G:9Pk!RF`I8k+9gDbP`$>C-rMimqMPP/D"R`L?"Z&5_:10].n`B`scMK5,"+AbH$ECf@a2X'5DTK>3P1p^YcH+\La1&+d
%Y^TRXrX+`BM@YJh/%to&9S>8kfet.mM!ETWg,q@+DjRBi=ahPRE/EntnOR%:bPOfY.tpU<WZFdqcC4\E_3lNs#.)@j<L6"\QS&F+
%_Ngr4r1#YD3m=4=Gn>iZbjbp-rqlG+qH>XIbZVnIIr_lgjQ9-!a:t3a&S?VEICPl(L!A6_ormo179$Ne,_*/#M?L6E*AFtk4#@d.
%,jkgeN6oaKH,d)VX)N#@0UXZUqOXfF1'j=sGHL-s\&BJC`!_e\JUu;Z<lI3lE!D1I*-"6e19Zl*N5;'<&NC"AIA-Y>M]!sE17\:D
%1R-\/-c$%`d.:MoR=,euK9DsZ"?`*R*Q<Lrg;o,aei+8"XklZ.@4EtCL^TqKL_Q]@1%DG'akYr$4km9/T5<p@+6A<W+AReg5M+WW
%Y8)/ejIosk<`%Kc/!eg)N7M3nZ;DJO##j)K\/7=>)RGR',p2W6paL6%&\*@C3Zm#X6>LKJg(<@IWZgq@<1oe%)V?GfL^KPIgMY^^
%&p$?XmHf[bRHQn)FQ$(8<m:IkM5.Z4H?h;U]Mb(57=t>8%H]XTK'n-8)j6)UX;$j`9a8oR<iU*I7ti/nDkC#?G_BNC)<[dXb1_nk
%#!>5;X=s%io-P95$?T+Z^1+i8G7=s,MU7J'6@,<nn&eS3!_sV>CBQU!46d5L5*2rH`^Grt/",SE6%gnWd`Db[XV][Rl!&e'="2OP
%]LJ-Gc9(=HC'<bWd8UjFmJ2&rJ(#-M9[]>HlSdi8`X-:LGB"O+mI)9g7$[<QJ<saUBFnKdi^]4#A`&Y9Md(I)`6X*,C&YKPeGR?'
%Wb8HQ_Dc0d4VHItdcD(m@?PI%Mp8$p>To8e#kPZeM7De5C01OTM..0e,`"(TPnhn$KDikj-tsn\32=8[4!"b_jblEUn`ZALm=@_7
%cP;Kh>462Jq2sjo.gDjZ=C&4L\eeW:U\s7\8`j*Os*0]dXW2e80mQcpk2.EP/oHN^Mu#BYo_g1'Fj2+6'g*53_P;=@Z\7o82Ha5\
%)XLHQ+-F8Y[4%#*2YJ3F;tZ5R7'h3&C0pd_7AQ!I,P,op,Fc3Wl`F%t]J]q)@@IF?Wt)_PZKh77oHL1S67&kEEb\TSXCMKr>AA$H
%CoJT#kHp;6RUe7^#cpnm/0.8^c)@9@R.B)$'J+Xf]`rIeSfD"ur>EU`lFH%cUT'Kb-qP63"lQ[$bTOg.ddc$rL[fAK1EQIa[Yn$%
%<$?lUoAomL8a,bgq@kV`G03$>!Dh_:OARRKP=,-obL3/9H_.GdBRLUsmk+qt2s=;ZH1dk[jn4V;hUPHB&nDdpbV2H.@mUYtmOQ'H
%GQUS'6<TVNe"dHn@8at4Y&!i2i&nV]"J8fg3-hRI<K+p<6%9&W?5a+q,\G:W3<[?nap+g!Ct;\[E:ra1L9U]:O3FIt4)&k/#AIqi
%n^K$#d+P0&n7ZgQ<,_!h^fFobSACPue[sqO3-a"Z`kgXaqfN8',,,j+G?-]930f"ujlB0pE"'0RX24Jc4D_;6:UoB:d`F#&aP-("
%.l*Ha<mT*VaOUb-,DuAoii@!s+1jp;H(nlXA1S:[0eGd[N'&MFP<LLQ+k&e._d@`)qPPAT22=ip4R6r=TrK&M$e5<5H)r`QKS7cg
%&42o/D=MtJV15j^1MFAJM,hFE^Q%:t>.<">YGYj9%acp16EiSD,t%2k9=!Th98Ab(^WHuaUWXtF,LP]2O,Y"bV%.ZT0LnE)osip1
%*JV-6`fT,)e5iPQ!Arb`bo(?N1b#q-AWT:Gb2=#.Y$,#FJM_j;_hkWXM<oaj9!*1PPCRc?UMOFKRSo#&[eRQbrI0KVMekj(l>4j7
%4:PFg4U>8V9[rK@3<F@7@,lBqf$\i^HW(g=(;q9m<`e,::ABp>DcB`<U&Onani`#94H,s(;_.PkCGAl,LF^h!hoh-;`F9euW@>l<
%%,?5`M0S:+Boj5Hi5/#Z`WQadBoTjtE]q8TW?"8?2$?"9ouk4Hk.l*cF/=u+@WC!;5%Ra(#g@WB=+jJmX[k4_fgD#Rb#R`4;!#:.
%V`=B4K)Xb6)<f;9.iFbqVYClnM#,6j;*iuLTV"Z)Ttf-ahdqG[_PQAEF0EM;d2"q<QE<D*gH8ou3YEXXS9i/gU&U5[ju^K=D`G]'
%B5%5JF6MKARa\GFF"")I/V(/V6YVQZ0Lbsf<W/LPb%U1B?10''-0SMuh@YO,O"V6Yn2_I#,h=-ZV3iUV1#ffRJpr%65?<ft,2Lcl
%\Z6uu-!Peh`N"CETAUiVNML>dc:45g*5O^c8TA$h4g]X:fDU`Go\"ik,?+>cm%4#Zkr#cW=O`bqmH^aj:"$Ys$l>S&&HV:n0f@'8
%`XHK\e7+_)3:=>'I2\BaVOY9l_c*o#.],%s7$MPA+d<ntGt-uXWRrLGP/%37ggsYW*12C@(1)MG;6HY;_814@<'WX:UD)Auq_T`f
%nMVZ'&LD\E2^>=R?UTI4N@/0,roB\o1:SK6C?O+M9F)Mek(h_?R<*CX]-LBJ8%49d!E+Z,1jYZ6W*R=,!2cu1Q+cXL^l:W!ALJ=2
%4<V`ch^-r5B&ZC9.F-6c/Y7deLgAa@Z$1D'5!WI/@'u[VZ1T>pG?:?Aa-AqS2C(bfmt$[nTtRK;9TPEpP//`lbUsjl^QiQ,p8cKj
%;0@7=C*a;PBh"u/FTFk9;hO-q=XqD1%[KL<o!7c8cTXbPGWP!FMjOg#+#-?5]_>5D46)f*7*5gpJdKtWNY7]j>pC3+&kf@tL@.q5
%)6XNi!Qj/iiG*>%Sr_u3\]TIXg1>tcH&4d)@D%-QfRh6ImuFC:5(amr`Pt`'@Z.+oFYjel:jTW+@,emkE`#b@!mmn6,/oZ,33GYX
%J:*X*#M=:c#O7>*;434Kas]CZMHu=BSeNSM2u4RL\b(8!4re9QMQ:u<c@C#PIdAQi:k)4Xq.nJoY)j^V9#Ba@;Aq#XOoUM(!?oHM
%Ug_mj:C:q0.`XpiS)lO6qTC/26^[alg;]-Za-]qh@As\tC!_o8-<Srh9\ldi,FYb=Lo*Fcr&r(<N0ala8!(_tr@OjI7H0n_mb5e!
%LPU1D.(=T-BCB*Ui^Di8&='?8PimM2P$E]pNd(9cWbB]J(h@"Gm@8GsOsBnL\?n'[YW969NH38J+/:lqD%1Jg0HG\<>K`UU):lam
%L^MqF&l+%Z:)e<_\>*\E`(@Gccf='`B[%sCa7HPC\jIQWo4LHc**;V<+sj"\BBb5uW:')Z4pSGO5_*/I<CUMY*\XZL3mT4F&#uqU
%=QZ:QlHB9nG:F!?`!Nk\jIjQVGH?Q9.b#Ma&XA8n*pDX0Q[=%k3RgCE!uN/7lYI(^hJJQ9VLia%FTA0(1OH.&b53N-b.JpNTon9Y
%Tdd%$WZ,&1Te/ju"oOk]Lk@=#PoT7&S9@$\/7dB5-=Q\Ea:@F$L8C^/P9`-IXn/B*G",p"eKqriZfk2e0R,0oO=InXk7D!2#29L`
%YVPV[RdV(V3`;=LcLn87EVo'R7bQ,o.=(`BkenG4W\Eo7W.]\Gf8Crl[fHc,;'AjWpC\MtE4MQoMD)JU'mGc^SAGis3cmh$lagS8
%RZ<[[9#Q`Dl(=`X9?*AUXWUZi'H@0@>gbs->bB'g";^p<DG)`V3SSV&;AZPcaWm\Mn'ccJ:cmoU6EXXXnHtSVU"9G*Xh^#)H"JS#
%&UDR>@*-8.</[1S;4;#n(s1-.q;/A+.(c6>GV\T/TNMNX+9FeCm+FJaYHqIq%01#d6kCnY]7h!M/d,TBXcq3XY1<E&MX`j%@+1H_
%Z7I<'Q&('APeql+*,6\T7B]Hbl"2C`HTA'6<Q<kSapt85=KYa,]>c0R"rO?r&BH;;8+_G$+eL/%$Gp%39HE'*cU)Wc#<^lOEEC(*
%\NaE]IC/13eu5CP_E\\Y6&s=mS`6kNP8?BNml"HWPB7<7IL0_kATG3JU-t9%$9<6cPYm_GNr2WX+%P;?plZ]n[;$Ialg2H%&m0og
%=4*Ro+1fCO1!e3"ibN/q2F5?+Dasl;%B,T_j8BBA<VL-R:fm\peh><4hh,&,5GT"4^J'LD+GonIP+qGbr@a>.R"/ZGneL>k`@LAk
%p)NCb="L6A+3Q'D1q/E)cQ,55X]i$QL(`-eje0:Vef#;86'i#;q;?L=J6k89ST=a<XUc(W.e5<hhQ(>=T`-R-/l53Z!FVO#Ths9I
%,!4B$#O+LYrJ7mdOs8;<3jWC;Y2mYqr_btq'n"&%a;6Mg5YXg^pZu[7mot0ST>*n,ZeHF*Uknf+([J3j?]Q,UHeq[p1RpJ2S)<<n
%r4]e.r:YQZ)[9dNE9$9sS+cnYLpWdIk/sYaq_:C0jU3m$?jLC:eJXT8^$re00$XE&%/uPdhgPDted]<3dS^H%bUN)dJa\4#CDY3&
%#P].*^L<Rcl(ARF\Xmm>Hf@kh.!#TTkbRY>\L%Qi`SlhW%]H:#c.=3&[\EhNM<+Bo5o,I>`Hd^6%Ii[0"-[dA>ZXf=a;CZB-O=<W
%]fUGBV:^&fF%,u=moZWF>p(qg+p>`qoWEj?;U'uU0<okRp5gl=KDZ?aI5i"lL+k`Bm)BVVT]0H6P,"\X*jGe<b45"d8-l6OktNQ/
%`4(NJ%Pq.Eq%<!(5!f<R[.NbE2T"Oq-d1k%G=_mY1#YTP@IlEW<E9jo:3<[Pg_IBo.mRO$,9/7+&*OZibV9YKnn:NgE3k%3<B(:*
%dZTCKkqp-9OPWopHA>D2#D,hBc$-IhRY^[1]O4/@$BjOMVqm[k=R?^QbX#1NK'SB\@P<WW0\SSrnWBi9*ZADH8p_gPP3#a"?BhR4
%i%2"+S2*F5&0s94.M8<m'Tpcu7.:L:emOajX)j]"4<C37Pq[;c.FR`F&d@T`UF\%\\rp4ll6RAIY$tqI>J0,/J*M-]OoXM1S^#?T
%X."2q!ZAuq=pk9oT<[:K!lSAck$=:mmfX///Au>)Rs>5rJI3)_7Q!72QgKh6*QBFMTOLVU[k#%N<,4sF"-hh78IkH$2WaVif%$=Z
%/HqEckZ]d?B*_G@r57eB]DWdiYZM@@*.iW;i`"BW\a:g]5],LV(-MM#mg#!r:''MXb#bD/YO.Io=UKc`I4%?9^c%91p@V6'A3,5n
%VjP]4AsD7tK`*sYHc?P.c4N1Y2$:]@5biD(1WYW`N.o6q%EfibO]+nbANbsR9plI=&Z<%r_E7%:N.%_P+OR0^SQW\WQO!N!9`pn.
%S/=\C4er+PX6_]oVPln(_i-)+5ct\K/p4bJ`F!1Z^[?bof>G'LpIAV6./)k8H%(j<42d4LAG;inR?r-=eB$BBi8@h\C0]jHc_ac5
%^Xp;=aXlE"G:FC9@oN6RE^F76aJVC'U5:%64U)Z`P53<1G!<[8/h%/gbtX\^V93HKX]%A`$X9##X&nOMX-NH@E$&Jehch#Q.;U*-
%T<P$=H-@2(9]O)B;(n8)QqTSTNQo,IJdgh=[dab.`<UYVjA<g\0QQUF"^e?WD)644@Lk+#G0q&eRpoeQ4#YbWYQX;V^]pt;]HC5=
%OVA#o7eNA>-1rsf,_:u_Pg!pgo[nW6B^u.pnUG(C0Zt0B45q5QOWHL1Z&A2&9YHP.k&3hTK*7F:N/-ae:+&JT,Cm*U(hY;dP6N5c
%I9$FGX&k[.RK`EHOupVGEu`:7!GfdC?Zh3[FZ)*-DWe/u*9OKD)n<cO?!$r5dJ5<'K"h`t?j%IgRKQ55hV9X3ds3;h@/tgGR[)&`
%R>bZ(?/-O$+@)QpbW3qQ'=1&)2T4>cU`aie/ZKkaUCW!AEe],*/SE1M"oJp2DB]>L174Lm/l,r;)9?V66U>@)b(?%i'4-\5P7)a&
%5AoNF^U%pQc(0rI@<];XFu<W&"i_hGFH4CPN??-lhIgkmm:Yj/m%WQH6.p6OmKu3LB3(e_;)X")>o%K2`Dddl3mMhKIHW`6c-N]4
%6!4"4]>Z5r7.EhoEteo,G:%YjDWYQFRo7Q=o?hq*RN!,"+bD=:JXe:7[2pqUL;t[e6If'?CK#2%C[7_>;7#i@'k+S=ftO0)'rP-_
%nI51^Im9Nb,kDodEsI+dkEiEDDW2!%VG;_5d^Q?5%JEkCEi2+Nb+#i9Eame8Z[PT;QHo<5rdt2oZsQh/^6S"b_0j#[)@:ak>C1hC
%g)Lr/?OQ(,neE9+=8^ri'7*G#bWH%@5CMn7$n47VW2Pm-VG(5r8U=CU>JK;KOcs.<RskMNLM6V<j]f"t%(lYO[tiL3THLjV%P8-T
%EAZul-eM^_5O6;&9EK!Onm^^e!aBT[s2mI_#W`bp/I!q[M@hRcA]>]o<XEP^3$,9qV#k7N1@1VX=9Aq2N8gf$SE[dAn]E`m!slm^
%W(R`a!PGeH.VHb?ZpKACr3r1ri&K59-G\03N2k8C@4*F8r9762=YYJ+IltX,mRfbb/[BtmT%XO"=0Qbj);:b/gNI?)6!L@dV7&`Y
%e50b/":^c@FIKJFs-g"<oP90Km3\mrMOZqi8&-e/U$luin41`A:"OVK'@!<Ae=cio/\4B6A`mp3'i9B\G`gO[SJCJbo.c6c<2m?%
%AI:+=]5-]".AXKKLT^:0pC]$5*&3f!OPK[Q@_*kh)+uhiicch__#L[bflJnj'aIt,KQBf_J,kpr!iSdRAPu1=AX_&C_1DkejnCH\
%+iae%??,NKqbE"LoYC?#OFeP5gNQd@Bk<^7gqmiN\_b=LesX/AO:o=EBpJS@+P40HKa<>B&V-c$hG($X1*up'/lZCT<[=+^_LV'?
%1^UqAC.N)NmVa>^(K;"^)J3+'<+>XW(;+uI7h.JSQDN'in9o_F<]q:Q`,PX(QTlAar(bnj6Wbn.TkZ'?Y)3hm=S7>n3N/t.V@;T,
%A@)hk0O/am5.nlL!PL,T5T-0AHc&_R<-rI%=Kp_DKVSEL_68!^``EjsG%lTb=&bGr?W*PO%g%$8UGD^6di@Nb'4=ShjMr8YkUWaW
%-K55.*ZWoocYN)r#^%l7pl_?;EWZ08k;+`/_P&B3n+,oN%s;H<dY8IEj'T.24d&Am-P&1i>WI7WUBCe8rm%V@*X/h=5?n[<7+35]
%(8@F,MT=&/@[AH2o>0_*pDdU7\'fs]+\g&]'7[VoLsE<#N7+d_#QrlQVGh8@C:Oc!3kg&uWlDgI2u7CWq*!'PrpeqKL_ge%esLu]
%!B59fOG"omFlta7ePg64a*j9<&`#L]GB=W^bP[\!OcZ\Z3\@l$S96_M,"f_lTXdqgO8V2LeQde?m(1C3Ib1II5E)ce^_H3+eer%g
%Z"lXjQ+djom.m0*8n\<k2G5HcNAufXK*S_NbEc1+<ZQ<kO_F_N4Kj"2dN6CaV#o&V82P(LQg#<?Mt$abF#H7[XXLVE;S&47_G$eo
%486.`A\,L$c!;_3LA=)):ou5P%a'@eWD?&l&Q!uAopLb(n"jXj6B@5W<EC>D#oQOPp7GZMX7QtgpOXYsO4c11+Fff.+AHF6c<-^q
%`g>4]l&$Jl>8lS<glKek2_KC=(0$\V`(c)OAiK?\B3[l0Be(nVi^QPQE?:`#>-U`NKcPL[I2#H9p]jrg:"nWTh!6Kgf)DJtf]GQS
%QfC<c9$j38*q^G'dT,=`.H)4^OVDog`/WF/O#'E91*j@BO#nE!Z<!`^QEXPFFM=fP^?HPubI:?;1hZf_5JDlar).u,Mn_o@cB%,<
%@!#QiIl])DSE0[=i8S#\]lY[uQ4.6E6kS)Ij213@oCD+LhmQ!t9\71,)^FY',m[Z*PC&W]&Y[_)in50ZT/i+DUiLV%;@]--T@.R<
%7%W'6%NPlV!gK,thIDbjEiJ@B-Vt5oXW>Z2VOfJ57]TA4lUF]a_mhT=IcA`u"a!6n7eY<p`Ia/OC,-Fj!:<X,)M-+mI[8B7^3l[1
%3<AJKr6;No+3\8DHotZIf>g+R;,\%f41t28'0K+4fIIGNeSta?5&>LX(.2.jHm1iANSk)k@X;r@UKgP7_A^0egHCE71GpEPJVMN\
%k=g#YQEZ$e4np+?*O%tl-?pdigU)Vp3buJKd9+V&O3u6X\;U8R,C1NABOjC:>8/YU'l@AlWXDT[N+`@Onm`S*p6['u$p#r/j")94
%=qILOXd3K1YJfLsYAK;Ar`S$gfcsJ<bKXqG615HD3Jqst+M@.-rLWkbj,#(+.%Xn?[:G*5K9i?Feo`;GfRY.-$O?-f):?_9a*>>O
%/@8>c'aG%:6H8Ol]X8_(/Z!3eUmJkr,ba/j=),(S8Q:5-SY:s+J9E9EC;tKc)NoKibT=>,?TB2+R'r<iG(i"IMh8+8=Y$SG\K$6'
%9LunKQc8fG7i/S6:sU1DG6Y6DM$tu%Ot4[32Qlo/Hf:@fR+%E+BDq>S($N7\f_=F71Oli@o1EJ16e21Lo!o5F[.4^ZaB:#pSXK/k
%Y1ULe2:#kbX74*U!S#(a8O,f[JkN[Mm0cEUN_-_83JV6">5#$RZjA=-9@UX3+`EG>"ZeL-bc*he)s,lNLohbqY]-Td5R:IsBRE7<
%_.5:5Bt2kof?IbN;b8k@bF2%S'[iZ4gWlgp\q!o2MQ"Qm&q6kqp:A0f<^#rTn:+sq&\q63.RPSiPE3n01j[6-!LnM:hG0<VWP)h-
%547cIQ;/8@HKsG+b>c@^r\f<lAHA'YBP:7V,s?"ArmGYSi"aUXLrU%q?QS!jml'i;(Z)24=!]*<&qN9`HSCo``AkHRkULu)SOR*s
%NMeln,"g-:9/3,UPYG)8A3D&s4$#1i1C:9M-WXNQfa+K_#+ZAFG`.1.4*VAZ&2F)g)),eYaPejCQLc)XP7iV1/H%?m$KBAQAQK+E
%AY^0@)Y07\auF-I/PYfem6OG+Z(;V0.&`Z'V0fUNau9\&1I<4d+!XO++t"mEXj)S6f^MhedprVS]Xe3jVe(J!q3pW$O#MnRoCZ_J
%FPt]dR'2\Mlf>.do/AK!H^#ZEQn:70I_9.<?M@-#Fq,)em7MKi"uJDkU8h-?`T&W8RHQ&#H-?edP(L_r%2SL06r?M<N9g<Bf>c^3
%Uhse"Mqc:DX9X%":caCd6OsX'WNXgt;FXb2PBJB60@BZjj&,]4o$.U8X\jLH_ePIJG6:d?Lt!'<RiEZo%55@tLt)qFmJ(B)WVgTL
%_aS^E;Q(eOjIge?cD4Qo$UBbEn[il"?_j^9G/r2>:.SmeD8GNZHI&0tP,"0Rbs"+;]>Pu0,q)Ct8f]XBBR2)Q.!@-J7;?UWY.r9n
%A!f`jEp2XRo>qb$]YZE_D5dg9?".Bk"#c4N]2U<=RApbuFn0FlP"'Ri3mjABeZUJFq'1#,PkB1IQBc`BZT<U2&XS6UGt*'Kq)Zk3
%,]=pVqu0=+7sl`I\9Ec>f9K32YjjQ%8u&[>i8G<qqXdZlG^;qVO#[8)Zs(Y2$QgJQeO/62!.f3LrGCAWmoP-5J^g9W9+AhDjP+`a
%@Rj`Ym/B-1FpNc9b&uklnTjQK5Z+:H*IeEEHWL&W@Fl+B*rd@b>P!1MaBm/4.2k![(&Q@LNIhd1>ETDH>?;8J'J'[4+"&>(Z.#hU
%'T&2iOb[KI]#tJC0.Dm?%Bbe,I&foH<6onMb`m\=DRsT.c::5rET/'DA5ouHDDWsYB&9?!6k"UcaL\ME>b`V6AqAlVC&-lUnlI$c
%J$h;irHl?M^L`kiJY5n9$c"?Np@ZOmN4?MTR*)o;N*<'Qd&gOBRe<lpR%b;p?@cao!gc%MC1AWLSr7I(J+;-Xho4OI?iB<h[U]?/
%PU*YK-3$Nk:t0g+BJ!4p'[B$fT0Xcr@'eS>*t#Zd^+1_YI=uO<3!<srG<$Fm@X'@5-(\.,=\I`\(5c;sGkn\"p4$T9->a:kS^s``
%<*@pb:3?fZ-BADrk<DHK/%[7eQKY>Kj/K-3\.TI^O0^T^p/5k[i4?cXg]dJNnLX'eKIA,DYHSe_h*X+Soq+<;/2%t4Y+dY::)HYG
%SobPI;QK3oI#o+Vf@SZO6nX>%V`iF"Ki1'qq]W9rUcV18VCj]</iQ[,qf\9BjY1-`hF!O<`l\nOCTO)$'0/\&Ngii$Cm64U/KOn+
%0q\+r?'?K8rC-7A0$UGokBljI,$q8,aZ".)2XL7)4T(frLm@@m;XT^e>QE#Mm)U.H;8NKdd)uh4OU4B$WLQ=BPG].t1j54'D@EAQ
%le*=f`16AAcV4R`P-?d^Fss,J6P;8.));HIAef+';JK#b9/NqqJj&eb\aDF,M"go.e2!:YS$E/fHpl8iPnVRj]EQ4M/C!g#_kW=6
%7!f'%A=h`f`?eTmNh7TSDs$Q`38TH?4(J.1W6$(>IPfnAR;bqopR)m>o-&sMg-h<2Ir,,Hrgad"Lqi5h4dki4Cl:($#`TAP=&!='
%1c6D4[p[lLHL2a`0t=K377Z1D$U$4m*XGQE;gGT\q[qW-W)Wq_mZm'V3J1k,.-_0-&Qj1],<JM_q5m2`_cN3bdiP>/G#c9@3hk6#
%,$q*J!K5"K!/Ohm*?GMOKZeNH:>IY)b16<dqo4O83NIa^8+m0].^1T;?Sd:8n)\+F&:`:7N2=TK$)0X*CM.V]/8&U+XWC\J@,5E`
%Pc>a1'eqsY+Fp4oiGR+`A[hi_2d^j\.;1m/"#pBJpgf!4=/jXpHU+&mPI/Sdn38;;>>FE8ZQO+8^KjgQb_jF<BUbS!4r57b*'Dtc
%!^-l$YIQTd!A,KJ*+aJXq6em]?f\f@P^*D,J*Kn6Z=Leq;d89HC1o"AB$<Kf+Nj3HK^]jfEEAn'W"nff9VJW;2<.0p)*-O+;Z$0q
%[1$@TY+k_PR(S3`l^0%+,n)DdK"K%aD,6@bC4PDMM>isD>iMThWH"e>&`'t^W0EJl+ZL)%1:e8YYDNPH=b+SsR0.NKr'N=C9Zg'^
%`J<@]H\[T5heL3LC\V&e>X/-qrhG2?Mh\7]r+;)d*_YcSF8\rO7[I)HnkLeQmkMI,HEs#4`kqI*aa6H_r=<+,n)*/8!f!JSN$pF.
%&c!K*/teTZ<P!dWh<88K?TlB5HI?;_]qbEMmdC&Qj80k!V<lA$82-]_HVbf?(R<!3d4\g,P";jQEieu&0Z<cSd5FkXE);$]JLMml
%0F1!+Y,]V%b=QFR."uF-QX$"d%)2pJWKHD1VEg>1N@Bb\IGA7K5/Ld>9"k!9fHOojSk$s\%;:QkJXUia<SFKQeP#lNR":.SI-?S=
%E24NNrOBVNW/5q^)Ag1Y("=d?*mnj?Xaoa?6;b<;+DEriKGon:UT0-*!\_]hdI<aqb"J]OoSO7KW8CKQR^TQXE$]\@'HG;7-2Dp)
%%)Z7JD!6F"!qA\T/@r/7W&2'pg1G+>3iY!k94-GUb7A_(BE<?KTgNr21\DP`TUG^O0.C_a0GZ5CVH?09$@aQ2UDsLgXCYtnB>ie9
%6iO.7A>tddA.d4E\]$V&Y'E,:5b9V[WfosUU!DsoU.g\PJ4HL-5QN6::K4H**,;pR/]&9&5`VVgHQKt%+`T_E.mWt:SKR<$LUf*R
%"q'_\^tZ,*G7O=3q3;G_^fPt+7#Jq1IRt@(#cQ1D3><dOQ);N.j?;[pa7!6[nS-IaQgjp($`,Kj2VGj6rdV=t8AHq:rVtc[9L;u2
%8_^Z1pg=(NF0__qbLRc&<[Te5W(C!1<6t0>YEJq6qu!lprZ:M@(]p?>6rlics(%>R%TXLXYW5?dOU3iBHP`*T/3iV@+f(tAN4#=4
%&IfQk3amJirUB8$a)oa6&s97?bZ0NcqE^"f]qU#o+<(_,Jg=ON%U#<JULG.O.^/3Ko%3<A38/[RXubA/pQ"!]EN['=J*o<\4uXX=
%U7JRd]=l(-aAh?J5?m>p4?5E"Y$a9A8S*7<MK`a%1;0gH&t$muR!FoPk6quZ^POJS,UtqAn9rP-A=loM^\g/pFPtT^HACCQ9("9i
%gsXmk&5:cWp=G+qU?])_M5n*,*pk)en38NFpcY2cVi`9VeiMY`'hR5%h;0*AOkl]pMaK:J3_hT6BIO5u]lfcG;$dFmO/t,u7T[Q^
%r&r%5;4;m,^rsSAXo?"".O%$Nj<-*WLuT0<.a1-kRS?#Dag#'9)MZ''<gGm;^nfbX&KL`6-/Y0:Q&ju=2;3NLpK^j&?s'80@KGe`
%l&\7CDm<[C@4@*,*,m<YWSPp"#j(]c'6IH!i.Q64-SWmBM>Z"0$)hp%FLFh(qb^>ULX`=j"\jE8@3#"=.e6iW>EfaG^jXF0FKMDH
%2GT(N/&,k?QTt"dj)<'O^D\6P@hN&ngUG=3r25F[Klup)(eS)A`Ufc=kmn$A.fJ5m4,rYQ\0WUiSC`7joP0]t0@L)SCJo&:QJE.!
%-B6"ka8PNsk!87ATM!job$@mjaIEanW%*sX;0W%*OHVK?TeaB7D>_NHF-dU7[A&2>.i,Nu8Cd(AeB#G36#jT&G<Co`\IoP0E^qqe
%R)4nud\CFYq0&+s/:U#ge;s(lmp5W"2Dsq3nQ<O_r;DoX(22^bb=r5Z!)WWU_+@bdjXeI0`;Fi&q&Bb(^)jm%_#gV<>Y7pa.:f:M
%`(MR+!kC;4Ja9UN&%?JL34"V$`RTEDaOa[:er*ia+F<8Fmob/?C`n+dq8.'5g#G$Cj86gb!gUlS`qAXp\Fc>g_sIaB45Y7fR!gkb
%RF,XE.;dd"/CI!4P,8QmlK=H9F^35N.[L<0/(gPLboQBnO)8Zu"t^;6WMsppjlk(*OoB9Y=D2ZI,\_AE\n\8QE)u)XDan&ZUe'YH
%OPhE2Zd5ob@DYAM?WE;tm7c9aZHafZiYiEsb*-a.'6WH-&UPEOl;VBIH?A@PBQ6B^]G1#`%2/r`qIV'h8Yj9?'N2:L_!L#OR3JU=
%m.AV6k@>O+Lp4.`)q+dmK<B,oIS4WA0B^fb4cg"W+RENp2"Ulg))R_X-q4h*7*N7-+J3?%HR)W&\PampnPh$a4.eO5+S>9qo0"F'
%mOBGQg2TkB4QQ.c`i`s5$K]A!2/frm8q>CdpRQ'A.E'o80q3X?"+m&P2Inss'p2<VcK)WP\?:3GcMA>1&gp6)RaK)^$dq(MDH/9!
%NTd'6<Zrks[$[@'8=lb5")-hq=G'fi)KDk>%!#4'@F1/Vp1'QFR3m'?:VjpI\Q65+A(<eJSX>ZCoh-KW0f3:;Lgl[X<Kdt3PT(/n
%CN_fa\h:9A=7oPl/sd_D6gKPP-WmhECj0-HO/j0CQ2cb$n6Jd4G@9,"d9/QJX9>sB\7CI8^saeLLX./og6(c`,VoDf=9T>[rJd?f
%pJ3MHiRM+V>*5`bV+NVq'BkH1X_$FdG:81GWuP2=n`]<.s4!&P(9D!-o'an-`8NN[cHT^l]h?Gt5Q/PA>i/P_6qaMG3G_EF26)X_
%N#<E!Yr!G_"en5,11ap=9PtFL+TI.a%LX7fj-c)\'cRW'k[=,YFKd-]SKhh9B:WV$oHjIVH'2O.b-Af]*sKpID`3P_M54lHU2rh-
%iG,[*m_"'us7#=jni_`qc[V.g.S_\1)ON3?(1+$MQpre='adX$ms]`S2&7UNP0p4ie+3_rGGX!#?:k<0HedeVb,P=FL^""@\;Smc
%,c94oVX1OuU!)gY$`1\5"7kU>Kh--5&V0>F$6cK0T./lV(.R;T.7)QSWa*q@^?WbGq$"-rB>-o5.Lf99%?,U]ohcV=/\&On^tNXm
%eZa3SSGE&rSr9[%LmFS(bq/G^-qO@h"86#PYBA<+lM$]]Rf,%:(Va.pFq.rN2VOZsVlK8rgJ4Z(YN./iLOSapamsoZeP#"/rlYLD
%ZG1kUhd_!1r*eYXI;!\'qT`VD#/I(Q`3GBqmcc*2m+&lF%-a`fUCXo<9TYc0BYbHfp'%/f>`Y&c8B<MeoHh3S_60%<)9EFA7RDB6
%GDGd",iqG37r+hari"i5B*8s0*X,2&E@NM9$6idPfUfHg>.MZbofWBkRMtPh\&r=0Ks'u"TZuQe(&5V+BiB-\#1;6%U(d/2ZCT'?
%H.C,=B5)=]D0V?$bqpEjd&V_rB%Eh]<uK6,/)Xd,SX:;Cc>f]$Xts5uO-IS=8.]WTk>aKuFJ1\b-1m'*22\NlK6a1I&CRAjq+I?'
%GZ$@dcEogd5FZiQGn4%Y3@BSN?/luB6g4s2G(4;N@-XB#o]s?dIAS03*oW'4V+XP#OgI#pE#mK^UP;,OrFo;0[FKar;<)RW%@7+/
%R3s6dR>,6tffF&MGt[BIiM$2:]Hk%$iM^-c(1aWDViZOnOTlGQim$M3gK2M=hIS0?='8#$mEXK`VKD#P@C@@%!ZM?bL2DGF1,LhH
%,\5@n$B6t=2)Z_@,WqWPJ`='H5pPkESegddhkWR,5sD*[OpT1#1tnna@hjJag7N-<KkJ.B9)0s#8pY/u/s>g#:FgZTcbhuD!Bi^f
%7N@(]K)5>VSpEIK+.;LtIt)flhdr>Do"5taI7ILtel>a:#^,"gaU=c38\.qUAE5WAq,[a>s5jD(lk)4W2KK0$.;_C?>JNQrNQ$$$
%r0"4<80m.X9-^eXOBq.rksoflkh\o>VjiT-UI]Tp.ErSVM)N6F<$dRM!3?Lp#UqTMYE>a*g.7^Y^,S^YI&<2,(A[BIQ#WGn^mQ?_
%>>pu/.Xjki5#=04</$UATe?2=rhU<X2`n\M(<K/HW\I::R<-c!5qdF@lfj;J#>_CMr,'9eqjS\D4?Z5LUNfRe5T-2WflTXp>04Md
%B75'[>F*`O6Zl,t+_MWX1GZCGT51H`n`Se9dFQ%(^[F!ah_+`X)#5cu1Oetb1QQQ?o1@cl/)l1la*AoDoN(7X^;es/BU%sJSU+Eq
%:lO!Xq57%4O8,7eJI>%9]g=)mD]V:grQZPg"N`S2d/E_^U\VR>?B'@cp_(BVBaKT+BsCkYL?l&&XkGD:UBa=c`&;9o]oJCFU%QI+
%iG#Va>b%-(b4W<AQrf:1\p!2HA^[pnGL9t>,R_gh8c;j1c#BNSP3t(Z"#HbDV"-&d0spKSn1uleXH03ZNA1Q#&mj42QRn,1NG-(+
%[u4ksq?Xt);2k^V^9UlXl@no#QhXiE&0E$\mci`'Sn8FL<;:<U"#AJY((IQc^*U^RIG=)"O*N3Sl>!M`+DiOr3<>MSV?*Lsi]Xbr
%JqP/o`[XPY_?BQO,"::oD,>a!n)bWr!$c%5+g\?:nW-,AJkh+[_3"p;&/pf!i2WB3R;II9Bm[#sO+;f.+FXg^#h9$E7;*j;PsYX$
%nX1$BQ[3fT$V%TVgNWqJ?q&p&nk?rY3Pg0)"La:F/3)pp;'pjldL!\Re*f$nofLqhg\&kmjAjbESXhq40'G7ME0\Rt,-Q1ZpJ3:'
%P')PG-S5.mVf@HI-]FCXYZKb2!ATZ;IiZMF4%eIFPT"b]_JH7AE+3;5!rVLB:%"_`(;LD88B?U@c_0AePWt0ib.cH"rQJEm"%[n.
%I!][E0Xk$eL2SFpU#?%0YH-)<2R]Lqdl1LH-/,)*!R0U$BrN?lg"+OJ[:T"p,JX@D&Zn&sVN0I4Pp.LAo*Mr1WT6r/D.Z3n6(3]]
%!tlu+'8>#AqsJiH@1"(g"&P>k*4+MGF]CdH"4Ghd<j4=9mN.L/_GKk`DuR@B'CTbeS]t=1/Y>th$E]<6o\utHTt?'JHL8(a$M_os
%jSb&)I>;D6;`/l"\DA=uK^4R`Mfi*8^5Q8iGHY"'i@?ZWd"DQ9ck=64/0dsd^/sQegf6D9$U\!gnO!1u5E]r/!PN/$R'C3Dqmg[h
%K!MYX85,c].N@J>?e1A;H4k`daM5EHV+m?pMcaqsH-!%8P?]^lEuhfp&>o1\cVth5^7c&H7<r^i1CX)^MWRNrgm0H=CE!d;g]@*%
%o---h.b#YkqguOT]p:a$I<k8@S+NLmO:>+]b%h>\r9%@_WZ++5^O*IR.)\aSJMO-6m8%FR1pp?#NZXL5VY`FY<1>@j*0I/t;W$[N
%7Opg-1p$VS.^KTF?!_LENn4)KSbZ;jkP]km2!HB&PK-jq,&Ucpq:s;m3^oj,l1JPoNh/_B3c%Y"^nt-+,/Z5@kcfq]FBcqbGCK;+
%'Vh+C^.f_IRaBjh)C6h2-FPBm9[cgaM'ej]VQ$8dr7+Zq6F9bn4/9(Tb9feW2CUY_Vs^gmcaCPPCg@-A.=QIEXUfo):R`'`c!.iq
%>oV*a?8i.15H&j=7_mZ%O%PtsFLD(Ln#q8>Hg3J67r),R0l4t:W')V^Fm3*&I5Oimf3KGq%LTS>X6DFUG"s>K6dA\ao@m@>1JR8I
%E$]'jUT(i3U<)iIVY.L*5>QqL`7Nn;.,X%rT:<Blk>lq_@XK$t(d?'8q5uuq)H,YR1Z!<b]_C+I]5O$:PRWT>6tAM^UBE6njeR0p
%84W[C:0EXDBOX;f>:")@b/9=\=E@s\XWXWS7^g!MQb4XZ\orKS<7J%;EBc;0I[/fp6>t<90GS3;>r!Jm-jGek?]>(ilJ-iiR?/n6
%"Ri;k-l[M]RtTZ@X&6#;NCYtT+pm%["?PXWjMP]u&aHiBGslm!q2f%lX"9l[ESmUhTE@#_l[<#f]R/6Rh?LhS9p*)RQM5.@^HHa'
%dLckJUWAk1:o1G/YZ@'EH5DkT_KrugM[,d7-I'51FY:TpI^et-1#pAC@hu'Z+n%YIb>nUpRoNO]0nC-n/_C?@OND?UJV>haEZ@@G
%^`1oThWA<uL`DTP<SnanRl'Q2dBDD&N3@`YrcLl@*e-8e^W3),YHg7NG3bN0091A;3g9/]/\!bm5%CL$@F"hb9=*tF>7+Ag;?<hL
%U80&qE!k2XKtYh*G>s=S"cX<_H:T[$CZ%\05NkZYZqiZUK#C2QW2s6+a;&,cG2=X3Du4A3ZlB7B\sL1a,2i(c\ZjuA=P',:G8C9\
%_8N;J?WUN'^1e:+CUg=%p@tqcop29*N=qU<B(9uja+-KG94"eRe-5&2-_Xm)9)2lU%F[5KWN$*R!_5'h3Ej+O0O]I]#g:Y^?4Cl*
%If9,W95)S2`i-N2n=%1Bb_f6efgCshDN(M-#4_JUq)VJfjh8,$#AOSC52E&:p@N*n[/Uhl^ZRkmd4L"]7:2m.1cZaH")6u"4euqY
%f+RUVVlio.]aAg22l24-rof.5=c)90<7G]dKrH`ZJIdMSC_]+bkg!h1CmpsnRLRsip381B0[lr,)&q>=r8PecgX*,\geU;sOR(:\
%H2kq^I&a/GB\b-ES6@F,:\d3K"[4kCbHWFjArN_laO+\k@oTN(l6#-i?`9XXeKU0tF1Pd0dh(ii1[OrqeqYYl0'Fco6mt;u+Dm;G
%dpj\<!st7M]^tSH8$5@&>@,Vh+tC@3U;J*'ObSfX,^d2[FZFe4W_D;qIZ2GDh++F25M:4V-,XYU#t0D2BFWMKJ$om)?GB2=T.#;q
%-"J@9XFH#"+_J`p<k8'8Z?GCuQJ/12N;B@k^54[!)d5d_R_%p_B8gX()PuO<Z42X@3JH;N3V1c_]UuC!4Tl<Vq&K3#fB=pBBm88)
%IF/F"pmel<LUgm2k)\S-NHbjZDbs`5($SkH)i!OSWmY1#^Rp#8*=CX\&#9,FlSn#iD"jqT&X2>.n*.HCBn!GWS8B]BHBtS5/<hFg
%,nV^2VDh(0ah.+uep!0od'CsMF='*>;mj1(b%88pMV$R[U#<*MZT@;)9*c1/94ZD5f@C_'"+:D)Gt0a'*MoX8'9Ckq[I=^?]DSs-
%DdjY0`.!CFL+[[aPZJIsCW*gGA(c\0B3NSqJVfPU[B$-7!bbhR9.pH']reF7]UiER(+G#^_KgQ_hP4dn_<AK.=JWPC<56"-,M5:"
%p/76b;8EqbGDV,OG8MrKA;Y2+eT/ZtqH*,UmIstpXP^C4+'R2JSk(1'*:rEUaP<Bk,tGp@26Ej;EB60o&7,Zd<o5p;a-_J>+&X.C
%V\)AAap1d0)aC.JBob.i%IF(%qi4_BBP4bT.6te3aMQAT$;(JFFkRWus64[R$:h:"#u)9oZe.D^LGYOb2>N)lLsmH@kGkSc](7N;
%#/'u=)(%R^ek]TA/-Cu(;;6hnqmf8Gdh$fI*r<e+>U;V/>HmrY59>t#E=V7+a/ssu[15(B>;iiGeoT#(]G_7QHq4l5%3#9S:Yn5,
%#&@RIol@<ZEE<]hq\_PSe#1aC+*G3%r#SAVC/#YZhP/T<R>'7<4n:3%oD1!p[$lji(q3TmQ'ZqU;SL<T_V8h9X`LY#96DR-`-Bd3
%PKmYC(H4raL%j`QkV7/V^9d)WM.YW%HO*15SRKk8`kYC,[Arh=hSWPf^">-pg[EG$T1O5r4:IK_Lp9JNOq>B$nQ`QRW%Zt>Oc3mA
%i4Yic-Dh04?-+o1-]8Y`]u"4`5]jc=a1Yr)-i!*-%0.6fPjo1CJ>O>#bmV^?>i2p`*)Rp?n!u24oC,g7$-A@Zm,Si",d$u3IfB'Z
%G@$bjCD%b3=-6'B1^mY8P-gn;JKilGH++f-7L=da*dc(]HI]]lCi!,Zm^f3rgK/E(f6BgJQT%<W6N<2[F3\@_]$&AV#+(=1`#P(6
%i'#eY)HI)%,!''d'EmIDoKMM#1fV*k8pBIe_dB\>n?k_]2'GZ\h]nJ<Oo+h8qAp<4hd#]P[1",=0I*f7%"fC*/G0jTWhd[.6[YbZ
%F4:#X>MH\e^m"Gs@s876P(F/4.Y(q7Oe5g!0!!M.N-cHja4?8K=t\MDl"O4o?'P8V2`7=JbF3e<plN(Gog=b+;1TTgC[1\j:^po=
%J.7E95m+V(m;$'P98M%gW#aR#XEd(iOHeTOT)94J.6$'\hsO*OYu^>'Y%u4W[T,tS<JWr!fa6&s#jtPRCA?:,XYZusX62cDefFK,
%Md*,j@FR/-fR2ta\83;NXkRF_!mFQ@elj#3#Rs$UcSGfK/m<omk>&PF<G-Jgn0p'?1"Fh3'%6L8<BYI+@E#&RV4S1ggH1lO:LTWm
%F#-@,+<]/CYcObZ>PJ\OFg/Tn:`?o8>c#t:kI;-3[qu;sVuY061#eAT=WCXbgafbV!%#C@(m0/FKe9k`pV>P*H?(1_S!61MRBcLr
%gn^D2[5_W4]utp%COA2XY//L'@aPG2Lq'Bj!tpdXr8Y?c2/l!Z;2!!YF*t=Y7]1VAq.[Z'cu@:Ic1I5-YIiF%UYsJM<M%r+I71RG
%7"UJGV@!!+\0#*c+PDqbTO'6AaDN%JbBZrF"!Q_k!:ud5M/k.]VuY@hl:'^m/>I)^Q8XuL(<>*e-sRk?,.FPh[)-ElFjZ#;O`&D^
%q]8=XNB<"`hV_m-g'XgWVs'rcgUjeE?B+VnD)ti,WWD8m=*+"/6&N35_siJ]n?!?`/sY*k+Z>R#+k>KlVe9(k)g`s56"RM*p'`fG
%SR7FEB\X[\])FJe=r7tY;<;hESV]cWpOH<AI'9XMKr<9mM!r&-lMVQVW@Ns(XTF=j!cd/$/?^!=rfGmf9B-*UH2eHZ6tc0`[/LQE
%ff^rVfi[h=8Qh(.]=S9=4#U5Uj,$DVP6Mbs=rB^+B"@plgZ&5E'''!ch=(U"pQ(Sn5>)0b[F!k>"&la!.\Uq%mVl*DkDaPS(Diub
%CQI_bH[Nj6L"sHpT3p/rb:bKtg&e[4$?g^#roMejJ)Qae/]d`N:N)msn2GV%jg@M[cZrrhd7LSKF6W2mIP9(n0e]?fqC6oX!aUhm
%ertQ;l6.)mi8s]ON5p[,!cJ[u0-]ApL47'u=9%c5Q8T#oIHB8\NpU:22ri;BUP.3gB44#oqRZ.;N'l$'XDpP*M%#8`HL*A\H?)Mg
%LpbAr$^$kuCF\&6W9gguZ@UpJ4(lE_L0MK@S(]Xab)0[X$`X9WC0C2=d2N^Q-8drCYhLEgh;=?Iq[IbA[1>lnr0B_3nC-P7#:QP9
%GV!f;8B'/o/f-?S32J!1TU[grC0M`$)l,7-4:"sH$p6'9EL]lsD-6g`E"R1kf)\r\!dY63h@#e1kBdPu'W,sDHac*MR"/EPV(>fe
%i^T#S=_?d+8[8m5&4aZ<VF"mr_'!FFW6D%<`;@"2gK]Vc;_(5jrQ_C'2IGjbT=i0_khSd`RZ-0dH2I=V]No#+L0I40Cskq1OIq[6
%8V;mFI-D%KLo1N@#,?K2SYhkSm=Vij#A^PB3Mc_$I,G_h+:.0kAR4t:XTHt7Yr"eL&E,Li4<W_C;VId=baZiU+)"^32pnFdmi@:Q
%qd-'Vc7!!RDQ8:NCFrSmB]KDXNu_QY,FO-))WOM5bbi/Pac!X8FI4AY%d@AmWJMdqO8Lq8_ARV842ffBiW:*590J$/,h\0fV<e^%
%bR%l'7;IKeEWo]Q8Ncce"BN<Z6oQg/W;Ys(_t67]!eU0W6i-bEo:%AEB5r@Q[gX&B(E8t7Q$Sb9@-hXkQSQ@@)B+,39-R<-am<dh
%RR&Kj@V%>K50qX^+W;g)qRC9l,-c*"m2\bIpr]":N[FUB-(2Q8d!bdDKD?NicPMr;eKV.>L,<kuGar-2!:F5)d&]K,ri;ARJ)cE;
%.hNkm-n@-Zn#pqhmh#oOn$BWdG=_VOL-iNsjuonam72gF&J"T<@u@<p+ei;b!J_M\@4)<eEEA$$`\U:9rR"Bq/VpRt!dj:)NPki\
%$P-\U+W$^pS-&(SP#E6`#mEG",jac:\Y'kHI>8C!J'ODY/VNs`Du*P3dr5;4Dn"l;ck]Y0'ORB?pkn!";sL3e4+WV5MQ+A3/6W$X
%iHhSGfEAS.?%mf;Ip)m[Vrf>KSs(Gl[+OA`@gm7JV9,k8m9W6;8V3iI/gG0Ibm'6)aOL_eYWm#14UU2[HBnPV.ibR$I&;c9(i=gq
%U.?>:R2&q\].e]<e*hNA88%k,hc-h=rlO_"9cUg7l>(%#3\E5.=hg@fE<ju%%WUZY`'EhY3gBdt%_Lf89U>kD3uT[19[NmS'#cu5
%BqQl$Wif]0$!eP)MJF_@Ya9_H:6>l#<,b7am=C6nYhM79>lhNBQ\j5X)Cde]gp*sQQ1"q]@@hi2A)Z7#DM^TbKHbNT@`g5V,SpUt
%0LbC()7`B#f5?d+]V'<>^/O+[4`tbuqW;$/lM8Y(PeO`]lWA2B2im,OH.H.\&#l6+I)1o6pY+:pis1"@i`DD!`m!g7G3#?_Nb!&l
%`S!B"SKCuX>PCaQ]H1YK?BjbtpjR><b8un7Enu"6HiE$4`Gn9.KSLOIZLI<_;JlL-=5a,2VE4\P1\=I!o?Sfl!;W_Rmk$:FR,][C
%ocAJK81qP.,;Cu!n#g(c04%"%")d&;&3a<sjC'17U;]9ZEu'->;C0BK;(/&r=nf+sfl(NVqtW"jhMY<VH>;/oI)'DM]Tp@5ePhAT
%hcY^V'k)8dJh*IUg-i,N4oB;j0mSD`Y_S<%IH/?mSerdC\2V*J?8%UIfZTFhA3Pnd+K<HZT2OTNr54V3dQatJOR=oue`#7$0jX?d
%pM(n*ArOhg9kOB&"ek%'0H,^c8/jpIHBEB88(:0rk;DpeWGc9=dUMY='ps[Oo8EXu-&]YnV5kE%[u]07o_CG8_^C]FS]KdOmuL_V
%_,Om!.g8$2.$gH;1mRV0BI*R?Ogj!">S0GT?T'/,!F+sr@L"hSk.o\%\7YBN[l?]TGp7cW)rC&:>[r^81Mk;UB!UBdR^@'6ATL5N
%cE>ORQ'Asg7VXM>%[=<@oLh'LpOSk21?.\F-5aeo*mZ.u7.,/T-P`sWea[VJX0]G)#>TKprg%4_4pM7o,PDtM0L<bGOhHH(-&M=I
%-)f+j5mlQ1aVLIN1sR=,A+7me)87ICG,Q2UYV"r2iX0*fN`S)FgN!Eo8ipbZZb=,(f*ekD\tc:oc9K6:>^'`#>,28!"RttgjLHPe
%R$l$t^.=GVeU49nrke,Ym.jY:T9ggndk?$&*sNT9%VI)5I'`hOfi^!CYi4d\Rq,&)QQHPh;ZlI*m]FNWU!.N$glgee:cIjS8#ZYX
%`-FqmBCO_2/^KK5mE.F.nE(J8Nu*p/^FFMjX.%^EF#:@MF#n!!Jo8+\1/M3YYr<?'X(?Y.=dG2Ngqfb26:5JkS91KF^k8+dUaIDm
%d5=7&YDB14J#$ND#Yo.3fc.keHJ53A&+.";;D#VcLf<aDpi1PD=?qq43+(-sh03Tt)nZ;Vr$tP#Vs3H^T=u+CdE>c4a(<bW2^1[P
%*c[RU_H1.tgauXGC_dZM1&3CLc?2X>mhj1>Mh]9<G2/@HM22T.[9ui';"QlaZi8_qE^k"m.**o)&qoYCD?>`8WqGdhT%OtJ9Q:lE
%5RqoQ/N7:#^Q5&G/Wj$Gir@kL":m`2[Cg-.:FifU)OV\`IS$`?SKbOmFM6@8Nul]"?9&hN-HCYMH"jA*X>if[\kHPNS@S@Td.Eh#
%nBZSuNQ9t>J0&jjO%R2*M\7kOp<NL9kCIbmR;[mhg+L\Qf6>Xs9)Nbee=&h$Qtop&qYUiPpDWXq^U?pLR^)+(Y:XWXlq9(-PK0?V
%-HiE*LL/sk]p)-&ftf;R"CVna;?.3UZCHaV>FgdK,J8YlJ'&-0dh!sZ(8iM_<I;q;E=RHVL_QHFfH4*,=q>Cn(hJR0J!',?C=!Y.
%;@YJdR6(J^aL1W"0+\O?l1CEX877mg%Kf[8VhU`o.dV;m>q'B;k.#1J0!MLQPqmZ"KT+65Z1\on#]BH91kO</Z6[(Y3-&G?O72eS
%WU0a`p5c:!CW@1d)<&7%WM,IoKlO,]5"1qqMWCA4K_.Cp2?opV7k%9PYu%;"<ds`_D:fTs<6dJnh(fbO967OiDu!hHguVlmmp&a2
%Ds0<T2`)%(<SsUWne!0EhKH8B%UES)R!aqb>^a##1h,MGDdt'c;Zb68U(46-G+N^L*$_0V/"jIM7:qU7diAmjJKMj)E0gTL,g2?A
%nWp1i,NmPu1XW<n]I\s[qP/Rf,W6%^9P)G8Lq\XjXUgbNKuSE%'hL]6V<)H\iZW/\`I1^q7kU<hZDK>mcA60o4[#G:HG][##kM16
%]G8_,/jG<HH\UCqid,5c<Nf5Z\2%tb%60Hpj7gF0oCkjN]9FLBXiFG%(%0nJ*X"?[_!P-Z8OhB22ZLM7jD)_,P731j1C=KXO>G<>
%7g]pH&qIun@1/:tl<m/54tk2bXd!;XN_!!AHHu:I>>0d2)*qrrKuBAnE`p/?AN0^9>cC.o,@8FR5b>Of^&fmEoR$QbH&#V77<eAl
%<h)N\*FRtdE[0m9@a:`8`\PZ3o&>L><D(mG=r.9kW*rcCXI%>MAL(Zl:V=]Y@VP'qV+un"?r2:<E[uU*+UFYO6<i%hZtQf@o2MQ0
%I>Fu4-La*N3spC@F'#X&="mY!I`HB)+4>jWB@;-h]DSFugk#t7TfA$+Vl-MM[L"I&NVAJXo,Zr@[&(aQaVbp<%@bfHpn'YASX0-<
%R^SuMmB/*&\('U599^Sn*?tKR%K(.UZ]0'>J<0Car:!__hnG??WH5([f:o@HB]]6?AG[5Nm#*jN!C1dZ!H@G1<qut)8R947HF>;>
%S0i-=4$j-?9IL-\+sVN.mQ-A8.48"#A[4(k>qjSB'isT3Mr<nh'!k]dKRL'J.D.=7;EHH#\]`Q0+U9902p/nS="J^cWUX:eBp9m?
%Os!M4EcY/ZP/hB!!`E+,nQZZHL$PFj`jdgE_qd_8A40;GOg$L(pFKYq$I/@X>p.Ygq<A^S6WM5Pr7tL;*ob/B=/Na>Er+JWB<PLX
%hBCMdnGUjOI&4;+TS9c#7:j7&Wi&08ehYqSSt$fmH9r8$Pqr4!<@,H.j!78qL88Q:)j,K+2/?mkc[`?Rl[7n+gV3[?a*DD'WHaE$
%XakJ'ORO31`](#jV6WC8JhW%uU.7AtLTBA.kT,dU:_`\\bIY,*m0=;H/-T-si>ce3P/42SnGCRQ(;-ebiYtm-DTs%j&YG<J=_;N8
%s12^n+M*Gd=gc@F1]8t/hs]NI''TK4iq30Z2G`hRJaEVs)3EIiZa9&)J3R$AH2l\F;KSM&J.GV;r0alJ0k_-5UaIul5I_NTQStB,
%;_t]]Zrq&!1YL(f]2>.kmIeBSH@4,feHU(`P:4_)AgJ)baEsS27DKiP-&4C`pLf/:r>,>4=4Au#,qXOZLnCqr_ZSUS,G,!_Fe7]#
%__W%g;Wm-+M9ggHeJ"RX&bU)BNKp*FYG]jGk1Y=G13j6t*^SP@I:W##XFkr7GKQmIphkf#?l,YTW4b5;aH`@[2r95[dWaXI*[jEt
%:"-B7^j:bL6a-`6^W=h.=Abm2PDu*eTsaq:7-k%]'(WYiMrZt2-sX^u4i@M>`kVMC!OAj0G+9dfdWnl]qs;_>E)K\=k3Q*0T#&OF
%iUB4W_r[m9(W$qlhj3"]S\mu$di`Ld##Z/MRH8p4Z/]Rfo<G$+*t&ubfKCi7M5DEV;E?kj,CMFj*H/Bgo:NPpJIOJC!<;gXQUHCB
%7f'Z^i\FW_7f'*Rh2%_l&nbm-mVada.Fsm1YL8@C*'!R#=JC)#X$!9!9H2KYhSKt<M/iACpZ[h<:k6EYq"W,5!/1eR^emQq:gPCB
%+b;=1T]F&%7k4OFF[[=po,bJa',?@AYkpWHnhkV_bnl>-X)L`ug#P9Doe^@3X&&GOL6Jt,3J:)U7I1Con_[.8B:<!jLN<W$>&CQ:
%c`:jip^jt"Zh1kC&=7]L3TPS0<<`Z#.muLl/QEMtfKf((iCc*=qG;Ub<GH*9AT$jq"(ipGh,1UCO!liT3s54m*lN+_ho+T]Jc*kt
%^)StcC?BD;:/A=3LB('4QfRU>Lj2ba<^,aj_US'`oBaNofs;b4T/oVj4P3'g=KTN%Vl']SY]u1o?9LWi4\)<SB[[f2)@ZsNl8nsP
%QlOrTmLSrd(_fKN$33dd-r<"O(@\q,%a'>0HSY*C63Y[MaEUaFPOY6e=H?`'hBko4#5NDKi:?0ka@n;PX#(q@6;e')=([%kUT;QN
%cn'L9At?kf%Zd[/,.1;q0GT0KqOPRf-t@G()WAeXR(df2UW;[@rdZ%8881>J`O#AdC3M7K1Y^bPe;n=-9%8ctlA$ROrr2rRr9Ao\
%%kA'e]s!-X=*JZ'%"SUA$Q@q'rFT@395A.RY.J)0>VB6t))OF_)^O@RDEl=YP&F!['93G3^FDPaTaiE0Jj-I\]OJ8e;1E;3g0%m9
%Su\L@TBcj]5"f`W_sigLJUqqjHZsf7!]U!nKtd+GImZEHrUeN&4obC^_GQ4M`)61$9$Q\@Z(*""fc+LH5Z:t,lJF@H"NdL#oqs&^
%bS,uJ&mqD-Y$],dmtD[AJFmEQ,]%Ei)7_uu[oXgSWlqoK<(^_T,,tEZ1>9mpJ``b%!>Xr`.auKO#X6g4U)"YirRdq_"_tk8l-^0O
%C]?kEGdm+6hJ'YTs)h`FeIm/IhUVPH%m5;=06OIZqOg.BMfBRo,Igd?8kQ'?T/+%I[ATu_qBmZ:=4\(I>Rq-R2TZb]i3s>@GEj2]
%'N6+irE#P2?<tYTeTTG[,YJZ%%d03T6IU>;d:6W>7JN@]_IMmpo"ePe9).Um=0hL3!0HZh)=(SNT`h7](02:Y-qDR*n!<_AYH7I(
%eL_U"Mj_PHI2FrM';^H>ZI:!"B#pQl0"dB`&64p$]Ep7b%o5C=03<0&d-M+(_:rr#&>qX'h<H!5^S;u04C8YsPnDW[X^l%'BMkCH
%&"hcZ4W&2A@!r(?0RYB5Vb9PH;qMO">m'.AnA'+#-2_X(J2l?^'__2WhE+4R[RaeaH"Yh/P1f5!'WK/ugcMOcV6]`1Qm\s'4Ws/b
%/rTcQh_!=iO$NJAV2jFt<j"=K*^0.'h^_.[f`Q??KmecRI)t:8`r.:Lq)bN_Io*l2=M`1+;eh0jWS;&[/U_>Q<L^hB]hiDIF#ck&
%YY.;FmVp[%NUIffO!/Kp8`kKZ-,@TFITMS65@PjB6""5F;p-00j+Qm@4KWg=ik+ia^fK;L?I1k=X$klZd8od$/V&k?bIi+\PiV\E
%.f]'F3^9k%ho\<;,+d7ki>iM82&61g.j@f2T:;0hbLpDfpDF>jhF4?-*QA.2)@-1]4oMpsO-<$hcVORtFPqDL"_ufr:RE==CS??Q
%$k=*_Oh)=:9OGF8f;HHNhJ4U;&QNlU_KL>j<VKWi*a;k]6(XV@[i6X61/g<Xj+tH;W:!7jT7,\B8F&QogSij0l@RVj:FLd\QKF`6
%UHB_NgkBe%/1l`@J:b.)QNQflqFlh18.$n"!O7VN)J3QrI]Q#*A=rCjhJtu]+0On2"!ai!j.6&=Q3YlF+?1<jN#4&,Xe#j+Grsni
%.s9OqEdV-bHYTO!!pjRm]9Thh)/jsV1dsUop"IZ]`DV6@e$AJ_+M3,N-K^>T)(U9"(Ph(ZPL+X\Y%JG(r;6?!e/bLsk_8=:0QR=u
%:)T3cKP%*?la^oP=R%:867"H;"AkY0!mkrf=Fmd)O7eoKY1o^n?_-/uZ-8$(HJbIhTb\W?@B3QXD,Dis7Bo'?G0YCk$Z3^7@L8@d
%7Vqj%Auo$U9oQ[,9^Ut-l,e"f[AaCQ!QH"-XaUX#h5Zh=4EmF*ZH?`+VCrh<GN2h['ihMfYX+U`:DqGWA>he4&5/&DriF3;!cl"H
%oRJMj*K3m^GG6)%m7X%r1G_HuS3+s9N!2nn3V&`/X*8NWkFH8,]?p8=[_B)k%<W(nQl.Ua;ri;Zk7&UC3Ee=)#9%9I!tN-CCuX75
%1*QO_'5Z[1a+-'J<W`YcDjY9.kmtAl=js8"@c!.c7Q=!HE#lWG>fg:er!4:fZ$jlXOFe9PHBSeQAFscERbCig>2FkD$@nVH[EkBr
%almpK)XitJG2%ZjU-a\q:)&0YEV*6I;BD$>9HnN-G%D;olXEcpGEXSU<rY-qq.<PMB"P<ABM\]&,=n>*6dWK^M^a'=f*Ws@qJDa7
%Mr%/kIJo>!:<W=uldKel`;<PC!5a$8]F^aAp):9o\;n9k`S!YJiX(L_ZVp<3VjN+;d(lr2`T=nZ\;])a(m?JDBmlS=.8$RpepA8'
%n<+:ArB"T*(EE7g4sNZ>X]>MMZS)92R-Mm5mlM"mg<[;0Me$$mTsQdE1o#"C[7?8n@<7m5_S,so9EOYLZQ,(E>l@F$psra_P]dc6
%W7H;Ldd*C9#Nt;S&G2)sTp]qUq$LMPn@GS/;FeiA0J]Cq\!!QWgXN]E2c`+I&KZNjHbTIJgU#b'miXdPY6o+[Z@5h4o6mFI,E;IB
%2rOM*c-kTsEB7-r$Z_K/LC?Q_'45f<Tr_FR*79SPHs\2CHu"]<+qKeQKfW&,6f17N,^5U8Qp]l%)A[?/UR:%1Yeh1FgC(c[I>cXE
%,`!BW"`15(/+-;<25FQ%@InVM-c`qq.iYe#7Q?"(@6!kJG77/IRIC#u;FC(+(>K4,cjSe,B=;K_lr'9MN&$d%98TmGN[gr/5;B,j
%E_$XC#dPT%G$&bLTB@aup/*08DW19p@G'q=OSIN9G=MI7b2G57SP&SOX-+"V<T"(66)N57^ur8cRH,Tlodhc]lqk=\J5^(a:s7sK
%hg_;6imiJoSi*9672V$43Q[GWc&M8!mfJ.5.:>h)81:C@nJbW_5s3)u:-_r7$Ktfd`lEW]6i.*K7_!CQU5OZO#cUORcM)p=7G*.b
%\$BE1oK2+%8N'CnQ7NI&7F.*nPuK[s[Tl?0TU,EPou(^)K9N1,RXKdcU0'(1SQoN#OrY),AWlQ!@_A/r%oS6cU>m&T+.61.0"2Nm
%48]RQqs4r1XR(Uo&K!tmiKOdrk^/#TM?]5o6ON\hDWCf,/?j8>6f.oTapZFibJ=#2;8EV_7/=cJ#K^(Ed6o&$,SlL_r.e%bYPs&S
%"?J["ft1,HiH6F)SJFu;b$GpHdIQ.@P^6VJqfX-D/%'3Ea#X2-'H.,@.jY5N!!C!:J%J],kCB7p3oc&j2X[ltYoa+rJW.>:P8]o?
%8a\Ve^JLa<brEnoK3dkV_k_[e58gjR>;=.B[=R1hG8?TM?B+H5D.Y2)>D"X:7M%2O2A;Sj)5+T>4!sG*Bm*?bEnq#uJqoKI6q^&2
%Q>5K&$mE+_,1nNXC;7^5$.oPLjCVj6hbOIU23O]YQQpYUP'sIq6H/jZ'gIrdj]7X"HmI[!RKjDiL78Rg4K$DqZ$l*%"pNFN#MTjF
%5JS]oU@W9@cJo1P8&L"_GD-#78!pLPN)IeN+Glk%&Y:e_3*3e8a/186NRStbGop-g>FhO@25NM=a#=+m_PL:gj,HSt>'_kNH[[C.
%2G1L9BC$USOi=gPr`>W0VaSVd@<^p)?0DlYI4nmMao@a#@Y<2?IG(j*OCt'\3&OI'3Til)C95f'o5Ymdg$N!sp3rU)7WT11%^]bt
%A*l.WVrc?Pel.U,IMr6E@%+NM"V:V+4e<A>Z"(g_9:L&IMt&C8g'jl<+$I)>9I!bDXSBc/Whf$fmFXh\C$E4Y7Y<kH:bdF4UC`YJ
%ZE:Jg$%AtFfMEhma#3X1Wl<[)+K/&oNGcJ&**uQppQgn'B8r[kVsc-eGhKea>,5Xmj2$;\=/E^U"'Rt^R;>bO*'47:4_]mV]GBZ%
%iHn!lO\#?&:Z@fr-X@"(@/asb\Uu@^Zti7GQ%7:G1bTE!l-aT]IC=]bbge1,H_t&$L0Tt5R)&d.0o]g4D_%*Rkh"+!O%;rOh_GR*
%7lqZkhP_)Bl\.DbW4CC5pn!l`C^[,R=F/hBf;7YCMe#K*q'oN2>F]K1@TlgDY(<X-OL!3uZe,G<c65-iC[hfld=:Jm#O<F?60A,K
%lo+b@<l&7p@L&,82'M!nF,M9HE-rGm758H$1>/C74R@].=]qV[VQnH<ZK8sWU_k5@",-&p&OjFocMZs!)"7#cbUY4mlMdT_82*W8
%.$01efrC97+P6H@"fbSkWa.Sp/FHiGk3"P:cHE=V_<>P%&`8-uCIi+5S-"^\Ms`Hh1)tY^D9m?>_6PUrO0[jS]-9;IIeR/75X+u[
%jPu9pN<2)pG=<"8:CML_cUm7^&j715mZ#3gjU\2:HGqj;?N=+_)nD*/8KmWKcb$^4jF_[MhicgHaj'tEY(`?kET*bN&R3G9q!b,>
%l9'S@H4+.BYoa6M1l!/$IoGK(Q+0rT]UB[ZMT2KHBs8KN\Z-f!8DWAaGU7Y5!i`(7:>Z'm^-M;s>e%*XHJNp&Gb=oC&[1P(20;UB
%L(7p,BuNi_Vqf[oG[4s@#tDn(`9dZ9K3=S%7/P*N)=;pq#s]Q;D3C3))Wn&k>Z)K+H$"n(?ZVM1j&pD-ILQ=jS6hL2IZ$?P-]@/^
%?Q:u<LV68BZ[(rE:,q]C<9lZ]>\?qI8#eFshQpa%Sqt`O-%FqO3i4]D)#Bgg>j6FB3Y(:XX$p2gK'_(a3=HN.Tr`_foR#,),,:2)
%jN7n@"4k6LB5dOe4&Pr/Xg<\nX>,&,6C$XCYG"*7OQq:5pYZclX":/#2(6ko8*qIs"H;BTV%oRr95(SAjE@@<7saRZFi2B%YhZ_Z
%&%#!EISWiT;QmrfA&[_oj6IOb"jebkZ1Q="LdImPi]0Y2O+V!TU@PqB#c"3`bg?g83^Sds-T)%?Xh9(\3g\>No<*+3?@-54X(eLB
%rZm()#,G:'KUM8eEg"qcVCb_tbLgtt*Yk41/a(VodR&u^m):;'HYEkrZ9NZE-p%g.'hVp%Prt6;bb[T"?I<qAdr;8==U>T>NVuYF
%<TkoGLH9Zl21+nUP/gcIC!QTT?`t3;`=;6EUK?d6U2MPd2^Ldl;O]^&2C\`'e1<<WMKYsi^;.2E&T*2gH'!muUB)Ct3%M^M4gE=X
%4=U,1dEj5p1G!QO9bdL:$hn1]9C#ba$\u&YentQ'>H<BD$KGr'g,%>X\3%phVaNoSCTt[58o>EK8!4VgC-P_]'hf)@q')ZmE>W#f
%Jh$A7bon6L5KEk`Lk(t;qjNd=k6qJt^F*<9#H>d4+&C/?d'LjX6On-o?s%a3"e;lpXe=r*^c_9pg"+OZPE0?r?cAtaLsfHO.1#LR
%m8N=gAb8Cm]qkkH6A?YKF/H[4-mBnF)oC*7?:r-jEa%sWn"uj.*u$kK^i^K\\f[%t09GRJADG#MTY2omq;$->eHu[-8\b!tM<@SL
%=hjf5-W3c97qpX5od^l*K%TM6?.rbF;01s]\T3UH^mS.O'6pGXAME6RMJVaIR?J,FlI+(-2ss(?=-4l34,B].,[m.So<QKj>jVW9
%[Yl&):7"XWlYDaRP('[eASaH(q]6gZ!nh.L3Z&m:`c$p#go!17(0;hj]6smtq,HHdmbib%3/fWJe(3'Lgm/GFb#?(DD\km2m`7cJ
%,-."#iN]G4GYpdPj=ec7bRm6+8G+%7di"^`4%'jb4!oBth`U_8?$IeJI@>"-9C3l;ht3M;#UI:0VYQbI?up64li>ME5$_fg6tjIa
%KuJs:K#=,+ZdQ+/Y\DlSg\/7U-R-<LXjJa`+N0Nk^FIf(4TgHO0a)^6Cb9/<&(__CVhemGIQ^>0n]^Y#p3j$:6Sb?HU!gdqH/DIL
%c#n6C>'LA&aqQ1X'!r`:@;\[TPtg*!\P[+;\$YNIH5P7)*g(9nmH\^"H_.dN:LWW!#*VCaMi,4'HQ@cc(0baaa;h/:cou72qoI`U
%T$"If,/9:\P9HmAmsAo"&kWKb1=g&8Sc68e9/Z!_>il8O7B5F@7"Ck/9;QbC`BLK@=[&-fk&lo)p)+(ik;@c*iYPC18"?t_?f,r`
%/Yqh''!CQN.jWPOcgaV+\mq#G]UDcA:A@J9Gouce%mCK'(.gnLJIsR",um_Y_:WSsln)2]pJY$u4`DK8r9*[V"!n+K;jLiRG1\pp
%>qV)5BjfdO_[\GK5PV_*Sl+Wt=CmqB;n?,pk:17"*q_\kOdsE?O^63`6]:YP_]&:@CK1qQd</V_p<.Hi&hKe=U@_pZN^">;Q*=WP
%1$t%P=mn^UmUE[S_f2?g6b`6;FITP6A2-;QN?dA=,e+t\+`lQL1]L"[<KH\<.5rIGm<Gr)X0CCEmCVC55a3sq./'b)2Zqd9r)rA=
%=e[fHO3<V1AURdWYNb^D#Ii=doPZhQ,#WNJFL/T^6u^#2bY2?K,o$f)cRt&X2O-1lq_fI7h;Q-(;!D8OBlU-m.CVJWMC%&ing(U+
%]+,09m0S6g"86%U'mWh];3GsSmTNjI`Mn=Gk]1ZKVY&-j4c??pFj`2m@HjmM$2iLnYJ[]QOH\!`%'"'##gAdJ.#O5@%4H@SFb?gk
%r?O+*Atlm:6q,pBGk.=bH/t5'dG<hq70OH@\@BE'T(adK%>0F>kDk'?hE/Mu4:C^[V_Ajm4o>3Xm(H&QAP%'93>\@g&<d<%!tQE!
%RgmJi+>gYT(.=mp6IIAQPrc468/2<6Isp5IXhBdB4BP_h1L(Wn8QE@@4nkOX`ua"/?4SJ>?/@X3eR0rdU-^oT^BCZFO/T@/6)Hc$
%m,!Q+N]N/CY7,D-?j,*.=V&G!!sX+?lghp[rNXfOBII6cg"RSN>0:/Epki1QX&uugB>o.]M,Mj6]lB+gn8W6j[PpYY*Gp'a^<?qC
%gUAR"2'P_310>,<(uYb.FKrjX0=0boa./D8r5\Tb*8Y0rDsu_7QlW;hq\P$JB1fV?]mZsRNlJd+$_E+%iY!:+^=?[ZO-iT;l?S&U
%C3FkU;A^cHi[UfskCQH4T14tJ_@oYUWYnC2^l`r*'K9n5$t6"I!:4gl<EtD>N]PdS3Yl'DWAgalLBE6QMH,Nu[U!.V*Y_H/-um%D
%2)'J6V=CAJ'k1._2+o7!G-7`.Z3uH:nIfuc[SU,1ITFaB5oN_;2$Ac`Un1J;:SH/VS$"Bbe-@$c<<PAum=66]&Qd$!4=/U#;Z:kD
%PS[$/+R6.R4eYHI^T*(6"MZjq%V_#i\BFsc.*1h_'#Mga_:G.!#VBt(q2d4+;HYLb("O*r:#lmu(m*lOM9>JCmm@;2klA>W=Gb[s
%$:')H5a03J=A#=,0%T#&,U^[>'[YESjOs^6Q%9S00"Eu$mi(HYIEZ,2d2A9NAPYo1Bltu16&OMr9uu:<`qUP]=/E5]Zgu\VJH@_,
%[%9\[iB41E"k]GN6PNS.JXH[\+g!6&?$DuP3,,=5o8,d:\0+SoW4M8-TI<o2Dj2lsMY`e$FqZMS=&uFS$(]p5hRJ!q2C]&QD4)1g
%KGuRAad'nEN?\rPaNj<*@qYrb#UQ9\+FE;a?*712:W[&(GZGT9<Q:?sY-<6mVpBAJ<&nFU<+4dkSg4k^?)Af:&HcbE=Rh'`X'dKt
%qi:5Hlu)kd"!/t-`\H;rU,CA!;*gc&&4s[>'+'9V0W[BCI.3A@4.;[+9ka'ZJ,gE52(4M1)Ijk?G[:l.P`5oE;0C*P,\-0p>b1A&
%e#E]"?V0=l8SXVV1c_\i'-76Oi(,5?E)[@?1atNa^A!;E340o@]tJDTW`>u7`T6U_>i]G6s&<DsGpY1o$ALs$DcX*"9WNoRoF</E
%(^O#mU(k4Z67+:+3LA,f`J@.nJVjV]S):"aed^(_Q)N?"Zq#phO_:W&(qO)c)*'V/&Mb+%$Wqs.802rSE>-!DVc7,5;0%Yur(*q^
%V__e3mBgrEU41o0XrUrG&u0&T1tSdq&;)MUU#-uC6&RgS;_0CBVGST9_g+eH()'D$$\I[Ual!&dp!Zi%Tif]sfYBQH)MY*O],XMq
%RlBNo9#9Y--;3pjJ/]3(]#3->pob)u]5_=aPcHXW:O%b<.5!4mnf>OVDs)Y[qg.q2*SpPUqA8>:a3SfU$m&/a7%VB-Tl69Cs-h8$
%%35\ne#'.>m9<F;0>h*l=AEWGWl-Fd8;-5[a7)A]+!S(MeaKRR\f+lf8S740"o[^%elo:hJS/C//Y"<_opS:^.YMtXM$-Akk'e;0
%$R@X76'X<.JVm%1#n]gaQ<<4d:<Vn7Z[J5ZW.7@d6cuJLUZd_kL4$,+a=:Rq1qN)&W!I4ib=bB"ZCL-HdIh]C-kr2_AAkf;fkpX!
%V4sDX@F[s$(#8RLaOH\T$f7*@Z9nL0bGSdE/gbp@GV(mV(q:9_SX3>>,W,`PT`@H30Gcc3+:5\)$0QU,EE@$pB<;;b5VKRBK911<
%5\eg#dK,\6Y2l6"bJ1rQ?Esokg-$2]Q!B9!-GU=G*kg@"iQII)U;BXTAoM>DZmSPj'27X&kN-S=?=g$=\O3"LWasJ1Pf+pc/]%P!
%+,/3JV58rd,B>Wa#pdGQmiZDS:i(r1-'H#`.Ro=jb4dREMb6Zsfo4$^b@q3WNI),G8"g.9?K!(BMin]AZV3a(Ub7HtdMZ6q@3pCL
%IFlM58c#%F`/F^([95AH$^@Hs/H4Ji[7EY4orZG\&ZJERAM[nOS974V?rM9EqC.RcW0_dDYr%\qrKkLXY-=+U[d\tR*S_&L*`Og3
%2nMLi)GsQI,U-Q4*aob\)'qPB7)/kInoEZpb`<af!1`:!Vas=f'a'6bZBBEYDZRC1+"gT.76I:?G\=cnfRhAQ2duMNBRJolB\'),
%_?=br%MfINZ(69FD1S@J+i0Z"![\QU'g."qK>%,<@]OEWF-%*P@UpBXM``8^W[pk)EB)phTV-4%115'p1-C`D$$qp09XEXD;j/,B
%2t"f!!KX*hrF/(;ks)>)cW\Qs0IGl.JU1<*"FAbP@dI.FGUfE%_R2dt5UrR\Nk4DKnO0ni0A8SE.L$p$$WS8tTrVlbb3RT"8t*ss
%&3;WZ(2c73Fhf@$88GIlVckZEYGR#NU:):+,RlpR$f>M%NG#D2L'BgBoja5%ZBEA(n-N)#!A?DCZ@4=s^)"^3%jK:J5=/JG-T:6X
%[hA?"ApO.6\7ZHfeI"]@9b`J!Z6$cLb)C*hDu91DjB[QPU"YS)'NspI:ikf<Ip9L'pbf2=pOrOYhilX<C<lQb=V"iP_8p3@$'kVO
%idmDFfP<?DF>T*C<"Gee1tcA;\-YRX:9%)<W[EQ>;$H$\>?ro*),m>c#Rk5#99Nhj)1#Ihc)tmFQ=\a6cr*)4>78%1Ka+F,;>!PU
%Dh4#_;!pCO"Z<32Z(#eI^#qXf6#IWQRQq"q-8uBL_J3%f+BM0s!>ADs"N<ee0nDcT?('SI4Us,fj9A5X-*FoqHsS!K^ucrsf,66c
%];"#fE1ul\SVe[bZi$j;E!eoch!6W;];GLhfVDi<Nm2Ag73r`X(Yas$;n_q7"j-@Boi+8DbWns(aEfTlnD5(_+/69(jI;A\f#ee$
%S`W6?V["0e75aYOle\8N>![GOg]U2b.5EHP`SQ@#Mrnt2q$fS?Mo%.n_d'p6Re#PfB!a-+%>H#=^32R3qh,XELi'C4i$H;1#`A#D
%j%A/")N!F;VAo*!&.M*J5]k^YoQ3\P-#Z*I=kZLiZmf^ifV;V%I`o9h=K+7b`+qktonhCGU?e((d_.(&C*RmN<!af-)'4@RkcJHY
%;eCFO+OKI5;rcZ5j/A\'Me.u0;M@ZH(tJbVnFLl@`X20:"`9gX0p'CW&`%/<+3Tr>4&n[7$=Y<F]BrFs&6$Y!5G]e7Gbp+Z0cEMP
%4R/F[Pi:>QJp`-T%ILXX_mCQj+g=T0mBT27`j-kFOM'/6#%T/_4?lDc"k%<830beO[6XU_?:*J=KTTAj7#J"he6!`5cAfH!Ent;O
%?U;b+]+sg!bu;Ht"YYh*>h,*ofOb!?$o4m15E&1^ZA[blhGJ@\a&4jR$*6.\9!D-R)9(mN,Y\Mp'^tgq=nkLt3TBP(0@jiG2Sp+N
%Iqm'$P+*)o6]+A%d57.b?Gh:PoKdnkdHsg2q&oM$"V1:s#UJa?BGD'cTNNN6k$2f1qlnA).ramS,n5lD$7X=h5kQM+f9LBjdLZSZ
%8TFB&6RN/%a`2]Xr8!//TBu`T"/g/@4)@/9]E__"hL0kNrU:$U.c%Or(_HDiH=$;%lJi3<U![ktBhZ.o<R56=o5oA$IURt.6L$(8
%:a"4i:LpJ;YQbe[?C<GZ`hM0Xa4+2P\JLsITT[8=*pH`H(9Vf/mrS]g(ZBUeDecKhZOA8h!Y[nOC,?Yra=8d<OUeA7;d0PO7*cc<
%WTVB4HJJrPY/aYN>aZ4]6Ph9B66UqLSeUE&*;^D<0a6LdAa@D"i;RTVE1T%l?U8BQOR$lne)mS['L^#^UF/"N)d3X>L.Ed,b^7e'
%IgCdPG\fP-@<T9S<I7n>7B6eKlt6!!Uu''7>/>:hj@2'N3prEWgi_.LN="[4K6C#L"HjM7+-TjBAcCn/-<J@Y'79%)Tmc84quEte
%aS5pfL\%K94t_6Hn4LG>"#ANWCt*GALkpOjr?SdAWP`Q,'.:.]R2^,5-'Vl71ljq4=V3d>LK);!SU-H^-VBH*=S;5[W$K.''1u8m
%)C0HHgF9TGV,28K&19t.7'a9@$5$G\@BO^c^Z.<<H^k38*h""a(TKi=(Cq3)+N5OIVbg]I6@Wb>:r_:)VV'-Q$BmeO.T<)/UBKQ9
%0o6m+#rB4WR7afr]5pKr]e@uGg'lp=$MS\Fd0/@Th\>!RCQ;H?V]GGj-[R'@e[)fFq6Ua,BIk73*$<WJ]_O'_k&hS6?[.`Bpja$8
%,=8/_8qE%0X\$UV6`sOt!GGnBB/kT-)4_d1;7-!mL`\mV<>Mk<:pj@Pf1J[B$$A[,J=)S\0B?MQ95:ncD?>F28Z?<i((pqt3I)ul
%OqR\^,P4SN!a8i4F(?Ur&gL@gLc$XJ56QBdoS&ojVBQ]d'j6Hn.[)_?]Rh1GV2Be,:^&+(du.3cBGLoq*[?s%fIt#cPXM-c9N`pN
%/'JFoG"]S)E$AOM+f93G]sa>%@K:VMaAmormN\r&/BpBP$(EhkE8c\;);Z)Yb5)Ur"c+0o\*_6D%bF*(1rd#O\OCIHMO?)0jj;?9
%=4.%p;MK1MQc#4%l.T[lUJW!>AFr<$AmYS#OUb6Gru4j'Lu5:RD.(>k6,I`;)AQ2@+6kAUWWbSiL$RD,(_ah"e[,Eh14rqepipO;
%BTHpGS1QfSZ2[ND]HkGYSQ-Sq)YaHm22fG+&o8pV*%g2h3%CBb/o5<&i;BBPEU.n#h?($I`qDld$1OTHl's^F4uaUVEr?`I7_WXV
%"8-2=R7L7M'lr1O/A-u&_t3.)Cq2ZELj$R6$g%ct#VPSWMmU<\1U^(`4c#<c"T.OH]lZ!g-i<<<a]H`OH[TWoA!dBT7ZbRlpn7,f
%30mgo\VV\Nqr^-cMOLT"98Q;>:GdV&(=fS537<E+IZg@L7a95UC,Z]I[1\K+SZl8JY*(MtOFG]GYNh+j(KV7]T.oWu!U,PceWn)t
%[1PqoaetQG+`k*QNG/Sns"TrSRF&4*A09]cdXb40-tZ\^LuYPiaD!b,2ms0T=FBOW6De0qIo&XV6;Fq.`h6'*CS>+31L#j"#!kZu
%6W0R^i?daDEmHWjm;q'on][Y0jpBPWZBjM#dR3H&IX?2"/I4]fJteD<oA^=e5\GaI1bT8J)R$E2=/pOVL\/<S4OSm.&K'ATPYC$F
%20rHk7(U-9VSc]iAH?)9EGnaeNj,=Z[B-3*&#jVD/JW2YJm&P21o=dd[A)igEf7K7?e>WBb`Zp2S#MlEMGNNiY);H,c`rqmFlMMi
%XWa2Z8q5t%jN>C^ZA,VlhErR5Ug<I2mogS]i[iV\S'cDA6P5^%)(od1bQTG3hmhngOZiT_RB`AA1`,=K`BTpP`Gr[+0`a_='j1#L
%5=6a%=JHYOP8Ghu\"uh:!m@sf="!1J8h3Pp*>tC,<CXJpA1C1B,Woo2fYc[iSNp>uU0f+h!f[&_#nT8`*Zc)EYbB@"o!(X+0MhF<
%HNejC;pSTZJ5=MR<H%M5GQ&gd'=>n&R^N[KF(65pVFEu,m)bC>WK@p]A/MO0_T[/G39$''ltAD]i?d85PuG\)^]IPn?uu&NHSk;I
%&hn%)Hc64#oE8m]>PsEoMnl]$Ar_%BkqpQJA=)"O`'):E#"F7rUS,GP@rMG2ZOq&5!PAGC6U@er)5F=LNi^GYakie%ApcH&:\eNQ
%>[jb!YH6%USnL_>-K/T.nuC6%#GiBY8b;<*%M+D/-lUpC?u<jI=hT'FQ/OQT%atbqhrC6dK8Y%$4air5N*q=BfMTH-b)"kBPuguu
%H%@Ml*^3#p=.gpoL4KbQ6Pt6]'%q*>!FO*c\OnBCjM/PGU28?].#K>KCd)Mk,%NDX;UajD=b-D9/^8?3gV&N1YW8?Fio$Y'/qX:+
%1RmY9eKF5\6E_HOCDi8G`icYja>1=t%S@-e.OB]Z#Le!R;kCjS1fb_.`T1&B/U5)tS@t)qS:Vf_SCEJGQ7.FMFBW./;#qS?,Edp:
%.o4B:+r)4o:;n$iqKs7h'trp#,M9!<f;R9#0(XN(RZ[__p04=hV$=^A*`9h"DFo7V=$W3^?-4699XG4DL_MCR>oZm-<H_mnVG!K!
%#q,aJp^9\>%O!uP2YDUaK*MmGHsdQc=K?jo(&^KpRb2'ApN@;#%k7t/Of,5"G?P4lo.C3\;gLg1/QH?_llEB06)D.M;'7t64sFWs
%e*5Q(U8Vg-cH?W2X7qg]'#:m'@6i[0<!S<a`F,>ZT4Ta*-NEguGb(IVUt>E,+GKDWg7hs.n@l7uIsjcaoEoS?rpU*YdgN1AYs3V)
%s7D2Bd--hfCB(<'7BA8c]0AcKh(4GS?otg9jdiE+.f:BU.85>Q\4sOXB4`t376MeO`@"k)ii<k-PBYdI%'GWM.`c2P>MDW7ghDX[
%oFe<)N#p!c`")q+`6if4GJBg9ZWp@@CkKkH'BS]0SVbQ9r]S:N*`O6*9bQ;U)rV;)hK4FNo,H6o06p9=_6/ZB]k_$l<MLCAgu&V"
%!F^"a^[nr:?`h,Dg:t9uR7HQ#b-IT-MH!4p-FEMqkB7`FKYW-F&@e+.+V1_<dr7FsWT"S`bPs`3s-_-uQN[!5>QuR45Y\IQaL"bZ
%:rO(U=F&]:Z`CF>:(P-"!AcQBF>+$!%='"4:=Z9a&L[rYT`+Kikoh&cAYQ(>@:hV'beR5^kp*ra397=Z,a<1eXKp2S-FTqnEQ_XK
%<n8/$-+6!5#^5Y-8M2rIm@.is+W`q7Z3-G53L6?<?GD;E'[^m><t/e&Kss)82lA(cK7n.3[(];R=l<SW2QFljUGd5ElDZnPcBA6L
%T7DbfKV9)UkY22"8B;#$n4_Td5!_"0lrIK?:ZtX(\1Q&),gOgq!mt\^9bI`-jogm_,#D3/$i>P`GHnl]I+`V`]^RJZ$mFr?T)Za&
%>VU:>EMao<O&bo]\B@R6@e9t4Cca;-&k0siMGSE_XTZG_<<NrY'BNJQie)t+86X0c<_Z[R1'T5>?#k;P=RDDhq/3SOnG?*tcrV=(
%5stZ%>)dG&ND8t5a%8rkF^bN&Tr'fI/%J`F9d(.D*cbEYpDltlOg;!d_=l8!25sqBiBiHD,P!^l1B?C?iC;l@:Ph_9G3OMjNo'b4
%*F2]iD8pe_@FZr+6'HjE$cdo6f4qZE5?Zb!QS?'4rh+H?2'IIf%Bfo_V@P:Telq]P-o.jN-s5>&oSN)cG`++ZD11C.l\.9A9*p`"
%%18$2P!u89+N]c1V!Ca`e0m[&6)+hoJBr.faF.VKZSptJn?S(LPK#N99?h<\TG_,qgrTF6liOl@=Z<5#aaA,)*jp06&gWhskVblJ
%S&f/"/$^n5]:CfZWH:^2W@3qn-.FDGG])@c',Hbl$($J@22*#QLomUENcYi,c'HJ1FfSZ=rs;XV]cq9m(-[FR,Xri+aM;fkgrJgp
%fMf/[Y:'bAoW=lQ"t+FucoD/+kSnMP0aWF%b3Rc*$"m>0;OVRmc$J>t&atjjf&D`+*XCJXUO!Wp@4$"o,1XosO%uRn:^]i'H!H9_
%O![+*oV1Ur[XIf=RZ/^1C<_GWfEg$i@7r1V5noYg-PEi`LBYk)T9TksYUC\M.EsRrGB[G\PK^4l?k`(nBC2YG,uWRs@)PM]_^`e_
%/O/-4hr7<ers;/$]7&GoMm/+K'SI/9"[=I6&]OKg2:T:X9873Y(d"MuW"kpeJ./mN@c\\i(jUa4\3WD#$BsF@b.n->5lj&"KV>=n
%Ze,@h&G]!o>>MLAd)J'6X@Qn1:+Wi/ed`*"SrcOAW)DX]-!sTELuQ2p=ZK7C_Mkb@UG'OT7PsR;6O.jO6u-X0o&gG`s*sa[mj6!Q
%RST[Y`=g"$@Ij",NtUd]QNSdE*p\lC;j_W[f^1F3Zlqt/W$+Q_^_*\NVPg$4^alQM8=`n;VcGp/[/=e0H7]I32)$p\QYB)(U+IY'
%883MQ5R)tL*[>GWHk^A==AEN;!J^iQ(/DuSRlqbS6A%u%^OgtC[i\1g-'n=_86%gMJ^+:uUh6>faD,FoC*J391,@9.0:3GA;HqS.
%9-b<R8@ZNDTNHj8"LCJrlsiQEjuiMt91Dn]n.Y)eA##kU+sq$A#UA[[2,+6P;'cmJ`8Q$M`-Fb-8K`pRIoWQnakTI^OqA9UPM3]:
%7MVRM:Ck98S/Wrtc-A&9!^-cmAeMWe*=r<Ro_%_J[=T=21`MmEn0+R]@^We9W8+.9&VQCJj[E%K[XlPs+j::G&5GTFP%;0#E+38+
%95`,^=VRAnpi8seCF"gb9*lKoM,Le)N[,j*AI$?F:c,'Rh$A^pi=pK@Wa"ecTVHj!M"CCSTV0.(5^87L=*jha;V=;_I9j=%2VL8u
%=.KNJ1]2A<M5nGo[qBVsdtRK&bQ?m77B-t^>gAB5Ac['k.V5XV\kRi'r@X3>!Cb@a!q6<);fZ"iBll])9YW7JR&:V_ikdQ[b!A[b
%UKL6'>]IWBXC4Qad&9uE*O_TSNY<tU7op'jE.p\CO)sMASA<W>Z?_c:8ZCDn:B9qL7uJL4)EK++Cl<lUq(rhS(4`8ra(Zus">,!+
%A4LcANWD2F?:l%#nElsqF0&uUBOAdkAD0)m?&0#DjH2?PA6\olX&,d&a!A.($GrX$&T&@"`6h`,O5>(+#Bu%j\l+PZ9B.Jj>$&V+
%;sB;Cn\cB/G[.NOCNL`a$H2nPldM5oV?aFg*f5Oj\3d>ZXqU1<YU-#dhNfssk^'UNBpZX1+9jZbUO!?i_k@.LBN.AZAP>`BmD.,i
%=esc?*S2kR8L\H]_/VGY"3e!6c.iWhecMS?Zl5Er(XltS<($a_?:H&@FE<_6\K^O3B#ZOkiRhF:-*"f??`=1eACZ$<kFA]066WJN
%U8?m8YsaoJ"__1T,)IP8!(JOEkQIQ)Snj(J+imP(-A)_^9!PDQO1UWX69r4rjo\u3N='bEdKlmUXka@W1,%--SL';sXERcMmrZR3
%(7u)6K'K7+O]Nt<>kCu^5RDI5ce%K"1[oR<=jO\<1!1J'lk7uR=Q;Pd&(q/?bV<!T(564c80$c6$<F/CGHV;gpM#>SLJ5*SRp/Vo
%lMc5Wb.<^eU2mOAA<'?K\U8aE.`&7d=;sLe,[a<n(uS?#i03JebDdUMl(Mp%9IZt_JkB>@'0(=ZS9rVpS7"&&^ol*<b&ICq9im9g
%fc_f6g;^6Lg/p:g%E!j9"jMY5/acjp#Qnun$lqPt`^Vpc0oN>,`%^nWS^eR*VS6"CJj*4nD<YhlL^SNS3UEG%=X.%JkD!ZlAiG*!
%_"ZN1)tdHtoX^_6OWL,ZQJl\#/65eMVEc_pU*AY@Q)n1E"'.Rg*Dj#:L,lt*(JuKd$RH&^fk^80&9SXE`M$eqJjds2Y$q&]>T^"X
%R%Lp@S=-NJ\>!.#"s)n8ZP$_HrB6-W_R66uIsGo1Edrf,0V:kQ5BHi&75tH+,d+TLiTLss_d;JE7!AQ=Kkm's--#F'HG3_\"N\GN
%EFag[/&;`i7nV#Lh6$n.]X8l.@$a>"lm[jFH+-\%,ed%`0Ct$Ge:"&qT`De.eta%"C2"U:>2i*5$5=\hd-IhX6./'DU,hh^_M,oI
%R/8D"H#Gh"6+\e8HC(4*H^A9S[+\2l:C-<#PGNf;?>LUr&YOT$jXc*Gk&OHDTgKit:1U!e%"%>8=s0ou<BY=@78'PU*l5pT)-UZl
%2%^L"\e%=/)Mb=*r'3rn]%=BRP^GTKnV&Kg30.Fog0l(L8kY/a,tc9\2YP2d6>K5F#Dt$pF/mA4=`.o1G3]6h![8<`\qcU0Q>H2]
%RfagWJmB*`<0u/Q)C6F-iZ@s)>QmOp"<!'"J^um_;I4['R*a,e4I)'3L>OEQ,r>dd"AQQV>.pbt=cL*s(tPCn<\\]M7:09<CBro#
%Y;IT69GKNuHf;D5+%Ud(kMsRkX/&+kg(^U(_2QJ.EMpcR5K`CI@.'B3hkTU\Nq4<hhLbkc6ml)^+Al1$cHhLq`<^lF@.m/p>glM3
%-*b]hZq$XpMM1,P&t?2Pfmoh#I::1X\DOBmi4)kN:G"EsPT`@6?'`3p.eH`VQBd+edpEh86eU[W4KBAjT5j?_ET,n2SHg*^q:Lg\
%^ZPKQVN3>m&Y-c\ZqJ6PBp]ZH(?C9f3S3YKkM2N+1H[<)nRCgXr0FV`-\R).6+1&+AU+PgH%k:9(;QN8Mf2$&Q6h'V/'6"E204#Z
%ih73E>il?oo`0a%DM)>BFn$)?1Y>7o2$@pLiqeGoL0j&C'iMP\>8kaEa:!Aqc^)B`S`Dd9NLdDqjg1p)a-s`f#Y(dlG.f0eED0QU
%$o_B2T.&ion70fc^q2uPkqYZ>U(j9dPUCtSIJVTG]'7^r2=!Z42%Cr?lPH.(d:2IFHE/XT.2mt(Fa%pmk8;OFLN>*fa.V%:mD/fE
%*hh[%A>"r<#2HC)Q"-Wm_+&G)n9CVd\Zf6O>JnHl@T?ji,4SotR`mX!"Q#11UIF/I0/C%2eP^L8<_jr7$R@tQ)B:c<%05)?Hp3XK
%FOJ/_aDp1jkp_pI[NgeMbf';+:ojiYFiPs50Mi81M<!./!\R_8!;0ioku>!kT+C40!D]VsXK^L)^qd!i#hE+?,npk=+;g6BeOn#<
%!lc!gpp/-cW42h-B?DL<+uhEnh'L3WJn:Q:q(i*u!-0\/:J^!4Lp8-XX6WKShP'CWJb)Hj]-&HTYX?T''eH<)lV0Kp/e77s]259p
%0$<^nU[c5SdW5/U;1%OuJl_Td7,SLY5[bmk)QY[QZ`(0d$<dR;FZIgRS:7NQ[jDK'G1([YQLq#_FT02l[$YA-IE*Kq]#O#IpL*Rn
%9F\U,^2??A6ANb2?]pbI`?)mg??o\3B/T"I.M=HN^U]$^W#Tkj[nWq?"q6i%%@D&a=W[5?Vb:F=We`D%)t=)]"3/nPC=q02i(uH:
%Id6#Q5TY.j``$U1;$o1"\ajm<0-mo:I>$S_KZ_R%`"]6qW<#sX,(HJTi]^eC*2<s@>"K/?>02(/_Q"N]W]UsPm8M7c,V.>^SPWV"
%EE*l>0G61Fq(sFG$WT?Zi5R#!kdYe;HCNS219,;K8#]TH^MKri?mneJ%$PaXO?.*N>5L!dO=\R/`l<el.pYW&p+1rY;LZR"O+kG1
%QF."eT9QnGa;I;#Era2WHF2#&E:n'>aX9WVkTX8OX3Cdr/;^cB7#bnaL__^TrO&mtCX^9[]D#GB-,/1a@=Qhr1NQ#HEf"T_a-8<1
%%OIMEp1['-c,=/`"@<9"c],k:%Gb:Z.r#?a%%ZilFh_1,YSn3Rl,V6b4q9[>AIKhG!#s]c5m8P9kXB?f<;LP8%@qu?,.@REGa8_0
%\:]=P7_6\9ZDXe;DnpmO5]4[ri[MiT.LN2s6o>%*-28N)9r2=W#fMd4n@%I>`-+loY7YZ-&f&/9j]6jEYnG*K[/uXR7Hi.iW7V==
%hl.9&!39)u\>k*$Al\72&s+UfX;tog3l6p0)"$0]HnW;07En?76T5W<Zk=ms.#TBS!L,]:'SD)-\9Y+u#^&itSqW-FHA&):Trb2&
%[lIjT1Wm<=%b3JRK/%>?NNVXo$K*>:+XC*DK-@Q4Q1&dn<dhQ^bR4Wa7X]d;:#=lJ08<(,@Q#_;K,uZX7I>(:"<*]g5`(Sje9i5o
%daDE0mMrV@qhE=6WZ\D*m0RB^T+Z]n2]A`nV'^Lo=p2*tkmd_G\#-l?r(\B\J6FR2`-\k:Xp2o]JaYY?,V=q"@PpjE]fH4R7l7GU
%U1M6@[Ml)&MAjco%iq^@JA94@YV]Gq:3,2^C<*[68JKLr@:To-p4n1>Go0YQSodR2]e2%4UG>i?o`UDI6G6iqH[(gCJ(T*h(*c0W
%KE1.f<P-7V.](gK,6jkWb0U<HUb2I(BK5iA`1XUAPCjj+e\bZj=AW2N#Gb7[=gUlRFlT5g_l'!P,t-1<,$a3@Y'qamP`m]8F?-UE
%L`r>BHVk>ks*[3>OZ.t0.X?16a^#M*3$Y'ghO;[6$sdNSpN=GZ1],]$PdHF3(c.NNDN.h7\gQg&O5QJ\U8hA?W:7c*HDA#MpJ;/E
%3TX###Yj9e44RoKalg2,ebqV^9k;f:k"ue-)HFa;K4M>e3)BM--SRl/UN_Y&'Fq4b)oH(eRL;+0._3Pn""^'24a21-kN//]43!1[
%hZ?9U]c]V)@s^O):2LbL,T-o"Sj@P*>d<$CpJ;BKYq$rP:KB$M3W@'aK3^Z%b`c?+4k:3oeV(4r$"e=!j^\uYB%3@IV84LPna^Fb
%o<=HYY:+.R'Q?YIi2A.k5!<?PRR=2`RY.VCTs,nCd9`@,F@[_VFXD*s*Q=I]"W2$<GH[D\%fHjC$CNC9i0<6iS80J?=?6L1:7%?h
%=u/1`i\n)9CqEjG=H3"qMsYd]bn:AjDRM,)MBK9g3l<ts.;(IC[.KNRP*67`E1"8AY7I7A\4ep)l(,^?9mF3>4gpl;,4C\9RFOlg
%m*\5AJs4t\Ji7nr)%[U&\,>9&0*(4*@?'c0LZ41+J+dh`_UFAo@ZL1A-dIXCFt2lqiN[hu/6,*I3hjaj,^aXYTmHquq$A](n+-bo
%*;fZF(Yjo_\;58*Ib^K/&_`bWK>&n>"16[[Lg#%#oMJl$k=[\`S:/dC>:uf_mhQ?CK_mTK*\i89edSed@17>++Zn6C'?F^gjhs6B
%:$7J^/[1oef$Lj,,ZJ`e0-3T6UK1im%R(*98#0d'Kt6S;TPl]PFO%*F>Hsl1l;hfk5h"h,=s7;P[10skbN3FU!2Z4/Xj+8Ve:Hj]
%4Vsr^PJ!VoB?@MI+D<Ls#9=Ua6:d4oL`EgQ!`:c``E/#ciG?b2s(nO::_.:Y4O:qn-uBEn=&J@lk./D5rIhI<3\7]eFpF"@eC?6m
%T]D;L.1m[q:`71TC(;E)dmR)U]P<jONmQf<CQjrr-^A5_AV>h@#@?TD-"MCfB;<29c]F;-W8iUiBo/*sfP+7nTf&o"T5Q1`k3E\#
%cM[5moer,5`Cdsm-:1H8fBY\BfL`rpKqVt<ok&#q3<[BUdFN6,X&[%<E>7$7H(fcf-OR6s(bi]Gf;r1o$JQs_nKW:k-Q*D0Kh)3l
%mM#`SYl-p)o!WVQ/D\iEO:p8KZITmFG1[+6=N.r'?HRfo0K9>V8$HtI>;9(H);i_uO*^A`:TEUGlG=\P%+AQ/[?>;=2;BR<B^V?B
%&[8U9&%"USJ#i*=27/n]K#ff7'tB<S]>OX<i:mH\hT5fm.:fbF$`n&H)0dWY/(Z11ZijW5^=GB7'\<%X\/LLn,FkN>/fn#4IAqpj
%`[j#::d&%jbh=D)72&[<(I(1X'W`RK(C9E3d`R_-M,kXrdtCb8)ck=Ob(/J%!@J&Pe45a.PHV%8;j`>\_6Rd$0g\2r,mks]A\&5g
%-%c&c?m2I7LBjgCi.2Kilc3D_N[7/F_CB7CKG]d*84CpgI(::PX'?8q!m=ERI#kKDqZ)o_m6o@A.8CqVJ;71KNL)LkbL%l^n,]aC
%3,Js(.<QtS77HoZG/8a$V@fd_d(O.Vds5a8&pTKnW9RJGfSo<p9t&"(/f1ia'AOB(5DsCMZ1eWD1"1!._c=[E*h>p+694er4<`Q[
%6EXP7%=8HtUN*]1eC7;08eZFi``Tur]bGLVA.[*cQ5otf@)B+be^bdQN7gs*?9J;h*9Ns$UE+\(P.PDHSg?Y>+rCnc6gK:=3omjj
%Y(=+)&_7:WU$tQQIm$6Qj7"X5_%N\Ml=+Co`e')[_FB70CY\Z>:E:]<1naMD='0<nr4J'D`GUt,8d4lr<u<eiOon=W.eE]ngEQ5]
%0Pitt/#5KGT\:1*p<X(/%d_.q8qB1n@Crd#ims1u5;TT!`s9pH6?,M?1k>[&./Ln?`-8L0ER+'`YL*tCc>6u$Y0QJb?_t-)hUjT<
%f[pllJZ_>#5T:%bEau2Hd>dpfh.MFnCg9mjV=\(/N3kF$fC_,jnM:sC:pjRpJrluW3!IC%itRg-e1,oRG##uNTiV?W;#WuMYo2.A
%s7Rt:A&D?K4san/$D&RS3%4s^3tC!\*`c[6\8_6a&V?e@gd=)#S*$@T/DF?F<J>BAnn*KqB]<tZ<eTtCBU"4)[PM1JeRJIa6"2Ap
%ZdJmN\7VABJ[/YiK2I+l5$o3E-,,6D4ncV7XtaYo.h4P$5e2XN2]o(dq)2YQ+_/!*\f)mf_%5N3W_Z2I8hHWup+hOf]s!VaQ:)ed
%5QjJi;0eL`me"3JMOM.(h&#pn[iCqea1gajJ6hg?MD$dGjZ8Ob'hh1ZBO4o+nk^<<->#S8-n'd/bW7sbB6_UZX9Y+i>XJrM,lePB
%PW#4Sd5k#II0e?_nQL(h:!5Ei>H@NGmm]-)KFq2&*=+83pLt,8cqQ$5^iY67=?./_KfTSdQ\8tiFX-Rq3;!uu1&uuaAj81B@6!Hf
%)[qo!i[VMlVC-A[0WmJ?A&o.YU"\P]RQNWlom5p9lc/SA/IHA8Yd*jG?Zo\G",35_bjB5M&6m+b9kG]jR)Rs!'rS`i(926*3-Ob-
%oT!4LKo/1a<P!u$CLH51\\6/d)7%S`bUA3TQ7_rtMkL80C4IfIO(EH?-1(?tZG#e2M^kKJ"3i!`an!TAX$J8f@X@hR'dQk`@KfEo
%V`G&mLR5VN6d>X!-g>Q]c_cM#lV>tSUGm401`]^p#dnX!AcGFkkk)!_QJQ4tkFSZs^HcoV]ig7Dj8!u%KkI^Z%a0X[r^aLkNhP,[
%ag0:X;/3Q6j3oKQV$t$=GTl(9'u>@\pORImjIHK(=G`XWjkO*[k\)k(9sR^m7brCs&,4T?54Y"[r(".])*QLR31EAa=\MHTr*rjM
%%!P<,YAb>1GNd8EPdXF+r6f1d(76l"1LhON8G)"[IL42D3W;`+86LE1>%\niMSeT]q$)(D%29XL@RD]H:>??UL^.*<gH\&uH;4LK
%&0Hf!N[M18B'hSc2$(BCO0(,V34J;B$>hV8+Gk@8\68Yr`VXh[W$tiY.][%7';f,#"Se.^DA8E7156Z,neo.c$Ccn<+5PN.[^sI>
%3,Q^W,*])/'Rr&%%*n1qQNa0bHmXb\WU>1VP;#[n\U;UE7;&@ian&*^>X``YM$tX9"5Z[S8hJS+'Qt&,s#b#%bHaTm%\17$]B9=]
%kRTdV);UW[aj1Gl+9&)D#5uG=74qG1r^!h6S43HDZ6ERGb!19mpfrX9r7lA;:Tp.C281N?[fHkIHnf\kLdnZ_O?*0EVrqPES(Kl'
%9g8Jk1hM(YSXHigOHqDR&kA8&`Yc_LB`2!f;^S=gbjKT*;Plh^:???[Q(U>pjn+5n:t\792jHfVOeTFm>Bd#2HaSr#3nTF+F)KW+
%0<U#LWkhob(+O&i7tZQpda5l2QG2j2/`<BbaOlC84W#cV39:&u>[3<4Nk"h'T@;n3\Ig"f-5dAcY][;uSIHlS')=fUGYWM\m#JHS
%&3S3sUl5c^Y_N36;/>mK^Heops1KiYP$I=$I1?!>61hGV$0%ou^OSOH]GGBSq><_EGU"]4C6-Q:a8Wb%$f!AhQU>Tn=*5F.=6a:>
%QQ47)Jr_TY.NKfHXYn>gctfVP1!0g)&ZBlL6PR]d,+crubsXcrE],YSZ:DbjU..+J\*,/4Js,'MF:iKpY>M8b85`FinZ+;YH)LL-
%5&%\Y/06DfF8i4"Vi,"5W&!Ekd8cK8G1M,oKSHlOAEZ,r$V2DM`XJ.&8,NF:PS=3I:.9/Sk_:W-]&(WcbCZ`Q`ero(@ar>QqJgg<
%`GaSq>JO/fki\I,FhC]VFX%nt<Smm`4lRsQ:7P(cJu7aPMKKVEMj=0m'LJX)bj<k6-&."6UPB2BH?;$[,'CR5RfsHq3i</#'%D*)
%*=oL,Uns+:5I&`o<tV^kG.F+jkgIO?Pn*SK!E8!BW4^Iaj!"rDr\t-rd'<;bd=>tqY[tW(FDQ=587AQ8J^3OZhdIclDQ#7RUU637
%,Z.OE8J8GZkm[.4.nRnU[*P#k/719j2ek%K@ZhLu9!Y7%d54=.7ZrN2NGDq]rY"ddR^4pa@q'uPH&Q+#-?dUKYSa!,oUcFIJ!lIa
%SmU-$\P+`#77pqs*RD.-/G"RsX*T@CM0jln&hhH&`"(ZV<4_#;=WRjJE)hr1,iWbn`fOLq\XcNl*EF"n/+o-l-[V9We+(.an0gLK
%naV[=a6`@sn7?rB0)m]7+J>(R-gN19.'$*E_T'>5laInm;)3q`q2A:[0_pp,IC26jn9[M7a>YU,8k2?:1H.^+,T.2S&nZ"a;\9!T
%dKaf\#\&=[[)<=i,J5_;@/%VpfZMbQVYer40/8p=klmWCOGdGg:gFf\5_]XTWLcpH\-+KXMu7VfGBT'd=@'2[3(D1:p4um`&lQ<!
%%FT6a!RCmK.C%o0q;NK.7(#m;7uM,:BE1A'q?]#eet_a`J;Sl8WFidq;p#,3SEN4<8bA\lj]9ft)XbXS+N8DuFSW&tX01F=$6$oq
%5bL$k)Gi!m\!7JlhQW)+Ui')iU;qHA&*u+C,#h!E$Ru+@MA%?;\pF(K^j,(EGR#_-mY'b\'R$0K@2,TMq,k/Dcl@!BSb6mPH*`B=
%aX5BP2QdY5Ll/VhR4dTNYJsdB+[MBL-+p@R@GGXkDoN*@*MABa:4_+5="0Tb#Re+dh&i:uSPcWF?<Cud8nfloM8cQa)Xmj@eer35
%,-M!/e[_V5CH/p^CP!f_)@KYsAJJ1%<&+[UJL9S84++FT^L3qT#o?sM96N7fID6/]%c7V3m=SIFp`m./DXX@T/@0K9^R$ugiBr07
%BYM4n%X-14$JIA%*G#J09\3@+b:l"06pe>d'(*>$R;6"([J8nR2sIMAf<.'c<7FRHCKKC$K'#c2i_r8cJ:bLA!2/#:77F13G)O`j
%^ujH=-n_&HFkfB"700Kc*on7GW)'">-0hi2.<T3Uosh.M&.hrF+cK:S;914:\7F-.Y;B[<=Q70tdoJG\Bo[QMdoD)dXUKNuDmpV7
%YAHbWQUgfU8EBDd<%6pci]C&p=4)H*Od(h+C@-g29#<+W:F]CT>fJhp#fh%AHE;IL-*u,hF&t+^@ZK\1.5BgsIld.cQp(R%e*i]<
%,SihXGW0S2/sHDZo\CQ8(0-L+![%Wd+JA?<$r2h`%jJnp)'tP0jWK+D-%b,59J>`9%!h^&*)kK_A54ii=GkZT@50_I$'cpn?Z%?G
%ckXiCU/qA1P!&;i7m2Le-^,!SoHeJ@^+`SuWG)("-*<JM7<dLs7`CV'>Lj"eUl^Kc`T["9!XYl2!#e`CA327Y!G#*g,=]]1/=^ai
%.b;T6!W2?RJ4?JXX&S81iGt]U;]+>)aHt[keDe'Jb(pgFF/'471_t"2(cNjq>]SQJAO.+Q<P.'B[e%tj_PGI-p?of4C:I[j6+7BJ
%_NSR%gQ<aHGm2(F-*"U)g,@(S]P)kB8delTj$CIcCm`]+ND\0Hhg9"da=;t>Vhl9"^aZ4llA4](KTq&B[X1N5g'ZDmKuA%$#:lcM
%QgW=UVolH;]B8Eu/UTP&Y2OOY#;jIN_Y^eb%PpsJ3/u/G`;iaof`+\[>4ukaMtE<M_UX9'jiU^FYYMk\j'"e=XHq_\$I#FeX`E)]
%//KZAOg-`?i-Eq=h:ElY4p%dER_F5iNVF3"@!Z;7]W>7f\Zf\bH1m/MlqK0Y4?L*cc=Z%K#oaD#@;0__X=fJN&CV`CAjjhOMM-e,
%NC:*QjO+k]2;E8AS\:iY'Gb<bGlT2L2r-4B=#3Bdh2Sk+jb6W(P[IK7RGg>:<,19<389CF0j\.K3&sa$)@t7jT$o-*]8!ra\H\60
%c5ns4a4Win4?K*]AB:Q]YYK8a*e4?@45g>3afE9@$b1^,>Y?K%JpIZ#iKtr)MXobODB&j_2ZjAgT:?8$]$$3R_g\#kW,G2'UmAfH
%obW?U[3Q&EQdO1qMb&V\5ilYs%LX^)1S!Pl.aX-=KIYFZPLkOW;$gj8:5Acg#1>*$_/Z'<V"0NP$h>7p"V@=>=;ZlXUu@VSUPb?C
%<Z-/9N4#s7+YZ4E0]ht>3&/C4aND!e(tij%n8]ddN/q:5;t?`&X!%9CcKO=(citB&,/POJU(6QkYU*.pm9gVc>&fE6](HtR5*+*)
%R?>eJLTr1i,0;jbfu5tB:aKel/,-9hJa4TA'YnIqq'8:P43;Kbn/oh%0mPuQ,E!,qZ.kW))m<&Rfi(OTT((m7j!kOhWi(J3iBtI=
%$[i&3o^hnO(.H+6:Tbb31[m=TQ-n!\h<jmhc&g:EN<210j9sWp6"h+"7C]LY_05(=)[eS/oS(2QlU)T`#l!AQ7>j9OZuYn36bG^]
%kF_X@IG(a:Ah_Gt'',u[:rN/6"siJ!.u:79`ENS`$CEAS:<dI5T8E4hfI]2D)LC7"X)(i?X[8i6PY_Y!npMU@Y4*E2d"PFd7>]1P
%p1Zlt[3ITQRUbL>CPRr2Q;03I6QWKU[WJe3d"8LQdfGEXmShe]iBN^@(MY]9F^+^*(3!;Md_r+.IA']e=&78-Ygc-:TC-uO=ppBY
%(3#!nP-:EBDUUed3_^:]ffBn@&P^F!5'7unZ&.$'`9lJ\ir7.HlKHW9!_o)GY![c>qfW:$H)>*eh",8HhBsd5rm;a@p7Q(l]<<cQ
%/Z:M"0)c\ni&ud8rJAnSfKYlXI4m*Wg'Zl4m(REUPq34#%dI]64`m>_b"#6Cd\X'"a5)1(1,Vif-O.c=CTQd!-I_Foh1X:-7dX5]
%;fI"B\l[<m=cb^-J43AtW*<(5^7u\FYq*KG8eE:nobu=)Ak"a<4+QgD^(IY+_!\90a?9.(;f81dYb^obE*--dB-e$Fg(-`npms6?
%bJr6nagFb[%e6uIlLaF$7ZhVA.]j#<,g[?C^mh.%pf5,rlF35$&9XSj9mX2+b39B>&aDkg2P[hg2;MuLD\qJac1^;!MOTIlN_mE8
%S#i*:Z`$ZM?"H\:&W%\=1+6k.KTAZB:01?]6RWeYEXb$q-9c<Ki/I"02*fY=5tMb<Nk!XbYgH&CqIl=PD9ugk?/s90WI>J2G_IuR
%c54MV@o]quDZ<Bdg/.K45crb=darY:2eu#fYH"i7?cI=pCqFCUgIeC;G#*ji=Uqg6q+1%VBI$A@a"X9XQ8$aD]t#+VdfB"nkjOAG
%#Hc,eiB8rd(2cH2[P3mt"XZS\rqITCH*%+Z1CF*!0gUeY>(7'=4&(F:6H:X_nG9RJ0J4A0K0RE&qMZdX(V^HZWKT&;\\+/S['ff>
%K^6tS*):[f]%l^;E"i)XDGlLGVWQ#BrJ)[%39^n7[,TLW<?A5CoJals*]=aOonja#ouPk_FUVaamGdNVHO)8I]K3NW"rqN-\!Hs3
%l<%Dqeg]!;F!='BIlsG_+9@pGTX>o>131VH.'^cH^<nT3;lqbb:A%^QosTZ_(-l>r('B#4=S_Sc+N6g[+F\ll:uZ!2G4pX!MaNS<
%F#WN7RMioJhiNJ5aIMKE,2k:,"rsar3l0Xd//VK[h[pGiMO.,iOH0QKJ73-EIG%3:++u*qj9"MKH;hYl7B>il>C\)i%?.=g.'tsn
%_Eq772!%d;`U`[[fq=Oh2#[*1YI1QZm1]Jefca`'q.#gPJHF;n2kaRHmG"f>?aF0K#IdE*hhJJK(/R=N&!:A"!5lGSG@5saV!Ys"
%"67RUUDQ<1`Geh^eYl$NmEg9?FMnKi[:%*,h2@!85f@PjfP:t_N?_LrBFuWuA]1[6?LuIl6Bq[/DYGA\E@FU]5.DdJW`"filqG(W
%9J0;OE0&](J/CS897mY8GOYn)-/,rZ<,h@PmlJ<WE-=aK=kl8ENE4*9!`_U&Q#tG?s/Lds\dDEE`WTs-el/q2^J3F+/HomD;iAO]
%>ae:C6e#jfD5F?<e_uN?J>o`Y^UBR`[nn1@V;7XG7'ZOu1<OQP"h;RHW<2Jud=NmnN[b<aaPhin+S"ecLJ"ET?e"VCV2Qg=B<YX&
%/!3?229dUO/Hm`.@n3Jd'YuLXS@o0NA"^B?>`hskI]_7[Xp('^[2dF0]fAQ!;29,B(n&aJXBKPQ2q=TS98/Dl^,E8WAqg-CVd/)`
%+R4X:Uj;')T[Z4NWG'7>N7KL/+4lO*RIYf36rOD/<al':e.nS2\=Pq*V;@(j)YERCkU6!6oDZlPJ"p+j#D#Vs+535?(p9Pa#XP(]
%Xj5g?]ilOpAacad2mh?,ked^@;u-qj#mOT>PptprSfJU1R,,OTm8hc@#r4_3HBfljpejQKnR1G$-2<>#f0iC%*U]u,@>]B:a>9du
%Kp&T>R$6ZM_L)dCSK[t;#79@jlO;MnUh?!6>G3psftu?9LK!mbKR#)X+&]A\C"hB;`Y^Q9_+q#&QHe\Pcu06@IM&grCW1/O6kf-,
%B]"h\;rtpbmEL3ZXZ.*B#Q&u9dL_k<Br`@)2+fNX[??K2MZpr>kn2;ZLqMBSN>Km=>$]$.\5[Nn4j4='=tMgR`$=kib7!+?9.-c_
%7D,`Ha(%VC@9,SPVF0oHHs5)NIX&@+GH9oj5#CI/90,7"[kP/tW-Mp+6VJu.;8-45]]!3-[tc!Z'GPgDXJ5/fnLRZGhFoq*!^9f.
%N+\9;/uh0g-K:mnP9O'?&1tAs;n5e$m!HM>lufm^FcC\+R1TdhU*7'$[Hru)c9/Oj%#aID71Pc.E73r@e\DbG#L#\U87ooe:8891
%*r!JZTem=XO/=EAVDQli4n*#Wd&b1*pah"LnLdnJ('W.meS'V17Z,t-+2Z]GVAG@AVQYEl2ffss<*qUIBd[2cWJ9t:#u*Z[OIGr6
%oP'n@_`_5NrarF*['+>h.!8^'Yg(\e%TN[>aurJ7X>*l]@'XU?8k((IB$[*7r/8>Wo7cF9C8#'cNCWJr<Z5)UM;!&0]5D$C]X'_7
%!itE'GQL/L;Qm1`Xb;M-+<]!-WTXXs>.+g4GS.O&3P:b;XQsNr[.Q)ZkjXMEjd/^AX88hX2Y@ue(iB)\gTsHgFXL2M%Wqil*l_.5
%B+Eu1H=5U+d:R@pcK/=5!SRsIZGAh#>?iGn*a<Z"?lbjEOK-qKW2ZI>g_,9kegJRBeNd-;AbD2b(a<h,ab4CFlq$*9/NJhf*\uts
%\r=G$-2"c9ip<AgTiOf$b/fs>QUVIs2?!be#'@(kP"trESR:$G&+3f5aJKB!/3,4a)G+74pRQ5;bDS,K+]+<E*/)sH;oV[)moE.C
%'8VWAi,KP23I]S.,b$lYb6>Bc62Pe?8qNSp;T'&mBo&AM)rlh%Q*Pht04DcL;VUoXA5(K))k"=8F$gC29N2pJ*e27AEm)X>p?_[/
%P.r9IdAKF3!):YF6:Hek7(gUQBJ1iR<nUQH9':p&-ECM'oE_6["T]N&&sTD+K*W8Fme!1.6%4<B8auUQ3:90E97m!]"srP?kH\V+
%N'95eYkNo14-1-)Kj)j=>Ka"-H%a9Y2C>GTTT``#N5^/ABKp_o?9@LLRbk0`+/okgT.Rp<lnTgfb!*;L9:hk7M<!\'1e4,e%C.Z6
%G82Z>1;B4SDfW\r>K?\Db;Xa&OdMp8QrdrtUS*BiS'M#PC76`_+UtVnRs@&%>:r>^,?lPQ*keTrgut0NBmgo!HVi<4_gF:_LWRAk
%W!V^BKBq-1N>)_^XWe"=e=*,n1op&<Wu2`-W*tE1)J:86VDd^'bn2'64I/,.i#?fdVF+>kHZ"3qq2ZFG+UX#,XYJp-np15[?(8UZ
%U%l2V,1BIpb"*uBU@8lV&l.K.&FU0.KI_*`_Ks<:2/:0(8n53s,1rlUD@?P]d.<QUF;ep<f5<=e:ugt%CXHAuP6B:oeO/)<c4C<u
%?_gG0WJ38DFWN\'06F;us7dMDJQIq/ga<H;aV"-AJe+PEi,gds?T<D&?Cf[j8rj@rJj.42eq@B4?PYAl=-&#'/rE`Q/!^NK**l"Z
%W:=^@.Q??nN#7Ni6<taM^d-!#&XnTts#Tbr>HEYT?Mt=qBA5%Z`ZPC6Ki,J&:6l`/XM>+1,*AtSgX""Mc!&LD@ZAan/>sC,,BgUb
%r$o^lZqH?bK\/,`XAjtPV^J(tX07U.dJRh&fq@lF;.c:>UQM3LaW#G\fqD$";7b*Wi'iX@F$KO;JjiO7$*ZfsU+\P9p@@Jq<k0jl
%;s0Tfmut/TNmCql)jPmj%!cJh;nX<Wb??6=-TL6@oVe-+<\tS#Ns)A2T4qj*/_8qQ<J%HL(_')K4r$qXXXYqp,*L$-&_0Ldl3KnS
%&nq&b`,52\ItoLK4&uV3'N&kn;H_FnZY)!Qcq+,E.#QS8R9-4&W"kKOlN@5:S]N$$*C&&0%LK'DRggpt5_\$-[9FdAnU!M[#!i_8
%b!R!dHX]qfPP*6'DKM,A&<[,nJ]9u&EDMh3%[e%:0bpM/Np:D9[QL*^YSsd:M#^>OOX_9Dh?W8C=bH-W%PTI\rp1$=^'k(3%ONjh
%*.`cnXH:#!QuSRqjFZ%]GQfD';URo?0l./^=JmU^4J8Uum[>g9<LDq>>po\],hDq<-pF?RWhOq@i^AZ-817CCDG?ZCeh#R;7hBaH
%)V&fn"Yt_RP)@*B.P=;EM%34ir]a1?P^ZKof<uC![#mZ%4.pD(]!0[hM$(8jHb"WHdY(edVl"D7Af6qg[Rbp0Nb,6YE\,,LXA'p7
%]'9WGF<Q2n*,t*^VY@Nt,=4N12RHZ#&*EGQZ#luY@S<kBkI.6NW3'./)?(r]Oi1K^8K.-'8DZ>Xop^.RS>#-Mka[e=^^j*J[Rnkb
%&M7_2lNm.,DfJ+EnalSrd<>q;2S?AgOW$^4M`tE+I^\79rV>uJlQ<IU6>2_?d,U.!Hbj[tPU;f;(t;#HnOi1lIY(RQhp_Ar7J7gL
%Y:kh#="1od0W<m))^KV&%rT9ODI-a`e-C5]RH"-r<ZHTsVdgMYRGsKDq4pY\\KCmY7Zs;YJ)_E^7H-r]7#@AW\Wj2!a;F_dTSE5Y
%"KS,B'tJCnol066^0(o@A,.RLO(uA3iGQZ?[L9Q[:,%AA6jH+e=$qhgVm%MeW_<]fWZR>S3g%r,FC^dY)AZ"];Oq\J<8NRKd3GZ"
%:H+MLV']a7iZ]qRjt4%bgH;N-_5?iPRNLcd3Pg`(!_nD4+Yh3AUaGih]7#lV6U*U`;teiu1Y>OMah9"=W9A]$Uh2:lr5NuX:iX6U
%W:<mUTgE82G#4m8eYg+hJglQLBehQq%@nAO"PEt3L&%IfWgH\9PG2B8EPY+8Dd/WgLcVXS2D#T/!HU+sH0dLb@]umUp\C_uFuBH^
%'it\XU\^NE)QS:KB8HP+;A2)`ZKL8^#+]uBn2;Df#"6a@i4`CW;&<NCT[MDXgNnbg[J8+iL>ng<`%/$K-K21\rQU'N'ABF<_=0$[
%l=0i`g1j_Anj2P?@H,c@\l]QHjr`f<#dl\?bb0=F@7'%b))Ifs!T)hQ?j0ndc<f;*Bp3X!^sbiIPdSAV?4B'9m?'#VKK!dpr$UOf
%9e\a]U)s93:;T5+Zk!4@6`40Q6rG;\a3&:>MS&fWg3E5"FtTu:nhLq@m0C*Lqmb(m<5q.Do9jGk$`14frWXMXaljr]Ss;Q&R02[]
%=%`M9B0k+[qNa-[6R1m6C'/U7/a24CVBR%t2Ag%4+m"hpL_>*+%n.H^J('*4&9>QC>Tj*Q![^HBo2X6VDH.fTkJ;\I$Do,nW'i.@
%2\+gD"m%fI0"o*GGI+)/+^+/Y/tj`oQl#B:$9$9pE3rS)hdJN3b!cd#Y0a&4JrZAf_MIkicAaJV5$R)9$Qn(:KCo#e[2Ba@NN9!l
%Wi]RPUb]khZ<q=5riPZtV.ob&1!c]TG[MYLnG,V#PPn-=Wq7UHSo0,OQ1Q!fSd8;?"c[j:W5.rX?W$3>b:/.?O,do%.aa[TLM4%7
%89Y>NO"72@bfllHc7cnNS9-V=Tg'ZtKjpcH[8Z\`(06H]ad6ADZ\o`%/6CAgC!67O8tbHga_Cj2ddr`rXVt&?6GhZ<?S(3`cA#!"
%9*OLaFs+llX>9,hQ,.'`O>&9WFl[OUd)<qS/V%DM/;SPF1&<UDL%_7t4i0I@CliPLcF=7HM/dE+."N9uD0tG?4O,uMc`skl/][h_
%da=3'T)eZGB(9W6,&S&L-2/;ohE#1(*l#*HiWnH,lcn"&.O0YE\)6n;:Y?VZBsUDG?lfu1>3,tTJ]<lJq0XNO)kRYF2qd-!3B75d
%DF&n7;e]Wd'XsXn)ZMY-PgXdLa(7u(lhZ?4X05;i&Se-pN&TLu+UTR6)HN43!@C!beZ/_%*'U*iX$@d;mZ&2Sd8M@@KH2M$/6)0f
%[WjrgNV)smEDXAqoi:?0-p$T@WeU/;/;"n1:fj6:)/^V)X^INj5I920+@rdgAbb"5>[I(@g`9o_QL9lMN4.9G%=o(Bj,s3sgl>VE
%?@]`G2fJB]CH/H?I8rk3X7L_o3H2(aicT,\B?l\tNo<bWgZ'%ZA=pW+[lG3m0$LfZF'n1P`^TO?N;F@B;B9OIlk,J'hHTfA/GlW3
%ARTjaE0<,[\>)8V_*oCa/`94'LFgr=:L//2WX<k?M&rR"'c.#$PAgYb]Z<,t:,>VGUGbJtC0DF^Uc=Z\[#Zi6]"Ff\Ti2U'-t3%=
%!n!B+7RXDZ\!hUW[#RcKC*5rq(V5*RK>t65/614UQ)nD:W&@SV;nH)+`5O8!blm*/ML&1qdS8%94u"(W@EsBjX-TREbRu!/l/cQe
%6e(akY6J359cp[jE6;Ij_M(B2isP.\.Xq</pU`*8esd(c5Ms%j4m\f,99*c+Y`IW\gq64'a;k$sJ15m+OY)6.';J$snB.-r&</_]
%b+3$G3Bq&Bp5#HC>0u<`Tg2<B[\QpHnB7\_?m"TAO0@Q].Fn6>f#rc.+n]MaQ7Bbu6%YV4)YGI]'I0Yibt+YjmWa-<>&b]pp9a1u
%78K\EdpF`_^98K1TZ0$?A(Hm;%_tdIY`@uc'[?mB>4n/8Km5Sh8"j';6r=m8Qr%3VQVq59G054VZ)G7W9OMEsL!JJa2:*P9JDN`c
%k\*ptMri*=)^Do9CJ<Q>k''p#Z>jSoG?_f[0,e/O_jejjhu,TbSm#H_1K@0&R2GH%ZDR6$YF4FHe'l"UDs6?VpJ%8p5s<o?W#"nj
%2@9^:a-^U^D\ueP%(9EWg*p::C]N_og?eWo3K+8*bu1ANW27F3Omk@fbZbLPH.`q[l10)_NZS$(/<sBEU%I/"5m/ne6pCmO58o3N
%_/AAQA_URO1tQeRf!k+*kUg!#G0;bL`Qpm/FC-G=,W,q-oJ%75c`(tJFLrhfXWFq+U=6;$iO>\M3;UL)i$iR/J&m=7jSOo"AUJR<
%WOo!%W0^*q@QHI3?5<NH)=eo@2"PGXoY'@?Le78bX0VNE/,A%3FAat+5qV[sP6DCdg1h$$S0*(27_=@eJc,<@`RoM2oYjr0J)4dT
%L/TMH\6l`ic&$T9rjniI<XdhibrSaW)GBCW.-pfZF*!(a\0.7mFuHY/O*P__h1ce(0rU48\6&]rXqo6l>g8iUU_fBF>EhGo3RuVU
%(Tr?9ab$S-R$F_3bs[PW2b&e:preYi;tnLFl`q1/1E&b?ZM)\oVH]F/[++B,X1hj63'Pfi=T;kf_U$67QZ[a0)[.[i=Q#t!Qo"eJ
%e)Y@@j.B,q%b3nYU))ne1aMaI8)/m`AbnfSep,QR:o7,BeeCe&;Vk0*L#nN<qX1\6fKO4uX8OK\HZf'4>f7VL<nP4S8MN=ZQo^Fu
%/b-CaU=B).5AMY9b>3_$&Tr3^66<5fKj.ArA$`':eSEF^X$d=q*2M_C$M+]CB972irY0;Q[LF_f%V&g<Iq?U+@_l$=d@Ufo\7N@]
%'69!R#%H!LFj!@Mgq.6n]W#,-^^ASc0s)fc$$W&IFuRErZnWa5a/l&T:J?rI3URPpAc[gJYmhI:.HKos)q^?H=ArkIXCF!%&4oer
%l1%Ugm*RO=MpQTfj'KVkPnHJ%]e3Cig<,5ap&<>&l`X:%B_:>MaK!^D93X/[?[p3E@9U,$3,:]uTF*8mR%N'b&.4l0LX=dL3W5l^
%lDP;THci%%4T1"BXAte4&'kCKeYC,O$eqnpSoN0h!?isa:+!^)g+M-sg\Sc/CdrLtPI&bl(Z(@+l6G=!YWA+:-$DKhC"KosnDorB
%,#Fnn[i+k))`fl^6X+56Q<$fNGQm@e%pVhPNS!k@W;sE9BK]qi#F4Tfqn\/5YF@3hHb$S:3%D@uJ%<AtqQRPfZ^Dq>2jO\<nqsSj
%n1%6J&elIoeok-J6W9n9OrRl;?L^>6Re60XSU(:aBL3,,DeS#HJ(n+O>0SOpBuR,X26Zu>mCpheW0%)=B>r9siGQ,5"R45Fj1oPR
%LM>Z%'UX97+PqE:a<"1j$6YVb6GB=NWL=1l'c^&V.QO3"75:g+otj<h4r%'+M=jI5k*E65GcCmC5VfA@O!T?Yg?eQVeCN,OF4E[r
%_Omq(QW4(3e2$D_</ph[$I_o_UH!t-+2ob$(:ab:m]"*s[]p.$DdEZUk&Z4kCTLF]Rh%SS7Weg]RF;f'+7A!+]H)hCG:NQ8lIFd?
%g!+Fk2"A:ba7o*Z13kLehGIpu9RtQ;R0^aXqt,VLao@%T=.;JuJVUdGWG^^P?HLKGa?J8XB`R(O('G$V2'n!R6BiB8J?EpH\:g89
%C@WS+clq_PM5JJ#nu\s]@!Yg^O-[leM>-!kjG(jSCm_$o=3<+n'o<g5f:1TFoYFrKX)V?Y15&Y%4XHt>D8);EKpuu)NK=J(0"/A@
%2(dC;$HIi34qDGVrfVR6D$D=l2g;q`N%^n7U#V39@T%"M<_,r-NHn4%`QmJ\rQ^.%D3.n;,As%QC*1j1j8J=G^M?Xp0=&R)[\6]b
%WC($OMRT!DqH<<:1QXFXh!MNb^n,Pa!$VfO^=q02:nE)\pg=a(f&cYnZ5^/jZ(e?f/1-3cP$.lIWsPi]-Rf\;'f=UC"[l(Leiq$[
%e-#FOJma_/WHMSSa"FD2YGgEO=%4aJ%Q@R;R.!(egb>(N-7/pk-.mZ]^%,>U.Xd7V$W3IJlD^`j(We<dp0dd'UoR)@UNnX!+6!s!
%`fR`J^(pkbH4QKc4kj*q]-'k4IcBY=%E^-s=STg/0J1hKIJ!D7:T&VY$"to+lbk:T1]I2CH]s$+Y;4S:[i8[@^VH>m#=EKT]YWa6
%?TABMH?m8RGi(,1'?o;Ro(Vr'>:F77N$pl,^lE*7:Tl7\K2Jh\&0Y!2',%,\+WO;emJ4S3Z-SAY3J(g"5DEus1NK6IbnJ](;N>KR
%Af+TB;>]>j6W)+Z8T#qBa-.JekD#EXUJ3M$-PDn`D@f(+0oip#\jC->Squ*t_rt^5f"=+Tg2?eoCg1dEY;a2$FLSAqCDc?g-d;a#
%i4)X!S^b_6/$KIMi+Sm0ZerEJdgUr!Na('F)*Zohbs$Mie'C-h\(?e0bE1Lr-#T[MPHTT*Ksik^bLK[Rqc(/ej3'DqISc6!))-#F
%kRb=`J[K67&l5)pj<CA1fn-]?`Da3l(g/2?QZeA]EcK:b$cX+"?"],+/PNH7B<<)lep83f<Z7c:4S!kDW5!3S1@2HB^KYUAb;o5B
%$^#p^kHgCW#`5fpm1\:eCD,**7\@<6_HT-Q_t6[dm4gLf=G([H/m3S+.T"iglhbk%=&Xf\W?uD]_hEkRH>[)02%hLg.".dr7I.[;
%L:U@K(CV->1&BF2r2).X-h2/H(j^RQXlE#2<No]kL'A[i0jTC:L-XYg9qu[*(5E6K.3L%9-3_eY6Sk03UL0Zb]QWA2WUrG\=SK?O
%FQ9kToGlJ78"l3ePGT*+6/fgX-t^b7@ekFhcr]JPO80UuWX<\'nO==*ocJfOoj/"u.m2/E4daKKC+qgD1.W[Yi9V6G-fM?<F-s/:
%kOU_:`$g.\_`ab&Up8A(1?O%r'_iVq$?fDOm2c=O+n<prP`aR]KJBs](jmW?Rq\-ZW!=7LJsp;a,3pk+2!=(ll)dKlX4b)UK/5t.
%6?$;UKXV8!r".6\=.Xi.>:kTo@iWE@V/AVl'#o5sGm)53n?(:PB`KAffZFYpB6A!M"2p@4juf(t^:J$[gi96G,>dpjh&Fj&iYsIA
%130WNmp#44c=+.jc)JA*03PE(`GY)$^57,ZZK\[#Y*9W0JC*"S[-lS1]e[(Hk&qDBC:+(-?L-DY=c=-*m'WeB840ZCgY5bd/`Do4
%L0Q9Q*7Z,(itd^7dluS-/Zn0J<b!<6.)p,6WEOI*,\d43XrdOe5H\0_Mq50)KCaPWq/r=Bh7&d`qH8';qH7r+b_W;i-m=r(OjP$-
%<AccibaX7iWu`ki)bOK84WGl#)^al\-h;m/3J^#[[qL?jdin:TB"FG5d#fVFmX`k%<ltN/YWlr?,"Xtl"`5,j9^CbnAE"1k(i^Sl
%FoBJur1pZmYr'Y)IIM*FP`rm-bjl3)j;rImBIlPg&[@3M5E.fF995.QFYtF+%$me;W->aPk%!o+e\^Y$^#S<!rY*f9oh'C&N@Rsb
%32>1LGf:IE!t/MYWj^*-l[$62BV^sh_&"hh\97_R/7NSd$O;4ccC7,q!X(k`%H85KE8H!#V7mcVDo6:hG'Go`mLDidcj652;d4#,
%du0Ynh(_)5Y7PAplhT"]G0/^uZeqNr3^IaZ,8B@E3;:8iOpd`Y7*qNLk&V-le9Elg#;q;pP_[fu3=r/+$DkO\e$)/P4N3HnI0CeW
%i.]I!W*KV.s#I54#UPa4cP4]ZZO9GXF:DlU$u$$o4Onn[fP0%$[1-ba_+]e!DRkAHQ+VmkM0Jg!7S(Gl;cbaP=sR%3Fh3i3`9EY<
%Ar#i^"Et,Q-<a0OOHFjL$dX\?KjV^khhdTm_,&qERqrtt7c`Mr=,>8\m42m'dWDtp\??CB-/LjP^A;f_I0A*INn\/DK6eaW<-p$;
%M'C51<KlN7-rE!T;,C8E#!DGn/W"&5+(;fY1m9UWfQT2m#bm$D6%HLLb'g8^@FQ4P$Je>KkcT,O^@VM;qq=--E,-E?3oX=Ys7EZh
%TaBBZRR18=B?P3Ef8:)F-_A11*=2DC/(Es=q6!1[kk,g]=uC;]2E?2>k.fAYIGDmT2msBjN..;R#0'F62W=mG4.@Gi6>Kj[XjJug
%(Y?BM\Sm[qd*JFI`Iltl$2Tl/KBejlgE,WslI2&b#sOR;AV<b2gTp='QUkXEG/u1D]NC%1/IsgWhk6:^nf'LG;G4\,oVPEBC:m5T
%!bhsu`qUX`1k.H\`4V+.YCup6\^</QIpsL(j16]:-\/^DhA7A1+Y>qeFr#of<;VWk/gun$QI?\<hRq6IY:6mPR9[<l,.44,#n<WI
%W?nq.6>?lX@8G"]kn?t"NlJ]@/U>PiEjC.&^_,,Fb.-m]&X62\hWjN,1rI@]iNRAS4NR0a_hG%/@4:?6Y[4leej\"^M4<4#H+=F1
%+u%Xj?OsqE]o"cUT94gD0D=Za(Fk98`ph@gA`.;E,:e65PG.V,#8l@=p7:lp*ALrUD(-?VdFgU-BTee2+HRFl?LMRjbt7#&St5Wk
%,8LWcI"ZF@g<dt`SgKi<2G6V;jTq8hi=p8u+hWIpKu>3E?"64#mGUb!">rl!."rf1IINE.PKO9pH5TK"W8ST9p,J(WWh*etD1LhH
%cW<g0*n[*k/<;6u=3<e#"Re2u#b@JfBlA?=4uO2cT&Z_f^Q(2j]%;UhL5HnL@=0TE^<a1+*e:n32/\q+[E#]K,-2*40Mkh`3e\'0
%OXP-MpCB2i,gS41DDqE`-bCDK^\XuS`gP:kK_V&WT0rbNA;n7dec=&@X$,B_I*6b[A1*HBf3EqHddj-3'9q2V%/>oRF4_tk+H7R&
%*:"<Nc""^FbRD$[4hRq6GVo]_ABo4"c*oaHkGWM?-rglpUc2BB4HA,:US`8JU4W*iHf`m\0bglp"`%<SONR)3hB4&,YJ++bm&25<
%FNVts)OZRggHr>PTSj7TMcCb(AiW"#ldTLU.7-[OQ+:5+(/r:D(legIUA23<!\'hj_f\JrOij'"FLjTc'VVgK!/\9l>*'BK\h3<t
%HW_)<1n;t3QEF:"T+Q%CQouaA9Ai)FI0n3M/)4#6)/Mk@"T7?SC+Tb%l8nX\61cH"U,Q:Z?rq:@B8rRg$J(ou(Ch[1`^i:\5,L*s
%%(#Xt9/V8f8g>QdaRtGuAS-N0CC;pT$'X!X:U`A+Mre\,75TNbJqb2@$]IO=;eni>!G[[_M$s[DNkVa.;R':!Qa^^T[rmiu5k7rJ
%+G'hFX$Ln_U.VGJ$k^!DmI0@/.Y/?`@@'F,TAt&*cgQDHKVeKS)!qq@#Q5iZ<OJ(\P&0)</Qpq9j%cZQ"teu,?8fChIG+D7(P]8\
%)MQ--(l`(-QI>7I\q_tbmDu>/KX@RKZ#"'?4aech?YL=3j%m/*#A5O(Y=,m&h-";rGjJLk7D58OMeg#t,U+7IZAD3%m@@*+DhZ7t
%iQS(e"a`M0#sA`Y34Vt+LLInnbI5?qL8iL:&M.IGfF\p;JSH7dG?q\WrU::Co/23/F^m[N6pC!m3ZViuE)`:j)AL=^Fdpb<2lX`S
%%]uUZaCe:hGK&!ISta1iEtOrZ:`"\4AXd+^K@37R?Jt/^.Rd?ooZL[=@E)JT]H'S:QP(:::G#0>_=Q)$)tkS[J?V0=6__9C8n.ij
%6lcq46ZX`X<*M6oO/?WM5ZpD'<[Fm&%WXOMWS1$;O[2u^#4Cs/VM/3VNOhot5#ufLnW53\_QdqB+<GBtehrcbi-N6J]S'I1!K%`;
%0EX2XG5.GO7U!(Qqnn,od21QYcg84B,V0,u8=tD]$Jm^bK,>bF=c+Y[#tBe_\14?2T"ItM*V=DL*8>LK?d$f4/"Md_Stp1`G*C(C
%.VPof/2NuIXFn*+?["6iT=PKMs."<,&k'.2H95f\7UcBX^^gph0ftP+60V6:HZXaeLBW90>V@JJ>.E#W:`:``)EFCQHYXdQ5iK6j
%.&V3o8&9r6\;7No#;WbMSG7=!Kk1-5LbaTb^UIO/4(89eK)q0VkkBn&7Z@M-Hu-#&)\Q@L@&0e8qJ?Q0fRF`X.&g<SY)5DH,Ze95
%coRR8:iN(mCgTY3d%IJpDIEfNck[;nI$q,#l_]a6b.G5L+$1\>'KKNFm@m9qhOQnPk$gons.$0'8m'lc.O>[4BE;i3^PK%&\X_0@
%eX@7NXH#V2;TGWbq7&^>h-)634[Ji.(%ET+2_FG?lW`S5fRTkYCN)'dqM]O9j+W&=1RtQOW23QZ==mk?f.A:6C_p'ko,q-@nu/hG
%NO^?8l+02a]Z?^2Aa.8/G'\\YeHiJ\lnGgt/_F\+Lp;&"MmSc)V0Z)lMIX;n%M!"Yefp/g9YOJK`E/a?IAFPs"i@)nZT3/@k\nm;
%RN8.RDl(#Qf`Bh(l3[n0"UBqj]u%odNt*XFcgJB)qIjRMWS>i:ck%#SGcD"[5rkC%T[R_R+n&^)dMimfQ;Q!ML:(srAWc<%V[=sF
%fM&n]SXHA0DG#8SJDq=T@U]^;brJcmkiHf?h'Y.%h2Y@U73OhI@f^%r>W-qWFQb:6'X/n1:4Z)S>cF&@k1Yi0Kul8r$ASLG4(%Rf
%Q>[i&31jqH>3'sGqr_\5U6htt_OEDg,g$FNME.UVIsj+<oW^fGWamlZ"X_"/gBhbP"m%/;;*@[`mMAS8dY.eR1P3]3I`csS=@.0[
%dsG@_8qO8W0@EH2MNjMMK;78j?$2M>C3?[r9p(1f:'cMY8ciF=1=HLtB3*.!%$*_1169edNMo>5n,UfD>iB/+!t;&62q@:4k)\n%
%@#n1'7`D5c6_pcY9dB@"WW$XQ`7eO@0bF6TG4QKC<e$TU)mPWG)euADW[*+\P3fY?[%pPeY&<&\)(dtkj'm-h.N*a$5U!,cZ-mVi
%gCRuW@g"liW!80-b-q#6pJd+bk&mf8>M%4+n.(d*g[3tHX^m9M.[Cn6/3-foM%&8a7f-QaA\Z/sr@9Uk:f<j/)+lkS>+t*#R5].[
%O$V-0=t[Ep>UM!V<V@6],GM:MC0QZZOGcHaTF7s@+?"oZ#93LBB[Y:6fR%%o7=Iqc_J2Fe43]24<MKo2>OG\`Z'ZV7?st1rX1GG9
%q/SkGkb3hp4J90+)%bKF(\-f=PT`oh%51</e)M[t!/O;j=Z^:72XlM(mFN(j7Yh:rI?!$Fn<e`L8Ag,ji_I"6MHmS;Q(C"]"PY;$
%Z*kR@R&[;";A@CW:=G'q]!;:k=A$^')=T%E;J1_8ROUO08j(B?kX>uOIU0ak/YK/*3Tp-7PloF'_Mod:V_ocjACZV00U64MeX?*-
%lTjA$\:qH<E-5^>d>/&q@C6pX?!C\d-m;slSXO=G>Pj;sJ?"aarRuI'M,K"$rCD9eF>N26''F!q1.GCg8nGCkl(OD_AgYa=jLIds
%:-W>q=;TrGLI)AR@q-ToEpaR58<5HWLOi=tBK=&RX8GXIa!`Qn(QX,m&./MsbldDHrIT@nGd4DKpVDleq]P$EX3J25Md$N8RCnAM
%*2V^30?c)rR$uX1e@Aa&@U=f5A$6rtW67?]4#Y#<GG-L+ToS_t2LHFjm4c#;29`hXoEHLX@5'G_F*UYF\KUC`[KR/mZX.n'DGXFa
%iRRI5?7$WWds3ro@W$41..eNAIon-det`-S-,XR\@@nE@7L79hK&\F=H?f@+4GU.N*YsLFc<YLVHMkRlhR_`*C28!M_f9027jd[`
%C2:D>EBfGaXC_d87[!+o-o;4i3c+?6K7e=jUN+te"jnJ&?SAn;8hMS5iF8U*]3:S*Z=bI75'hPa;9T[r;hlbI*=J:?q_^S'Wjm&F
%),WbIr*KpQ(=S;`Ef$p:2Cr3O0/lGj.kq;XeE37>dP52BKVfl3Vq:>B;f>+C:k%rBlAe:tpaR;:K<jc$N*T&^SIeUn:%F2KekATV
%(uf,MS6sr)+et[VNMct4E9@MGFjW:U1.+ERL*s4FKfE[hhaZ.l!Dr4Q?q[^,5E8/n5=u00Gd&`J8V`ZHkCOod_b+s^LM4!K9r:h\
%_&X,r<@VgpG/\^'0#!+?WD&=EF]MPnbsK$'ofnHm2$au<^1UYW+1^;]86=imK?:Q>OC_4#+9mV,g8\a:Bc=qP/nffN#V'=`%qS60
%g.".Q0*:6?-`W9c"#D@HkLreS=1Idff?+9_3%77o3`Lej,?OPs9%H.#De,5aV:!n^Nln1H.4E^Zm?7DG(r?Ai7&Baa4?;IX+F<(b
%Z"(IG5,2<b*8#eAQr0>4[Xeuf7@6P$C\Bj'1TBIf4@%fKOS`/7e"$jb3dEJaej_F9=;:]C#tlpC,oo/FZ'OAT1S#7pWBg`EDf)d8
%Q5Y?g0']!Q4Rq"8.Z_l5:ff%FdA-$<=tBa?Xk7\FI!Tq6`n.C.#;-W5qGnUFohq`Hlct2";0nJlT[1IeP>R%lEBN^NbpA1u3l)7I
%;9TV@VM<a%oS"q*8>?m[8oWlm.0)(];)P:n3L:J=D:'TNiu/pgjaIAUQJ<V>cRAK%joW)\S.!ee@0d-P%[FR+]*2mh=Z)$T9$bCq
%imn?8LYi@!M]"p3%tK90q^,<1WX_fW_,?;^-fEPG=]093klB^"ek-fd/>'\KChi.5A\-8^:_r"`/?u\>KEcZoAO\L11m5$RiN=t+
%Eae41kqU7DWi6*X5cS&a#*i:KAM:],LLA\Mh]gd5]]!nqj6HgpcrQu*(qu&l^A_q'r9srWpOUYk[CoqC.%E!0^&fTI?E<'Pod`R-
%jIJ3oS5d58^)m]GKi4ku0*&<r^`#6/CRP7(ofmJ67uP%7"I*E^%kK7aU!&?f`@;QeW_"sRS/#TbFXdS&r1"9k*pS:0kfG>JTV(gK
%l\LLu?sspMAQ6O4<j#i=b*'JjAC75?8o[GEOhN[:<#uI??D8+9CD%)Wpu>h]H[u7GHJ=G\1M"9_+j4GIQXbj3>,bVB>$EU[-,n$$
%`Z>"c)(#b?+fL*`lQ1,7m9`leaU^RIj#%fF6Z*Q6R1pFQG-OB<nq,0*.qVf^GeonNpZZ2Iou`uM!&Xr@c7.BSn8`'!SA<*9(-stf
%J!Hg(jjou'6hW5+i?i)`;^W(mk6/?)/a_.>Ne?Z1%)r)$)mpV(*Ve8.?G+G1aZ:JJE0CHid(9S"+_b-45?Y1K)qCU=Q\q"RH?k-%
%cefcsX`4JE)"\<"TT0O4r[QkN&>-(l<PWM/nQ*.2=%B.qH*1O(2/PY]7h!%c=hBI@Kk34%7iQ31"%^kE6!i$tTdM-R^>f==#i?:9
%j!?+P:keIpTE\?JTD((!1i^Ce)%HUbe>;f26`3HPjeTBf9sbjQkRhKW2?j+WaI'<(He1:I#NnqE&Q2:k3sos\MVltQU_BJ2XQNI+
%M<`7f@XPS\[4P]4R.Y:)3t)7..D-E=H-I+6C=#ulk"O.Z^<@*6P1uikpX%>b*r@\-;4Y\s+K49g<@DBm]^'C?k8oU`<\:+,,f!#g
%\=C7';R.=3.S4EVm$!K1^.5osZ0h<GUqF#[\!3-)qjl=H!l-[Ta%A*[E06%+1d,SY_$q+\JP@=$,qWfH;XdpQW\meU@+AC3Q(T#J
%<I##Wbe)/qE*lM5A3SM[YaHq\Y'_?3#he\?lkj<M7Gq1)4hr;c-VdcaHpT"5$.^7/@juiPN/lG5jO^W<A+;8lJRcKPjbV;=PQ=ET
%$AB/s@2If*Woc>4n!m9d1i227[E,Rek6\Rm-fh\uLL$b1&GAD@Pd_mT2\jk>'&?Er,dXV5kWPFhW*<"L>bp:ldGoo6Ho)OH%"^cP
%-f+,TG9u?..Yd5kj_S+AC7Tgf.n)>.6hG4(;qBjCXk+S8m]Pp4N1+WbQk3cDNpKAeo=6OX_ZIaY#oAcpb!W""VimrU<),c(K*eB]
%KP*VCmcP!%(Q\@Qj6I8(Lh`;K%?H3?=Xa0=*6W2Z@P;mpQJLKe`uG2YLuURd)q1AlSViWb%/"ea8>^2H.u$M3I%bCO=2!F*`Bk]o
%HlkgsYn2T;%%:lE;(fmGI71Al7Aj8BG_U+6KQQ:8ePRZ>Vn[NW*FFb=3/<uKm#!Dg8t\V/<gAbC,a)uiA[,o`EaPndIjh%Lqa+S)
%`F>dmCmjIZ<gWfmB'i&H362gSHNBWd`k=k(?^WkWU<PbPY7OoqZ*NTJ6M*S>>U=OPb%<5%S!6]%2n=s!DIOCFB'8lOrG`Dm"cf:j
%;M!j?L`-R\Rbb%@aR]8m!V;a_HQ7(IW7tSql*R0IY&rkaSn8t]PpC^Xh!ZY[.RYi:1pp1)6`a`EDd+O&bYhjQpDELd97X]C6IkSn
%n&aIcqWROeGf?FSI?X!6EV7_"m)uMY(D7$c?e0["s7d*2bgNX,A!_opZC^Ee)k$/s[CT903LR2f>R).(0nN/uQDW-n#_&$^4`YG7
%V'c%=\P9QDe;f]>it`W(WJ.QqbkF%_@1V['Mu^`D_F\C9:<9129UVL6`8mRggBqUXL8hmYZ:uRf#5LD&JnZ[M;qG;(h4nnd1s(_-
%K;q"W62^EIojjr4mKO'8crL'EF2(\\@RmZ+o0o>4^tm%h@"D-A\#S"jo*'Fi!0Y!-XURWq_'a$Sb843BbmYJ`9h-2PHsnh0A4.i]
%i,aLGjkbl9r+!=!5[SiI%i^N0r#g/R$SCqr+EHUU]cH2'dm6TA[Lt/T\1UI>JRD:D<#bopJQLF7/OZ"pS=d3YKkqNGR)4_!/V#[0
%^E_s?LP/hF5P/jac#[+q$Ve5ZKa^.'$rAi:iJRm!%ka:*$E;]ra14`]c>"1^5InUd\LmIAR(&MdpSAc9AWAuu"V[I:4Kpr^f.Ees
%UuJ."l:tiJ-@(-^ZiN@Ld(\GKjfqh/9`%F("Du1OHmi%.n^9JDZl8p!'"gSNM^!#6CBS8r("UB10tLVB\b,rVf*0'lDd;NQd&STE
%qUY%p;3VX=CW8;UX6'J0\A@9*BPHB:`@@O4F(o+Dmcm]lEW3:_mk_[S!/9tRa/D&tWSJZB5=uX?"='`?17Fi"lVpFfJOFSIYo<Tk
%g9rJD6OC`[mRFauCKCl]do!3U$64d/5*^jm1_50p<a^C8HMk,=BiG2a+Gfkjjfl[G7s?eulgg:07N="E0W/S@^]r9G1Se3?;Jl9-
%j<^jh8MkU\)/(JQR^OdPBTYX*n33>.;8&_6h:mK=&.OkTBb7jI/NS=BFWbX1og5qSLO.+#`q35A_1*UNkb2"OV<g9NHMJ-unrD4&
%g"%Dc-<*]jW?D'f$1u<eMi"@@D$u5O=F3_p8>>$pgOhi_Y7@fp2LLVC<Juu7Y,UrmTrCqR;-,nMY7O_g,$&*d!CB=gZJM8H@RslO
%9jKnhcn,h6"0:S<6GeJQ^rV?JfiUgiB[aF;V#Y&n$MB!T=]66bqo6qmQZ286(h(@s:@g>C;714jQP7oEn,,VN.j!SPB,VPY](1Zp
%oeC6g[pg8^n,ho5j$5!,HCKc,6-r[^+K]o4`p?kBY'FCLacc@QOp&K`KmrldElY/*3Z'/#OQ1Es7e;GdoN7mLIKaLuAXj+87.<9<
%p!ATECM"$>kYP\f,W+"?;,!G%97q,V,D"`9CWYYEhJu)*]:d]h)Q>>RgFpY(3n[k)&"*3Ws/WM6J+ritJ,e!drn[%Wqob&Xs80S,
%m;K^7fLZC6bj/('m9fnge*m=rn,>A11p=Z/r;*mPqu+QBJ,duIq>U3aJ,XXVr8it]rN6+gpOAN:BsA,l>31uJ%bf18,%1Y/o?_7X
%1\2^&HT^]QlDdWtiV`Mlh`cPikKi%6I!!?Bs67#-q7lB:+(*moJ,9/JIf&#PrtF5\lF&qGWrM+!an;;+h=#gQgSSECn,N;-J,J-+
%+.`E.a,`AH7Ji]@^@ZWQs5dVfX8htHr7gq[rVGR34T>*$rpmfe3oXNHX8hceIe2T,IfJh3J,5Z7ra4R]L[T]dh-YU1e%7jAkr7N"
%oP]3H+5cm$5CE4qj)=t_VsjW]^]*pe55H(V?N7M'rp5,^p[MO;pXd00s)5[Cd=:cU8`0'W"lo'`i006$qVue7qsg5lj,^h35CNR$
%++O$S+5aKP54.h6_q1u^q#u8gVq7//DX0%(s6OsHH@>A_J+;:nn%3d>n,DUaT>(1qJ&ccJs8KX&IcdBFn,N1N^O5tLVsch3-\(aa
%5$ia6:]AE/+!4e]?%+IshH.Gb:Odc)f6>"*hV[l$UP@n1cea"cVii<b_Z0;1V0>0GKI[R(#iUbr*(&Kt:`tE+B$^*SSG,%1B:Z['
%G$aNrbjn1_bjN1=*4i%*5\3Ap7Y]6JbTDJAcP)J/#8g4^3^80)V/`I4_FuA;!IZ:W.,iKEs.O!,<20k/BMYZ#SfWGFFTq\h\Qo<.
%nt*CCL=,aCQ_1p'`3E$,5D6dq=;FSe#,DS4q?E5irJM$.&-KcK#S2d!NdZDD_9K!i_'AN4KI96^SL`V0@-$BE67tm7!B\`51&O9#
%hk,L(0;9Y6OkM'HM#U&Rs7q)9eLlAP=$!#MpSXaHW9>ItaSb7'/Lb9]%s:[Ko[%g)'DC5Tqg;1Q81idHn;+t'q-V(P@1QsX;O/Ml
%Ts<uNpXu2B+cUqXSBR:IenB9/f8UfKe_\HmB%:DU?a8W$I9lN9=P4*>*8,)Jp-Kh[L%%n64V&Dgr'4u9N34:ULkgu2+/L-t%h>uA
%$(MkHT>?3;9`F;aj,JPAch`9Dp@1*&SpF<uIagigf^;L]m69DEJEM7[Z\_qrE!fk'++hp%S/LsRK5&)_Dg,XJ(dR5IDtcD('Cf_-
%3:Tn9!:mnBGO9AhHrCI'"N\i@YBT+1P30gP]!`P#rR:JYh:pkLHGWb]BO]Maq$1KtO1iEIZYg)nC[kSaD\$9"7*^=L"aQ]P=7(HB
%k^&>[hAX)S%,#IKd6q$i'+lLDZ#q]iir4/WASn(AF$>sj&D&j+NmZ;WY[0b3_BYU_o/M^\XCYY_O[o'#E$Q!Y@LX$3[CTgh&/I>Q
%Yo$<6Ji?8o)h"pn7AK'a20<so5tRR&E1nb4d_TT["6EH1[!5!3;[^rAY_No"B4\W"p^;L3Khl&hB*IVs-TjHa4MMN#`WeQ.+R4li
%D`A-b4n8SoGW!2*M%nOh+FMoKqDJI:6HlmY__1tUp_C9iO7Wom9T:&qq,t-8o7qTaHp\=?cjNub..eJ=bPpk'MU4eL8Z3-kLan47
%qndSon[#q?1.^N33C^Q71JdZGd)/'<@+Oo4V9C>1kq55k9>p2m'uNu'#j&9a3.OEG:Di5$1[ce-l_2sl9+nHh"ua54R`c,_U/_3+
%HROXCDP0XC.146l'Q#;;7sIi]M]WNVhD%ElleR&NbaA"<:Xlh>c/r,q+KPG)UgZpPmM':`#,@:L0>UnoAd'I2s5nZFTg-r(;u?Ba
%,jG-i:PP5L5m#RBbOnKa6$"U.2TbVahHm\IRmVAM`apUZ!rp2,YoqDE>I,EiIt)Z(6ETXrcaG&4hY$ZQfTDf#(Qhh&N]'N+q0"=M
%IL,nq7RIkGKLQ]^9.R8%,oUNUKI0tl*:9"Y8W`oU;S+!-'Dic.WR6n,2r-ghVpd]T/"QL,Qmf9&TtcG>jCgUQC!KL2iA8F/&t0C/
%#OrJnRPl[=DZ;Cs0V*\km.8P&-bkU6&-PDJ\S\:DJ44oMJSSI=0c@s'`H;kSUQ[Z6f`Hp=AOMk+OXpXg&,\bISrZpe1ar9Y63H];
%r[$'lW&*F#%)O:KL0()ojI_iPq`CNVqkqR;&GXi"R!RbEju<W5XD?42Vbu!<nf7lD2]9sHkcbA@'#YW>Q/-3AZ_h[1PFKC1<0tH.
%'t4r:KaLp=hd\C$1$o`GMg\j'%0g.Pj1A5UK:Go&V]%cfMQ,[H'1QK^3ArtM!Z7*hNR8^93k]55j=(olSWoq$_I[:,\7&DQn?4NE
%qci:;3>CN_`RYCE[=Y4*$?CCqM9\iEBI4L[``X]`<8"0dM@O+k8IC[.US?-*^cMG9;LbkK"RR'MfD9Qj5C]s;Ut>HaH2SUjbV]u9
%Qo(aBmcWh->["7.O:cOkr^SA-Q:@-mCB_7LOM=g^12@'(["?6:,$?<bFOm_Z43*NN:K*?0.V_eAIrGNcU$E?BqJiVZJ$"01fD9K$
%rCEV\&?HjB>,S\DFL0$6dZ5qpN3MP2<BoL'9Spho6*:s`0341i>!XdC+B`g;Oh$&hdHS*N#[?&*[0i'_GC&Hej<*\PU,q5RH3%Z\
%*e1SDN3(Ridcus)FFG/@ZX!">7j;`dD=*fC?G7RBh>.S5NfDF8:YK'Ort3tK`TPdQe`U+ar`\t4?)u<5]h<I;OD\,2AWs:HYNJ<'
%RefG8-L"QTBO.>hL2P'.6e*QDN^o$`C\>5=T>+KV`n'Er"mT$uC!s4kLsr?H#WaF$BC2lj-U6qp9C`Ve0-f\.q6bfZ/')(u+JZkY
%5q]qMNG>D7>1%A;--bYflebsPK1Y>K8i"7#*6b@l(]4O%:F\b&l1P&J[Jp*cqK#rXZN:@F?)jmsoGG2_l'3^=(i-AcrXVhUl`K8a
%eb?+EhmtXW=k0EW\m]:D0RLcB%paXmep;,6\(5j5Bt\XTc12?ON9)SuC*HOR(*$W/eZ(qk)V(rta)o:]J!at=2sj#a/(SJ>q5Y7k
%\tEX=&M_JoZlmCWotDXI[m\:GWD?U8d*4:pXFeC2@BT:`>!N!irO=JY=i#h`RaLB?8<hQ'7r>*pcVongl;*ssN7ss'h:3b(n@1)1
%>jKF;XWQ0f1b6q6\q39n7$De@Yud8rN*)>7r"08Ih=7u"0Wl/KY?$2>MO@K2=X<XY-rIlo(sn(gMhajeO6iR.5Bb?^"OJ^-:,&jD
%j0.$pl]RVMCfu_%3rKmaeS_tCf!J09oBQ$k)cpGHi%6rgL`iJY!.(ahJ$j`1f=\3#Ij?G5^DNY)S\?@@M\>@kY>B;I@5U1D#7&nd
%(tokB<fh)#q+DH5CgHY<]Rl*\=P_CZ9Be6m,T3kDFB98d8+k\ofe*."meW&T,942DO)+^hMtQ,AVIb&O(aU#)AMch1IttoYj1%<u
%LCV:"lU,mI$LjB4^ia53nd<b/aG?IsS,:N;=BTFP[Dr*_)K/p3Z@Z#hUSR"VN25EuR)mV%JeY7M:HTD(bVeo4TGZo)b='ooI';)\
%03=5#R[+[>WK<)3);h6-FX=n==.`R,Ud@KB>B6J#V20VOIO%98Apk$3>!N"4rOB"E=m8cp0iGc'O>IrZc-b<B4#UnE5LSl5HEA(:
%RW1X<\?9H>R@^0+W7J@[4,n$RENL./CXoqtF8<@42+?f=0JYl]hQ4,2>cYoQH<c_]]]+]5f@(9nA"g`BFemR3)<H/^[f"k`GpQD`
%>A/X^]\=kNUFDR\&<1G'A+1X27B%^&6&59UBF]G5+p8jEU0jW7'k'7=<K)rgWdWfbb1L/!a9Arn%'ctN_!j_dp-.h<>ODFe<I`Hi
%iGMa1bZj@UVrPmTT+"14iEq*fI"bp^(Bdl7]iW\^"?P$R:\[a7"Dt1+M*#"mQCjsj18Rm5c,.p6IWK]Hrn69P#;;p'BA1D5(OaOs
%mQ-Q5pcTDJg^="`"La3tI_s:J<1LhV!.UmQ68G`G,N2.9,`K^73U'W;i_B=-o8rL?lJi.(8`]&KjSrP3,Y0OS0o1-L$k$F$A8.2n
%;Flo5Cb[39'MHB=LpCgl>>5%/s6]@n>Kbnjni+<;V/+-Unj7lU&-AG&%q;>PG7a7K5WmNqidDG%;M$J"9t([iFF#NuRp3<#(Sm2h
%4/DD57UVm/f\[eWWsB1(mKJ(#q=1*W4drbD_AM5R:4@LSAu'XN0rPDM$A.Tc$q>YR1gZ#HC.@tbZ_TQMp[Unu)'JC(DmZEP)_"pF
%R-S#)3`ks;e5Wb)Hjr1_,`*&tAC4SDs!oBu["26HKu_HSW4*E:Va094m]E'IXGQlK'gI7EoL8XI&rK[/fD2RgpO4EIl9^![e%Ik1
%;HobUb.gPlF>2Z$_L#<sN<I';?I9`6ITC@\V72\5H@m<<$^7hEU'fOi?LG=sCCg!>]#!J'3fnG!7o@)G0AlE"^!'m:Q<e7if3u:@
%2/(<4KC:`'4k\40%0P2>r!e&Cha?_e%!o>/H>2<P;qq=rV*[KOr"B`"Ns%b4-6L0UIn^\V1b@>-@-G/sj;W`$3ggaXdh(CXR[Y'i
%5!;8^"=gLr]/MD6K"^o"0`&7SpWF(U,jJ*);8!EfeBr(#+l=?oc@j.>FI&d%\DEM;6:a-2_`J_+Fe)O2O%81?nkK=+XZIQfRaeqI
%`h/?ip`7Soo@770Ba@G;f7R/,27RApL0`=J/0p&e#F:L,T:1[Z8==P%5bUnoKA0+c@dgjV,;kqJNfW^+/GeW0@aMk._$fXZ.i=M"
%:CA:f=!1l.IYisZWog>)hWG6Y$LT(3).qu[,?h*3DZ&Op4tjTWDY\a0TR5:^E9O,+E:l'VO>KPf`>UWM-),Y7L*8PHAWkuGd`_F9
%aoJ0Mbk^:eqDq?t1g3p+a;@?cpiW%",8+mSPd8@)FZI@@#8*`@(_OZ$[1k!k)po6EL4:Ag8/.ub=;q-jerN@fMfL"(S@CHW,H2N2
%43nKQK3*R@3^S`-V'nrh`_d>&7BIaGNep<Fb^a&8!#CF<;*:^(FGuMTabk_GQjAEr6:+gQEJ7O8l+a-%"/1N!bu$N(1eeR@819e?
%bL[/]Qc!M++OQ%6;1agb0[KP1pu&e+//aF%/FF\u@0kAhBT/cs(d8mM$1oCX&WnKei?D`m0KJ-;O%IoDIZ1r<a5\#q3J3B-G:?^c
%Jf%(t(rR1e"rJR3Z:0_kdhIGV5U]5!7H>9p#r9ODLC!>.EKgXb>1a6"7?F5Ha$^O2`!D[H]E_sn)#R#8FW/L`VA*FtZs]Z=cSJs3
%['U*,ULGe:AGCkA\f?Rbj[WA:WYQG0J0?]3T`GI5]X`Q)8b?b^7Ed&D_[NSfOqSWh6h$Th.4o@tNS3j.d3stTTkt,B7l1Qh8;jQ7
%MR6r("QgJ^5nT*-'c7fFRQ+m4<6-=Y$&^6%EY4TLhl"SpZil<K1Fgg7)Pq'@JKcAD7Uc?:ZJn2'`K1\U`$E1?'8EtraFj_76VK2g
%@k61D2Bjjd9p;A4Aj@^EB/rFe1fiilEjPs1_HMJE)5@a.P/Z%Cie(urMa^k_]MSfM#%978TE1]m0]aV-;,KXofGY'!HM7_rO'rf$
%Ga[,\"[Ff:`ei\0UL,9h5uOeoPV+ZsL]0RbVfhp8cm>FL^F0tb'Mf-$i<:9g6:[AP`?WMIKk(\2<p*M\#pIcNdDLsZ4!]GMaKZq5
%JF4^Oh944@(Kt>VXU5iOLtlVO*!qU5.QIjB0b]O77;cO)>%Db0)_m9dWCdLnLlPcJ;i*qK%iHBoKV^C->XDmD_":&`rekb)-Bq23
%8RA&3\G*9M-*XC:^"-+-(*Ol(^gk/sQm68G853Lo'9^G[+:4Ise1>E58Q,mU`G1bC/-cq\YWWuW-nGPGJUmis@pYDp>%M\*GDL3t
%_@HL&Fg*F=+GQ*dStMjS..&aW)*ngJ%%KWH%;;To$oeu5.6PZg6PJ,@TLfXK$oEGG:lC^sA=]Vr7+ZK`m5`E0bSGF9&Zk_W3O$5q
%^naj@BB--b;2=hk).<H28oOqpCG6'P;IuSsqBS?r,E/E&1$clAi>+jhA8_Z5:.04O&b-0=+:Ac)Z$)uE%b;J=KZ+u49JAhiRqcK:
%Q6<M)Ppf%o&5ahYRaHbb_(?='(752^&/1>Q2B.?!7Zc\f##cnl&e-W^.'OT=D2+<)U,!jAiY_$[E)DK.5nP+15/=X90pua$2CXbU
%hudG5>/r*p/ic8EhB;+eG%k&:8n2#_#b&`:Qq2nI7[]Ds/;[sRWrY$[7=83*((N]%XMX1;,qDi],]MX$MBaD(Oc/2O:h\.sAjXh#
%R-9J1>r/)Y!:FM7oFt?`J-M&U]P@T':dkK7MB=.)6"Y1l0G+DRKCK#B6/@ELBu:sN+eKYF%hr"P:ShlI'J"`^9.$AH,#"B&JaB',
%0QV:lb@,<'8PCBR:*goHH@U_cf]spH&(mR`F:?'lZ@bJZk*.,[<^W<1-H7&Wb@)HL7R^C1Q<ae03W!h:^p,ra&_/;9>2;W*im%R,
%X8p&gM-`W(L_@(.SO@cP``_a5YmPSHR"u/Ug+8G[p)ED=^a&J7I2ke'S2SL5^7kZSUpngFi_H$;J,YK//j=$iHcH*]T:mt0N2QRa
%_$(aHQZXNTI(PI4X-P!AqTo2#L/[:H>-I,$/oVZb&4(ZdHu%H&qPXV*khg"^W)q;AD(E=lHG"r/HS"+R$WeqSEO)OFAJ59LVJmCh
%Khr.--3gP&[YJZmoMdj?>Y/3pAGfg:4/N#fC,@80"3=_@np%BC_aGVR_@j!KB*'T`_ID1(NP.B-U-t1M\qn0\J-N-KQSme.'@7>n
%S<9Pg!^jfC6n]CY$eEDWLLL.t.0#^Ni\[mTai?cG+f<%50T(Bhq2^&ijO")H`XaDX2;3Rm),=(\,`X[son\ED%nn-I&"N3_#q1e@
%TH^%[E56u_[<cd#6=O+21^$6L_8m4MiI_GINMfPr'8go]K^DkROouM2`&%Hr,XfMJnt-4>9'cIq;&o.Z"X?FELI(_?d6kb82C`;Q
%Aj;[R]F(&-'.cUJ&Bj!?;iJda-qtta$KRRSp]"i(Ul&b&.2'?Z&N%or:I[qZ/@oUQ+oK"MOX4ZQeheJa77>Qn=j_&<X%BN>BjhK#
%O8,37$,P1uhoFE7721sjp<j9#>TksK\Z92"5]UM!Y*"l7Us:nT7]>%VL5KC5.0amMLjhH8Z7="'0p8FZ"ZGoV]iQXO2R@ip)hU]o
%;`E&ROjeiB+upi(Q8ZkX<RO4T)qW*-S13g*[$lVI19G<^<L]<1prC?Mb2M>mEYc.>*`$B'e`mL=m7+_@m4I&1A\1%k[JP=Rfl0=#
%e8-mCm"TRFflTb1+[3R7X&g6^&ZG^?&T(^hW6b9gr=b6f3o^0&(jh_-_$GFIYn*>=J)a#_l)6MZ`YmKklMMLlFbH%s-A&/="$65A
%`>aI/UXa6jr8R=i\=pf$bVl5XLn>^;V`g_<amp+4hVIq1qu^+25[QAV*VbDFoC<(=>&4-4aQ*5#YM4g:6%1R,[;46J[&sq!Q%IAt
%$d=L4B\M!$gYKk?kY&&=l<!d9qD7q_-qKE4Hi<L3%t6?!np/SK1JhH9p'7U2PoHJ'@uH(i^*gCRH8F-%rSpK"+7o^q<9atY*MMGL
%9QJUtD_]%2)rc^'Mf^aGi0bNmEe-a@@\DH;X(7+LM*fo0`>pCH$+MM-E&5tXS.Xmb$AUk$Ws.#HpL&5&cMDWF)>&@[p%MBfoPi$L
%7<E'-5n;^llJEaDd%T@!5Q>#`4Dt/i2rO-h5a.8@;Urj<`S<7c1do`UI#>9'YWmhbldM+-.SYC#r>f=6&?"<BCd#L^U9e!-%8Ua7
%>Ds%D)MUdd\`qd:DV`G$D_eI<aY7Oe,?`0/@"5^*fO)D8^m'8*QK+qR-K&[(L$%H:e:u?$eaR0XqJG!pX=qNpQ-s?0n*f4:J@YP/
%qU#s']ND>KFD#&UG@nH1APHG"S>N^hqK#(B&%^59q`k+in*(.<2NP:[hY,^&LfoJ!.ZpMsaj,DU2'%#6>uX\L(Ik!sOY@Ot*_d'A
%CqNN.@\+a(Q^-:<.EWbBN73<Gn=rQl^lKD*qOf>R;4,G8ElY,&a>Y#,<'>]c1!8g,31(Q;n_LW)9kn6^A(V:5``:ju4Qqf)\tr#j
%e9!J8<;>uO(s,2hJ;U+sZn`8^6lE`=K-0!Lc'5ogl)l-cON?<nk"tJ7Ai(@%7KP5D8XOd,7Zr#BKe\XOFH[;Dj1bd>Ed%"1o:cen
%1epUfcO*Bqg7@FHM1*'0<FgFr,:&0^M/m8a=2&emQcWW)oi@qq@AHh4o!#FenZ^4:FY7S7#CT7NYttR#c=f!f^l$L@%OrYR&bsma
%gdVCdO/X!Y)N7*0`a1Y*+_N'"VMKQ>g[7-rU"(eH7eKTLOcndFCg'abS7>]D>d7:5EiuilF9,BXok.hMKNhIbSkac3mgQ',BKMRk
%AP0"mq%6k>\kba-YY9C3/YWhq$h/"H`_Q^STR]s=>"M[*>YZY6k^imD8i'FOk;MBeZ.Ar,Y.#@CE;o6nKNbsK\rL:V2YnSAWkuLt
%Sm8$RiG7guHQk6OWHM`O7@*auCWa*hcdcF%d$!l$=a@@mn[T9%j.Uu,^B!)>#PR9,Q[F!2(u=`\p@o<BV3[sWi\g<SEoaF8HsaZh
%"1Yg!W05Hb4cF*+pQ.;>Gtmhg$f++.moG,#Zock/M+0:%#=F,Qe3(YOdls?4bk1>NNR09J':>!s3^C!8*G\*uWbm#XkIX8*l<7t-
%<)G7KTf2D6OYBecN[#%@+^[YM@C2fFM)B0I`M(2FJ.7m5&i#B::+[3o,SM@gKZ8H(Ue:Gs[juO+FIXX>2%^G;do7:f:`J56?gs#n
%6S=r)<&GMhIREm3^-*CXI:f3GYDoaA[=s)s0=0l<Q@<,u1<]BYXY5HW>npPP4h;6jK7:]M"8:Yq#cn:gPdSWkLG0X@75;arTd&^+
%-#8&aBN,ZbNC?DXG"Sg!b?>Pl[ESSbUABI"D/gA6NGZ(aV?:uD_c*=E96'`MB$51.Bu$s]IEhA++k:K[EamiE!B.B0@&@OW/BDph
%OtkAuAJf'b<V<XGK3DR+YgJ9Wa>$HWd.)#'.,*#1*b@h)G'3D30?//=7+(HZ0\h^0)$JXaEm#<";N+#Z[UNcbqJ'arn_91nMlnPI
%"^@dT^dVLO6F'N:]s-'2p`7$\EDKl:bHm/hIbZEV(^<`>FrE)g500ud$PRKQA4a8-6u`2Jhk4?+js.##Bt`7BJeNnT5lLq9E!ocA
%<iCtshigB,AD=8b4E=7\A`8Ek2/s.$WM8?>eW&($A;!+ri"*IP_?4\9`\`gDWX$p)1RKYV5!f_/>#'^&1K3V=V[MU;)"gcNoo7?#
%Rl@CJ1STWa;A5gZdQ@*3WuD9l;B$htV]j0*-*67C_I%q!#[I&*l;Wo^XY;6=gN@0fm^.a,Qm4U4<F)47JDe./B[JU3>K1h2i2=t)
%5Q_n7m%YPSaHZ5?L@3&_j]AfP3`7.:<2t7*W0R5(JOealHCrN;7XNk<"Al9?B2>+<]6k*fc0+^(Wr(dipTaXiaP*Gp#W[O51a>S+
%744p8H,=F;O=tu/$<#S#8=CYuCgKA2ISmo"pD["4C5`dJTr%N"3eG9PiBD\u#BhnAOYbd11Q'l*k&TZJ'B7cT;kYFff\QcH["K3%
%ZD4duAn$*'7!"N.-%DiSlX?jG$2+'jB09ic6^*'@-bF%Sd[1:Vc,G(Bqt=;LX#=EO*0*AF*Wm@47u\ErMG<dF@Vgjt9X-rhm5e73
%+[\!-QF[5]DcUP[ql"%5#a5Ql$h.GgDkL@8SPDIiqRX'$/?ZRh>Loou>r!WBDM;"HmWG,8J$U90UJMJ-\*_tL&K6U3+o;jBNT<5R
%RPTq^c1$i[$8feX5O>tB>7J4;^MK9.CfKkaD.sB;-LIt);`!N<`8G.eBEt"r23]Y2C/c9(ibI'5Aq(G.FS2tMg1WUN.:]-tOGuOC
%<JSgud)Mat5)Igmcf7i/B^qPP\j\+p5^6(t?)'$//0@*EeX;/Hj%g`/!^U<J9Ud2DZ7h/L9V]&L^P3naF(sJ:3Q<tjLDGMNIGiUa
%Ce"N]U+oYAS""OG_tsq<%=Sd`A_O?";\ll'hsW'g53?/lDW[n,lTM@NEPN!BLSI/AX[j1<%M9[-6&hp=\QBG,A:UOe+ZlX_[%/q>
%2CiCW;0/E%f$,)ELN65fr2Wsfn2_!UW%OARAoTYrELp9jVQH8`((EP0d6U*_fuV%CTpThAi[(:Z1:I]S3>?a6o"W1SHOc1eH1g$$
%*?3e&Q@m;W&g,>fMdse9&H)me\'fWb1UtGgY3^(7#@5;\NrZj@]qCK[2_PUZ85QmGp\c!ggk-CH<IKQH6WDRX-#3/s>1:'"coPY(
%kUEW6LQd]Q+bHt;Xn=ZK1odX^Dm+4BD;;1C2Pk*I?l@^e#+,j.ghue1PEdoP:p_Qdn?@V'>A@0.D*rbWCJT8hSI%W"`C@"P!cmmC
%=W\,ieJr>("K2mnf4EWo:f`%o@"cBEhPh%4Z3c7c3V3_5DOEC%8k[Eh%O^nTb7@m'VG]cC?P4:g]oI/q0[Y`p,,Uc32_W#>:!d$_
%Ed'jmc+gT%61.T(Cks7Y]8uM7m=*O028SZLi\=P1;^MtcXn('<dFaK#HHW?"rL@&l3lFJIOZl6TC9H#.qHQfgIRfmp;:9PB.JV6*
%5E"o`=gF>n(Tssqrt;p4.PaW%&tOB+H]]:T]AMk5-SSWUFJt#$eF.WY;40&9Q21Qj(!qi,0V0DQYG:<j+aCr#'!JTd`1qtD7*O-D
%dp8l(RcdRrUs6#$p"T@ka.j(G6e-'!N1+7((Gb$P.3#eQBOMf,b`SK?OEO#F+Qg;G,m0\SMA9?p!Be_H[af2lWR$@^&&"N",+'DK
%ZS,?0bRB)EH8hT[Y%R.9`eAL4R[!W7/L"al2RDh;O=a8Y#!_H:*;<)>0&AKn8[n/1@Dr1Wf4WhEd_BUi7(%F<I*`tb5=^?t?iu"c
%`K*:.:N/tn)BN<l]kYi"VV[mAZFC=5LUU3WaZg$*:0BFmo=^OBl?Kq7U04d4l1o:![+W@-K6J37]!<YpW\nP9+s5fnH^=mZ1ti4P
%lfh3J`6]Hs^)D+Jou6,l[EW7(GU92<r6R0)cdq$D99IMAh$%huFfA^QHXk!3a#<K8[T%Z3W:?',s-GE[:e&%j1^4HWJ:jP,pn>2.
%Xt@-aUoXXO\8"(\Rs+;PjMpbf0c+dT<ip*p$G(KJ$5?@ZhB,asKu7Q1c*aRP*O'oYg^Mt=Q6Eq%nANA=0h=YJrh%4`c<07I!$T/8
%)E%;PBA3+LU\\X#LX?DoAnRcQ\MQ97Sm.F)XpZ9Oj-"D@gR]S,5\&[BA'fq_o'd\$D0?nEKW]nrk\JQKcqAe\%ajEla'1"Yr2>NX
%:&DSY*s*?e<%61H7XH]akPkt/^6SOt*2@fa#R:=$s66:Y`B)Ge!^\je%m8*[T1<N?F?R>2\2O](P:hAi+16k6@=^NA'qp>YbCP?b
%$s6-?\^AjHK_#kNqDmrnqL#nj(Tf1R$-MaDW1i$aXr1SVE6PWMW^NO;F^)=neY4R]L*.\XU"^,V6[3]8KYb-'bdhiCa4mkLjfRgT
%iZSu/3bnDrF)C)[)U,;&+`O"df="pRO;b*f@N=33(p9ObET?+1Qo[Vfk<q@EqCg*0g34)O2"]+'66%lgg"F01$/Z!Lk9,LKNmq3(
%X'C@@;snciODGrqRqW=W'8-:[K(-=1:/%S+RDlP9)oThe]BFWRPiu#*BC5+6A54cOT)J3Vj8C5%+`L'B>mAd";5*`0f]mCHju3D!
%rCi[kNH_ne@ZK2,9\pNtkKM%Vq.9Rg3L\MDq&FMuh'EqNRio`(YA>^Slm.YK63kVW?oUoAc_rOj8KO-U7rkZZ8\.p7/go\<E0FuX
%-gKA]BYQEWX5%q&KTU)"pFu/;Qt3s<e'(`EOQm:tj&G8To'&qhgXCP9fssn.Fnb>*9t!W`ekDe)6t4E^h=^A4WgX7M=_$!j4+'cB
%48ILhiAf?YB*5cp]XQ7$!ZFb9r!+XOD"I<`P3s[/%u8F%k9TX:Gp7AFq:NmAamsX2I^4GV!eO1.1N0D)!IWVucB]BFc#bZ9[?J0.
%DYM+F4Re=ZTS\)BrUjEd^%Q&%RJ3J$C7!fKV_8)nra]X@2P1SY#Dp(AmE_PRSaW4ID1A]krY/4n7$s$og,gC3mC1P6]"<<p*ut)`
%VQ'.2hDZ@'06q[98HTn!kjC<rlIYcWro<UFE2<5Kgl=e>j!L<8eOu^QF%@c'le0bW*DeAo01>5BU2ei2KR&qqo).,Z$jc*8jJjSf
%iN^%bb`q,ApUNPJ7E=G$9@)C:,*EhVq;Z[Yk<l8XrJKP\qR\GW"F%)0VWF5XkH=]<</G_;`s!an]k`i=noagl)s61-q+^n<#bg5(
%K/X2B2ZYa'D6(V50E+@'/q&W7kK_$>R6^1-KLS+&-/d\d_OjB[!`\lhFY!R)5E6gC^+S:3CaqRPGaE,F7K]d@Vb.b3eLls?isKNI
%0_dSM1S&s7j9A%p_Ji<+=$9R.Ieg=pnC`#GkP'2K>j_5GG.%3dS%?h>YHlEBp36*)ornU5d`c4o>pSVIf6GHOPQ&0No8pQ-B><ll
%1[QhJI+7NM[dojK!=:SVHpf0D`]us0^%q)eV(TprBDJX4E@+RRVR7fRL]o-Cd'`o7NrKlMPi/9`nu+V&8l\Y7e(MPTLo[5&4;e[)
%9c;Fi8C1oPm5N9Q20N3R8,OW*jBn',k(EG!4J)cu3=,E/K@lZ5^@]@o:9H\s,5[mXNi/7>BJ`mjSX'Y_pJV^r:#%rqqT+#QB;$"O
%Y<GgtS[Z,]'0SdoBdG+e]mE+Rk*)ifErL)-YOX3b_;bMGS"!Xb0kq>sX1&=dg\,2^T=Jt&W.%rB7@pH)j#gQ]]6?<o>D6<9:lC`9
%9<9A.AH5H)HJ\.DZ:W!?l1/?)XM;9EVHr.8dKJON;$9m,c=bgCEg?B)FcZ)rp5/>f$6SIo/p1h]Y'MmrbHd6e(VIDu\gKl]mfF>A
%2Z,9l8:O>P]l^`52b6q5+*IY(R9otKbQS1e<.6J;GtqA.TDS-3lX$%OQTleHl,u!ZM]DA5n0tBUgtb=pf'%YCm'TIKPHEjMV!gOR
%2<OKoFh:j"leCg'.b3^"oW&piA*p/I"b]?^0K:B<l&Ku?cGp<g=/5&Q.L3VP/7;[=Wgb8Ke"$1-qd-ZmL8Tj$]ottp3[ie-1l-VU
%O%SFZkjS@+RjP&hkL@bsBh!Ce978)G`CpQ+I,'9:..="SVs/QnAm/cqVmnJ0C%+bK3N=1hM,U8deF;5Oa*.b&p)1V>S9>s:`#76!
%_4Obs3:itb`36*&6s]<`rloXbOaco@Y4-?8NM`]L+TXgV(\$0\7LRZ!8F&N)-Y,&];LXs.8aX0mN;VolM#h!@W4`rUF@#d"Q'Dp?
%#7.+.:&ZVN78;8dBGr*PhHg\enIG0[F"aR]./+1#4mb)31'u;L_cT?h(q<14FdR)=AMe&6q"5%6r'25]mOr=,M1KuUJi)pu3Nb[\
%8+V,&D(rMZ6`\rTq""oXn[*ch5Bp,($B6-g$\&e',6Lai;X);t/:\ca$lY-;&ZT>X899TULhPj`OU.#^MJuSl9'p1"i`#E4i_J\t
%6H#]UdR->hULac?Nf\Uu(e5uf:7jGfjqPWW:o-E']RD[E=(qsco8q#p$D/ipbf6<5LDDLkpGjtO&a4f@Bp_D(b)Q+[::bP;WL\g!
%oUt!<?g,(rN^5$.&og\s#RtBP,;HD(cmU7FUk,>?dq']mVJD+pXQtO/4QU4Q;P<T?3o(]>=G^HhP"D\81d352N?400ljB"W3]ufE
%kT.Qn<;#[\T24k_<<retPh(Z/;LL6mX`FF$r"53mju3f;T7g$&N66$'E!Mo%CaXMCIG;oOhqjR-HKTWN1iO@'K:Q7Ma#mO\`/hb`
%Z`j[Y2;8K7:.3.lWoSM(/Y=XD,IWe[qqbH;F'<k3St1;-[6mR$$`Q`_H\p,)]T$Y;4S;6.)F'68%PNY+HT_(c*uLW)[sZL5XkjM.
%oftC)joSLY'46pe=t;*CjGMUY!]6Y;<BZnm<8'kqg.V'91KLW)!C88oJn*X7TP4GbJUuF)KCF0J,pdgp6#c&@Ve%%hqsXc_=\/a+
%+26[\bX=.0E+3pk$^9I/C)@WOL.4UG*c?0`P4/$^R`94t-C"oFq9Tu4c](+"VkF+O-V#8/7cXslFN\)onKiOJk4Sh.YElmt4s-T(
%G@)`M?RAMUAAj.#g3<dBItB`iAP6AB*`EPoS]X&c;ip8\,Bqsa20F1k#&FfZC@$dWi$"7?_/T^;*#-h,Y4[a<NBTh!mAb,n/Tc.>
%OL+74b(8($;d`K?DUi2Nrt0=GLKcYEA40K^^5il(DRrD(]\`K3l]mZ,.XAWDP@E82JH5?-0Fes%lD_+\q0^jXKH@nCb:N-$!]2Un
%crmr$mY>K;WlZZ@Eeo=&[rdBdhGbRF4AQqTH<gSHeYt0kk0j'MmNnYoM<*Q#&!3i`ch41Xe8D?((&9Aa'7Ps2lK-Leoi:R?nic\!
%UomH7G>m*02g6Z&QQP"4d1ViPHUOYcX^)P#@AmBI?OA"m2*tf)IFY:$07^:MS=*057\@06iVEEY`c+>9*.=J.0LI[,R?@dLjY0t6
%1Xe0H#&_JNl9)j-4MR_%7qY-L5nt[h^I.B&1roi`UTN!SrkK=X5]tmM'GP6Q_-C"2q01`Y-Q4M+N7Zq_anolRhVkC4V@D*1p4_1*
%UT8%u*CV54g!e?bLH47.jq;-%-'+^Ok"^ja0"$J]LfVnpP%cdVBeRJpSffbBOE#f6OI>gPc"3B\BCLCkh\cMe(F]@oh!7Zgk->iQ
%A0H$FQ'3YPA9@DemsD^9Us:%'L,bO?B,?PDUDF<Z/EkoAR/Vc[Ar>?TR&%R7Ag/L4%7GhkJ'8r@++&T-Wo@#<h$m@T!.*,7UQOAp
%_i*:5C[V.<pDLR"g.Zsnhn4gQqc('9F>121$cIjdO:>sdC>l)!hQt&pq\dHMGaLIY;JlMFSI]Z2p0;DPM:4I.pNB\d#ERsPl(4b*
%=8*@].E3==#$#mi(&\4@5J<VHTA8jG9>1%?R_=%RV61?U>m.d=9%BOelkWnPkmlA`BcS&<^`8-9V<@CMnj"\7$0^[LNEQ"Ne\.NC
%r;63EA$u[h96[-mJaBAfkLF.o-24.AgB"a=D&kKXDE^e!114-5j.-."CMN5WR]k[sqCR!%1RTYib:q2C9q34Tk::8T)@Gc$m;EW6
%k<`F*TpT)Tgcb[P2@nR>fB;)X"]G0_A+@?NE,%I.Zp*e?H6#,_=LNf.G6a7gqU).5acZ)TlepjYiC3(2SI5jt8C3JMRCZhuYD(io
%?lufR;O#E705Zcd[[_i)%`o%O:rlmPmS40!+t\>(2P7g^riX$n-bhNVUBHH>p'->#5K&I.-M%cM5s=8<j8=*UT'_hHeNoKJnni_0
%gV!>!AD16L/FYT>RHc.l!s9snlO8]aG<)T4A*;)jRCYN)SL'?F6`jQFoe#T+Ne4Mbda6*8jL&uiD8ncV\L1gkB-:pTCU@FP?f:;`
%c->2<o"`$rMALu]^8TkC5+RopXHGR*BJV8tF],bb.MAdiJ+=VX<3O>TU=PG&>MRM:;Qm3M-J>C5GE0dC.MhHJbaYC<^63]j&tb4t
%-^sIR?JaO2*o7:,A99eWa1d(edSsZ9.,P&s0Ar\-:UagKrBEH0GbKK@_k'Su:eZ=&*Bbkc:P76BNDZ;I)AqON06u0N:,Tg#h!$X7
%W\f=L_i(^Y`cHo"<Gj>EcUd@\ElS/Sn2j((dljpj\gc;#L-LC$&"22SUSUNOEgeSoNQ9^;/Y@suG'7eT,9O\L]upO?b;@gTGU_XG
%o9AY_O^:k1bV&[0eSqs"*C2eY1j^-</<+"$$4s5/,tH^.PAG:o$CQ]8%.%ZNLK93PnsSVHNPu0CRMPF/"QaSkf.4W-nC8j6[e#n=
%,^'@\4(=_I^9-9UN>8rnH#K[%NrmZEUb*Xn6Mq8r&lZQF/]IJhkWg57I8P00F:ZYpi@B%BVJ1k+:HHUB@^rNT9%c:X:Q;T5OMj-J
%`$K;h>`&u^>pGV#R\7L!E*(rf<7TJhD<8t>>b16al<q\G6Eg>ejQ8Q8PONg^)Pig.$T(-IZ`"TI0/us"lgW\*K5IaYD7U?_RJUPP
%Fon<^mto.Jn4#W2:ac'S@''q`=+;3pfjo*t/N4.JOJBjQgf/MlG4?KHluMl^:S1B>"9KP7RdNY.4#kZM<^f$U4:sT@,/$i6$o[,j
%AZXTj`Hfj$Uq>IALDo=p3DF#+CUk>qhq*2,&kGcFOQuB<>1hIs.m?A$1+5r(J]mM:lp,]j9"/s:#,Bkpe[N%iLibOFq-::)1jU;%
%`C_#'dmq[>hB#)Z?Q=6OXLs.+d,2AFcInT2\`.9Bh<4^&qgP3s>L9NYiZ.%LC^3f"6O)$Q$`M_HPOWPIVfg@Gcu)M\:sq[Hk<!aI
%Mg^E4,r'k+C!@QULNMmrp-#,Ujs&U;5)`.KY,kCin(fZ&$Bsd&,7gn].U!Zbct[k\ml_-:A]WW_pddC"lbTMM4tZ'<G>DIJ6QYA]
%?-oXtBe!:*[PSa$X5Bgj^'IKlJ2h:=KonY5#6tLeYiZB@9d>XPj1`Xf%63B,q0]IOb^M@M2OrHf_iZ[N"H!i;JVWYBE)P]YWLH-c
%k,*:Jf:g#CR]B5nhG_g0BFDA.S:Set54sUddqLYK]A(rLB]LF;b^;T5[SR7<Q&K)!DqVJ'pm/5\XEb6o!dO;bcgTtY8$BD[O[cMP
%";U^7K@587J/N57;jAt^Y>`R@6ZVO?fZKeVd_Ph9l(OMgQ$3:74TV!BomPPLVO?I\MrhD,Ja#gs97.iB+A=ikcH#O!8KJROV:\XJ
%4\7\O/B&T1HiE&9A1NR^,X>.3dIM&5VD3lCL-'<>9aK0\e>n?=IrL\@#0CW=iT[$HF#-Cgq*2.+`ER2Js*1)`U2:nI3-Yf("'*>p
%i@&(=Q,nk>dL6BL@J4WQWICs,<qMmlj;ZXe<`-2K6O3>qr7\V/d-qX!JEleA5Ljf.IB%T4WN,$;Fcp*C(jtdYQfbr,MGuh._.F.5
%EJfQZ$oNl@9X");]UCusL[4KGj&nDX%?um8T@RKGg'41rMYclH8ZlD1I&qEQFa7"UMm'6Q6jZK;Vs>q='`uNC*V&lVYA?2m[@>L]
%#4:4#_riW8T&?A8q[`,go(bpV2Wajp-1JQcE\tkf3?O_Sp\EO!"o>'2s(iVN)LR,-r'#)mc;Q@j(i?+;HTJ*6JbE<@Q)\H:#Mf%k
%IrYr0ZkoI?32oCr63/nCkhu67G1\h#^:#,m2=.1?_Vm`3TUmS@!'jn(5*Lt6[a`RW)r(FF\phI5..:;"R_!eP$oB6VA^FEtd7,i?
%S#]P1XK!UiW1T/-;/G/a\"$-;6;)P_",$=Jl16]d3WA%hOQrHS?KFDaY7qV,QgEsKPJA1QHRAiDIlf,c(+\2!_efiP,NL0.&Ju#D
%%6U(XU4rM0+(0?@k4uR*m8m@nQe9s&5BlOVJb8a?+A:7)Y+@$CW8##E:@'lo3,L%o\fX5qMC>AEH:q7&lP%dks-;559$m26@p+3M
%[oe!20&4qr@&.Y:hkk*bPLnF;aNF1#2uF3FI+k-uLKu'73$cZ3fL>>OBRG2s&ZGrL<4@3!T`'HuH^[fgL7uh0#]RDuQG_Cu\>'Mp
%/j$tQDJ84-Ghj<"1Iuu)nIN:/;>ZRQ/k(8ArJ:5EmV6/Slou$U:Hg-_qF!(.lU+j$E34N)&!#k;l6HfK;P@%EXrR$]`(;@Q.K=CA
%qqUhk`T,3NGTX%ZDYb$;pnmN>.CL,hCr<T?An]XX4hTGVS3LOCK>]c=KT@4g(dGX#nQdq\C(*"gc$#J<bDudsNm^c9]A=2rpgN\h
%T+]+e!L]J*-uiKb"bmhkag9VZ&M;#k6i"P3F-diZ4;$8Er*qU6S3!g:i'?r]2"])$58-/X!5^L(2.1Dp+hAZJ5t%2V<?@2j8)l(,
%$'^6"F!D/_mFsUhTA3:^K?bOcfHW-99,6mYPo.OBG]`4H'K5^Td)EQ;G!b/-[(o)EO1sOfTaS%gB(]857^(u.fB-0COZ3!<oG04$
%qR1HrS/VQ>'e@m"/*r^7NGj,5@rcd(NqJ9W@CE,P!u3?WeeQ-`rP3^*!\=04jnBj<k#`MYMa'tEbf@;[Im\C*qf^UDRgk_*VpCMA
%=LmgirlB;"JbAPma>Ybi<35*I?3P=W1VQAN^/n%6(5c)AP/>^IUABGG!_:g^qKYNq`M8c6U5TZ\AuF5W83_;i+(/Xa1CR81dLt-3
%rI"cKQL2?r<NI*n((n<B?9e<e$`lpkMr](Q;ljmb*u-<--na;K]gja<_i8TKNjh6,ME08RN%a_7djpnrocJ;e'.R$>2gU3>3-e,&
%RU]nM+,PB(\1kn5Q#B*7.R!(F$nGMuahPRP/V_GcmrnQj)(VdN;$_R)R:@f[WI;T%H,NecNKM;GmD+R3oeGYf&GbC=3L2(`Hg0U6
%=J+S@3>*SLecQ"T5Vq7H$3RHJ#:VnX)&h2<r;=K;@-+gASOWV'$>Yqe5Br/rXI.HF__$9Y-GN"d'iV1m8,KY>ehc9>-Hr]'6bkeh
%M48_HQJ$5t>A$C`iq^^Z28smNheuY,^%o>?W*ucXAp1]1"lerd(cTK=VKZtManW,$f&>kZ)-3Q,&`UFs_UcYWaNp3krQ/3n*:%ko
%p\o@7qJ(o\os.N5=L#Q-*U_N(gW3T,I>JT?j)33`lc%J[G8Z=e#-8(>7f6R"p+;+`g:d#p>$uck-$&D0W@?E^7<!#uq&72`'H;CS
%haZRm^.7$+X>S^E&0B_-R6SJhWVqLZW#ofCpc(6,+fk\Z.mek""5L(uf`iFWN*+,Q]jhB7jMYsRlfJTTlk?Y$+3B[P.0`9%gB:\/
%6AS"8)QFLi_Zd-0ac'OWDK-lO'Cm\f:l9fIF!4^.HKQu'L9Y2E'&oJ0Lp-I`<l0B01eJ&VR>k!$%9U[;f:c`#:(FHp"q#8XKTE.s
%fmob2pifKjXlAa)gYgHLl/OYS]<ch[8JFC4Vs;`66NE!']4^Xpbep#:,BrKIL_u_(;=_CM4WSa@Zf9+"5IV]X)Mf=&Wc\#Fq(t\a
%<'ICUIe%FS.a_iIUo:u)]&hDH^OJRQ5HS3LO4:'sU2eqS>P21Iiq6u)Y8G"pMbfi>h_E$\\,Ni&[Pl70_c`_iekU/[Adq.fQh>Pl
%Q;?snCZ/"RV_?`@@teSC%6esm,!2)d^F!%"U?0kL*L4?>T?\(Of?#DsXBpZG>p$>;:JWDdnR+_kh0QhZ;mq"#Df`,SEa\]"QTD;V
%Q;:;UP:b4;BW4^@a*24ePV!NYiraSVLYa8n;h+IdHm1_uK]4fI=fd&d%T7$DB$:B-qA:eO2"mOtOt-=\m@pLG.:g]<Z_A4-&&oFF
%-bW9M-9EU_c"mS[@uh1TIT=df&Gdun)9>i6kg)C%nW`fDe.rZ`^64eii+S&&5J@Isg)]/q]q:VCVYB&odiOee'FJP",CCR"mmF>V
%0EjVO[0Hu,E<Y<E\:%WRJYLl@NM[ekTMG6Acsi]+(l(En=Li8_#<ePdAKIHpZ%>^G,)q&?G.9LGZG_W:@,20*6]75?6'8MYEV(H'
%UVY[:gY5c6in-N48fK1;@KU2CKrtodmnjL5[>8rn5,Km9in2$J.tiim)n`.Pd:dX>IC7!#6ln/8=A`mBM&"C1nDMcC\FIh**S0eq
%-!'AGW*$;?clkl=7TDCT6;5C[5=q'tb<.Y.DVDcuH[VG#Y\;0rJ%t(d/fi]OT+^liH6WloIS%Y]F%1sM]KJZUMC+aTaA5<hT%U_I
%)IspAOp0?"M4qCUQ"#'8Sts"a@d&^\'p)`1,7uHoI,TN"@YNtr-o!o@:t)G5P40i>]@*=eq*;fI]jhq4l?,FS@!p!^Z'?J8"Ze=X
%rY2ZMb+FRBS!J)2QV-9h6;u5@puD!7c9O[nDm/)c4lkp(%qG`u?G3/)2.O/Me'h,bd6WhM;g*@$s$:IHD[<,^]%)Y&%,KA*l$^,R
%*./g#p.krghT_-I`)K7,o6$KcF!<aC,B[?%qFsGh^M,\p1cNQ"nK5qgPiqOJbBXT,Pn>(YS7XZMjO`8Bd*)A-%PX5AJVQmEfg$bm
%dU.8m:mf]Ofj:Q-;/e/e;OL0rUdb84]R8%$I8eRHbOZu8o[;6edSI,HHdZDu=jTgFKm^41kUi^a6F<R)_E,qb7WL/YOd:_oVfaiO
%'=Eo^q;-/EZ]U&[dA&rZ+T@ME8+t3LpDD\m<8s5'M%b-2K6uCBIrIHTL;ufVgf;[kaB^d[PEmCdH]n%@`hbJ,RW/X8Tfn59Aoqbt
%d+f)m)Nq)*!=j^;mm0<J738l'ro)UahE>C$VCF8Fq47I.mY%r:YTRcgCW$*2n/oj?ULe,/!A]F"\qO`#$Bnf.9QVs=J:-4U!8:'f
%ZC_!F_piir\&lE;)*i\CrL,$m);Y?Nl-5ce9dq9TG#m!4QrQ"r4j+s%6:E3G1<ARbdO.c0`6h6cVL;)OC1F;Q-4++$)kQTFAuA'2
%'V>27Vkm70o$6$*ThZ<`Te.j]$ZAp[$pMu.`6q>Q^giBr/g.G6kBEq"[6UL[f@hSD3Zk</fVVH.P>c8_H!-8UjMof(5$9sno(7di
%e&=/`G3lmOa+uu>NW!-eDe"ef/6qjI:_H,K!UZcQU16_V>sZpYR!Ccj//Cn**pnTMH%r<kp6I)[qe26_dqcEQ4#SqVCd'&<RHSgW
%(bb)5ldp'J7n'b7dE:&u[FnOUiH*I>VeNe^F7GcjCopGpdgt=to7bZQb3mJi(=A"4=euT<f]OX/j49gVfL5BnN<Dk4'hdq]D_Uo&
%M[&i^/iV'SPo/7GJVKc;$pE>_#CYO1-Ut:\0sWbe!)67b8D7ujZW]e^o7!8UF;NOep%t**>sm--\/*Mg_VnE"nU>?c$l8(<E"P%r
%4<%3n@Nd-GHXB1*)qWp"?;M@R<%!jBf?(2/V08mH8ua@[SJSLOiP#]"93HC-_Wr0IkKJ_/c.?J2^Ii0Rn9u+RQ(=#If5X+,&c1=,
%VNI!0kRJg+8\=(^H-sfq?LEO'1+X'U.%o1^_QKZ#,4,(6H7.8MlQuKDO%(ehVSTfa/ddtib@NHJ0'R=i9]R,(A!b7o-<#5gHN2hG
%FEUF?_Vd6P-*tDB)3n.-e)B)!,")m8N1Du"l7MZ1M%F'LD[I"Hg]0,dAa\a)?tCpQ7$=0SQ.P>mU35J9V346&0J9Y`#,P^igHbu%
%gbH0*M<[tO6_0^;S/U4"?j>rpUTC.pGhRu%B1=h,*qDmO)Xc"UI?3/1,3Y6FaM*3W[*dT4VX_mg,qgZ*LY"`e_)\k!R;*12Ha>sU
%H['-ZKN:GQQgh(9*]Q]/"rC,?-b$^hd8*u.2X_.OI5qD+aJbAn$Nr4e4t!t<F`XD,BT+$:n(QB2$:3^(hqW1(V=\I>3WhMPc'L#S
%*VI=0RJAWiYI\&_"DCh=>-epF'R3_kBb@^4UsM5s!oX/:9.t;CRBsARl:R`p+FUIS?[(QGFqN*,U*r?*,#/l1U7p`N1qt25o)^8c
%F:4*"R8s28j1a_t"MB%n1kU"jY%2f%K=AB@lSj"Xked6?BN/[EPsPl)!c8i=E(*K\@s[pP2etnM2X^?P[+i*#>R#;Dh9;'3)5'^p
%HWf`ZX(jR>`1=r`2aVT:DJELn@1<Q0>?ne>i`Wc1X?aD6baE1Sq6^2&RU<\OAiW7EbA0$>AHf-E(m*!_;BY@,<e8++cUO6-dorT[
%JR+eJ?%FhV>aRdqYce^lU7&)DqJFo^>fGPVpV3h1P"Uif!tp)D0p??$Gs@qL"_`+LF(nmdiaJ[*(Yhi\Qg-XPEU*`#7GJZG3Q$S#
%94d,laIV@0#t<(k!2/Ft<F@3j@CL5"h\hN)%Gt`#g2&2>6X*!B>;V?o69fWRo_&lG%PHf?CKQkZWf38T$6S]l-GQoj%SQ\D5F;-5
%OL[g,QM:Ac^<MVsgh%#?h#&$D'=3Dn/`ZeFTI@g"$+#?eR<\aD:t-'.!g$X`BQ"kZAb5K+[!gFAa*6R,Z\Sg7?HH4qUl%iiH-+W9
%[l$h7g0s4f]T6m+78(mURjG_&LLlY(`\dgJ[]H!73bBSs%_K>iLuuhnQ=gl+YmQn,6:7n$hI[W`"!kS/\q>q-fJE0AOtFUX6]Q2!
%ZrEGiE5kR_6=G)CV[H-dV&pVA3rlCl``_C,TPp&VC:Xt^g3A<UHNBSsg5h[@Ek@AST[>hkBB>C(;h/PDq>:_\NK.[1ha?fe[j!X:
%Z%'.:kps%C?7a*diMp*7fj[FlA0WZ5Z"i20m!7JFn;uc5fBnQ%S&,*sqe"dS/[lTkd;Pt805">/[ileLZ[=d*eu[-Innf5$Q52+9
%Z`iI(2=q6uq(/f1>.tHhd`"5iq<Vnm2RK<=bEVVOfCJ1^_'R8"ltcDTFJXmgPk3S[nnm$D0$[JBB4&ikJP-e\:sN_2DF:H#?FlYF
%7Y5cjHtqTEA3$91/YD7)3LB@%2F-"r\m=^dbrg!8SbL^S8;9hq0)B+M+O3%:'gHY=[$<R>dL1!+bo.U4P9bbG"S$P6mfCWkIG0t'
%XDo&t_PB4RcnVYrH<%6I?8k;e_O#6)P]&:X'\YjZhrWs;KOT,OWJJmn#RuVC'=i*Yq!e3019HF!h6Kgug%EIgGRojIY51:_C+!ZH
%?_Z421g_-PA?PkWdf))P/LL(eS#p_Uik]5"Vmd_"g\-7uU,AjS48joWGuKPD6c6hqRqWY]m];_&$t5B!fq!6sCVO&H<Ll/)/LJ((
%eL=,4)<rV.F9TnVT]nC[Og?Q%2<rr$&C[3Liq%4[`hI]]"iiLSHE6157B[Z?$Lcb]%A\%T!9e"&0Wt7dZahul>[o-B1h9SDh-8>;
%\r/+c'eJ/qb@3<1"(eQ(F*,H-f+^t#GM^YC;cn+B^Y.3"\?'K,XG_&ah/&:Gp\W"'gK*-&Ram@#c_9sUHe7!b)?kQ?drZ'Ygt!0/
%7ntp%FrXrC&s&]fXCcUNY+&N/`lnP0RITG_RQ`=8/C>FF=5=BceS^9W9qO)9dLVC)r?eP=@6=LD8O8b+2g6TK4<'&)11.<-FkW2M
%).6PHk\M,qZjD[%lA\2]5&B>nkTV'IK0k?<YZ5cc%pB"$fa51h%&\/O@'2GQj$2=!m4C.fmt;'q,<IsKidm!SS?ieHs00aZU[gC&
%3,aQKmAfgfHO"C9@cu(QOR1;+Ols`TLNtkN.3\1m-SD@#?!+@@kc`E^\KI)<8ogREC@u0QOEF^W`72RUihr'sb.]A#epc=SBtdi6
%FiE7^k+m]&p$%R$OQ=FIJe."fhWXg3Mf2G$W-L-E2LX"H[0s<Q6Rp)mT,b;X4.#-`okEQQOcU`)/=&`,,("BgZT$'FK**cPa$o\k
%?7BtE&DB,Qm4FO8dH1U-Qd=Lg!3b4EOZD^c(<PELb`j_4T=mP`E/*_=_7=\q/',r"]eNk=3-A(@jK:NL<==E:\R9)p>6N>"-%t-;
%5#WJ9S%\*)*,591f"^U(,<"m=,_p$5fc,M*k4!\H2&RMRgnE>6#I0bE\-7*$lg,(\A@'QMbu)J=ZPd5iZuj]p`,G&Q\gEnTEJ^=2
%4b:$fI[X_HK?H"4[Z`N%o<gDaXS"Vk[f]s]T!+$#F(tI2d9(:4>"rQL7^IthHhN_M2QO?gXNWKVG(%nFF_0Db2'-g<k1OX,?!V"_
%:3S??MCpCMe:eY#9o)GAk39?YaY3%b\h\3AGa>@3S@@e+4O&JRZS>[s1/G[Kj^LmG@[23pd@/Us&?;^66/b$`Gq7Wq$)$op0.jk4
%2d7s(#-PC@3bj4cLL/OhaP]2tmP\<2!t%#nJ4i.FW`UgG8:DH]["<n8RCs2U47A`J)liM9:8#l"YMRX]k$t[8HN3kMArH?]\&2_n
%K[Dh<oPh9u4KA'Mg@W:gnd*TYO23R$BpS>b3-6[3G-3m#q0Xon.D)_GW+-6L4u"f'EA=,Oe7E700$Th0+RAWZXc<Ihg=SQ8hQc*\
%DYe1X@28OS(RRpBTdi&!'<)thDC&rE,e"QFG+ok^eZ$ZKjIm0mG8FhmDMr'$XdYa7Jj\5MC5QP/^/n8ZMZBlT8/BaX/RKc]TWFq[
%('/H"d'Y$72VgHN"i^<dfX^`0q1:@0kiM>CBmDNLj]UfS<>XbRFTf."KiV'8B0J7)0?RKCf;U-dI>C*`m(#M]Si32ff&cjpU-,dS
%_bV]'ZcK&TN8PcE4@ZGNf[-3#D-)/YBt5hHc0=s,5:mOhLn!2f,=A,+G=b=AM.Zt9qL$#&4e%iaPil>?f[,l*5It)%Z9*=K'YBbB
%e=^fa\i,lL]iZ?6A$ctC9%CjbW03+BdL2EcPi`!R!LgOr/9L@Up[!'5R`i`pP&L/2i[U9':\KnoaB).]O8-<Zlr.ed9GP,'BdOk#
%B/8`@)7k"MAglE3h6+K@;LV5F&S>)BL;PF=;!Q`F!%rSGGbnt,IG*FRrUO3_[+8Vr57_qtRtD0N@R'#F_63.-&[oVMjK!"L@_^aB
%p,R&FotpuL+W/[92-,ANqT%<sS[%OAH2&p@QSoaSdC-]2ATq\+J9=5/:Z50sWn<BehYuZ7032Y.cZ[iW4bmL]6+(HaFg!?D2QX+i
%%egZD5?MF?>s&oS.D4--O5@"C,3O,]C-cs<J`BN=]-"V#G@]9"8jDO.1,!3?+;s(%fM43!A^84_]hlSE7"3iIg/ttWZ]"dqHKWl:
%QU[`SA\-S7XJWMK`F`4^K#RR]YAY5*d]T_*FN\A?XOH;D.E#NRom14OY&'Jq!957>ATtiEHtg4UXQuFE%`Ojq$(#`"*H\kqc[P>U
%H`hD!=jM,A1[?u&(Dj3`*MJDG'jMF/l&HM=BlH^MW],^g'Emb!Qn5_t]"OBT+[Nb3@GcYsRs>D=bb>5#D7@C!5.B_./6UV<Q:7=+
%S)k%Tbc:Lt(+mJ30'kAej'-?h?`(&'7i4gBeWn":(&"&Hg2K$qA:_V37?-r0KmdS!4KA'Z=^dq*<M(lsYaWEmZ`63u]8#Grlnci5
%b9?9\$iA.[=A0:0['7m#jjEHn>tnb"=]O@6`R4NT'_]fFl#YV!JQfFbccg7F6sFM:T@k3QD7*QQYg3Ttq$,u8$MuBfcIE^(bsA^J
%$Mt7)AldPc<7nYsdH3(JZ`j")=^dpkeb?'Oqof$_1b13F1L"ZMm^umm@@rs^0SHs:.-u"Y=BSL0T*p"PMS_P5EbJ_N<>G3f(6kqu
%Yg9DNc[<o,E@!>K:lQ&E7/JIYGNP._SS#3PGT+FIf@<s[%UuW:5;TNa3L71oDl-;D]M,]t>Pr;B%X4_;q"NqqPtEG&L.bJklKE)p
%j9&\%`.g]@[T0dFI<)A&Pgq1ODX#c](?uP[)K]btH`HK0AA1"?>1qPib3#:1$iPq,RQb7C+]$.5OGVhN%39>>[nl*7B$L&K^SNU`
%gX)J<jjILCjRPN.AYZm;DpcBMa1cCm'pQ80l#X8q_I5[9HN2lCo2U#TDRd5ha#9pYlLI1&,UB,/d[1!USrN^IInO/J[inf23SaYt
%DY\!k[YclPk`]6!INmsRnMjb+p8?l;lAh?NkA`YpA"QsX[9b1HfCh5mE-1);<7$CeD#<;,X-u424/``0Vg:l!SKY.o*>'3Zc&Hd\
%;F:Sm9GSN`g>.0eJ9lS"=OMk_K!cTkL=rP,<XVBNX58I$AbrN0^fh4pcs:Rt!`72>dp-h!!ba2FOk]?#`en^mKp^&eUnG=8D,*6\
%=hl=+=*NSk6.'Qi]30h9@OO$Dp)Bk4bg)LI(n.L??d"olN7GX$rRkrCS,NbU2al"nEpp?UC!^3GMG7m1/?)c0USdkBBS0$k?/#Uj
%X2CkaE-BF5IDBa.CKhX"<`9j1SErAQHSGo.4E]b.\g\eV#?TKWc0i!Tm9H!)>;"m.]BGRS0gmFugILE,[#/?%6pSrPn1?thKi,7L
%F'V7GW1J,_TpTc'f]P2Ua#b(`'^h.Y9AfWU+kM'E?2_6_4IYWgE7S_R\bFG(<L9lf>E[g<HiI=b?``8D58X35<cRTcL2qk'o($I8
%n)&l62Tea:as-TZD:m[&Mm!&Ks5#ula1%fVXQ?L2?bTP'a"kSU?0r$HS=L`JN,krlIJI3Rg39D*P?g*$KSger:$]0/X&1JM/YGLE
%Z5a_.8d\8<$('&.,9Z=K>XK["i]pYu;P@:tkGc0S/#:TFY9I6aR$#EVYJXn\8:td#GN$*6V/fL*[=A*dN)m>ubtTdTI[CTO<u$r\
%2jUjNLL+'Do=!&[.\;E%2ra)!OD=g*Dfj2>N]eKH.\sB*S:p<qZn];dH&N7Q;J#A2[h'B=7[%m8+!*j-/#g/*KWG\Q_su!ap[l^Q
%)()5XNM#pS\l6!X`?i/3e_NDmSuT2KB2]bqFW%(*"bP\:lY\S3Wbh(TE)DY_>^$R(EaOiD=*H0kMpQ"!,N]8CT+KQ0'p#EK%[fnD
%:[bXE_C<V;Al&=`e`4K$T7]pn.pQhVIsB'oW;XY8<]!3(,HT!I9:p>!J/9RJ/QQ.g*hXBhh`Y:[1L'^VkmfMqNu""+53mO1dIcI\
%1h^Pi8K`"\<J\_5mmJY>=0$Y_(JCiC1gBc!D)kjqYl/ZZM06R4$am(=VXpch2jAnLQ,m#XV8918OW3aZp=(#sBg^:Ec[56<28]c7
%&<Vr2n``XIH"/"lQGR;).grH6p+CEKrQo(mNQ$232HU>KS2Jm7p%FReed[!C?F6X]oe^-[f\NcVG%ZdlQb1N.2i[pu*Rl4)I$1Kr
%V[(7N4UYB!UGIR7]+&Vj-h21qQuW5UIlNhV<5T$;IUnE*W3Y&#VhXj;1h2_V<\0ldh3gN0eq]TU[%:"C`<K$Qjr/al)iLbeP:>'o
%;6q4N/Gk)<g:CK+2t^1r`DtrX<F&:No>"*;e%!XaAaMEo=\bUUg$$"i1X@+$])k7X6(1H2a#WJh($W*q%sM8i=?)doKPJ(;eH!mC
%"f4Y[B(gc"aGjuPca<udd+EKa3kmdaT9/?Fh?G>"BP&?h6$;9q&dS8un=7U[0oJI=!5.CPG]0M(m9=I.-W*&32iYslnVSaL['].1
%U:8o58*k,l'p:B9hCV]MB>4AIh4j,5,]U)J[!n>k/kK=AFBu6EmPZW^esrJ'g%4WJ![N\ORXQcEa^QioTBh@>)eG4?=X;8TB9^Z8
%CZo6pT9V["MdF\qqW[ig>U+45nSR32$8"%fbkK>AKMHVG^QW+=Yf!slXOe<P.qkEca('sqlKkRN2Wh%3MTp8XK;MGaqO9sj0'DTb
%WpBMWW=Y/X^,>ICB3etZa$jk0LA$QYS%;"c)k\56:pZ8@-odP#\`O182:*;>fBg]^c06FGrL&gU)e]F+ZR!p<X,5UB;niCF/C>H@
%'Uk(rA`gr5g.W6fRG0,'D8DB'\+PPPof(0MC9Hh6mC'sF-qSMbO(a]3Su3j]D*=W))0V^:7(;iF@_-pFP!g>*fL2DhHZ&!s8T\0t
%Ll&Qb8YSgTHO[9SYOn9m,ggHlU)HTV<0CqBVjVj!h7BN:UY0W=Ip(`bqb-4?\ZAUhR\+h-iGAALVd*94iH.ZIC+_$$.TYolQK9bM
%h"\pmM8-Rkb6hn2G!G)o6IRNDX1t`T_q"^Wb?S)H90](eEL,FDW8pp_Cjk'3I::>>(EV;.,b0)5\\.FYh5OFJ?[/LegaZ(,ZF]OE
%c95!^??g.5gS%a_EhNjOm8HOk!W2d2*h'F.rM`g*>^5IaTiZ6mU&B-J2:8hmKnkZlALkn*gYR*%gRG#m4L?3#1!?ikKnm72bhRB?
%bB5FYiM$439K0jAEoE^+EMW!lmI"]K\p@H'V_*>UU&DN5l3dEO(EV:6^5QaV<cI#kI5Z@\Y/@S^/j-M%LX!;606#mD=k0B!Jr=]=
%iPIs/.!Fj1\Lp"OLP"+`<cR)lrHaEkITZ0X6i1?L%:bOeU)+l>32)eq%^j\&dM`L#G\E1/6@[a`f"#(Z3egH`4ERaF?-.eUp9u'B
%%)(_UL\=rb29tT0(ETSfA7cg\-<'%W\X9qsd%5udF1[#3%rGipgnA"+I61e\BFdOOTU*:\d/?+]93le@5VX"K\P#M+/j-Ki\T$EZ
%/'NA!TtQqV7^J6c&$=(PS]QKE@V'(&I!oQldRbLN/j-LJ]/FIu=T$$'4i**YjW^k=l%Ood:pg+9QFcS4$B!U(G?nO"\E"58ZPu0l
%]:s8A89VNO%s8c[RG/4jKp<BXGc9,-g"sERoS&(ocAr^<c$eQErG@</9-6)=?$NkqG0o?)LMgjH=)d,lrG@</F5Kp+:hd.2Fj=<<
%\9P!ek-dW/R\_W!S4u:bD`^oToV1n)?[-8!Hd$0S(;B:bIM7u$"1@WPLF.);\a@b,B_,PT\4!Ju:UKp*YH23Z,q_;ZQ'g6ALPp(J
%1gG9=b8/gT:R8W^d,&8s6JUZU4L?ciQ&YFa(EVjsBtWhPek^@8$CCb/6Yk:Enn]:@iGs5&Tf^S4kmJ$0ZT5VtA6uOH^kIR;[_d>(
%q4&6Bg=ltV(C6LtM^LUDmIJhU)i=)QXAAA.8>Gj2T<0odpA=dt7?fj!;E.BVr^e(?[8m'4.SIY?e_/0n5c"o%^(`P\U_gUU[>`7U
%7O)[G\Hum1FOU8;YsX0d3YAV3Wp8<n3DYl+KX\]6Y!3F7HLuKO:NTrRf=)"A@*c<Sr_=-GejX?NH^a(T?hag7T0AFMD"O[9GCK?n
%@D=mbkT5cj)e/*[oDCu>/2Z'kb6@#Q?0U.91iCULqp29]_1(9eL$$[/b/\&-[]5V!c=&[20G%!lrU9L%p[0H_k:S[]02D4bBQ&IV
%D*F:Y^?OhS1Ga7f%V75BX%a8:eXO1qOT-oC8[Z;$r,I$I8`\?5Bd2H9T+V<FY;.#E`4VjboY*0=IcG0Q[e>*F<.7mHa5Ps)Lb?`V
%j8uutn7__T5WA2O[RGDe7%NO6?B:]#n$,jjHAKFUjap0Jh<+?^gc\1SbGStE_W64J:\O;5co[___o2eF?@H7kg:hp6-?f6\E.3jW
%>1;kVA$^`$>>O@$e]hf9aBYAIET_aT+h=#`=0&sONmJ@/!`oK;6U*D`&Ie(WUT*-LZa?1;JVl7Y7"X1dU:JC*h@AGk+6TD>p*nI;
%:'HA?dN;tGQc\_BIbHu#S2BiBmES`"5"WNJqV^.WqYLbo*b5rA42!E56[ql!cLsFq_S$b6o(o\Dh.b_M/<t0TrTu;1C%GaGnU<](
%msN.e<sP`!@O"-kq<oHSF$"&f6kI$Q!mqp.k`ac'&;D^I6/28rImJ`j`eV;qUmW4<f0d<OCpoJl<V_AVP!SX(lW=GN:\7CErfM^)
%4eE>2[q%"7<8JT\cd09'gtb=PF`r978i43;6`H]7_h1p,:`eX%l2\&N:*]r,1XIE/K`"_3Uj;I<8\\bgA71d%&X"V\a?o_BeM^YP
%BRdYeec:]brZ\"`em]Q?K+PcsOY#oG#u!Og(sLIm!@aW8'e\9>B]o]:#EtP)7Go%_L`(_-&b0n^X&;b0L$=/aTruN]g^<MdLT_Eo
%#[&D2:BQ#n&E2%b<T%.FF2"3,%u81npp#JY%VRWYO\3"$b7I-1Vk\A+89j_`1S7qO1>Rq-7l:m8Ei#T<c+(cp?D@=!#ohe'RO(8V
%&h6H?p@p>*]%oIEaF$J&L8epfIuiq_%'?b3T+BfJe5F$W6X-.E.]r3g#Ir*tZpaLh=lgG@3&oE?h^Y#$""771'0l"kGF3(Vea]c"
%ig99N>st"AOa<S<9DB16'C/?m7Z0]0cqESghp*g`Zs*\HAhJrOD[cd;PZRe$mpqHTmW<\GktV\Kk3;S-Ib&!!3U/^6UNp=6dF:Dq
%o4YVj#<^q9K%Vh"h`GZIpM]Zn*:ma?,";e9>)IC?5>pF5#/*trY%>btEu9fuoK77=I`f?oqSc7!SkiNHr_6ETg?roU]ctm=g#h_4
%RZ*k$0WDA`@b]g+kSK?TFB\;(gP+4s.ML1QBMIpU"VbQm$6&L5'WfMK)1IK,AY8P1"2;`7o32!(qe**EhA:lISi!&R%"SFUed+NB
%qF*D;5J2OIG.'`rp=@cca9RAW1mW55)qr=oc>d_;X%?Q=Xf=t>(1.@J?486Gqgqu/iJp/fLTm8'G4L=UjH5/*&5#>)_\RNq,2Nio
%;6i]=ncM^iM+Q]r$kW@J/0LZi4$16hSIB%PCPk^m8AEuDBRAJOG`7cs@cjGLC1qlK;'lRWG'7>h7$0^a]#:$OUNmheksD.p8P.?9
%a99H=poVsU^6Z\aLgFHQmT)Q5oHu*Q:DJ-EUdCR@OOiaIZdHtKP)[hSUhA\G]T)eaW',kdOI&6Yd'jXdj2W)n,Ha7N%/k35*ANd3
%3%j4O.Tn8dKM5lec))&p7plElmqpJVfj?u2iBEA/kse_(LUu"aL_n2g3gI=e_<X82bG9>>\FdCf0Qplf"<lX95-W22WL9bb@#u.u
%Ag.XhbT,ZA:7PaG93+,p&lQiZJX/RaEnI1+FTZ''\0W6iESnEmH.`AKkhUP<(d>^&0WkW>I7r"8+!7tj5`-lR-QmK0G-tj=,gC"e
%+i.j5g=p1jb!$JM+Q&"tW8E31Ptf,8KE7P4[N6'sLOP7s*qBWC(no>dZ*aER*>?7;Jo)pah'/:ujcK$rF!XWs6AY1iJgeo^Us)n\
%[+t\5QQeJGLK';ZPnCPe.N@GiA?@_$lpX5:\fLMGeX7[cptY&LkH?/Rr-49bSh]*^+\-.5%8M7,E>i^Z2GWMdkO9;mdRY"qpB16.
%+/bfBISG?/SE-A*<?L(C?[Kjl^6@W9=\PqbbnVCD-=bQk`#F7d^46B-f@Q=)XA68>8c)&.Vj)s3hZeXdaU%M`/RDoE`,6^EA9!qg
%J[1ba<,Ro@!:#cR!O];=@`5thC?"k8)$>Q2$JGLtV,Qo4[,M,$>i3g:*2cS&._5)I!1c1'aWpB(^gqg"I8,pudRhZSe$4Y)I":fr
%1B`"Q?8<2WE;QZ"5oVlYWV:$L0-9a0II[P-7c';q90k"3StNBn!'&rTI/(#c3i:d"q%ns"MOrur,o1A+aKJ8<#<e]0=`*84a+&@f
%,"uh%53Z"=)PGq+3s=\&WN0Elh`"t#c.t@b:Ih&o^J:^<3d6FI>b,K&O?'%_]ot6;I3,.I2YRS%_&);*JttO[U-AmU5:Qoso;Xb/
%6J2r;mID*0D8c$[f4ZQ:ArarqL%6$Set7d=oasF#E)n\3",kMcgK<]UD%m;cfh-h<(6?B*hPb`-,`OT4/0A>7dJ1\%VtN#9@qFtg
%@"taaEn<:0!aKi5%(u&!=cQ=bS`d&.,UicH.0`%,;H,8T5B/R):7"6R1ICPAH%IRUHO2rc;SpOp<HVJ[P4)cobp<\F;FYBmLQi2F
%"b-RSY`Qa91@RlU5\oi.0gd=+F&pE-Q!b%GG7[a*@8&t7lk4)j:47M[TrQ(!3d$RN:I;@k&0(XG[FRNEhr3&"Krlm]=+P<POA?Of
%j2n'kU55@-j$O);_nd!I^%Y\Q:+$Q$BmV(tQ4h+op8N>la@"9p&?U)a_k=&'#o?3b/DR[/O>"H_B,NlVYBW%-JhR`pEXX.`%tHhd
%j$;BlL((GL?_,1TO-_cC\hsi,6dc=(P6LZ373OtMh00qpEREhK=(PR"V4]=8dnY9\d+,1-)G:H?5VNMM?>d=c=Xr1L(!&YN<<+C/
%H2oj:#?9m3=37`t@WBFqqYJiVTSj]W%S*!rF?`OicMOs7^+2Y),g.RViB*9/?Pa!OSk.4[-+#[h%(o#*V"'t.OiATjIO0gjZNHk9
%n]X2P:e?Pk"F%C=Fg,"2"n1M!8GOa)BmW:IN:799Xd&rtq?EtH(QF<P0\a9h2kZHq^_ii-VRMhfZAnVs]lOJ'q^G2uj;?GfRC@F$
%7S&-!!#\crf1A+!M:53H"o>Z2L&Prph.Rt5"c=Bl&[IeZcau-a+n2Ofkk.e.I'J)+DXQJfi(2;")YdF->sVFdD%s\<fV`?V-L_.m
%,P+BXc_I,QA3J%ci=(sV<-J+3,$gU('+'-9>N;*nSp[6.7Y*p55Bn[XIs^)'gr?LuqnB*&+%0=aR5:4("m-qaMRKTs.gIS.nXb)6
%mVfkr%:BAr$t<IWm8Kp+m8Yo4@PA7aj4E+Pa64_E3[O[ZS\a14Qao9!%FBP6mk=6bJh_G*)WU\=fr#SdE0AuEOpgY0p#bh&QfIcZ
%'0#P:#uCkf$UBC@[D'/d+fcZu<CirSou?4]]c%]$\0-QrYj4<6UMj.]D_fmVQSRNGE"3p.K&[_l7jY[oh(VHJ?AVXAYMV.S-Mrso
%)mu]LmX*%F:tL,35=;!T*6SSjkQspq])n,E>F<XaB]n<Pm.[i-;Fm"&cTP^/ZC"uaZt'o^>Mi[i&C'.Z!r92+f$`8"edBP'SZ!(s
%Zb4l0/kMY3T0GOU5Vs?oFR;=9m4X'6]tHFtQOD4VPk0-j_[FgV04"]4G27eKhGd$Aq,EWK!G+,hCEgQ2!O^c^^HCoEFcP"82B9$9
%6`f\Kb#"4C\Vp#7c)S4/B:-9NXkl2qOJdkn5#mUr?sgSjUH&/U.aim#"t6_)phn"P(]796E1Qth,iOC2#rSYc41;Md\atithsF7Z
%g"%+&ARNa\i*W(fE7_t;;)B8>O2(L3CphMr-6$*o=aJRMB:l3-Y=jA.lES,Ykj)\ih2c&(=kl(m6?r\r:,uOMWQI4Rk1\rGkEJ"!
%qL1g+j6C1fqcGn8;r!QnEUn48f#o0,m9'r!GbJR@$b4(@k#3`8i>I=k)f$TU3ki"i^fnEXN)r5L>^5&OEqPW`/04)*Pr4@r$P0ig
%.[GT/7/0@rVb8T&f?-f'pQB0^l_Wk`,0nV7gPb:<d\aAXL9l.IPga1cH4[GY/R3+p@g)E3Y37!5<]C[&D*R_A=6";[fCHb?$kZ^Y
%j6&3[5N1Id%DJ?go[KL]3ZP2B?oQh(*=`04cuN)0gq1mq#Xq*(_X(auPbP[X%V@>d"0UiOTEDB@';e-]#_i3TP9`J82GAd_KZ"*+
%QLT"LQ6(.06s+c%=5Y;=&0YZ"*R+bC!FZ9A*Q!T*OPb@#kI[6doBFX"Q2Pa4.uBA4F?L$VPm8YO,=$s^4!1D-F7AgSr_B6h=gZL@
%?!R.E__$Jo:<3b:h@)LOU#H9d>4@of3Hk#);0G?'Hgf(td?[2\L[=W-NM8&UnTsi'6qHX^!*A<h(HG^T#j*h$*ctJSi45S)=p-sb
%DdJ]s=j^rD[kE_Q=jCH*9cgtd0?X#-jd1Yq?N!W#Lo+5E(+9+JA:C><G'/!D+8M_?bj7TQk]G75MqVhlD>na,jHHH(-+YkkXqO2u
%=t>m;oX(W>[(XPcdug*HPLbp72bU\)O+gOnoLA.>o]ijuUXp\.]CG;o:_@J+k;^b1VIlH)8q,tCo@(>/HP+U":X1nc2ne?ec4k>p
%]Ej852,\<^G`elZded."KY_e;7q%1$ZA@,oSF02"1uGXOMol1ca0S?+8.S.Jo:&^ZhaL']AD9/:ooY9#IPKkn7V&(d7:mu1OBb-(
%:dd-GfTfku]9o7q;GdDHgan2*g;Wc'8H:Fq4jM1T3`!X!0Ti@UZ@)SKQ^rIReIrEa-q^I]o&:2^f&+WN`d-4"<NW:d/\uL+5(3cI
%_$g%O"Y:Ir;gugE,YM>Xf.@+QXf]OUFYEtDB'4!_rIMCiXO:h*:@h&YH5MeYS^No&nQ:ZD\QSb-X'U5LE`(Qdrc>esSgj(2rW?lN
%nQP7-L*V>1<"ig,i.96G51Id@5feUUfPSb*F8<*[i9p0&LP5h]i]MS@o5QZl@`HsjQ2(U52H%'K>f_8TK0sii:Las4&O=ACAkICp
%:C1ILI^h4[0Ji8VG5A*[!0<i"1mVAsOfqQm3]CpS@Q&jQ2U->Yq-Yj.NhD>:UMIluRnb,&:)`#6H(\22i&'V<W!;2F,9\F_psD8i
%LXK6h5HB!Xi737iTO"1#ei3kKNu+g*o7^]WYIFcnO&:Yk&bj7$SIAN^[6_@ZKQDL)BcnQ8o^gYZZF5'c:E_SsV(_l04mXs[G^-Vr
%@b"qH)0:_jhfHR4AFgX@6r38G;>B51[RsA)1P&CB3/lIg7:Yb/`hq%_*!$;U;aNcJq2kM'?HhK@dq>4W5+DZ/]m-I4dZ5j'r0]j1
%FZX8IeAa8.n1$2k(PQX0cK41JVHEojet3'pDt>I#;0duL,VU+NM?7_)Pf.NPJL.V,RM\,58ZR(:]M?F)2)X=Y`U/g,+F+KdXD#8l
%&8"Z]+WCr:2A]J)k)m8Nr.p+DcfP@"[gQO]Kdh]cFIuJA_3Ek4TCSg4+bsJuEK7BYWq=,o3\Vj@!d!=^Qq'sZ]LFa[$DI'25@C&\
%0rI2pP;.E`2;nhBADl")0IjYcdZ^5&mnAaiVBi(!j^MA2<6i"ORD+BR$9-m>h:PZ;.shp"VCREokACh(MsT'M]aNFUSk&_iK:8n\
%X'TT`dnR^]p$gT/b6L\mGq`P8Y$Qg+p-!jiKZ(>3['UEoitO4??A'hPZj=<ZAJn]HQl(f3Z%S<WdN4RD&:W$^^lt)3e+rr2D(U6-
%n\.,QN5l*&h(`a$TP!V8\Q'h)a2\ZBWu7];r5?ZL<kcX8_NPp1<^$$)&TO?g-Y-!o(&adEaF]p^M.C<Hp8([`U87e\_%4D^7ie"W
%OPQZ;DI5t5/dSJ0rS<SM[Sf\M,?,/l*fRWTCk9nC3o(8)cpM*"JHWI#F[fp9^k1<?'@4BNkDdo!F'IS8Gl_*o7hOZ$n/:D,^:ET_
%XhVrB-T;TU3"JugD8M_<Q58(^s8E8YS#:IPJ+-E9@qMFCb"anHf&8m_;d]dq<t"5r^M&jLJ#raNIP5Bda*/88XZEd`0ih?"*2W.1
%J+>SU>g07SA?:<#ir]CbPbY8*%hc%'=L][E\f.npds.sO9@)geR9-bZSE2#QUfqZhN;J"2q]1N@&<;!gJg1f2\Q&AaHjfdIg;VV%
%H%)]*nUs)gOl($g=Fil8CG4OEAf68C-"W+p_='=N^4h+iL!OZXaG:'IH@ueH9(D%+rO`ROOF((C=Io5!d9iH"m>`54VeMj;o4+PT
%6Z:FP0kug[It4t71Sq$`V;KTGA`T$^Th(@>D_HjRHG<B;B"TM85fpuVN^qhU]_uO'*1irsqMDM=E!ss9%KIlKqO.Rqp5]r5f8I;)
%V^"$f&/hSY:[6llRAsN'TE3RN7d9SIhS782eFEcI5#_G-We3On#l"Drbh=Q%;7hiIK&fW`F&OCH(@alK\Qd6+ZWc@)OT8$Z\HVZk
%&CD-6(sQuM+DPKONl%.K<<R^fYR_iA+F0oOXmR@JMCTP-ogJ8AbhXrd+faD^r$7[)huY5L?,D`@K[Ep!>enSZV`NLLSkK]T!YtVb
%p1qD-9*<UX*I+E]Eb`BXU:Cg85%'p,U_ZGF9o:2C"j'2<hPg6=4d(_">k4=!I^BdLSS5OCI*V`Tai`!S7P>;JhR"#d$0%@Y)9-=E
%!\Ape^p#RcZi^E_m];Fle5NE,;MtB>gRomX;q.i<-VqMD/B?tKqW;LF@JtL7=Ubcs<#8Hfddco[AV>I3_0HBRCb4$L$W@2kb6LM'
%Zp8TIj\7X(=i=B.PcB2kBQ]oEOj:.pi/6uiM4hX*mPJ9_.QD(ZIhnk@SRCep-!"H29@(KA(uLiaAL0i2N*fh5:+h$Tc.0S$I3L:4
%EdQQ?%T7a;):=TT"@b44XaK^0k(")IoD[,Y@`mUnd2^O-40qjhWV-7cSkL[g3'T0*f'B7"ZVjG^<bORaC^-GnPB</%%n'F<rL*sV
%8EkT]AH[`C5SNEpE.jI*QJVj4b1A[9lH?+s[jr$USMU_XH16B]V+M&6BT%d$[ls9.:@Vd?SYWPY0O>')MXZi4O6-`5-:kMb[qCi0
%MJUoE)(4-NC&k1FG@eHJS$XAS!#Cj)6Y_.g0TElWL%`br;QGBM\66bO%gNAd(=E2I"?<OO$\+AG4]li<*Y\R_FC5II[6XLW,X3.f
%'+k.OahJ1DR>C?n8:E/s`\767P$^3N@hntFAJPe0r'Q-24o)h;+bW)8dE`Be;Y"mS1Oe:)Oo,9"3Hj@'q&);,B]1&=RNo[6,5LJL
%:-eSE,X8QZ#mc#h-nfG-P2u?>.q9@o&]l+WB&!P46BWE31D/RfOo4EuSqQT/ahW-u7Q`X1<tW\]?OhZQA*>DJ1qE1%>eP1_8A\1Y
%`dQCPUL.E1%"KrTKd%kd!9j,P.ID<aE19;(Iu,VhH4Mf^j"nmn2CQ"g"9iN>VQ1-`^9o)tg=e.R%)@CWL7[NL0bYo&MZM2lkLSA>
%)8LB2rqY<@5kUc?F/()$!.r6bPQ;1j!G2H=5drss5E)!2Ug'f%JT-.o*tE_n_#Oc5'aFI!l.r*Ij^q@.F=5gM%H1$9!RPC'97!<@
%TW?5_fSa8(Lf,/o3;E9#^@@0)!#@:<OHN42N/$tkh`H-?o3>pbCiTuaM&$,(50aBA^e^Z2N,ifSduUB\#YQRE[/sj`0WKT\P^Zm!
%FDo1A!8]HA1`N^u<F&uf%"N61oF=WV!RQ5`QjGR!8=oJK(r0gi[5RX6-o?W9HVeh_oW=.^^CPi4Mtu8\p(u>%9]gh+gRfO^6ii1g
%m'QIL&d;sa[B&S$oD^12A<*_[ZU;mVdbqV1K#"i4AWYc.Q)[^XEOc&p?!3PXc*i99+Do$j<uMopp-@H+0*R@94aiKpknfaXXH%bF
%:e<'YFTb+F!$%:YAk,,RgJ,ToTW3Y)F9G"E!$$&AIRcY65'Y:>*!$X)J/Vi<T-HUNNd(R=0?<79!-h2U%Ub.Uo.ghT@@a-q+TQ%2
%P>q]U,Z"4rKp,C:3Z/uu_h:n@.q>%/<E<*%0"ud#HsG;9i2qgp1U#DG^)CBf!of[*BO02NRK]+sY1Nd,q9&j$CXZ@542:kSTZ*I`
%Qu]hsO;^AFJ-o$i=UiGop&=iN6:D!Ld]2?S!/<;^#M&m,q1?)DJ-HS-@1Oj$O/)e]bW(N3#nYMakqP=q!()<n.rKq!/$,u?UK48o
%(eQftDD=E%CaR7(JunG?(]XUC'8&)kSq[Ke@`'$=(S,\CXQT\bd,+"Vme6R!77cn)R@9;I>`3<m&AYB%=smkuMtH#`m@)?Y;"9;G
%Jd/MH>Mt-N^2')*SHE2_p?M$o?6t]`9M1ZbQ;XO%fEW6orLd@<jSZ3`+,e[Q=6naBSoqM>C>,)PlIYX&""_okMp8(JQq%^WWOdki
%oT/$A<h$kX><$H$)s,#UFc4EB[f>pq%/e!<Ls=a=)Nipgc,K.>@d`Wo:d3_1\ku5Xc$h1GH#KY:_JGVYbdRNkS(g.`&BXMV9:oJW
%`0*'_gRmJK\O(snM6Tf/*!Z29/$o%0['2<@Po`B7U$F_d?q74+Q7t<>#PY*BYiB4G2CaqF8Hl8p,5p*H2d*SjlF+g?MdY-W`X-22
%Z[J#BNjG8UIdL=h!1?Q[Ye_^6X<DRdW2C(+c0>\'eTcm=bUn'5^D</FDQW08<HbsY^"/L%Ye>rIdbf=X[^5G,0\:i-ABb_9l=&;>
%o$Xc+GF]Wk?m9+o!Jb_%@pY04C<0=hMHDrY>rMUKKXKV&nd7)6?)IrYWE!Md#p0\jVXj$(?d6C6"+Skd/Fch`6R=ufe^HFoH\nTI
%IjG[qR-J*JX,!c-9:,!Wr!m:jUn2[\YJto>f--b\:Md%kE76ida0m63!P?2#/gM&a%%H"k9KiWlT3sIkmaKbI&`C9n2]$Hg:KRfJ
%bo9o<2Jp?mXP%7g9=1)-hASrRSamQI`C%\X\ZB)GmW:kcmGr06X]9fQ^9@D<]8%6uMA5m<Hgn.H)2i>`lfZ;I"ZX\le;A%X-uBe9
%U[0;LI0a^tZO+hCJ71qF./9r1^A[eJ0=5b('/a;Yl"@c(&ouZfnQ)#,+$jNDkmA$;dnXM[$eoqmGI-,R<Z=dXK"1jc>d\##'49rk
%_!1aT_<-2lkP%G/'L"_mh*.tlfkd;YTEn<s/sLTcb@@*P>40rk@Lo/ZKY\gL[L@LC=&Rh_iNn3fO74\82X)ctPNEl*Ma[`X95FfE
%gUc/Om1$ZQ2\BSr^\jt&P+.IRXbW*,73[P7-TItmc#/a]614rsOg?!\qdG)57$L,n@dWaia&*J+i'PDP;R76'OU*P;<%(>48)_>C
%HB'SHW"T7OQb<,>cV]Zkogj5<Nn6F#)7C",rCr=S];s2G19WZrfo9)ENFt[ZNcN555r:EY>F>*D!RlNNMu%"9R#"RgEI/Z'^dWhB
%SpT:$M9KNGgFPCAm]HcENQD:qWIK,&kH9X#7WO:pa,TYQ&B+rC]O`/#KH]4>^p/_]]Vj7KBTeYf9op=[XbCZ9VS.C8ZRg,Y_nM+i
%Zbd@TD-I=aLFj*?alqnH8,;'GNuRCFp"/OqnX^nV4ij<%M>%/(#M.YI@*b:jJMT\m50/ZqFd*=d*kFa5!G-X-p\U!R$K'Wd!D%OI
%e:B%_A\#OoMU)f,.^+h*i;g2I(6DDP]a7fXjS6PjYFNJ>ID%Q\IPB;QYB(oc@-Xr3i]T[""!ZG!nX^p"J\O.7j#r7S#lGe]Ck>>,
%$%Rt\j8#h@^[@Ik!V^UC)#>8C'hIG0863Oc2`EV-RC1j)/&:__='iZLVPrlJJ<hM&`_K5f'+"<F[9GqT,d0.5jt#5T&qt`eQCEH?
%R)?WO4*Cun0";2a0)CU2aXRE6YT-OaBT5k4i7E%5$m<Cj-E7V"LRp%!#c3fp1B<^ZScQ&Dn:PQ'=L'1dK'0Vk\/E)3L+^h'rGsJ&
%p)b9;1F9cr:eq6g5&CW2&BfTK5M0ZeF)2X$KU;LLL]IWYHOD>2"'@_D`U5k[.qBFZR@1PD5AUp^#4Ur./V8JQ7?H)UB)lX/_>ph%
%9PI+B=1H>sP^7ts7R;L^]pUDR(d8Xbn_>$:JCB3q%H)FUn`qQ9m\r<=G;F(0ZWia*04Pa_)O7i;E08CE_k8Ztm6PSh`I$]j(GH8V
%Gpi>=p52ZZ^S_!mXRFp@#7Sh^=IRd`Z.)3c@kq%R<_!W/-HL`r4;+sEJ]?h'=_2,`ZZg]!WIJKEO^'iS=h)UF@3/+iq@^5G0`8L%
%K/rDlZSo6@>=<#/(6.BOdT#fpa*:8_*og\*J%@RIGm[UD/hj$S]e(]f@[*#n)4ug=[f";8(.MsETaN`5Tpp?K[L.2)0'R3U[u-^M
%$hJN-14bJ^F-E.W`[^$"X!Q0i!`Il=U_)e[4dKF3D^#<nUYj:1HAoS())nuR!e^pH!oq1!7HU)&(!"=QX[;HI$atZql/C&@ZmW=5
%[OM?[;KMq(]`RNjL7>#I?a:CTBeNp%]u&\.Iqdo&],"$bi/`66.HY!a=5Q'j@d0@dHs&_:[tSCi/`D?k0anK_SQ>2U:K]A#[RV.\
%O5bojCt0<E1?[rs,5,DKf@DEiCZoX,JrE>'<:9;"dV5DKVtJklpm6WlXiP/(+3_#LhT@q9H+6Up-KoBGlefm^VL?#f!1Tboh$_sO
%QDd.c$070CSlLjM_me<&g.ND%(UP8?Th!-FKi/Y"Dh@uqpu/N$BLh2Pc).*^KE"?;r+1%Ricb:ma$HPjEYJ+lD>f5/JR(q!g92te
%I(cDZqi:`(4VaqRe41/FrC6u1jC\\NE(Vo,GsjVHAcu@8D]UVJe/&r%(PM_u#3$4mZO&,s*jUX"kjTTb_T($?)C8m%%*en0r!D1u
%ku\4^RG^f#&\Q$KCjHMYg=MUr-1%L2U\[U4,Yc6ib)B(YrVT\mOk_[n_J733Fm>&X4b5ZaL^8gL$S6@0*W_<&2DMNm!8oROVs]Tp
%9`6j'?9E?-9Ykp>%Q<FA9OS:WYsWo4'2oaYL`<VE`d.;>DP&We">P>Y'Qlp!,/t*.N%bDtd%c3s],#C%;`T0?KIgG,"Uo/sUc=kb
%!>,h@KGd%q!\8@UhckBue#gE^BP9\k(!-HeeTA=3WPU/Kf#%Y33[tF:LjW)/!,hg!K#f=`!;tO]P@X_+X`IAKJ8RS6B#4rVeo^ID
%2*u!mpj!qiJ8RU=bsWF7=!9_5#2lDE%a>!&552knkk=V(a!;NfOLI,6"qY":gQ0a\aYEk-rCYFPP%F_9J]TYI])AQ89TT9krI4KH
%6c7DcqYf8("/+C5eQ1OG,%^iom#tu\FSi\N*5*6*O/IFE!8W*MbX<=6W\8JgO:7f(Sgs=\+3c=@*1qe!32:.LLo(;J#B:54Y5KoF
%YOcO-p+:dsb.lBG-ZGAo4DkWVR[&GVng,q&Bn!^6gp"F%.W0OAe8GqV0N*W"+3%&.P:QPcA+!4PH_<EmMoQ)TSn`1jcr]ZMo?T[a
%&J`J$\<0:3$CEJ`R7m'[C@jW4HFh9Q`C8af#\NZ%Q#W]TdCo@e(>$m)cfu]@dTF\,fB^Q'E0qmW[sMfi.;d1EbPQEu.rtK#i/gRp
%%959;09!\4=Zu^=?T/>(ZT4d[CMrBL1\4?/YUD&u5%G+35B.CD*P?Mq>MNGu,#>>rmFH7ZgI%BT>2NK0Xt.Nr"9JT;fh%L;lhF52
%4TRJE/pOpaCjLs4,X8DJY9P\fgClYh0C-m9)(J<s)RC7+"hh2<Cj+f<=L5T7Xl\Fk8k[$I'USs0Qg\3M"s$tOk)d>Z#EKo1#MT)6
%ce0#9LO].X+kbAr+2OiJmo0-7NUhu:'A_Rqf`63(Fdgf\[jk$:">Y#>VUQmE;4=Lm!-n`kjG`%K)-RLiM_A3?`(g2kY@KqanOKTi
%iOk1Kal7aE713b7@mR/,i*-!rD\td"k>/.&kE1",e8m]F4BL=7MN^E@-d0%sH#DIK.o71!'.^pA2>e6CaO>Aups7BjJ6+(QWc/j2
%F1n:9'X/j:*aEk1l*/m-17(30o&VgR`(O2i)oFj9M]T<,=X2#/_1%)!X2$gS'_Oq,VkVdl]et2IK>HP+qod]^T!Eo>QUP_e^!2#>
%@m%6NJl?^(<8]nci\sA#HMVj0LbL=LfaQ3-qINVgm`B`SAS@mWVi5BUYE='0^PjXqjVXLhouj9Z6ubb(eM!]_N9_H)L#%G[dG+<<
%X7F/SG_pR_X03+AKal`+XCfscGTU`]mUnE($JruM9CP`"WllR/D[7t;bX``eGA6Ml\VlL>1I_26W]-ORMbsd#,$:qNa+M&694[3)
%`$7j[n_#07L_E<Q/])!7'k$Nr3bEgBZcTs^NOcai<Sg7+>&REJlP#a$(UTpG!bbg83Am^5DfL0YXKb+g(JDc\2-)k4Y#6!!\2)/8
%<\7pfOj2lTme1G=_\YL1[3p@"I@\m+SBeLFP;5bsli\1D1:OSlW-<@c[jPOAZX$kJZC(s/mUi?ohF.62Y?gVMctF0c)[OmsmnJHU
%A`5?k=Ln!<:+gjo%OljFg-X?MG"@J:G;N:Td344/08=R>q1?D;%Ll_p(a2c0&3_^U_q;##8cL5?YljUs\._O<c&0"r(ZfCjRM@r^
%hkEC[bmGtFmXfo9Y$%l\@4[s#l"4qLa\J%R"u.'aX\o.)?mUa',m7Ho)nKO[3Sms2-YAFjg$.MT%[@O$*.%Q-o;j)c"C:c&=X;32
%&P^"B6$L)Lga*Io@.aaB&H:45@.aW/X,@gKh%4OnVlcNKH>aZe*@M%LE]+)1R]B>!?WIg[n0j[@#&bJOH\f]tK@ia+mHf4rIohCu
%QLF06l)1:0Q7U+]>-cMnk'r-D#I%oO`W,N;Rt^fj_gq3%p\ULZH:;oWoQC5EgNXf^%h0$S4m5=EY-u%"gLl4e1Q39$5bF<\64W.d
%)Veu%qU;t/MH*_eAJ1kWDC\bFLOA@"bW)[QU,PhZ2TUiHU;i[[-27"099M4q/P*9$A4C`P<#"j>SlbU(W3011I/qK1]W,=.-(3#>
%]W0l>8_\;W?I^^(P/6/J!/8$?WW9(`1f1\(7MSX!B]E+6EU4i+/,\d^-oYlbVI6D;:jMu9?sj3H4`)sO@%c#3+IJBB(taE7R#.5_
%@BB;rVVonuN`K@@?E.?cpD2]\mQIC/duEU5Dm=-$Zb=9AfCLYF,`',5W19S.T@Z-Bq_F^oPZ&Tk4+9)M(:oQT"V0KGPNs2+GcsqD
%T319tORp1>#?KmGFd/[NOlMSnj[c$:'RA1":io3nZ#/C4@IVVKkE1kd$LjHeNPkD3\\5EN3'9#%-2Qh4Mp95aTO'c?VZ$o_,\3_r
%J'm)q*9iIGb9a5<?&R:9]l'5V3G1&>OdFTgQ)';Jf@LHShee:/+9FX\=HO&_(C9BoZ.#(K@&]?alq'QFkhR-LY:rQfM_1rKD9Q>3
%e7BHO_]9dCfDu0G`jE/(L2$8?X_rj>qPo.eH!_]4ZLckiD(U7CTrQ!Fa`j0RDJ]=MiLf%(&lCa%<$Su"nY;"[Y$**]oj:jg-&OJf
%d(?I/9#CNL<>7)!9O!G4e_3*MS0MN<-T`$ZZN;k<@dS9tH4'l(bpmJ!#$0Z'N4Fr8*B5W(9:1qKVs=$iCY[-dQ@<e^)(KC]@S-0V
%)J6/<]F<*Q_/TPb+tab0e*eEGCMTs`B*8%8ds"O)_'(UCQYJJ/N4i*&q3`n*$W"P=:LC&j0P/lNF3ga#IE4ha7<Fc-<am2B5GIYR
%PNH@L]A@trMC,fN_VWdh0A0Zk\;O^\gPDUoUE6^eF67=n"6/%RFgbXsh+8DZ`O1gX/Bm3@f@qmS7_nihP;Ze`_81+T_I+IeMI8*-
%O'g0WA;:F64[?lYp[/>LU]VsK?!O;(cR-#'C40VHnFN]p+L26T1m!UM)t&XSej27@04WYE@$Ki'26btS8PbZ@l6Fn#QkEQZIbB9W
%m^CLm$10erLOXcTJ@^6:PZ'.C.ppXB-a>OK4gqd4`::EbN^K1<9HVT&$Hn4c9kt,3FTpmu%?'kWs28QVOT5TT_+#.%%(jY8@d\8o
%?:<Ke"G/a"'F@[^9aCAGq\T\$?P^b26&XW3e]SgeJ``HOL1Z>+id0f"dRB-_fV!3>!e\W?kiinHlke=35$u,9!k+]WI4V\Xic^6U
%#!5Ok.NgSi=gpX[:"48IQe+Q!h(P&#eZF.p>9L[J2<8U.5YnjJYo7U;ZH^8[<-PoZm`.WWS^fHIm'p?r#6ZDa2a*5D?tH%AI$u<"
%YJ0_,nEDN@'pNG)f(P=64'22TrgPr<.61<.RIR3\1fUJUbV*6^<!\oB(*8fN9rhm%L^!Je!`g00<_.N`(7*?l=2?(G#53[Q6':'A
%9&+^%XUf2nqD[W:GYs*'!SZKeWcud6/?Za]fj31Xa,ZpmIpaqY*Gpe]*2jU1<N^@i?gF)2YM;Im!;p%\0QP_T7<DH1oO$M!(>6h<
%LMK-R%$3nVGn3&MGdplU1!;#\48,?3[0+B!,DO5=l*['kQ=80LKnT'uM)=+]7K?TLc_EJreZGPnW\a)*?**3+'OVp_^,jfL2=`_j
%nUmp!Iec\;anQY,<g1CXVIJGE0KK!TF6^hk=MDP"74quH5.9*k`@ia#&^[j1<o'/s;qYu?"ZPD;YH8pJ*\6OC<2gqARZZL9)7(E'
%'g5jU/J5c>`FU&@OsOqc>Z_A+(jGJSrCuYjGH'='<lK&gM2d/++K^b6nQPd=>9imi)EHPD)'2<^7P2Lu^,7\F4C#JXnHc0g:u6sP
%)L;<p[781":2].Da9U<G:t>%"D>jaU-oB@5YrS6Rm-O7*cp+r(+'O;p0:c?UB@N[b3P%b4!.li>]Z7U^ou$BI3636c4>fd5as(%J
%W[='T*fsXM5F9?0g>,A"Igt==)V4G-^Pd\oqq8*]S,_#bg$.ltd/6N5@7g8d0J>\j[K@&[=D?Y_FA3r"-CA]YHa!-[-EF/u5X'+O
%6dKuARbDDJYQUC6M$OY"$cFtp[Lo#WWN?<Cdsk1#^&6V%9'B.6bU'#`.p1aCH<#r+,3So-(pK`m\ZbCW0``l2&-kN[.SZ5]DL%li
%4BL1Wj'mqhGj12[IDIisA]ud@]AtIU*]heZQIf=D8#6f`J-A6]6D$eHHr-9A,<;Or8;ufY272'mq[Nar5L*OS4W<\Q;qr8A#s!*&
%+"$V7/<WnD[DZ3.!$"\3AZ11Lmu>'grF!iU)JaY?<c^=^9$%`-W%'*YgG$!6"2/`Q7#c$&K.HW>W(GWT_0jD^$uMd4;?+`#!^1A,
%T.eV^lNEDiDn=MKO:6$/@GfH*r>gJa_t'#MHB(!Zf;3q3l.m:nhR&9IMA;mch3T1UZ/J\[&BnHC<ft]FS5#pL.uWIM$aJ"E,_l4T
%V!XM?f?\B\lC_RXeNO?kT!LZ:p)FoLZ!>MZe(Q7LD2m!Y5-PCW+Kh])k"=Hj-WK@>)2_7t3UBqb&s%`(GlG:pWfP7+ou#bmN^6GC
%Y+<+uFt)="M&/H8ad@jt;KmpKQ&=(1S9MK%hqU'1F$',"`*1Z5fUK2oG3?c'.CX)=qW>%0ee[At!=c#E@j<F/A1jG:KEh$jJRH[j
%aM=O:.Yqo)TGXEO`l;bNU\M:+;qfe!E?u7<j4s%e5/0W:khn(IFD*]DfZ1J:CO#]2iU]C-WRS0NDpfcF9ZkVsMKWo41bH#l8!@Vh
%+PT8BcBW(:VjdD5]P;_Ygi`ucDo$$JZnNb)'lD&CS'-+fpT@,^?Zr_1^B.kh-`]'`NZ=>5>+psojshAd%!iWo.>ZLL_1T_IPc0)Y
%_91+#YN2?UcCbO`#bTbn%A_6E.@'b@29]gkfZ%a6g92"DWEY[Eh[B]1*aFJ%UJYM3FTqAj?uX#=\j#GG2'kj8GD33@-A9;%n4D'e
%,<d'4_]%rU3M'LCPAauo5]43-lMV4B,Kkk\G@M;7J4G.%'c6M#Q!1Qi2>RW)nSA+@*]j(MRC27V96d86a^1Ei(>RiC-C4L6d*qi'
%5#hL;-ZcT%XgC`=gtXK6&6Wc\5**>rmmZuCm!k5O34Oqo?=/SpprpSG5E`12`?o&5E[mDZB-m>dO:%5JWLu;u&G]=GX@Wo=l2=0=
%SIIV;:c%((ZU$q_HYUcml[^BFp"+"-=q6h.T'0LC+$k=I[cQb8Zd@Lc/NM7Er<9F)bB8EkG4d9qZPgcbTOAU[$*Rf1"ATo<)L;gu
%WX<gH2::0E(%Pt.J#dn#H2OX[_0I%Z?"#f$4N1Xc:m;Bm:@.EU])7]"Y,!S@1BG[N>,2WQe1;O?"8dbqmk8Ekq7ANF1W8g^'Nf)<
%OBadmH3c!;M$ksSoNj*7PjaG,r4X=%1XMdCbB,6c/[4"[nT]'Z`J&(cqaI5/BrU)4`ga:7O221`7P+4pDoKMPWa`'hB.T79hiFVB
%^D(,p2tICbqJX/N]HVg$*_RO!DoL_(dq>aR%R4aAXPjC9r8)$:I<*_k0L5;Wp?$p"jFF\:0PK(Mq;pIPV?g#o2"f@d&c/mn7fpTJ
%K:J]#Ru?V"iFUQb7H8):`1[E;<fhgl6CJ7f:h^+?;;"WOg[$9+`<'s&+]HDHE9uY&%(mRt3ZP+RiFb:\3#ANiYbtM2%$.-[C1hr"
%3q[&<'m@adjIp.,l8FViCMPoCS>3C,W'2l>?gh?fnCi@Hjq`uiTFGlh9.G_rccmA[.LToP2R(RNW(;\*H-iWJ=9hH&@kffd>nIaP
%54"m9G4@6D/m?Me4%2e'iB"Wl@!_Rl`,)hU"Cj8"@RK8;MqEL2*CgRuaN"+]fQclYdSjmj)Qqp."F#7\V==b$\p?A'E#R)3@qE?A
%c)_?\SgJ!jU/u!*ac0=(5>COAnSBbM#lc-#2/G`_TRM*`E]kaljRI'I$#U\B)b)7oCQKijZ(FPL#M?Ql'rpmo/sI893LVDW00OCo
%<*8fKU\_Hh:3f94X2\=bHpEhNJTK1a2"5=_@V)#A4Whtr#3FaD`GZZ#HmV5X[j)uN0Mse/p=6X:B:e;/2:a<Z$`U7HV5CrRUp92n
%rTOU-c4;,lm5qT/.CFM--_tMo\a]K+%/&'^5($aWA!:_m\ZhoeH5]pP*.'h4@l%S.:/MJ[YoB03$pa-A.N\jWI`$+7X=+QZ7A#+N
%nCbagm.EJ-pl)1CYDE-%Gnkg5U2.^Do+Kp-A]_].3V5qg)ft=($e/IIg.>[Z2I4iC(VM\:X;`"b[OHlRqn;,.IWnX^o\cIPk[kV.
%_XHJ^2Hk;Nbb"TiIGj^Q@&](&$1&%$c,OKL0ls8O?@S.ld%j^-TAs!B#-TE[Rc@Im@WVEZ1$h-2&GoB%o7['T5($&I+aid[5.IjZ
%jX6C=dIk:1doT#i(oJbcCXe(J#:Ij2UD4D\WM#p=QZ";"MF)bR4*\+6H!8!10'C[S.a8V7bCh[f*1CfZ)c64i&H\[dH3:2(4G"5@
%@2%lhPWQPETP,l0Pu'4$8$e]Me19O:K>g@tnG]^O*^OAr:D\OO4F@T\Le''J@b8'"T%5RBqn0Duf8):4'VTs2KWFuN-bm'<rd7ZR
%MD2pA:Ua/sXD6A-7Frr)Hs[3SPGr9J-SlIm=FcC4VuK9QBm9dQ.9Rt2(C#=-:$e&"GY-W,M$-Gh"@]?5:+e=l`)Xq(J'_XYP^?.l
%$FiSi]+eu?NU?BMoiYtt%;P,(23s2<048_j+)iFi7BUd9HWV8tkpJ(]P`:>+@CqFU#LhuT1M9^RfI:`9TM`>TEgBhEI`1a-l&Lo`
%ohU.&cLH4dYC@>\P\8_UMm$cIMTcPg5IB/(RiZ)FpOPNlRaF2Cdc82I6Ffi>lqpZ5VhX[)"W$0>^F:o>G26U&Wc/6%Uk)HTEnXL&
%.4W[a&b;ClZrTuccO(o+jIK1i$MuOHLU?IOAokQUhHqJfXC]Umltpl;K^>-2).B*!%r'r,>"sMo"(5Tul5bMGWCZSq8.`9@0Vu)g
%W-kM$=?3&57j^b<b\\?&Z@iml;h<bt26RPo)]P_>DV!48_hcA4P11M%0<ja#>=ibYc;R:^/C5*Sri[I>pBZ@,;XX4tnI>;5X'e=3
%/*KNIN4HX0Wh,5P('I5EnSG<rD>!hZ:^"U>;Cd?I6\+j:#qqHI!it.`iE6$36*8)Ee&T6t^Kf@9O*?rj;*hF6N2\)rmEo?j\@?_>
%$FbnJ7\0E62ImR.rO/gP^dbFu5X0,uj?7?Sh^o*ni/%&';B8$U;`sTb4"bm$gObROe5/Tse-@lA'<M%4=Dn:QT0L#Qa##Jn;9`CE
%:dgDR;4Yat5&ZXoV//2t$K_[RW.c-2B[Dd2o09(0&p1$nCU_5<Ah^QDSM]g#_!qp+0_qm]m!QH6%315&h%q*E?+%e.Ei8o*m2Zgr
%,s[G/\WQ\eTA:5OX?eW7="%N=hBKPII#?ZrKHe""2DW;mO3b\?/DW1"qPio$dd:KQ]q6n(^oqdk1e&0;4D&VKP9`Zlcd\'T#h2?+
%fFYT$P[8k$_f?>&2n$$Z=:PmkaXYWU!%D!4=:U9LUn'VJL&buF'LN2C\NCb<R#@ZF<rnaH=$\*L<Y;9)Y\RA4fNTtP_fB]LD<Y\)
%b-A.;/A+J$kd^);=OCp)q*ec$=QfBLX9f"1Fc6VL&>56d->&m8/Wb?V`4WaXn/"Otl':J)n05h9,X(@`Jgjej/iA<N$\'$MMi4K<
%$+rGShXJkrWdLgjn/&$\n[quhE]tpI"FQlV_f@IPHk>LIn3K4<HuL&]:?[7rnTP(rnXld2ZtYb3d%K)`Wai[2F8=pW[/.UuH0Kg?
%V$&M;9K.USH9&@ag<a7MIK3Lh]8RlsE*M3_Yt@hN:gBneS7cU`,8of;;XieM<gLHDY4:)'L7r]0rc<qrgh3."I`7--;cZkWR)p\"
%H<T`E--_Q'E'+oS;^YDrmU.D$T$0<R[Y$#Q[9uURG:?lJmER;R<dm,Gc_^*,V`i1*A`]]J0l8Mr+h)J^^)R&;3X+(*\L_(c]TitI
%4SJKo-uTKJGN`_<WMh$@lg2e*3k&h<%!7s5+uo\WYE-X;qMWe8@"K=s&\hrA#&CdHh(7iJ3d7Ij$7$KR.j:[[buC"IMXJfXIo+JM
%$+gB:_2TmDj[74@S+?r.^/.Vdqb`BV]kBZhInB?e=:TK8ml(F[%jXXW#\M0ed6IArb&I5*Xh>?kRSFDK-bL-U)IjKTC1kD\4?LY_
%S:T`<R[@et<T:@#7RT*2;+_bn^*s,0E-`O-=!\7Hg>)Go%MH&aB0@Um.&ctKI'B?Q;4'OL2WIo;'8[L`AG!GF-:VKs@4nbE2!]Mu
%'s4mF_Jt*KC":bQ58no\;tggIZ1#=9$C$2(_2;&..2?!0S4.RMK,<l>jYhnoK`="rR[)A!dZr`>N?)SNlANK>b+J\=g7W;/g9g6.
%`cQ+]j5K9GoC_h>p1YGD#mOnB[%clu:R?RrY?+f_YQ"!;p!:Utj42WUFFH8PqGpa%ENSNV`Lk>SkqqR`ViKar%n3seDNPdaOil3i
%YArIt]!HKZ^"*[ZUUoploCnSRqDT]a`)7E)fi\+3nd'4uhdZ-<>8mNeJ,u:0&o23&GL;7BI]ZqiQ9T,`p"!FP3%Xn<IW(n-?e[)<
%m1aV[2iG4Yl#<bN=T@onR![HaaFJg1l)BfumWpm3a"\B'/8gi2@erB`-@D;NWgepC'?).*Y9LJj"5e&"5:FH*-0#Wc9[-]1jm/sF
%Uk,l/3@63s.H7"LE['3!efVZt-^g.^S"&M=:mWSSs+O)_cLq)j7<n:\iiftpUbM6$b0@[D`k.WOs3/M>ikBE7!XlAl3NdStmnuYZ
%d/r:/Ei3IrU$)O"4"N%]PReHT[9Q!;Kq\o&*#:/1n,_0u2^S8cjE_tBLMIW`WK1pr66bMnI<oBLM\3+f/?&+s!I*nuKC0TTPHG^X
%nR=3J$+2jGYrZlYUbnsKpSco[!kRWJI+a2Oh:g(moq8tt1'@R3e[[HN`R<>"!QsQ<JJ+*F141BZ5Y/S@<lTXSBuFV9a,C@JojEVP
%Q/4EgJ=uQuV=YqXP_iCagN+>,ir%@$lH83d9PP(7]&`58))4tKouKL'io/t!3+N8,VZ6@&l6/7HjFU_eA`pZcEVe#U22["'?Uq[=
%;<Pu9fiqmh?fu'd"=a=iC!mu1J+%S:>WoTeb6*O7hp7.Oh[>);r,o(kH@Va3hHq2D#H5`Oo5]h]Y.r2<[i&Ci@9LWY5HEY1$ZT_6
%O#:A:]q=Q[YKK1`\I^N4JAT5***nrLhc12Ul3$I>n48#BJhs$kqnl*8`@jH+pO[8FJ[,<+/RmZg@*[(%phYAdqJisO$(idalJBb1
%A`_P/fB2YIb[X:s?uZj[mqbbWO`8dK+9La9EO%;V8u_IQ%K[2Xl#A2A#QIqQjrL#6H91robnR65++KESYaE7BT0Pkk#[5B3='lo]
%g2[t>GmUSDW'fi]"jO*?d6pU4'[uZg;>RIB<;j[\7p`kE`3$:(P+HQfOCta']`H;K8M*?<Z-\_`-pN*)Wp?(@Q/B;i'F"4="ftQp
%"aRUVe0#6<a$r50fd&dONL$aTD/a&^Dq_=$EYaeo4c`BhHLD9`=J$73800>qn#<.%[7fn-p8Rob\o][).LC4Z(>&9DBCob9q0m5P
%`s=U\%=`f25M"p9VmFc250gWD5SnE)\F)+raB"Qe/2S,H3l&,TSTcR'!aiZJN*oo7K.V3UlVBZ)LTtk6bjg\T:a.#M>gDm)-hAnZ
%=E[LA8"6%."K8CI`:2GQ;N0F]8YJ-_fI*"/lD&rlDuF[EfBF1s3IW?6Hc\(rn5LDl+Jj/f]g)-l,$m6T#ft%bZZ,`>`J$g`1VWki
%n!a$*]%\&#_8=+X"toQVIW3*[b>4K4p1?P_-Wf=4fpCFYC\cnEX:9Jjr-W,>-X8pC!@uU)+\aZf7hY26`\g5[VYPBlLSTgd;tog7
%YJG74T5c[V$VEGo%>>:uMm62P#;\kln<\2<&:rX*JdBo9Da"c;S<-?uO/#FA%f9ZqUa(!F6j09p*KLRPS/!pa,&e%pek$uF^k2_M
%Li)BC#IU(`^A91Z5WQ+3';>4PqrM^^L]EJBc9nMIJ;V)gcEad%0Bg28FHm+JS*Sl?_`Y20]Jk6"lt3m$Ja,6#(>eB;7$;02D2tqU
%NRTA7#YkN:c&d!S(Q!UE(@FnP3QQ\1_N&S$(`[D\!u@fHc_DL^G=9+ch'p2/NB0Qpd-`PbaPT5(3Khbr!_NTR&4GiR<s@bkCKA3@
%b830`$@e*u>P\$Yhoja]d11Uo2CS@cOJa@3^a#@+b,FTH&`$49Lj)(d;I\:BVFmTp,ORTYqaj`TIb3&Kc4PI:p"i;UFuj?NLb[8:
%";@^nnO-a&kcoqsHM9dbLkrI1F*+tirG:__lil>9aDaX"TuuPACARLupDh>Y%f.A)'ft!t+^_#Y'8nCChkoQtqREK/q<H:C0`cV_
%%Ssm"Tg2-Z6]>Pp2L@)$&CTt3LkqqE(D31^Til$6T<me*--c[gU++dmGkSCu0FU'8-OhT8q'3mQ^(ODRbm>3'dXaEglS7ljqO#Ds
%\/kae,<6npja%>!5b^usobdHE-'W!cY/e?H8G?^oY/e=RLlSWp\K6D!aDEjbf43`_SGI#EEj!HumjR23PAr_iI`LA`-K'1Yr.u+O
%S!<6$S56.;^cas]=-G^m6(W+I4uj:C'@.:tb`=:";\pFR>#1ZFGT'$u($9W--S+*f`RlhpMPt(7*-6mTk1oA'HWDsq9]o@8j!%H,
%>PoI*5]A@M%]VoDR$$l&7Q;9VZj7?BZLU]eMh`TEXgmPc^%ARNj[1CTJ6N-e0@_It[)ei>M`)NdES#-8OVVq-XBE=^']e,?.8'>D
%@oFUAL#<Vu6ZO.M"k2<^,)JQbN'!W\ShAQ\,7Mo8d'p(MO(\<HF],rb\UA4`rV%$\0R]Di:P8]+IiWH2BC7U_/GP!SUTO-e^Z(Nb
%kHekc1#9^NoLZ4XqHgkKGea4KFS>Rgds2kd?Z5>7<2]?:o]6b]o"oJg<hu;%\)EMR"ZoM!SL7?cC""C+ci/FQ&k^LFpEoecCNuF`
%Hdc/!dnSSj5>6^o-N9]QVWGZ:[UscC_&ohVGrX`./dtJCTA_X)?!ust`db,-?["3t?dlSE]fpl:9:NYcJe*(`\W5f`?/&u?)-sRN
%QJ&E(r<VGL#7iVLd!.&rDL,I?Euc0#kNOn-b]>r?f*B#>]T;20raM=iGPHgjO2'8+r(35nMO,s'Y=J=<U[>bUGkAZX.r-(6CKl:t
%EFg1N-QoG%l$-Z`Ih08*Rr6e3*#H?/*"Dn#?$qTkHWeU%`\\+X=jJp=d'^0^6";8A<A8S^^Lp\B#?lkr$4gO1*LThD'FWh4"QMCm
%,KK08d&\"sXR:gE+:%]N_.o5g#OeK_gJ.m=iJl-5mK!&&c-l,\Qr:C%QUmp4HVW.Bo0\atUQr5\\/%6IjZKXto=*rJSM+tfcWZ@k
%G]mOWp[.qPp??0M?7qQsJ<fL!GsB48[U%qV0'eD/L[t@]@sbq9i'&D:d2bm+H5[cSN39bsm$&g;Wkf14VQGlf,3&mN3j,CPEFk_Z
%j2sL?adV0)<RV/JCSukLG$dLY\dlB'c@iS7fMCX3Gk5c"X!*7IN/h+F#M.,&T4cU6d;6<_bguSI1C_Z.#:hcd"k.b@<QF?7>B$l1
%bmdHX!<^bD-i>rH:ooXgL4;1oLZ>t#gkpB)An>6!ZDMEr*Ob@:V-+iK_I580#6uiR*o17SOCgDpX9C^R*N,;7,HFt%';!.hJQ6u5
%pi4HL>[+$4SU2G4,HI<LaGkZCQS;%1-f>-]F:P!:#[,"td6GquY?%5IYPp0b(`(EnkOlUg&N62t+.&SUDpKJBcee/B*;kIS#<?ld
%op78V:ZO&58cQ8U5Kdl0k[p=2"6$=A]$X)_G9/\)a?(s]d_iFXDor+p1i+-2d$SV&Us1St6RBbFs,ZWFgC0m5C$9ZT@F&BFq1W9s
%)Ak2.h6=5EH'Wqn4ZM^dm_GgOKkb)7h(T:tNgp21#37N]mk?t5HFJM0K$1HBcQ%mB!V(_^/"0P[Mb\2&)d/QcVK&8jTqeDq[Tk.U
%$8.U=:]DNj,[bVb:1Xm$M/@d(2,2+g2etC-+H'a15CK1TA;`#B3R+E_1)P7(q&Gf,I.uk3%fGG\c0O'E/L'kTPG!-AGZmX&`rD?C
%VZ)_e("VQ`nk=Z]]Kp<H+'I's>#VS)]Yj`Dr2kMWLo[!\m$;8VqR*(#'*LeNVTTdlPEAsjf$rnSp@757A+3^t$1KS%Fa?4f.&@e(
%FPr+W5DB\V]@^a\2;G:t!0PGl]Wnb4pr[_A@-+\4._lcQn.MI8TUR;-iRuGOMl'X;N>G:K2?=jlgN;p.E9NC?F++01=?Wc%BQ8do
%d-^OW1:G*rL8cUH>ba'NjFp+?Yffh8")"%Tr4&ff*@Bnq^gIT'*/"?:\_<]K\/#@>rblu4P_sGQ_-Xno_[BuZItNm7bf6mL_%l7V
%Op;YK^l*$U2iuht^GA\m4\!Fg@0/^q@phBl:dU9F>geA=!JA1Y9d*l^huuiJ"#hTnWdNJ(@i#tYBNA\<Y(.iq`ka(MQt&gFAi7t$
%#,)o<JfNiE#hH&(3I!8ig3+rbRnItA*+PG>Mt\@m%gh<K+pJ\6;9)n'E>-oW]VQ@2Vq\^:ceG*_:ERo*):[k`4*uitB'_Y3d6X+M
%$Vf@Y5A'Jf#5^'.+2gof0%Yp+jCX^m6#mfEYQ5C(JL3*Kmq+Cm#/ah:=^m?;:jp]]dDj%[%F9,j2C;2sn[GII/dQRO9r'VEF^WD)
%9O+,rgh!FJiPq,&`tA2NhcY%A=r*&Q=00`#EUqX.l[t[a#MA.U-E(!4cOW_`)Rm&E74N%_*)<d#6tbtm(bYQX`m?rS@@!L-n9QSE
%4a1^]7agak=U#_[VV-$EFr&:(mL4&s+)$&J49rmnp>Oq`_W,#H>Il9'Q0D^-/Q6IhLZS#"lUI6Rh,XKnk(@+,koPkS)SE]FICAsg
%+LK/&q97+;*k@&"d$RPi3;s8QY437DL4H_WGDDkfKJ[LD"2\92lUq5>rHoXj&k/"Y)gK&U"sgm]iHjLj(jI,[8HDWYjS\E2l+Qs`
%ecV2pdtcWTJV4O)7e4;&p+5rVI$QQH^QK!L%<=naMWISk"7uWKnt\MQh8+8/FWA>RSi)m*4MqB0gB*ZT*e_ue1f\\NdB]q8HIJQj
%5r5l624P..5n;<OTGkADl\*$Sld@/V9WJT%92LEBjXRS@0@k[](Hl&`@$lT.mWnsh"9YO?D6VAaJgqur""[m9(Zsp@i(8pUZs8r[
%RL/EahncF(e,M;%HTK?E%?1b'cqE\Eq6#aQY>bU(<;1oafG^.sT_i:Ph#_*&73S<AQ9%RT!l8_h[Mf'"BTS\G32(':6+I2g5oDUu
%o_*hbUeV:iJq^4EBFStnB2BE2Ip%1WJ(dY>&Cq;>";6\@[of"cEniPe'"KXH>eggW87]eoVh[k)HFb-rZ@ctY>\_*^lC_C7,`s&O
%o.;)ISCTA.'$3#P5tN92@/nF8X814fU&uc?^V#+-S84mE7fd(LTJ15V:jScjGbG)9j%KQ;7+W+X`Jk<;da?'GW5Hg]HdT4Yl,p*O
%P;cNFJj2f%E8Y@Q/fB$SX_EQ,<Fsll:g$,0=>C_)<r^-";P?%!!%*=nRK9K/`QGP-drNg$oU)JCA5p.KATC1hm?*fN_PVXt+tV.P
%@)TmJPuabnKH/CN#KMSs#!;t1A/O%EJdk2V"idHCE3dPSeEne@lgDYOS95'Hq;c.B/*Jt$f/@MulG=daka6;u_\2!'7ZRH":ir:H
%j#E*61U3H.j-^jr(f7NlQD9C_HWf!K"9*V&O@C8Y5fj8ZO9gGHOAg\?%,JAQ-Eo)Ij2#,tYR((19RjZ^#!O1(%6$5u2cq]rFZ."f
%)D0rG%(kTT1!laB9`U8a"s<N*n#Ss/B*l\9^BomV3EqY-3iS!W3$8]j114G4A0#?<mcoSs*"4:"3RQg4,VTFHM5$'rGWkP9%j"F`
%7/I;&'QaR^P3;CIl;lL-Ub`34@>=p2#"D[)>RB6Eb[t)kl<.5_*/@gB*1FnL7D[MboW3K?n]%8E(RF@VJ<RgW++@NQ+>gDqmV!+)
%62I06+K^a--BfK8KR>J?*tblF`7NaV+7K'&'8LN*+Eep\G3F<"V^&-=rgTt+3ZKkQGQ/Q,9P>TJ',d*<+Rli'nmE0lnqKZpT_(4\
%D@=]%)E/4J`S/@@,;n%\rq=n?h6*/`3sK0K`2aIYs"fZQcpW0'\]=R%XH$=<OVDmKa5U<XJSX63$BP)Q'-7?)YKIqbVmkXNS9K'W
%b^ZWoVVAgH2TRFq5m,qKNqEqYA1TEa9LGo"!?Kl02\j=qMm")\YJa/o\qP7Q:a=T2EH"/HjQa2Y<j-/W=K(7k6+rNOBin."I=k&Z
%@G#]BJ^EVbR"(#]`r6pJ,bop/#(+odETYSu5'/YU))!b4_+;$?=UPQUC,B>/GW'8hY">NHq?NGgaD@50.[L26"Va\B2[m5%F",7A
%^n50.[<f^J&C(7[:Z&koLA]9'#jbq1bHp9)D2A?[rCof$Ctt(0cpjeoW.@`S*5tIuYaD'f3]sMN4PGm))'ga7;#$dpgbZs:Uk<qI
%M+<bZaV0=R0]&RtL1BOS@0RY]/XWe-)N>#ORLD<So#ZXT\^9m=:#a9T+'aCL"d<"O)NffF(qM\T@t1iji_gb,oIB]U%5Nd&qIJf7
%qWuNNVLq+ee.M7b$GtN*4CmZgd$_*Q^s\dhP8RJ6\g?QTqSsO0I[h07T"R_.1BR7E%0B1eRGu=R$I]`c&8,qJ:Boq5i[,W0abHjS
%8#&RPQR8<d\eB=qj86ZCXtK>,UX@ZP?79*L]s0fUb6h<5d+)`sHnnrL;r^n%*PLu-g!Y7,+jechG^+dqiRu'sLhCW-:BjJJ?qf4Q
%%.Se-JejY&*1(pD-LbQ0LKQW?4\n6ZI0:J'dMeW=F8QP<(c['ROf7>bGSHrmRI@hB8bMU<)Kf!H\Hf-<#T/")ZnP3?$ZYgYrb*sc
%l,&>d#9'."r6[c>>>PE^*hL5g5MGh+W.npS9n*l,Y[+LZZ0>bJ1s7XI(Nf=D-D(^P=edLl4?RtSGd7?D8mEM$B/C2T4Jk]*^>j6M
%aESeDnPD3CX2UGP*Y!=a`rX-3)t/E%`?FoRI1*'S%d"gV(G[fK/[7ppjS[AaSomn]Dpdjt1$a-pcSWX=?1bS.lgR`*jb*%acJRn)
%Mu]oo!p-P&93F,\83Rn2,Ai=bLh&!2&hE!ar(P/.r%[gkU<so$1p`/2E*@Kk7'4>TJrt`=_9`h5fS.\ti;\,u]82trph:"G<<q&#
%W8ml'eS4t@CT##P"$hLN^$0Wi1.ABUTVOFJ#M(V/^dDjE1O6PkFG:r]/V`7^`":iidBd9HD;uY6n*Tum1`9p=i=j0.C]%bjc"ad5
%Gj0b$Tt-\S?j<aX@i[BY'Muug1^Y9`nm&POI5$>0Wp>;u8)1-d)Km*&V^&)oOSTJS!K`a-aCi]e`:m-\k>DGi@5+]UnTEJ:LP$3j
%8eQ.>C-51&Z(uHt<lYO+`8=2)KX$<X7!SLFK/D6+r=d!cTT6iGS.'rV/Mn$8lue#flPf]FdK+MGR><P(#1?`:+i?:D<gT[<`6iLG
%RD/E@LJ;b>:NH`Pn=;K;nIsk=i4\,$AaGbabK?)YT@H,YN=?)(%Y;J=KH)^`U](&l?'bN_e#Wei.(I<j-Z`JV"RIHD5=.UE7keil
%PX!J>R\=Y&\0YP<P)#?3jq7N]`]ME$q^f@p<BN88IFHD0mknT[mmM\Z.oQ-^aoU,EnQ'0?e&XZa_H,ja2Qk9Q?2b<P'H.HCc@D_m
%MpWgP_/lIM`Y1tT1>[nIKC3?oEHRjjj2sJI[a%?T0V$sUjM6d%,@f(8p@PR"Ep&f2!!7:E.+`Rcd#N)p$L<bj<nX"Vi#j5ubig0'
%.*(qh,,pM_*ap]gZXPTo"Arh9@dJ[^L-Q%!%=L+L,R.0sA*W)Aj)V9eV#FS@,/JL==lM>kF(<KB*-kU>ZX=c8Ekq*s"SR6K?,u%h
%XY05>[XSJbCCZn._D#KK^TY5c%hN_5q15^<"(e"5_7`q5kr,]go2"lY@j(./^Q0P2)q)J1G/+Ycam^1"/K"WB4oX9H,XYB5RDKNb
%EK/j^F]P_'ka&8"&7ZNnQ00q+q,MP4a@e.`<6*M/X5j1_Pt?V;l9KqU1B\/<g@E+,!CK](&Wc*^HtEKiU!'s9Vq#AXnM5de!E0F"
%$#%j0oOJi*EHJI2$mCFud&[,d"kO;*_q1N7[lH53)`As.JpBEBk@7Jm]=o0i8n"E&ZkHB,*_7biFT]d>#@W.:Y/E<;0Y6-7$Ljct
%em!mT*5sGo)OS3mf/BdW*qpF>8.+G%RO7"fi&bI2s#h&7N;!eb^DJ']m?rYgGQnMP2)(9TNkl/F$j_1-;1hE^aET3tN_+)ZD$e`8
%R&A]K3mU#j8qme>5DqN!hH@r6^l)^I.YlX:6$i_TUL_\Z#rdp4$:5>8/LYi\Q6"uFBW)7lRlX8g*&t/kIb2Y#C_!XY&tZkUEa!SX
%FGGCa*2X1VXc4qS!pq`G.$MOaZ*pe`''9aIL-*qJN>T7*Au/07)V7-$>hZoQOCkW4r9_Z>/&_ifQH#K?%VXh0-"q&ZR"!/XUL>(S
%aP925]-&SEJ4Q73)MZ8N4OJ0'7YlpESh`NB8'/>US^u7./#I7uq=9oEV3?6Z>hjm&O#U#rTY)u4&(#Sa?Cctrd0V))1+['p%`>bM
%-;(&4PJ]u$9Ngh[I50cZi:rl&=E),86u!=Wg+]'?+^@46St[`7[mXdq#70M_fEZ#"q*e]@@51Ju*:Bi/MrPeG?K8cP<gVp,Q\_@-
%*NWi2E*"@]onDk$Y[mm@lZqt&Oj;5hr6jSCTM?.AL[U_@f053d-Ec/_Iu!.XIcDSN/PB,OA&;8k'TaCKgi7t`=YPfV1IMKQ,Va,L
%A`6eAED3f\*52=J:=c^&Z[Mh]eb"7H6(N4QMdmNXLquMj^=#[T71MPt9FOYj:N;_GbrSOX"*MIo*uEBoa3h+H%Iq0toH"Ns\%4,g
%pBD/":-*RDC4"$36o>cSCp>s(Y['nVRroD9YbVXC:Hd%;'(DXZW0ehc%!E%8R1OB'gcEKn\%8[&hp5DA/;`>*q]eKp#BSH)f;G8h
%S_scd0_Hh#eR=_tb'8_ulLZP<4"P$gN7FUmRN]'f>8QB/*0;7)=K^Bq6P__H@:U8-_GN7d&q6t(/>7&;D2#oaN+7;OB/ANBgK-1C
%^5>o@%86Gr4h84u+4u4+`,Oq#(.;n&6NhOnWmeeiZ_ko=UP.b9O';Zt&/b]DeE4`?6IU-\cBpUB**Cs(Sp5iu85'nk.,EI!D'@,Z
%e:fO[:*;50q$,&UM97rSEA5JM68@3/mr:I8g\gI))=&4P((V:e-H0U4N5F_`b7'"BF/B0n!t35&U.ur%D/./F4Y2SCSB;QT$4K.@
%qtUBtCd]34dSL?C9t?2#PE^&+X%BU2\-Rn^,'=Z">:g!.;'m3:9))m4,3sq=FQKQ2?"a^$`TYXIN6183n!.lP1/qCWSJ3e*THL7q
%(IRh1AYnsel5TOTG'\R6-boqP@W3\jLbQZLHj;XnE;N<Rr3@B-2%@HVTt$$s+X5Q]L965C<Q@Fj;8r^\.'rcG;-'@:7U<,lS)C+E
%d^6d(-k@HC*:%L_P]7(iU!UM<&6to-*KhSN9EWcl?s&rJG'SNBei\-[#XLghLSs(AN,.1DH@mecl5W*')Ep\(`_Dl'KuqXT>UO^D
%5(2`1'Su")MUXQlA0?%O:fWs@79]uVOCP;93FIa-BPSYZU!^WEc3#B6rCb`>%sbCk<">Fs6e+NBcK-CKCLB;P?4#?6rA7Bh%>*9E
%"U_?1&Tc!%%]1]0<%.?ka&*N2&B4,uPCb#AIu!^(-<A,1ZtbB&h;IZP?HrrfEJ([4]a5=A0U\&'8&kM:O,WsS+.g6bH?rd&".uk*
%P\4$'?5Ec&,"DpI.>pXKgPC[-JkW\QeTo$l!>360!>.]jG?E0UW/;+=9c@YIB76Ecal>#3Am:_*R0D.BV3'0"^hS??0*it\>N'"l
%nmuURBrfJ+D-WLkD1o!1IA#6EBKPfE<XdLX*CuQKei[-p_1<[#2jOgG)_2)N<[_@[OR^'fH9'WHa&+qtmp>U8TY3*!8"FbDCsti1
%ZQI3<7&#ER3X1nIFk-"_ADB)KVC`.TW:P*M=6;LboIc1O`<Ub@J@`lOh%2,2PU)]C62*Bh&8SaPRlJmgZD)00C[uXh->:DrB;f>(
%?SXdG2o9!"_,i@\9Jgu%V@3[j_taGX\1Ut'WO#d*BI9X[5S!?&r5JNi%Gk#Yg%ORFnRmurMjFHD>OmKfAc"RtOXIdSLYlaj13$Gr
%Mb.d-B:8N%[N5@IiP0q!V_Y3XjAX+thKeCfI[<3?"_p[oFg]&PQ1kW_m6H>__0\$&UD6DP6Mg+0$KUbM^:\KWBCHhA]V%/@4.nDT
%PNhQOWk=3Hd!64>K.L-+ghLDGOWDqqR4c[c1(6/TmM]pe1AGu&X<&8:a';oOM*bcT71pYr]?hEk'4CJjR@&u!p,&f(l=F758E[Kp
%g*R6FE<WC>(MDD'o8_/Tl9)U?6e*]((FVUH!f@WL2Bk!$UM?Vk_Onp`r[u8^)tM/^`:+$$aQeR%d<TdULJ#tYI[q[s.Y"rC*qk3Z
%R\<lqN@WHdb3b299S3Yp9R'2t->[*."+efB*.e/UbMcK4=N@jC4AHf`V;$5Kc+kSEkLK#7X`)Ai.Xk:6@sD6A/)Pr;T4oURl7k+8
%r;l'KH4I-b(HT7PGX/TRPOo]$.0i?ISVU_EDHp9\gMa<2l7RXR8QK"5CE!ILA2,FLTP9iao\0j2$]BL=SNJac^6XPj)gIbQ.]VNM
%d0ui#O(^fVNG@NfYLUMDMV&9Jp2ilcYVR.6R,'g8\bc;OG5Hf\Z#ALErm0-eg!^V'/Q^9fdIb]LeJgXCCAR>lTDub?r/q#3g"G(k
%IHn$9&+&16H2~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 92 x Fc(Figure)29 b(1.)f(Sc)n(hematic)h(represen)n(tation)
f(of)h(the)e(microscop)r(e)j(used)e(for)h(Raman)f(thermometry)-6
b(.)40 b(A)28 b(150)h(mW)f(laser)h(dio)r(de)f(emitting)h(in)-75
2678 y(405)h(nm)f(\(LD\))f(is)i(used)e(as)i(excitation)f(b)r(eam.)45
b(A)29 b(single)h(mo)r(de)f(\(SM\))g(\014b)r(er)f(is)i(used)f(as)g(a)h
(spatial)g(\014lter)f(b)r(efore)h(fo)r(cusing)g(the)f(b)r(eam)-75
2769 y(on)e(the)g(sample)i(using)e(a)h(40X)g(0.95)h(NA)d(microscop)r(e)
j(ob)t(jectiv)n(e.)41 b(A)26 b(dic)n(hroic)i(mirror)g(cen)n(tered)g(in)
f(420)h(nm)f(is)h(used)f(to)h(separate)g(the)-75 2861
y(collected)e(Raman)f(emission)i(\(cen)n(tered)e(around)f(470)j(nm\))d
(whic)n(h)h(is)h(fo)r(cused)g(in)f(a)h(Multi)f(mo)r(de)h(\(MM\))f
(\014b)r(er)g(whic)n(h)g(gran)n(ts)h(confo)r(cal)-75
2952 y(resolution.)44 b(The)28 b(output)f(of)i(the)f(\014b)r(er)g(is)h
(sen)n(t)f(to)h(a)f(sp)r(etially)i(made)e(sp)r(ectro)r(emeter)i(whic)n
(h)e(split)h(the)f(sp)r(ectrum)g(at)g(the)g(isosb)r(estic)-75
3043 y(p)r(oin)n(t)d(and)h(sen)n(t)f(eac)n(h)h(c)n(hannel)f(to)h(a)g
(indep)r(enden)n(t)e(photon)h(coun)n(ter)g(device.)34
b(Signal)27 b(pro)r(cessing)g(and)e(calibration)i(is)f(made)g(in)f(a)h
(PC.)-75 3135 y(A)e(10)g(mW,)h(520)g(nm)e(b)r(eam)i(is)f(used)g(to)h
(illuminate)g(the)e(sample)i(in)f(a)h(dark)e(\014eld)h(sc)n(heme.)34
b(This)25 b(results)g(in)f(a)g(scattering)h(image)g(of)g(the)-75
3226 y(sample)h(in)g(a)g(CMOS)g(camera.)-75 3456 y Fi(plasma)32
b(step)g(is)g(not)h(mandatory)e(due)h(to)g(the)h(lo)n(w)f(manometric)f
(pressure)g(in)n(to)h(the)h(c)n(hannel,)g(ho)n(w)n(ev)n(er)e(plasma)g
(b)r(onding)-75 3556 y(allo)n(ws)37 b(for)h(easier)g(manipulation)g(of)
h(the)g(c)n(hip)g(as)f(the)h(b)r(onding)f(is)h(p)r(ermanen)n(t.)70
b(Plastic)38 b(round)g(reserv)n(oirs)e(\(made)i(b)n(y)-75
3655 y(cutting)32 b(10)e(ml)i(plastic)f(syringes,)g(Diameter)h
Fe(\030)f Fi(16)f(mm\))j(w)n(ere)d(attac)n(hed)h(to)g(b)r(oth)h(ends)g
(of)f(the)h(straigh)n(t)e(micro)r(c)n(hannels.)-75 3755
y(The)35 b(c)n(hannels)g(w)n(ere)f(\014lled)i(with)g(a)f(5000)f
Ff(\026)p Fi(S/cm)h(K)n(Cl)f(solution.)60 b(P)n(olyst)n(yrene)33
b(microspheres)h(1)h Ff(\026)p Fi(m)g(in)h(diameter)f(w)n(ere)-75
3854 y(incorp)r(orated)28 b(to)h(the)g(\015uid)h(in)f(a)g(lo)n(w)f
(concen)n(tration)g(in)i(order)d(to)i(set)h(the)f(prop)r(er)f(initial)i
(condition)f(\(zero)f(\015uid)i(v)n(elo)r(cit)n(y\))-75
3954 y(b)r(efore)23 b(the)h(electric)e(\014eld)i(is)f(turned)h(on.)35
b(This)23 b(w)n(as)f(ac)n(hiev)n(ed)g(b)n(y)h(detecting)h(the)f
(scattering)g(of)g(the)g(particles)g(on)g(the)g(camera)-75
4054 y(and)k(trac)n(king)g(their)g(p)r(ositions.)37 b(A)27
b(p)r(o)n(w)n(er)g(supply)h(deliv)n(ering)e(up)i(to)f(1)h(kV)f(is)h
(used)f(to)h(establish)f(the)h(\015o)n(w.)1178 4273 y
Fj(3.)k(RESUL)-9 b(TS)35 b(AND)g(DISCUSSION)-75 4413
y Fi(First)e(w)n(e)g(start)g(b)n(y)g(sho)n(wing)f(a)h(calibration)f
(for)h(the)g(tec)n(hnique)g(in)h(\014gure)f(2.)53 b(This)33
b(w)n(as)g(made)g(b)n(y)g(using)g(a)f(temp)r(erature)-75
4513 y(con)n(trolled)21 b(w)n(ater)h(cell)h(in)g(the)g(sample)f(plane.)
35 b(By)23 b(measuring)e(sim)n(ultaneously)h(the)h(temp)r(erature)f(of)
h(the)g(cell)g(and)f(the)h(w)n(ater)-75 4613 y(using)31
b(Raman)g(thermometry)g(w)n(e)g(obtain)g(a)g(linear)f(calibration.)48
b(The)31 b(spread)f(of)i(the)g(data)e(p)r(oin)n(ts)i(around)e(the)i
(linear)f(\014t)-75 4712 y(result)23 b(in)g(a)f(resolution)g(of)h(0.8)f
(K)g(using)h(a)f(in)n(tegration)f(time)j(of)f(1)f(s.)35
b(All)23 b(the)h(measuremen)n(ts)d(in)i(this)h(article)e(w)n(ere)g(p)r
(erformed)-75 4812 y(with)28 b(this)g(in)n(tegration)e(time.)50
4945 y(The)i(temp)r(erature)h(rise)f(at)h(the)g(cen)n(ter)g(of)f(eac)n
(h)g(micro)r(c)n(hannel)g(w)n(as)g(measured)g(using)h(the)g(tec)n
(hnique)g(as)f(a)h(function)g(of)-75 5045 y(the)24 b(Joule)g(heat)f
(dissipated)h(in)g(the)g(device.)36 b(The)24 b(result)f(of)h(this)g
(exp)r(erimen)n(t)g(is)g(sho)n(wn)f(in)h(\014gure)f(3)h(where)f(temp)r
(erature)h(rise)-75 5144 y(is)k(plotted)h(against)f(dissipated)g(p)r(o)
n(w)n(er)f(p)r(er)i(unit)g(glass)e(area)g(for)h(di\013eren)n(t)h(c)n
(hannel)f(geometries.)38 b(A)29 b(linear)f(\014t)h(is)f(displa)n(y)n
(ed)-75 5244 y(for)f(eac)n(h)g(data)g(set.)37 b(F)-7
b(or)27 b(the)h(three)g(c)n(hannels)f(with)h(80)e Ff(\026)p
Fi(m)i(heigh)n(t)g(w)n(e)f(can)g(see)h(that)f(the)h(slop)r(e)g(of)f
(the)h(linear)f(feat)h(is)g(fairly)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 769 1927 a @beginspecial 0 @llx
0 @lly 526 @urx 429 @ury 2834 @rwi @setspecial
%%BeginDocument: figs/fig2.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig2.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Guillermo
%%CreationDate: 12/27/2018
%%BoundingBox: 0 0 526 429
%%HiResBoundingBox: 0 0 525.9805 428.8052
%%CropBox: 0 0 525.9805 428.8052
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 9093 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0FFF7DA8A8A87DFD0BA87DFD19A87DFD0AA8FF7DFD25A87DFFFD
%0AA87DFFFD05A8A199FD0FFFA8A8FD6CFFC3BBA8FD0FFFA8FD67FFA8FD04
%FFC2BCFFA8FD0FFFA8A8FD35FFA8FD0BFFA8FD0BFFA8FD0BFFA8FD0BFF7D
%27FFFFCABCC2FFFFA8FD0FFFA8FD67FFA8FFCABCC9FFFFFFA8FD0FFFA8A8
%FD41FFA8FD0BFFA8FD12FF527DFD05FFC3BCCAFD04FFA8FD08FFA8FFFFA8
%FFFFFF7DFD61FF27A8FD04FFC2C2FD06FFA8FD07FF7D277DA8FD0452A8A8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFA8F8A8BBC2A8FFFFFFA8FFFFA8FD07FF7DA87DA87D7D
%527D7DFD64FFCABBC9FD08FF7DFD07FFA8277DA8527DA852A8A8FD1BFFA8
%FD46FFCABBCAFD09FFA8FD0FFFA8FD62FFC9BCFD0BFFA8FD0FFFA8A8FD35
%FFA8FD0BFFA8FD0BFFA8FD0DFF7DFFA8FFFFC29AFFFFFFA8FD08FFA8FD0F
%FFA8FD5BFFA827A85227C2C3FD0DFFA8FD0FFFA8A8FD5BFFA8FF7D99C9FD
%0EFFA8FD0FFF7DFD5DFFC9BCCAFD0FFFA8FD05FFA827A8A8527D527D7D7D
%A8A8FD1BFFA8FD3FFFA0BCFD11FFA8FD05FF7DA87DA87D7D52FD047DFD57
%FFA8FFA8FFBCC3FD12FF7DFD05FF7D527D7D52527D527D7D7DA8FFFFFFA8
%FD0BFFA8FD0BFFA8FD0BFFA8FD2DFF7DF8A8526FC9FD13FFA8FD06FFA8A8
%FFA8FFA8FFA8FFA8FD57FFA8CABBCFFD14FFA8FD0FFFA8A8FD35FFA8FD0B
%FFA8FD0BFFA8FD08FFC9BBFD0DFFA8FD08FFA8FD0FFFA8FD56FFC3BCFD17
%FFA8FD0FFFA8A8FD41FFA8FD0BFFA8FD06FFBCC2FD18FFA8FD0FFF7DFD53
%FFCABCC9FD19FFA8FD07FFA852A8FF7D7DA87DA8A8FD1BFFA8FD32FF7D52
%FFC3BCCAFD1AFFA8FD07FF7D7D7DFF527D527D7DFD4FFF5252C2C2FD1CFF
%A8FD07FF7D527DA87D527D527DA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07
%FFA8FD07FFA8FFFFFFA8FFFFFFA8FD07FF9AA052FD09FFA8FFFFFFA8FD0B
%FFA8FFFF7DFD07FFA87DA8FF7DA87DA8A8FD4FFFBBC9A827A8FD1BFFA8FD
%0FFFA8A8FD1BFFA8FD19FFA8FD0BFFA8FD0AFFCA93CAFD04FFA8A8FD04FF
%A8FD0BFFA8FD08FFA8FD0FFFA8FD4CFFC9BBFD06FF5227FD19FFA8FD0FFF
%A8A8FD41FFA8FD07FFA89A9AFFA8FD05FFA8FD1AFFA8FD0FFF7DFD4AFFBC
%75FD23FFA8FD04FFA8FD0AFFA8A8FFFFFFA8FD0BFFA8FD0BFFA8FD0BFFA8
%FD1FFFCABCC3FD24FFA8FD05FFA852A8FF52A8A8A87DA8A8FD47FFC9BCCA
%FFFFFFF87DFD20FFA8FD05FF7D7D7DA87D7D52527D7DA87DFFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFA09ACAFFFFFFA87DA8FFA8FFFFFFA8FD07FFA8FFFFFFA8FD0BFFA8
%FFA87DFD05FF7D7D7DA8527D52527D7D7DFD41FFA87DA8FFBC7652A87DFD
%25FFA8FFFFA8FFFFFF7DA8A87DA8FFFD05A8FD35FFA8FD0AFFA8F8A8BBC3
%A8FF5227FD04FFA8FD0BFFA8FD0BFFA8FD08FFA8FF7D7D7DFD0BFFA8FD42
%FFCFBBCAFD2AFFA87D52527DFD0BFFA8A8FD40FFC999FD0BFFA8FD20FFA8
%7D27527DFD0BFF7DFD40FFC3BCFD2DFFA8A87D7DA8FD0BFFA8A8FFFFFFA8
%FD0BFFA8FD0BFFA8FD0BFFA8FD16FF9A4BFD2EFFA8FF7D7DFD05FFA8A8FF
%7DFFFFFF7DFD3DFFCFBCA052FD2EFFA8FF7D52FD04FF7D277DA8527DA852
%A8A8FD1BFFA8FD1FFFC9BCCAFD05FF7DFD2AFFA8FF7D52A8FFFFFF7D7D7D
%A87D7D27527DA8FD28FFA8FD11FFC3BC5252FD05FF2752FD29FF7D7D2752
%FD04FFA852A87D7D7DA87DA8A8FD35FFA8FFFFFF9AC2FF7D52FFFFFFA8FF
%A8FD09FFA8FD0BFFA8FD0BFFA8FD08FFA8FF7D5252FD0BFFA8FD2FFFA8A8
%FD08FF99767D7DFD32FFA8A8A87DA8FD0BFFA8A8FD2EFF5227FFFF7D52FF
%FFCFBBC9A87D27FD05FFA8FD0BFFA8FD20FFA8FF7D7DA8FD0BFF7DFD33FF
%7D7DA8A1BBFD37FFA8A87D2752A8FD0AFFA8A8FFFFFFA8FD0BFFA8FD0BFF
%A8FD0BFFA8FD0CFF766FFD38FFA8A87D7DA8FD0BFFA8FD34FFC2C2FD39FF
%A87D2727FFFFA852FFA87DA87D7DA87DA8A8FD1BFFA8FD15FFCABCC3FD3A
%FFA8FFA8A8A8FF7D7D7DA852A87D52527DA8A8FD30FFC9BCCAFD3BFF7DFF
%7D7DFFFF7D527D7D7D527D527D527DA8FD05FFA8FFFFFFA8FD07FFA8FFFF
%FFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFC3BCCAFD04FF7D
%27FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FFA8FF7D7DFFFFA87D
%A8A87DA87DA87DA8A8FD2BFFA852A8FFC2C2FD06FFA87DFD36FFA87D5227
%A8FD0BFFA8A8FD2AFFA827CA99C3FF7D52FD0FFFA8FD0BFFA8FD20FFA87D
%27527DFD0BFF7DFD2DFFBBCAFFFF7D52FD3CFFA87D7D7DA8A8FD0AFFA8A8
%FFFFFFA8FD0BFFA8FD0BFFA8FD0BFFA8FFFFC993CFFD41FFA8FF7D7D7DFD
%0BFFA8FD2AFFC3BCFD43FFA8FD08FFA8FFFFA8A8FFA8A8A8FD1BFFA8FD0C
%FFC2C2FFFFA852FD40FFA8FD07FF7D527DFF527D7D52A8FD26FF5227BCC3
%FFFFFF7D27FD40FFA8FD07FF7D7D7DA87D7DA8527DA8FFA8FFA8FFA8FFFF
%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FF7C
%99C9FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8
%FFFFFFA8FFFFFFA8FFA8FFA87DFD07FFA8527DA852FD047DFD25FFC3C2CF
%FD47FFA8FD0FFFA8A8FD1CFF7DF8FFFFFFA8A8C2BCFD1CFFA8FD0BFFA8FD
%20FFA8FD0FFF7DFD1DFFA87DFFFFFFA84BC3FD4AFFA8FD0FFFA8A8FFFFFF
%A8FD0BFFA8FD0AFFA8F8A8FFFFA85293C9A8FD05FFA8FD44FFA8FD0FFFA8
%FD1BFFA87DA8FFFFCA93CAFD07FF277DFD43FFA8FD0FFFA8A8FD13FFA8FD
%05FF2752FFFFFFC399FFFFFF7D52FFFF52A8A8FD44FFA8FD05FFA8A8FFFF
%7DFFFD05A8FD13FF7D27A8FD05FFCAFFFFC24B7DFFFFFF7D52FFFF527DFD
%45FFA8FD05FF7D27A8A852527D522752A8A8FFA8FFA8FFA8FFFFFFA8FFFF
%FFA8FFA8FFFFFF7DFFA8FD05FFA8BCA0A8A8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8A8FD05FF7DA87DA87D7D7DA87D7D7DFD17FFA8FFFFFFCABC
%C9FD51FFA8FD05FFA852A8A8527D527D7D7DA8A8FD15FFA8277DFFC3BCCA
%FD52FFA8FD0FFF7DFD17FFA8FFC2C2FD54FFA8FD0FFFA8A8FFFFFFA8FD0B
%FFA8FD07FF994BA8FFA8FD0BFFA8FD46FFA8FD0FFFA8FD17FFBBC9A8FD55
%FFA8FD0FFFA8A8FD14FFCABBCAFD04FFA8FD52FFA8FD0FFFA8FD14FFC9BB
%FD59FFA8FD07FFA8277DA852527D527DA8FD12FFC2BCFD2DFFA8FD0BFFA8
%FD20FFA8FD07FF7DA87DFF7DA8A8A87DA8FD0CFFA8A8FFFFCFC2C3FD5BFF
%7DFD07FFA8277D7DFD0452A8A8FD0CFF7DF8FFCABCC3FD2FFFA8FD0BFFA8
%FD20FFA8FD0BFFA8FFFFFF7DFD0FFFC3BCCAFD5DFFA8FD0FFFA8A8FFFFFF
%A8FD09FFC2BCCAFD0BFFA8FD0BFFA8FD46FFA8FD0FFFA8FD0DFFBCC3FD60
%FFA8FD0FFFA8A8FD0BFF99C9FD0EFFA8FD52FFA8FD0FFFA8FD0AFFCABBCA
%FD62FFA8FD05FFA852A8A8527DA8A87D7DA8A8FD05FFF852FFC399FD2BFF
%A8FD0BFFA8FD0BFFA8FD0BFFA8FD0BFFA8FD08FFA8FD05FF7D7D7DA87DA8
%7D7D527DA8FD06FFA8A8C3BCFD65FFA8FD05FF7D527D7D527DA87D7D527D
%A8FD05FFCAC2C2FFA8FD0BFFA8FFFFFFA8FD07FFA8FFFFFFA8FD07FFA8FD
%07FFA8FD07FFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FD0BFFA8FD07FFA8A8FD05FFA8A8A8FF7DFFFFFFA8A8A8FD05FFCABCC9
%FD67FFA8FD0FFFA8A8FFFFFFA1BCCAFD09FFA8FD0BFFA8FD0BFFA8FD19FF
%A8FD0BFFA8FD20FFA8FD0FFFA8FFFFFFC2C2FF5252FD67FFA8FD0FFFA8A8
%FFBCC2FFFF7DA8FD14FFA8FD52FFA8FD0FFFA8CFBBC9FD6CFFA8FD0FFFA1
%99CAFFA8A8FFA8FFFFFFA8FD04FFA8A8FFA8FFFFFFA8FFFFFFA8FFA8FD05
%FFA8FFFFFFA8FFA8A8FD04FFA8FFFFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFFF
%A8FFFFFFA8FFFFFFA8A8FFFFA8FD04FFA8FD0FFFA1A17DA87DA8A8A87DA8
%7DA87DA87DA87DA8A8A87DA87DA87DA87DA8A8A87DA87DA87DA87DA87DA8
%A8A87DA87DA87DA87DA87DA8A8A87DA8A8A87DA87DA87DA87DFD05A87DA8
%7DA87DA87DFD05A87DA87DA87DA87DA8A8A87DA87DA87DA87DA87DA8A8A8
%7DA87DA87DA87DA87DFD12FF7DFF7DFD09FF7DA8A8A8FD08FFA8A8FFFFA8
%FD08FFA8A8FF7DFD09FF7DFF7DFD09FF7DA8A8A8FD08FFFD05A8FD08FFA8
%A8FFA8FD08FFA87DFF7DFD18FFA87D277D7DFD07FFA87D52A852FD08FFA8
%52A8527DFD08FF7D7D277DFD08FFA87D52527DFD08FFA8277D52FD09FF52
%7D7D7DFD08FF7D527D52FD09FF525252A8FD18FFFD047DFD08FF7DA87D7D
%FD08FFA87D522752FD08FF7D7D5252A8FD08FF527D527DFD08FFA852527D
%A8FD07FFA87D527D7DFD07FFA8A8522727FD08FFA87D27527DFD17FF7D52
%7D7DA8FD07FFA8527D7D7DFD08FFA852A8A8A8FD08FF52A87D7DFD08FF7D
%52A87DA8FD08FF7D7D7D52FD08FFA87DA852A8FD08FF7D7DA8A8FD08FFA8
%7DA87DA8FDBDFF5252A8A8A87D7DA87DA87DA87DA87D7D7DFF7DA87DA8FF
%7D277D527D527DFD62FFA8A85227275252277D52272752A85227527D2752
%2727FF7D7D52A8FFA87DFD62FFA8A87D7D527D7D52527D527D7D7D275252
%5227A8527DFF7DFFFF527D7DA8FD65FFA8FFFFFF7D7DFFFFA8FFA8FFA8FF
%A8FFFFFFA8FF52A8FFFFA87D52FD7EFFA8FDABFFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>MiKTeX GPL Ghostscript 9.22</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2018-12-27T13:01:45-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-27T13:01:45-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:MetadataDate>2018-12-27T13:01:45-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqk/nP/lD9d/7&#xA;Z93/AMmHxVu68qeWZLaWM6TaUdGU8YIwdxTYhCa4qq/4Y8tf9Wmz/wCkeL/mnFXf4Y8tf9Wmz/6R&#xA;4v8AmnFVK58qeWZLaWNtJtOLoynjBGGoRTYhSa4qq/4Y8tf9Wmz/AOkeL/mnFXf4Y8tf9Wmz/wCk&#xA;eL/mnFXf4Y8tf9Wmz/6R4v8AmnFVK38qeWY4yo0m0oXdvigjJqzlj1Ubb7Yqq/4Y8tf9Wmz/AOke&#xA;L/mnFXf4Y8tf9Wmz/wCkeL/mnFVKLyp5ZR5mGk2lZHDGsEZFeCrtVdh8OKqv+GPLX/Vps/8ApHi/&#xA;5pxV3+GPLX/Vps/+keL/AJpxVSXyp5ZFzJJ+ibSrIin9xHT4Sx2HClfixVV/wx5a/wCrTZ/9I8X/&#xA;ADTirv8ADHlr/q02f/SPF/zTiqk3lTyybmOT9E2lVR1H7iOnxFTuOFK/Diqr/hjy1/1abP8A6R4v&#xA;+acVd/hjy1/1abP/AKR4v+acVUpfKnllpIWOk2n7tywpBGB9hl3om4+Lviqr/hjy1/1abP8A6R4v&#xA;+acVd/hjy1/1abP/AKR4v+acVUrjyp5ZkjCnSbTZ0b4YIwfhcN2Q7bb4qq/4Y8tf9Wmz/wCkeL/m&#xA;nFXf4Y8tf9Wmz/6R4v8AmnFUg86T/lt5W0qHUPMNtY2NlLd29vHMbdN5nkDIvwIxp8BLduINcVTe&#xA;/wBI8m6fZy3l7p9hb2sK8pZXgiAA/wCB6nsO+RnMRFnYNuHDPLIQgOKR6MR1by1ba3pF/qculw6T&#xA;pFvbTTWNmsKRXVwyxsVluSoDRx91irU/t/y5jCMsu8tod3f7/LydnLJj0g4cZE8/WfSHlDvl/T6f&#xA;w/znpGZbp1K8u7aztJ7y6kEVtbRtNPKeipGpZmNPADFWPw/mL5Sm0GbXEuLj6hb3EVpIrWV4lz9Y&#xA;n9P0YltGhFyzSfWIygWM1DAjbFUs13z15a1jy3q1nps09zLcaRc3AZLS7EUaPbyMqzymIRwSEKf3&#xA;crK/tirNpqek9enE1rSnT32+/FV2KuxVbNT0nr04mtaU6e+334quxV2KuxVbFTiafzN0p/MfDFV2&#xA;KuxVatOT08d+ngPDFV2KuxVaKeq3jxWvSvU/Tiq7FXYqtNPVXx4tTpXqPpxVdirsVWvTlHX+bbp/&#xA;KfH+GKrsVdiq2WnEV/mXrT+YeOKrsVYzBqHnWLzpq66na2UHka3sopdP1ISn6y1wN5xKh2VVHLt0&#xA;C0Jq3FVDQ/mB5G8weVrfW7KZNW065nCWMCxc5prm3kBVI4JF5eorqGBoKfaqBvleXKIDf+1ydLpJ&#xA;55VHkOZOwiO8n8XyG6NsNDvtRvItW8xBTNC3qafpKtzgtTTZ3PSWf/L6L+x4mqGIyPFP4DoP1ly8&#xA;2rhiicWDkdpT/in5D+bHy5n+LuBh5n/5RrVv+YO4/wCTTZkurTLFUFrmlx6touoaVI5jj1C2mtXk&#xA;AqVWaMxlgPblirCo/wAtvMY064jfXbNtSuNQtNUa7GnSrCJtPS0itl9D66W4enZN6g9SrM9QUC0K&#xA;rHr38mIdEs9Q1z69bz3EOn3c17KLL07maZrKeB0juPXcxWr+tzMBVviUHnir1z6rbQ27JDCkaAEq&#xA;qKFANeW1OPffriqqIYh0RfDoOm39BirjDEa1RTXrsO9f+ajiq2WNPTchRWhNab169ar398VXCGId&#xA;EXw6Dpt/QYq4wxGtUU167DvX/mo4q704ya8RXrWg61B/WMVWRwxcCOC0qwpQdK08T22/zpiq/wBK&#xA;KteC18aD3/5qOKu9KLb4F26bDxB/gMVWrFF8a8FpWlKClOIFO/bFV3pRVrwWvjQe/wDzUcVd6cf8&#xA;o7HoOopT9QxVYIYubDgvHioAoKftDpXw26Yqv9KLf4F367DxJ/icVd6UVa8Fr40Ht/zSMVWGGLmo&#xA;4Lx4kUoKdh0r4bdP7VV/pxg14ivWtB1qT+s4q4QxClEUU6bDtT/mkYqseGIsnwLStDsOnFvceJ8c&#xA;VX+nHWvEVG9aDrWv68VcIYhSiKKdNh2p/wA0jFVksMRUfAvVR0HSvzHicVdC1rPGJYSksbVKyJRl&#xA;JDVNCP8AK/HFUp1vXILCWPT7G2F9rVwvK2sEotEqF9WZ6H0ohQfEetKKCdsoy5uHYbyPT9fk52k0&#xA;XiAzmeDFHnL9ER/FLy+JoIfQPJ9ppgF3dCK41R/hMkcYiggjd+TQWsQIEcdSa/tOd2r0xxYaPFLe&#xA;X42DLVa3jj4eMcGEdOpP86R6n7B0DIfTjrXiKnetB1rX9eXuvSnzXZ2kvlnVFkgjcLZzlQyqQCIS&#xA;ARUe2KpxiqX3nmLy/Zana6VeanaW2qXu9lYTTxx3Ew3H7qJmDv0/ZGKoa686eTrS6vbS617Tre70&#xA;2MTajby3cCSW8bcaPMjOGjU+ou7U6jxxVKPMvnHyhf8AlzVrCw1zT7u+udJuri2tYLqGSWSE27kS&#xA;oiMWZKD7QFMVZdL/AHT7V+E7b+HsD+rFV2KuxVbL/dPtX4Ttv4ewP6sVXYq7FXYqtj+ydqfE3j/M&#xA;fEDFV2KuxVan2n2/a9/5R7YquxV2KrR/ett+yN9/E+38cVXYq7FVp/vV2/ZO+/iPb+OKrsVdiq1/&#xA;tJt+17/yn2xVdirsVUb23iubWW2mUtDMPTkVSykq2xoyfENj1H3jFXkd9+WWijTdG8j+SrzULJfL&#xA;2ojUrm8iupPRhdiXKXDVrK55fDEhUgbkrWpxp5iTww59T0H7fJ2eDRwhAZc+0D9MR9U/d3R75fIF&#xA;6jomg2ekQyCIvPdXDepeX0x5TzydOUjbdP2VGyjYAZZixCA8zzPe42r1k8xF7Rj9MRyiPL9J5nqj&#xA;5PsjavxL4/zDwBy1xV2Kpb5n/wCUa1b/AJg7j/k02KplirA/NXk3zHf+b11TThZtYzppH1l555YZ&#xA;4m0a+uL0CJEgmVxcfWBGxLrxArRumKpDq/5aecNR1G4llt9MazFzNqEKLqF/bzSzXMlpK0LS2sEM&#xA;kAia1JjnR3JIQmPquKqV15E83aZZarqF5dp6f6OunvrqPUdQuJJ0GnyQR2k1rcA28vouVdbz4ZGC&#xA;AMlWdmVesei6W7LJO8uxq7iMGla70UL026YqqhG/34x/4H29vbFXFG3/AHjD/gff29/wxVbMn7uS&#xA;rnjQ1rxpT6QR9+Krgjf78Y/8D7e3tirijb/vGH/A+/t7/hiruLV+2flt4j2xVZEh4ECQ9W3+DrWn&#xA;YU674qv4NX7bfL4ff29/wxV3Btvjb/hfEe2KrEQ1kAkNa7n4K14Adh9O/wCrFV/Bq/bb5fD7+3v+&#xA;GKu4t/Oe3h7e3tiqwIfUYeoeXFan4K/tDw+n/M4qv4Nv8bf8L4n2xV3Bq/bb5fD7e3t+OKrCh9Rf&#xA;3h5cWFfgr2Hh9OKr+LV+2flt4n2xVwRtv3jH/gfb29vxxVZIh5J+8INdvsdeLeI9+39cVX8Wr9s/&#xA;Lbx+WKse8823neXQqeTr61s9YWeFmm1BOcJgV19YHiNiVHWnSoFDQqqAx+OXzv5j8zXbWWrxQ+Rl&#xA;iit1uIYBHPLcK3797aZyxO54iQDiP2KsC2Ypmcu0No9/6v1u2GCOl9WYCWWtod3nP/iOZ/irkZvp&#xA;mk2WmWUVlYRiC1i+xGoHc8iSSKszd2O56nffL4QERQ5Ovz6ieaZnM3I/j8BFBG/34x/4H29vbJtK&#xA;yZCV3cgcl/l68tvtA+OKr+LV+2flt4/LFUp81wSv5Z1QLcSRkWc5JUR1NITseSN+GKpxirsVdiqT&#xA;+c/+UP13/tn3f/Jh8VTaWvpPTrxNPu+a/rxVdirsVWy19J6deJp93zX9eKrsVdirsVWx14mv8zf8&#xA;SPucVXYq7FVqV5P/AK23/Aj3P8MVXYq7FVor6reHEfrPv/DFV2KuxVaa+qvhxP6x7/wxVdirsVWS&#xA;EKVJNFBJY1oKcT13GKqV3qNjZ2Ml/dXEcNlEnqPcOwCBfHl79sjKQiLPJsxYp5JCEBxSPIBjv1XU&#xA;PNbepfpJY+Wv916e4Mdxejs9yNmjh8IvtN+3t8OY3DLLz2h3dT7/AC8na+JDR7QInn/nc4w/q98v&#xA;6XIfw/zmTemkUKRRKI404KiKOKqoIAAAK0AGZQFbB08pEmzzVMKHYqtkrxFP5l/4kPcYquxVLfM/&#xA;/KNat/zB3H/JpsVTLFUs80WV7feWdXsbE8b26sriG1avGkskTKh5dviI3xV5XaeS9Yi8oX2lR+Tp&#xA;INLutXsL/wDw2G0zg1rZJp63MTotz9XJuZIZpFUtxbieZVmAKqVJ+X/mDTIG1KfRWtZbbRrqGS5n&#xA;/RVxBbWf1S64WsJRfr0E8bSqlIZWhZK1PRcVe7BbkQMJZEd6GrJGVFK9lLSdvn/DFVQCXuy/8Ceu&#xA;3v8APFXES70Zfb4T7+/yxVbIJOD/ABClD0Uk0/Ht7YquAl7sv/Anrt7/ADxVxEu9GX2+E+/v8sVd&#xA;SSv2hT5HpUe/hiq2MS8D8QrVt+JG/wAqjv8A598VXUlr9pafI+/v8sVdSXb4l99j4j3+eKrUEvx/&#xA;EK168SBXiPfx/piq6ktftLT5H39/lirqSfzDt2PTavf54qtAl5n4hXiP2TSu/v4+/wDXFV1Jd/iX&#xA;22Piff5Yq6ktftLT5H29/niq0iXmvxCvE/smldvfx9/6hVdSSv2hT5HpU+/hirgJdqsvv8J9vf54&#xA;qx7z4ujTeW7rTdakkNpqiNZ/V7XmLmZpUZRHAIzzLnwHvXauV5cogLLk6XSTzy4Y9NyTsIjvJ6Bg&#xA;uiaL5l0LXPKHl+Ty7cXvlmGCRYG+sLNDpnoisb3LOaz3B8dkWtIlNDlMcRmeKfwHd+suZl1UMMTi&#xA;wdfqn1l5D+bDy5y69w62BLtVl9/hPt7/ADzKdUtkEvHZh1H7JO9fmfb/AD6KrqSfzD7j0r8/DFXA&#xA;S92X/gT129/niq2US02YDcU+Env8/l/n0VXUkr9oU+R6V+fhiqU+a1uz5Z1T05Y1P1OfkWjZgR6J&#xA;rSjrTFU4xV2KuxVJ/Of/ACh+u/8AbPu/+TD4qm01PSevTia1pTp77ffiq7FXYqtmp6T16cTWtKdP&#xA;fb78VXYq7FXYqtipxNP5m6U/mPhiq7FXYqtSnKSn82/T+UeH8cVXYq7FVop6rePFa9K9T9OKrsVd&#xA;iq009VfHi1Oleo+nFV2Ksb85+bpdDtli0yxfWNbmo1vpUBPqGIH45X4hyqKNqkbtQZVkyiJ4RvI9&#xA;HM02jOSJnI8OKPOX6B/Ol3D5kDdU0PQpo5otY1lvrGvXCBXZgoS2VlLG3t1DMEUdGYEl6VJp0jiw&#xA;0eKW8vu9zZqtaJR8LEODCOnWR75HqfsHRkGXuvY75N8mJ5YXVFXVL7Uxqd7Lff6fKZvR9U19KKvR&#xA;RirIJacRX+ZetP5h44quxV2KrZacRX+ZetP5h44quxVLfM//ACjWrf8AMHcf8mmxVMsVeZedfOWp&#xA;6V+YVnp662thahNIe30lhagXy3l/cQagxaaNpiLW3iSQ+k68a1bY4qkl5+ZuuweadTi07VW1d2a6&#xA;ii0G2t0uxZQD6otnqHo2UMl/JG31hpGqzB1PwUpiqU6V+YHmTWtJiGoawLxdR8tK0+lIYbe4Sd9F&#xA;NzNe3FpJYRzG3kmqqzwXPpcmRQpqaKvd+V0bdjKiI9DUI7MAK9QeMZ6b/wCdcVVQZe6r/wAEeu3t&#xA;88VcTLvRV9viPv7fLFVspk9N9gBQ0NTX8KfrxVcDL3Vf+CPXb2+eKuJl3oq+3xH39vlirqyV+yKf&#xA;M9Kj28MVWRmXgfhUmrftHx9we+3+dMVX1lr9lafM+/t8sVdWXb4V99z4j2+eKrEMtX+Fa16cjT7I&#xA;9vHFV9Za/ZWnzPv7fLFXVk/lHbuem1e3zxVYDLzb4VrxXbkaV+L28fb+mKr6y7/CvtufE+3yxV1Z&#xA;a/ZWnzPt7fPFUo1LzXoOm63pujX2oW1tq2qq40+ykl4vMUAJ4injsKjftvtirH/PH5jNo80Gl6TZ&#xA;z6jqd3dRWLzWsMlzFZvOTRp+AA5BBz4chsDUjbljzyknhh9X2D9vk7HBpIxiMuexjPIfxT93dHvl&#xA;8rKP8kXfleZtUi0bUYdW1S0uBBr956okuDcqB8MpCiirVgir8ApxH7VJ4sQh5k8z3tOr1ksxF+mE&#xA;fpiOUR5fpPM9W7Dy95otfPOpa5ca/Ld6HfQQxWXl90VYraWMNzdXUVNflvyPKvFTlriMnrJX7Ip8&#xA;z0r8vDFXAy7VVff4j7e3zxVZKZeIoq9V/aPj7Ae3+fVVfWT+Ufeelfl4Yq4GXuq/8Eeu3t88VWym&#xA;XjsB1WnxEd/YfL/PqqurJX7Ip8z0r8vDFUp81tdjyzqnpxRsfqc/INIygD0TWlEauKvHdQ/NPzFd&#xA;/mBJplvqzWUEWqjTYLeKWy4FWv8A9GqZLOS2lnlYTqWf/Sk/d/GvEniFXvKBwihyGeg5ECgJ70BJ&#xA;p9+Kt4qk/nP/AJQ/Xf8Atn3f/Jh8VTaWvpPTrxNPu+TfqxVdirsVWy19J6deJp93yb9WKrsVdirs&#xA;VWx14mv8zf8AEj7DFV2KuxValeT/AOtt/wACPYfxxVdirsVWivqt4cR+s+38cVXYq7pucVYPqdvb&#xA;+cdXtJdNgjW30tpRH5mMavKjMOEqac7KfiI+Fpfsj9nkwquIZyyGobR/nfq/W7iOnx6UCeYcWT+H&#xA;H3ec/wBEOZ60Ocu0zS7DS7NLOwhEFulSFFSSxNWZmNWZmO5YmpzIhjEBQ5Ot1GonmmZzNyP4+A8l&#xA;HSvL2h6TNezaZYQWcupTG5v3hRUM0xABd6dTt/nXJtKOevJP9bf/AIE+x/hiq7FXYqtkrxFP5l/4&#xA;kPY4quxV2KrZK8RT+Zf+JD2OKrsVS3zP/wAo1q3/ADB3H/JpsVefXetW8X5z22nQyaPc2MkLGWyt&#xA;bYXOpR3XNP30zQh3hKuamSTigX/Kpir0LzJqkmk+XtU1SJBLJYWk90kRrRmhiaQKaePHFWDweePO&#xA;P6AvUmfTn12HWNN0mG+jtp1sgupRWc3qNbm5aRmjW9K0E45EA7VpirG7v85v0vC/lqWSwW+l0nUl&#xA;1hVk4TG6itZJI1trZpHkEbRp6lW5bMACSGoq9m+sxS27OFcIQRR42Q9abrIF/H9WKqolU9m8fst7&#xA;e3virjKors23+S3avt7YqtmkT05Kg0ANart4d9sVXCVT2bx+y3t7e+KuMqiuzbf5Ldq+3tirvUWt&#xA;KHw+yfEDw98VWRSpwJANKt+yfGp2H+f04qv9Ra0o3/At7+3tirvUXbZt/wDJbxA8PfFViSpWQgHr&#xA;v8Jr9gHtv08cVX+otaUb/gW9/b2xV3qL4HsPsnvT298VWCVPUY0NeKn7JrT4j88VWXmoWdlay3d3&#xA;KILaBS800lVRVFakk7dsjKQiLPJnixSySEYi5HkAwC782aJ5o8zQ+UtQ1A6ZFf27XFnotJIr6/hW&#xA;tZJGAHow0BKx1DuASaKCMxgJZue0PtP7HamUNHtGp5+/nGH9X+dL+lyj0s7iT+TvK+leUtBs9C06&#xA;S6ntbVZCkt47TzsZH9RyzEA7s3RVA+nMsCnUEkmyp+RPPem+c9In1OwtLyzhgu57Jo76BoJC8D8S&#xA;wU/sn8DVTQg4oZEJVNNm3/yW709vfFVkkqBo6g9dvhP8rf07Yqv9Ra0ofD7J8aeGKuEqmmzb/wCS&#xA;3ent74qsllQIKg0qv7JPf3+X+e2Kr/UXwPh9k+NPDFXCVT2bx+y3t7e+KrJpEC/EDsy/sk/te/y/&#xA;z2xVf6i1pQ+H2T408MVSnzXdRR+WdULLIQ1nOBxjkY7wk7hVNOvfFXl9/oNtbfmWlzo2r2GgavPd&#xA;z8XuYLu1luDcSI08SW05FpeGX01rLBwdqCpJFcVeymFHgMMw9ZGXhIJApDgih5CgXfvtTFUlTyD5&#xA;FTTzpqeXNLXTjzBslsrcQkStG8n7sJx+NoIy225VfAYqoeatH0i08lalFa2Nvbxafpl3HYRxRIiw&#xA;IbdlKwhQBGOO1FpirIpKmNqdaGlK16exBxVdirsVWyVMbU60NKVr09iDiq7FXYq7FVsdeJr4t1r4&#xA;nxJxVdirsVWrXk/z26+A98VQmuSaxFo17JosMNxq6QSGwguGMcLzhT6ayMoJCluv6x1xVLNO1PzR&#xA;Z+R49S1/TxceYreyM99pmmH1PUnRCxig5las1KUqd9gTsSqhNO/MHS5dC0/U9Uil0nUdRtY7mLy/&#xA;PRtQqxK8EgUl3qxAFFHblToK8mUQFlyNNpZ5pcMPeT0A7yegSjVfLHn3WtRi117u1t0tYJ5NO8s3&#xA;StLbrdiOlpJcyI3FmV2LvxU8SAFbqTVHGZnin8B+vzczJqYYAceA8xUp8jLyj1jH7Zdf5rIvKmla&#xA;odK0rUfNdvYy+cYbT0Ly/tYlqvM8nSOQjkFNBzCniW3ApTMl1afGvqL4UPjTqPemKrsVdiq1q8k+&#xA;e/XwPviq7FXYqtkrxFPFelfEeBGKrsVdiq2SvEU8V6V8R4EYquxVLfM//KNat/zB3H/JpsVeT6r5&#xA;P1rUPzPRvMWgQr5fmupJLfWLC3W9vGZZIzaLPeSme7tUI5cvSSFI6ALIRWir0PVvPWnaR5httAks&#xA;rydnWz9e+j9FoLf9ITyWtp6zSzJMxllgZRwR/wDKpiqDvPzQ0621LUbIaVfSjT1uCLvlYw287WQi&#xA;a6WKS4uoePorPyZpgi0VuLGmKpHe/m35c8x6Tq2k6fDMs8+hTX5eaWxQpHNZmZQYPrJuW+B1qyRM&#xA;m/2qYq9I+s209uzxSpKjAgMjBgTXjTbl326YqqiaI9HXx6jpt/UYq4zRCtXUU67jtX/mk4qtmeMx&#xA;yLyBNCKbHc7UpRu/tiq4TRHo6+PUdNv6jFXGaIVq6inXcdq/80nFXepGDTkK9KVHWoH6ziqyKWLg&#xA;TzWlWNagbV5V6Dsa/wCdcVX+rFWnNa+FR7/80nFXerFt8a79Nx4gfxGKrElirI3NaVrWo6cAa9B2&#xA;+eKr/VirTmtfCo9/+aTiqU655kt9OMdrbxm+1e5H+iadEwDN0HN2O0cY5Crt9FTQZTlzcOw3kejm&#xA;6TRHLcpHgxR+qR+4d8u4D7Bulej+TrKPzB/inV5I7rzI0XD6zH8EEUbKaRRLtUInKjuSxBPQbYMW&#xA;Ig8Ujcvu9zLVauMo+HiHBiHzl5zPU9w5R6dSZV6sW/xrt13HiR/A5e4DvVirTmtfCo9v+ahiqwyx&#xA;eorc1pxb4qjoaHrTwFev9iq/1IyachXpSo61I/WMVcJojSjqa9Nx3p/zUMVWSSxcoyXXY1rUdOLb&#xA;9D4HwxVf6kdachU7UqOtafrxVwmiNKOpr03Hen/NQxVZLLFwFXXqp6joDWvQ/wApxVf6kf8AMPDq&#xA;Otafr2xVwmiPR18eo6bf1GKrJpIgtCy7MpIJHZq+B/lP9mKr/UjrTkKjalR1rT9eKpT5rvLSLyzq&#xA;jSTxoGs5wpZlAJMJIAqffFXlP/K1of8Alb8jJZwelzj8uOrXii4P+5VrMTJAIzuLgkshb+6o9ani&#xA;FXo+u+QbHV9ej1l9QvLSVVtFntrf6v6M506eS5s2k9WGWQGGadnHB1B/aqMVQEn5W2ranLqKeYNW&#xA;huWZ5rcxPaIILmUwma4jpbVZpfqw5pKXiozDgAaYqgNY/LjTtI8uahPFqeoXNvYWd7dW2n3MkL26&#xA;3ktnNBLdLSJZEd0mkrGjrDViwjDb4q9DmNInP+SevTp8x+vFV2KuxVbMaROf8k9enT5j9eKrsVdi&#xA;rsVWxGqn/Wbp/rH3OKrsVdiqHuDdfVrr6n6f1sK31f1a+n6nAcPU4nlx5UrShpirCPLPmDz/ACaN&#xA;Bo2rJZXPnZeR1Oe05Gws42Y+m0xqOUpTcRKanrsu+Y+TMSeGG8vsHv8A1Oy0+iiIeLmPDj6D+Kf9&#xA;Xy75ch5nZX0vV9P0Xz5F5S+oahe6rqdm+o3vmSWLlC5jbj6byigQCtFRQFWqjq2TxYRDzkeZaNXr&#xA;JZiBQjCP0xHIfrPeTuWVavpsWq6ffaZLLLBHeW7QPPbSGKdBIGXlG6mqsK1Bp9+WuIhvKPl2Py35&#xA;a07Qo7u4vo9OhWBbu7f1JnC92b26KOwoO2Kpviq0n96o/wAlvn1Hv/DFV2KuxVa5+KP3b/jU+4xV&#xA;dirsVWymij/WXr/rD3GKrsVdiq2U0Uf6y9f9Ye4xVdiqW+Z/+Ua1b/mDuP8Ak02Ksfvvy+uZtYe9&#xA;s9XFnBNKZ5F+o2Utyjs3JvQunjLpv05q5HYjairK7m5tbCxlubiT07W0iaSaVyW4xxryZmJqxoor&#xA;iqQw/mL5Sm0GbXEuLj6hb3EVpIrWV4lz9Yn9P0YltGhFyzSfWIygWM1DAjbFUr8x+fPLOoeW72zt&#xA;Z5zLqmlXk2nvJZ3cMMoW2kdkE0sSReqqoxaItzWhqu2Ks3kr6bU3NDSla9PbfFV2KuxVbJX02pua&#xA;GlK16e2+KrsVdirsVWx14mvi3WvifHFV2KpP5j84+WPLX1H9O6lDp/6SuFtLL1jT1Jn6KKA0Hix+&#xA;EdziqXy6rqOvzy2Wgym301H4Xmuj4q02aKyBqrPUUMn2F7cm6YpyHIah9PWX6v1u2hp4aYCeccWQ&#xA;/Tj/AEz7h3R5nyHNKDzF5X8t+Z9J8h29rcxXup2815bSpC8kDCI/vDNcb1kbckmv+URyWt+PHGAo&#xA;OBqNTPNMzmbP42HcPJluTaFor6jeFB406n6MVXYq7FVpr6i+FD406j6MVXYq7FVrV5J89+vgcVXY&#xA;q7FVsleIp4r0r4jwxVdirsVWyV4inivSviPDFV2Kpb5n/wCUa1b/AJg7j/k02KpliqC1zS49W0XU&#xA;NKkcxx6hbTWryAVKrNGYywHtyxVhUf5beYxp1xG+u2balcahaao12NOlWETaelpFbL6H10tw9Oyb&#xA;1B6lWZ6goFoVUp1n8r72w0J7u51eG5j0fTr6RDHYiC6Ms9tOJ40uhMzLayvN6hgYOeQU86ADFXqP&#xA;1aOO3aNS7Ch+27yHc16sXJ/HwxVVESju3h9pvb39sVcYlNd23/ym719/fFVs0amOTqag7VJ9+nxf&#xA;qxVcIlHdvD7Te3v7Yq4xKa7tv/lN3r7++Ku9Na1qfH7R8QfH2xVjFz5rktPPGm+Uxo9/NFqNrc3b&#xA;a1Gp+qQmFuPpyPt8R8exZOvIkKph5o80eXvK+nJqWuXRtbWSeO2jb945aWYkKqonJjtyY0GwFe2A&#xA;kAWWUIGREYiyeQSK80SLz29tJqNoI/LFpKtzZRzrW5u5FHwzfF8UEW/w0o7D+UGhxalm8sf2y/UH&#xA;bXj0fKp6jv5xx+7+dPz+mPSzyl1rZ21vF9Xgj9GCMBI40qqqqoqgKBTYAZlAACg6mczImUjZKr6S&#xA;cuW/Lehqe9a9/f8AzoMLFv018T2P2j2p7+2KrBEvqN9r7KivJu3Idfp8cVX+mu+7b/5TeJPj74q7&#xA;01rWrf8ABN7e/tiqwxL6i/a2VhXk3sOv9v8AYqv9Na1qfH7R8SfH3xVwiUU3bb/KbtT39sVWSRKW&#xA;j+1sf5m/lYe/j7Yqv9Na1qfH7R8a+OKuESim7bf5Tdqe/tiqyWJSgHxHdf2m8fp8f9qlQqv9NfE+&#xA;P2j418cVcIlHdvD7Te3v7YqsmiVl35faXoW/m9q+P+1SoVX+mta1Pj9o+NfHFUp812sUnlnVAzSA&#xA;LZzkcZJFO0JG5VhXp3xVOMVdirsVSfzn/wAofrv/AGz7v/kw+KptMaROf8k9enT5j9eKrsVdiq2Y&#xA;0ic/5J69OnzH68VauLiC2gkuLiRIbeFGkmmkYKiIoqzMxoAABUk4qgvL/mHRPMOkwavol5Hf6bcg&#xA;mG5hNVPE0I3oQQRQg74qlHnfzJrWjDS7fS9BvtZ/St2tlc3Fg0atZRyD/elvUDL8PblRP5mG1VUD&#xA;oMFh+W3kdl8w+Y7nVILWWeV9S1FlaZubswiQCpNPAknqdhssMmQQFlv02mnmlwwHv6ADvJ5AIPyx&#xA;5WXzDqk/nPVr2S+0/V1gn0vRGuPrFlDFGn7l+KH0Gb4megBAZieTGhFMcZnvP4D9fm5uTUQwAwwG&#xA;yRUp9/eI9RHz+qXWhsyDyt560PzNfa3ZaYLgS6BeGwvjPA8KmYCp9NnA5AGoPfvShUnJdWx3S/Nv&#xA;mDznqGman5LuY7Xy5YapdWXmaDUrSWK5lFugUC35di3f4SDTl0ZcVeh4q7FVoP71h/kr8+p9/wCG&#xA;KrsVdiq0n96o/wAlvn1Hv/DFV2KuxVa5+KP3b/jU+4xVdirsVWymij/WXr/rD3GKrsVdiq2U0Uf6&#xA;y9f9Ye4xVdiqW+Z/+Ua1b/mDuP8Ak02KplirzLzr5T1i9/MKz1m20RtQWFNI+o6qrWgNj9Rv7i41&#xA;BR68scqm6t5Y4x6SnlSjUAxVjmueTPMEmvarqi+RG1Wa7kuJrhpp9PRb+Gd7J7W1mY3IkdbUwMXi&#xA;kpGQhRSVfdVDwfl/qmkJeagmjXVosWj3EFxeX40eVUtV02RPStzb+reW0ouqUiSaSD0q/FyIVVXu&#xA;QhkSBlaeSVgD8bBQx3r/ALrVflsK/TiqoEb/AH4x/wCB9vb2xVxRt/3jD/gff29/wxVbIrcH+Nuh&#xA;2H9grirnhDo0cjF0YFWVgpBBABqKf51xVjfmG4/wT5JuJ/LegyahHpkf+iaFpqxxEhn+LgoU/Z5l&#xA;jxViadCa4qir7zMttaWVLadtY1CNZLXRP3f1gFgGZZSOSRpH9mSSvEeJNMpy5hHYbyPIObpNFLLc&#xA;ieHHH6pHkPLzkekRufduhbXybFqEU1x5oKare3UUkEkEiBrWGKWoeKCOQdD+05FW9loojjwm+Ke8&#xA;vsHubNTrY8PhYRw4v9lLzl+iPIe/dkVvaQ20EdvbgQ28KiOGCNURERRRVVQAAqigAHhmQ65esQUk&#xA;hiCxq5AX4jsN9vBaYqtjjI5gOw360HUqN9xTrvt3xVfwav22+Xw+/t7/AIYq7i3857eHt7e2KrQj&#xA;cyPUb7I329x4cff+zFV3Bt/jb/hfE+2Ku4NX7bfL4fb29vxxVaUbmo9Rvsnfb2Hhx9/7K4qu4tX7&#xA;Z+W3ifbFXBG2/eMf+B9vb2/HFVro1U/eMN+1P5W8B798VXcWr9s/Lbx+WKuCNt+8Y/8AA+3t7fji&#xA;q2RG4/3jDcdKePsPf/MVxVdxb+c/h418PoxVwRv9+Mf+B9vb2xVbKjEbOw3HT5+w9/698VXcWr9s&#xA;/Lbx+WKpT5rglfyzqgW4kjIs5ySojqaQnY8kb8MVTjFXYq7FUn85/wDKH67/ANs+7/5MPiqbTCsT&#xA;j/JPXp0+R/Viq7FXYqtmFYnH+SevTp8j+rFV2KpFq/mC5N42j6HGl3rFAZ3ev1ezRhUSXBXuRukY&#xA;+JvYfFmPkzG+GG8vsHv/AFOx02jjweLmPDi6fzp+Uf0y5DzOyH8qeRrTy/qGp6ob251DUtYaN724&#xA;uCnHlGDURIiqEUszGm9NhWgGTx4hHzl1LTqtWcpoDhxj6YjkP1nvJ3LI4hRT/rN0/wBY+wy1xF2K&#xA;uxVag+KT3b/jUewxVdirsVWgfvWP+Svz6n2/jiq7FXYqtI/eqf8AJb59R7fxxVdirsVWuPij9m/4&#xA;1PscVXYq7FVsoqo/1l6/6w9jiq7FXYqtlFVH+svX/WHscVXYqlvmf/lGtW/5g7j/AJNNiqZYqlnm&#xA;j9Jf4Z1f9F8v0l9SuPqPp/b9f0m9Lj786UxV5XaXOsL5QvrVB5kOnyavYPG8setHU/0dGmn/AKR4&#xA;SOv11QZpJuIUhmXn6dVXZVKvX1yS3SK6k8yQzQaRevdSX8WpmxlgNncLbWrc4jbiXiyTTTXLeqHU&#xA;RgksQqr3XndfV2aVERwDUK5YAV8Ssfbft/HFVUGXuq/8Eeu3t88VcTLvRV9viPv7fLFWN6v5ymsP&#xA;OGmeWho97OmqW89wNXiTlaQehT4JnqOJI+W5UdzxVWz6zqevzSaf5fcQWcZMd9roPJVI2aK0qKSS&#xA;VqC9OC+7bDFOQ5Dww5dZfqdvDTQ00RPOLmd44/0z7o9w+qXkN050rSbTSbMWlhAscQLOxLFnkkav&#xA;KSRyCzuxpyYknL8eMQFB1+o1M80+KZs/cO4DoB0ARtZK/ZFPmelR7eGTaFkbSlCSq1qw+0abH5Hv&#xA;/n2xVfWWv2Vp8z7+3yxV1ZdvhX33PiPb54qsRpSX+Fag0A5H+UHwPf2xVfWWv2Vp8z7+3yxV1ZP5&#xA;R27nptXt88VWBpebDitQqmnI9Ty9vEeH9MVX1l3+Ffbc+J9vlirqy1+ytPmfb2+eKrC0vNRxWpUm&#xA;nI9RT28fb+hVX1kr9kU+Z6VPt4Yq4GXaqr7/ABH29vniqx2lDJRV3NN2P8rHw9h44qvrJX7Ip8z0&#xA;r8vDFXAy7VVff4j7e3zxVZK0oUEKtaqN2I6n5D2/z2Kq+sn8o+89K/LwxVwMvdV/4I9dvb54qtla&#xA;VVqoXqoFWp1NP6f29CqurJX7Ip8z0r8vDFUp81tdjyzqnpxRsfqc/INIygD0TWlEauKpxirsVdiq&#xA;T+c/+UP13/tn3f8AyYfFU2kr6bU2NDSla9PbfFV2Kqdxc29tBJcXEqwwRKXllkIVFUbksx2AGCUg&#xA;BZZQhKchGIsnoxiQ6h5rjYj1bDywwNNmiur9fkKPFbt9DuPBeuL6s3lj+2X6g7f0aLunqPnHH+iU&#xA;/wDYx8zyk9vbW9tBHb28SwwRKEiijAVFUbAKo2AGZUYgCg6ic5TkZSNk9VTCxdiq2OvE18W618T4&#xA;4quxV2KrVryf57dfAYquxV2KrRX1G8KDxp1P0YquxV2KrTX1F8KHxp1H0YquxV2KrWryT579fA4q&#xA;uxV2KrZK8RTxXpXxHhiq7FXYqtkrxFPFelfEeGKrsVS3zP8A8o1q3/MHcf8AJpsVTLFXmXnXzlqe&#xA;lfmFZ6eutrYWoTSHt9JYWoF8t5f3EGoMWmjaYi1t4kkPpOvGtW2OKpYPPXmC681a3aaX5khmlSHU&#xA;pItKMVrNFZ29tDbSWd2EjEdywnErUaSUo3IFRQUxVA3fnPzDdzXNneaul3BeaCS2jwSQJPG76Obp&#xA;7u4tnsklMDyfAJobv0xIypxryCqvZ/Vkkt2LwPESCCjlCRvTfiXHv3/hirE/zD02S5/Qmpt5gvdA&#xA;g0e+S5lgswjG+qvFbUpUs7OTQKAwPxfCdiIZMggLLfp9NPNLhgLP3DvJ6AdSUVBpWo69cR6h5gt2&#xA;isYyJLDQqqVVhUrLdmtJJdhxT7Cf5R3FAxnIeKfLpH9bsJ6mGmiYYDcztLJ+iHdHvP1S8hsyWZiY&#xA;5BwNKEVPGnh3r+rMp1C4O3++2H/A+3v74q4u2/7tj/wPv7+344q7k1fsH57eI98VWRO3A/uz1Y0+&#xA;Hxr7fL/OuKr+bV+w3z+H39/b8cVdzbb4G/4XxHviqxHash9M1rWnw1+wPl8sVX82r9hvn8Pv7+34&#xA;4q7k38h7eHt7++KrA7eox9M14rt8Nf2j/Z1xVfzbf4G/4XxPvirubV+w3z+H29/f8MVWF29RT6Zr&#xA;xbb4a9j/AGdf7FV/Jq/YPz28T74q4O237th/wPt7+/4YqskduUZ9Mmhr+z/K3j/n+OKr+TV+wfnt&#xA;4/PFXB22/dsP+B9vf3/DFVkrtwH7sndT+z41718P8+oVX8m/kP4eNPH6cVcHb/fbD/gfb398VWTM&#xA;3H7BPxKf2eze9fD/AD7Kr+TV+wfnt4/PFUp81zyp5Z1QrbySE2c4IUx1FYTueTr+GKpxirsVdiqT&#xA;+c/+UP13/tn3f/Jh8Vb8w+YLbS4khVGutSugwsbCI/vJWUbsTUBI0rV3JAUe+U5cwhtzkeQczSaK&#xA;WazfDjj9UjyH6yegG5YxqcHnHT9Y0PUzpCeYdQvbz6vfOkwht9JtHQ83t0cVc/zyH4mpTbkAI48J&#xA;vinvL7B7v1tup1keDwsI4cXX+dPzl+iPIeZ3Z9mQ65bMaROa0op36dvmv68VXYq7FXYqtiNVO9fi&#xA;b3/aPucVXYq7FVqH4pN+jf8AGo9z/DFV2KuxVaD+9YV/ZXb6T7/wxVdirsVWk/vVFf2W2+ke/wDD&#xA;FV2KuxVa5+KPfq3/ABqfcfxxVdirsVWymijenxL7ftD3GKrsVdiq2U0Ub0+Jfb9oe4xVdiqW+Z/+&#xA;Ua1b/mDuP+TTYqmWKuxV2KoDzBp82o6DqWnwMqTXlrNbxs9eIaWMoC1KmlTgldbc2UOHiHF9PWmF&#xA;rc3nl+ZrXULjRo/M+sRORd3urGK6n4KT+5ja0BEUXUIgovzqcqxYRHc7yPMuXq9bLLUQOHHH6Yjk&#xA;PPzkesjufdsnmjeaNV1uz+u6Kmi6nZ8jH9Zs9We4i5rSq847RlqK9K5c4SP+tecP+rZp/wD3EJ/+&#xA;yLFUs1zzLrGnxxW1+dF0y51Em3083OrPC0kzCirEHtFLvVhsu+KqmmeaNU1WS6i0xdFv5bGT0b1L&#xA;bVnmaGUV/dyhLRijbHZt8VR/1rzh/wBWzT/+4hP/ANkWKoLV/Mur6NZNfaxHo2m2KEK11d6q8EQZ&#xA;jRQXks1WpPTfFXWeseZDKtp6Okz3cyPdwxDU5DI1u0nwuqizqUXmq8umKo3615w/6tmn/wDcQn/7&#xA;IsVQ2o655g0yylvtRttJsrGAcp7q41OSKJFrSru9mqqKnucVS+y843k+oR2cNxoNzd6kgvNNs49Z&#xA;LyyW3pj95CgtCzxngzclFMVTn615w/6tmn/9xCf/ALIsVWyX/myKNpZdO01I0BZ3bUZgqqBUkk2W&#xA;wGKpFa+fvrE1rPb3/l2eDVWFtpax63zWeeJmEiwEWp9R/jUFVqcVT/615w/6tmn/APcQn/7IsVd9&#xA;a84f9WzT/wDuIT/9kWKsbf8AMi25R3f6V8tLaLI9kx/Tq8DdHgwi5fVaeoqg/B13xVkn1rzh/wBW&#xA;zT/+4hP/ANkWKu+tecP+rZp//cQn/wCyLFUhu/Pbxy3XO98vQfoWQHWUbW+P1cOGjRbitr+6q5FO&#xA;dNxiqc2uqeZ7u2iurWx0ue2nRZIZ4tSldHRhVWVlsyGBG4IxVV+tecP+rZp//cQn/wCyLFUrm8za&#xA;vNqp0KFtFXW4xHcSaaurOboQq6szGH6p6gRl2rSm+Ko6z1fzLe20d1Z2el3NtKKxTw6lLJGwBpVW&#xA;WzIO4xVW+tecP+rZp/8A3EJ/+yLFUq1HzTqkGoQ6RM+iWmrThZ4bGTV2S4khjblIyRNaB2XijAkC&#xA;nXFURpHmXV9ashfaPHo2pWTMUW6s9VeeIsuzAPHaMtR33xVfqi+cL7Tbuy/R+nx/WoZIfU+vztx9&#xA;RCtafUxWlfHFWRYq7FXYq7FXnf5leSPMvmjUBa2lppZ0Se1Ed5dTTyQXzXCGT6uW4WtwJIbZpTMk&#xA;fqJWT9oCvJVOvIOga5pMGqTaylrBd6jdRTLa2M0lxBGkFjbWY/eSQ2zFnNsWPwbVA3pXFWVYqw3z&#xA;75d8w6ze6amnWOmXOmiq6w93PJbXbw+rHKtvDKltd0id4g0q7FqKAV64q15C8ueYNM1DVb3XLDTb&#xA;Se6EMFn+ip5HhS0t2laK3WB7W1EQQzM5bk5dmb7KhVCrM8VYz+YOk+Y9T0WK38vQWEmoCcEz6hI0&#xA;RgieN4pZLWRbe84XBSQorGMgBjWv2Sqx/wAn/lv5g0TzqmvT3didOOmHT00+GKczW0amD6vaxzvJ&#xA;xlhgWE0f0oySSxTk5IVejYqknnOy1280GWLQYLCfVxJFJZ/pQsLeN45FcS/BHOfUj48ozx2ah7Yq&#xA;wryl+WnmPQ/NFpqcUkdpYusbalBFqV3OD6drJA0P1cwW9tP6kzLOZ2VHVqqq0OKvUMVQWt2011o1&#xA;/bQW9teTT28sUdpfV+qys6FRHPRZD6TVo/wnbscVeVL+WHm+e40691P9HQak936+ozQahc+m0xuL&#xA;ef1lhW1t47kcLVYo7WYcUCK3Nn5HFXsWKuxV4xrP5WfmFqOoarqbHSvrmr2F1plxA15etCGu4DC9&#xA;/E0tvNJHtwC2YPBAu0tWJxV7Mi8UValuIA5Hcmnc4q3irzPX/J/5h3PmG+1zT4tHa9EZttPe7uLq&#xA;RCn1hJYLgQywXMdncWsSso9Lmsrt6jgcQmKs38qaT+iPLem6WbeO1NnbpCYIpmuUUoKbTPHA0lep&#xA;YxrU9sVTXFXnfnjyN5z8ya/HNZ39npdnbq8dvf8AK7nla2nh9O4tJLAPBDWRyW+tRTpIq0QDqxVZ&#xA;F+X3l7UfLnlDT9F1GW2lubMSIWso3igCGVmRUR2dhxRgOuKsixV55+aXkLzL5z4adbXFtaacIZVi&#xA;vzNcrPBLPDLBNW0UNbXIeOQBHdkaL4itScVT7yDoeuaNo81tq8gLvcGS1the3OpC3h9KNPSF3dpF&#xA;PIDIjyfEvw8uI+FRirJcVdirsVdirsVdirsVdirsVdirsVdirsVdiqTecfL9jr/lrUNMu7CDURLB&#xA;J6FtcxxyJ64Q+kwEoKhg3Ru2KvJNe/L/APMmw9Cz8oJLpOnR6Ksdra6SYreGPUDBOLkTKuoWMQea&#xA;R46T/V5yDQgpQllUL5m8ueftC1DTmFzr11o91qT2k9vFrMv1iaF7ixa1iiklukKPIv1wcuaGmzMo&#xA;9OiqpD5L/Oya7WK+v9TSCT9HpI0F7t9UDWguYmuRqEJSePhMzSR2XJ9/3rcgAqp6x5J/NfUPMjTJ&#xA;Yahb6XBdtJZp+l5ZeEsf1mCC6R59Qmbh6c6SOFjiOzL6bELyVV7vyv8AnNqratqBGq6ZIFgOl2D6&#xA;mCCEi06G5X07S+ijLSpDdlOUyUZuXJHIcKpprHlcahpfkXy55zupWubyTUrd5rsQLcq8tvN6KD1J&#xA;9TjeRIyEHKaUuB8XKrDFVkP5e6b5fnu7fVPLCapp1p/decL65tIooNIisRDJDP8AEkoRFV1eBYfQ&#xA;cNybjUgKvQfyy/8AJbeU/wDtjaf/ANQseKslxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2794A7ADF009E911B6F39A24F3C73226</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2794A7ADF009E911B6F39A24F3C73226</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:9f42f6af-0156-11e9-0000-07782d308b75</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:64cc0682-f136-4955-be45-99ac6c077897</stRef:instanceID>
            <stRef:documentID>uuid:9f42f6af-0156-11e9-0000-07782d308b75</stRef:documentID>
            <stRef:originalDocumentID>uuid:9f42f6af-0156-11e9-0000-07782d308b75</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2794A7ADF009E911B6F39A24F3C73226</stEvt:instanceID>
                  <stEvt:when>2018-12-27T13:01:45-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">calib.eps</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Guillermo</rdf:li>
            </rdf:Seq>
         </dc:creator>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>185.561111</stDim:w>
            <stDim:h>151.341667</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -428.805 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 428.805 li
525.98 428.805 li
525.98 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 428.805 mo
525.98 428.805 li
525.98 .35791 li
0 .35791 li
0 428.805 li
cp
clp
.500001 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.7305 386.86 mo
64.7305 .60791 li
525.231 .60791 li
525.231 386.86 li
64.7305 386.86 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
9.20296e-5 3.09944e-5 3.09944e-5 3.09944e-5 cmyk
@
.333334 lw
[.5 4 ] 0 dsh
80.481 386.86 mo
80.481 .60791 li
3.09944e-5 3.09944e-5 3.09944e-5 1 cmyk
@
80.481 .60791 mo
80.481 .60791 li
@
131.48 386.86 mo
131.48 .60791 li
@
131.48 .60791 mo
131.48 .60791 li
@
183.23 386.86 mo
183.23 .60791 li
@
183.23 .60791 mo
183.23 .60791 li
@
234.231 386.86 mo
234.231 .60791 li
@
234.231 .60791 mo
234.231 .60791 li
@
285.981 386.86 mo
285.981 .60791 li
@
285.981 .60791 mo
285.981 .60791 li
@
336.981 386.86 mo
336.981 .60791 li
@
336.981 .60791 mo
336.981 .60791 li
@
388.731 386.86 mo
388.731 .60791 li
@
388.731 .60791 mo
388.731 .60791 li
@
439.731 386.86 mo
439.731 .60791 li
@
439.731 .60791 mo
439.731 .60791 li
@
490.731 386.86 mo
490.731 .60791 li
@
490.731 .60791 mo
490.731 .60791 li
@
64.7305 356.109 mo
525.231 356.109 li
@
525.231 356.109 mo
525.231 356.109 li
@
64.7305 320.859 mo
525.231 320.859 li
@
525.231 320.859 mo
525.231 320.859 li
@
64.7305 284.859 mo
525.231 284.859 li
@
525.231 284.859 mo
525.231 284.859 li
@
64.7305 248.859 mo
525.231 248.859 li
@
525.231 248.859 mo
525.231 248.859 li
@
64.7305 213.609 mo
525.231 213.609 li
@
525.231 213.609 mo
525.231 213.609 li
@
64.7305 177.609 mo
525.231 177.609 li
@
525.231 177.609 mo
525.231 177.609 li
@
64.7305 141.609 mo
525.231 141.609 li
@
525.231 141.609 mo
525.231 141.609 li
@
64.7305 105.609 mo
525.231 105.609 li
@
525.231 105.609 mo
525.231 105.609 li
@
64.7305 70.3594 mo
525.231 70.3594 li
@
525.231 70.3594 mo
525.231 70.3594 li
@
64.7305 34.3584 mo
525.231 34.3584 li
@
525.231 34.3584 mo
525.231 34.3584 li
@
.500001 lw
[] 0 dsh
64.7305 .60791 mo
525.231 .60791 li
@
64.7305 386.86 mo
525.231 386.86 li
@
525.231 386.86 mo
525.231 .60791 li
@
64.7305 386.86 mo
64.7305 .60791 li
@
64.7305 386.86 mo
525.231 386.86 li
@
64.7305 386.86 mo
64.7305 .60791 li
@
80.481 386.86 mo
80.481 381.61 li
@
80.481 .60791 mo
80.481 5.10791 li
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRV+ArialMT /ArialMT findfont ct_VMDictPut
/IOXMRV+ArialMT*1 
[48{/.notdef}rp /zero /.notdef /two 205{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
71.481 404.11 mo
(20)
[8.89844 0 ]xsh
131.48 386.86 mo
131.48 381.61 li
@
131.48 .60791 mo
131.48 5.10791 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
122.48 404.11 mo
(22)
[8.89844 0 ]xsh
183.23 386.86 mo
183.23 381.61 li
@
183.23 .60791 mo
183.23 5.10791 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[48{/.notdef}rp /zero /.notdef /two /.notdef /four 203{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
174.23 404.11 mo
(24)
[8.89844 0 ]xsh
234.231 386.86 mo
234.231 381.61 li
@
234.231 .60791 mo
234.231 5.10791 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[48{/.notdef}rp /zero /.notdef /two /.notdef /four /.notdef /six 
201{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
225.231 404.11 mo
(26)
[8.89844 0 ]xsh
285.981 386.86 mo
285.981 381.61 li
@
285.981 .60791 mo
285.981 5.10791 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[48{/.notdef}rp /zero /.notdef /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
276.981 404.11 mo
(28)
[8.89844 0 ]xsh
336.981 386.86 mo
336.981 381.61 li
@
336.981 .60791 mo
336.981 5.10791 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[48{/.notdef}rp /zero /.notdef /two /three /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
327.981 404.11 mo
(30)
[8.89844 0 ]xsh
388.731 386.86 mo
388.731 381.61 li
@
388.731 .60791 mo
388.731 5.10791 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
379.731 404.11 mo
(32)
[8.89844 0 ]xsh
439.731 386.86 mo
439.731 381.61 li
@
439.731 .60791 mo
439.731 5.10791 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
430.731 404.11 mo
(34)
[8.89844 0 ]xsh
490.731 386.86 mo
490.731 381.61 li
@
490.731 .60791 mo
490.731 5.10791 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
481.731 404.11 mo
(36)
[8.89844 0 ]xsh
64.7305 356.109 mo
69.981 356.109 li
@
525.231 356.109 mo
519.981 356.109 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |-
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001B
CD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB
63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF20
0B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC4
9372EF96DD9EB13A793559C13CFDFE477> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 46 /period put
dup 49 /one put
dup 53 /five put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /.notdef /eight 199{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
21.9805 362.11 mo
(0.015)sh
64.7305 320.859 mo
69.981 320.859 li
@
525.231 320.859 mo
519.981 320.859 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
30.9805 326.859 mo
(0.02)sh
64.7305 284.859 mo
69.981 284.859 li
@
525.231 284.859 mo
519.981 284.859 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
21.9805 290.859 mo
(0.025)sh
64.7305 248.859 mo
69.981 248.859 li
@
525.231 248.859 mo
519.981 248.859 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
30.9805 254.859 mo
(0.03)sh
64.7305 213.609 mo
69.981 213.609 li
@
525.231 213.609 mo
519.981 213.609 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
21.9805 219.609 mo
(0.035)sh
64.7305 177.609 mo
69.981 177.609 li
@
525.231 177.609 mo
519.981 177.609 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
30.9805 183.609 mo
(0.04)sh
64.7305 141.609 mo
69.981 141.609 li
@
525.231 141.609 mo
519.981 141.609 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
21.9805 147.609 mo
(0.045)sh
64.7305 105.609 mo
69.981 105.609 li
@
525.231 105.609 mo
519.981 105.609 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
30.9805 111.609 mo
(0.05)sh
64.7305 70.3594 mo
69.981 70.3594 li
@
525.231 70.3594 mo
519.981 70.3594 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
21.9805 76.3594 mo
(0.055)sh
64.7305 34.3584 mo
69.981 34.3584 li
@
525.231 34.3584 mo
519.981 34.3584 li
@
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
30.9805 40.3584 mo
(0.06)sh
64.7305 .60791 mo
525.231 .60791 li
@
64.7305 386.86 mo
525.231 386.86 li
@
525.231 386.86 mo
525.231 .60791 li
@
64.7305 386.86 mo
64.7305 .60791 li
@
grestore
gsave
87.231 8.10791 mo
87.231 395.11 li
497.481 395.11 li
497.481 8.10791 li
87.231 8.10791 li
cp
clp
96.9805 371.86 mo
96.9805 373.516 95.6377 374.86 93.9805 374.86 cv
92.3232 374.86 90.9805 373.516 90.9805 371.86 cv
90.9805 370.204 92.3232 368.86 93.9805 368.86 cv
95.6377 368.86 96.9805 370.204 96.9805 371.86 cv
false sop
3.09944e-5 3.09944e-5 3.09944e-5 1 cmyk
f
96.9805 350.11 mo
96.9805 351.766 95.6377 353.11 93.9805 353.11 cv
92.3232 353.11 90.9805 351.766 90.9805 350.11 cv
90.9805 348.454 92.3232 347.11 93.9805 347.11 cv
95.6377 347.11 96.9805 348.454 96.9805 350.11 cv
f
.500001 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
96.9805 371.86 mo
96.9805 373.516 95.6377 374.86 93.9805 374.86 cv
92.3232 374.86 90.9805 373.516 90.9805 371.86 cv
90.9805 370.204 92.3232 368.86 93.9805 368.86 cv
95.6377 368.86 96.9805 370.204 96.9805 371.86 cv
@
96.9805 350.11 mo
96.9805 351.766 95.6377 353.11 93.9805 353.11 cv
92.3232 353.11 90.9805 351.766 90.9805 350.11 cv
90.9805 348.454 92.3232 347.11 93.9805 347.11 cv
95.6377 347.11 96.9805 348.454 96.9805 350.11 cv
@
127.73 324.61 mo
127.73 326.266 126.388 327.61 124.73 327.61 cv
123.073 327.61 121.73 326.266 121.73 324.61 cv
121.73 322.954 123.073 321.61 124.73 321.61 cv
126.388 321.61 127.73 322.954 127.73 324.61 cv
f
152.48 278.859 mo
152.48 280.516 151.138 281.859 149.48 281.859 cv
147.824 281.859 146.48 280.516 146.48 278.859 cv
146.48 277.204 147.824 275.859 149.48 275.859 cv
151.138 275.859 152.48 277.204 152.48 278.859 cv
f
165.98 290.86 mo
165.98 292.516 164.638 293.86 162.98 293.86 cv
161.324 293.86 159.98 292.516 159.98 290.86 cv
159.98 289.204 161.324 287.86 162.98 287.86 cv
164.638 287.86 165.98 289.204 165.98 290.86 cv
f
172.73 299.11 mo
172.73 300.766 171.388 302.11 169.73 302.11 cv
168.074 302.11 166.73 300.766 166.73 299.11 cv
166.73 297.454 168.074 296.11 169.73 296.11 cv
171.388 296.11 172.73 297.454 172.73 299.11 cv
f
179.48 274.359 mo
179.48 276.016 178.138 277.359 176.48 277.359 cv
174.824 277.359 173.48 276.016 173.48 274.359 cv
173.48 272.704 174.824 271.359 176.48 271.359 cv
178.138 271.359 179.48 272.704 179.48 274.359 cv
f
186.23 267.609 mo
186.23 269.266 184.888 270.609 183.23 270.609 cv
181.574 270.609 180.23 269.266 180.23 267.609 cv
180.23 265.954 181.574 264.609 183.23 264.609 cv
184.888 264.609 186.23 265.954 186.23 267.609 cv
f
192.98 258.609 mo
192.98 260.266 191.638 261.609 189.98 261.609 cv
188.324 261.609 186.98 260.266 186.98 258.609 cv
186.98 256.954 188.324 255.609 189.98 255.609 cv
191.638 255.609 192.98 256.954 192.98 258.609 cv
f
199.73 278.859 mo
199.73 280.516 198.388 281.859 196.73 281.859 cv
195.074 281.859 193.73 280.516 193.73 278.859 cv
193.73 277.204 195.074 275.859 196.73 275.859 cv
198.388 275.859 199.73 277.204 199.73 278.859 cv
f
207.23 267.609 mo
207.23 269.266 205.888 270.609 204.23 270.609 cv
202.574 270.609 201.23 269.266 201.23 267.609 cv
201.23 265.954 202.574 264.609 204.23 264.609 cv
205.888 264.609 207.23 265.954 207.23 267.609 cv
f
213.98 261.609 mo
213.98 263.266 212.638 264.609 210.98 264.609 cv
209.324 264.609 207.98 263.266 207.98 261.609 cv
207.98 259.954 209.324 258.609 210.98 258.609 cv
212.638 258.609 213.98 259.954 213.98 261.609 cv
f
221.48 276.609 mo
221.48 278.266 220.138 279.609 218.48 279.609 cv
216.824 279.609 215.48 278.266 215.48 276.609 cv
215.48 274.954 216.824 273.609 218.48 273.609 cv
220.138 273.609 221.48 274.954 221.48 276.609 cv
f
228.98 245.859 mo
228.98 247.516 227.638 248.859 225.98 248.859 cv
224.324 248.859 222.98 247.516 222.98 245.859 cv
222.98 244.204 224.324 242.859 225.98 242.859 cv
227.638 242.859 228.98 244.204 228.98 245.859 cv
f
236.48 276.609 mo
236.48 278.266 235.138 279.609 233.48 279.609 cv
231.824 279.609 230.48 278.266 230.48 276.609 cv
230.48 274.954 231.824 273.609 233.48 273.609 cv
235.138 273.609 236.48 274.954 236.48 276.609 cv
f
243.98 270.609 mo
243.98 272.266 242.638 273.609 240.98 273.609 cv
239.324 273.609 237.98 272.266 237.98 270.609 cv
237.98 268.954 239.324 267.609 240.98 267.609 cv
242.638 267.609 243.98 268.954 243.98 270.609 cv
f
251.48 221.859 mo
251.48 223.516 250.138 224.859 248.48 224.859 cv
246.824 224.859 245.48 223.516 245.48 221.859 cv
245.48 220.204 246.824 218.859 248.48 218.859 cv
250.138 218.859 251.48 220.204 251.48 221.859 cv
f
258.98 243.609 mo
258.98 245.266 257.638 246.609 255.98 246.609 cv
254.324 246.609 252.98 245.266 252.98 243.609 cv
252.98 241.954 254.324 240.609 255.98 240.609 cv
257.638 240.609 258.98 241.954 258.98 243.609 cv
f
266.48 189.609 mo
266.48 191.266 265.138 192.609 263.48 192.609 cv
261.824 192.609 260.48 191.266 260.48 189.609 cv
260.48 187.953 261.824 186.609 263.48 186.609 cv
265.138 186.609 266.48 187.953 266.48 189.609 cv
f
274.73 226.359 mo
274.73 228.016 273.388 229.359 271.73 229.359 cv
270.074 229.359 268.73 228.016 268.73 226.359 cv
268.73 224.704 270.074 223.359 271.73 223.359 cv
273.388 223.359 274.73 224.704 274.73 226.359 cv
f
282.98 192.609 mo
282.98 194.266 281.638 195.609 279.98 195.609 cv
278.324 195.609 276.98 194.266 276.98 192.609 cv
276.98 190.953 278.324 189.609 279.98 189.609 cv
281.638 189.609 282.98 190.953 282.98 192.609 cv
f
291.23 198.609 mo
291.23 200.266 289.888 201.609 288.23 201.609 cv
286.574 201.609 285.23 200.266 285.23 198.609 cv
285.23 196.953 286.574 195.609 288.23 195.609 cv
289.888 195.609 291.23 196.953 291.23 198.609 cv
f
299.48 217.359 mo
299.48 219.016 298.138 220.359 296.48 220.359 cv
294.824 220.359 293.48 219.016 293.48 217.359 cv
293.48 215.704 294.824 214.359 296.48 214.359 cv
298.138 214.359 299.48 215.704 299.48 217.359 cv
f
307.731 186.609 mo
307.731 188.266 306.388 189.609 304.731 189.609 cv
303.074 189.609 301.731 188.266 301.731 186.609 cv
301.731 184.953 303.074 183.609 304.731 183.609 cv
306.388 183.609 307.731 184.953 307.731 186.609 cv
f
315.981 188.859 mo
315.981 190.516 314.638 191.859 312.981 191.859 cv
311.324 191.859 309.981 190.516 309.981 188.859 cv
309.981 187.203 311.324 185.859 312.981 185.859 cv
314.638 185.859 315.981 187.203 315.981 188.859 cv
f
324.231 179.859 mo
324.231 181.516 322.888 182.859 321.231 182.859 cv
319.574 182.859 318.231 181.516 318.231 179.859 cv
318.231 178.203 319.574 176.859 321.231 176.859 cv
322.888 176.859 324.231 178.203 324.231 179.859 cv
f
333.231 167.109 mo
333.231 168.766 331.888 170.109 330.231 170.109 cv
328.574 170.109 327.231 168.766 327.231 167.109 cv
327.231 165.453 328.574 164.109 330.231 164.109 cv
331.888 164.109 333.231 165.453 333.231 167.109 cv
f
342.231 147.609 mo
342.231 149.266 340.888 150.609 339.231 150.609 cv
337.574 150.609 336.231 149.266 336.231 147.609 cv
336.231 145.953 337.574 144.609 339.231 144.609 cv
340.888 144.609 342.231 145.953 342.231 147.609 cv
f
351.231 177.609 mo
351.231 179.266 349.888 180.609 348.231 180.609 cv
346.574 180.609 345.231 179.266 345.231 177.609 cv
345.231 175.953 346.574 174.609 348.231 174.609 cv
349.888 174.609 351.231 175.953 351.231 177.609 cv
f
360.231 143.859 mo
360.231 145.516 358.888 146.859 357.231 146.859 cv
355.574 146.859 354.231 145.516 354.231 143.859 cv
354.231 142.203 355.574 140.859 357.231 140.859 cv
358.888 140.859 360.231 142.203 360.231 143.859 cv
f
369.231 147.609 mo
369.231 149.266 367.888 150.609 366.231 150.609 cv
364.574 150.609 363.231 149.266 363.231 147.609 cv
363.231 145.953 364.574 144.609 366.231 144.609 cv
367.888 144.609 369.231 145.953 369.231 147.609 cv
f
378.981 125.859 mo
378.981 127.516 377.638 128.859 375.981 128.859 cv
374.324 128.859 372.981 127.516 372.981 125.859 cv
372.981 124.203 374.324 122.859 375.981 122.859 cv
377.638 122.859 378.981 124.203 378.981 125.859 cv
f
387.981 137.109 mo
387.981 138.766 386.638 140.109 384.981 140.109 cv
383.324 140.109 381.981 138.766 381.981 137.109 cv
381.981 135.453 383.324 134.109 384.981 134.109 cv
386.638 134.109 387.981 135.453 387.981 137.109 cv
f
397.731 101.109 mo
397.731 102.765 396.388 104.109 394.731 104.109 cv
393.074 104.109 391.731 102.765 391.731 101.109 cv
391.731 99.4521 393.074 98.1094 394.731 98.1094 cv
396.388 98.1094 397.731 99.4521 397.731 101.109 cv
f
407.481 109.359 mo
407.481 111.015 406.138 112.359 404.481 112.359 cv
402.824 112.359 401.481 111.015 401.481 109.359 cv
401.481 107.702 402.824 106.359 404.481 106.359 cv
406.138 106.359 407.481 107.702 407.481 109.359 cv
f
417.981 119.109 mo
417.981 120.765 416.638 122.109 414.981 122.109 cv
413.324 122.109 411.981 120.765 411.981 119.109 cv
411.981 117.452 413.324 116.109 414.981 116.109 cv
416.638 116.109 417.981 117.452 417.981 119.109 cv
f
427.731 73.3594 mo
427.731 75.0151 426.388 76.3594 424.731 76.3594 cv
423.074 76.3594 421.731 75.0151 421.731 73.3594 cv
421.731 71.7021 423.074 70.3594 424.731 70.3594 cv
426.388 70.3594 427.731 71.7021 427.731 73.3594 cv
f
438.231 73.3594 mo
438.231 75.0151 436.888 76.3594 435.231 76.3594 cv
433.574 76.3594 432.231 75.0151 432.231 73.3594 cv
432.231 71.7021 433.574 70.3594 435.231 70.3594 cv
436.888 70.3594 438.231 71.7021 438.231 73.3594 cv
f
448.731 51.6094 mo
448.731 53.2651 447.388 54.6094 445.731 54.6094 cv
444.074 54.6094 442.731 53.2651 442.731 51.6094 cv
442.731 49.9521 444.074 48.6094 445.731 48.6094 cv
447.388 48.6094 448.731 49.9521 448.731 51.6094 cv
f
459.231 53.1094 mo
459.231 54.7651 457.888 56.1094 456.231 56.1094 cv
454.574 56.1094 453.231 54.7651 453.231 53.1094 cv
453.231 51.4521 454.574 50.1094 456.231 50.1094 cv
457.888 50.1094 459.231 51.4521 459.231 53.1094 cv
f
470.481 25.3594 mo
470.481 27.0151 469.139 28.3594 467.481 28.3594 cv
465.825 28.3594 464.481 27.0151 464.481 25.3594 cv
464.481 23.7021 465.825 22.3594 467.481 22.3594 cv
469.139 22.3594 470.481 23.7021 470.481 25.3594 cv
f
481.731 31.3594 mo
481.731 33.0151 480.389 34.3594 478.731 34.3594 cv
477.075 34.3594 475.731 33.0151 475.731 31.3594 cv
475.731 29.7021 477.075 28.3594 478.731 28.3594 cv
480.389 28.3594 481.731 29.7021 481.731 31.3594 cv
f
492.981 14.8594 mo
492.981 16.5151 491.639 17.8594 489.981 17.8594 cv
488.325 17.8594 486.981 16.5151 486.981 14.8594 cv
486.981 13.2021 488.325 11.8594 489.981 11.8594 cv
491.639 11.8594 492.981 13.2021 492.981 14.8594 cv
f
127.73 324.61 mo
127.73 326.266 126.388 327.61 124.73 327.61 cv
123.073 327.61 121.73 326.266 121.73 324.61 cv
121.73 322.954 123.073 321.61 124.73 321.61 cv
126.388 321.61 127.73 322.954 127.73 324.61 cv
@
152.48 278.859 mo
152.48 280.516 151.138 281.859 149.48 281.859 cv
147.824 281.859 146.48 280.516 146.48 278.859 cv
146.48 277.204 147.824 275.859 149.48 275.859 cv
151.138 275.859 152.48 277.204 152.48 278.859 cv
@
165.98 290.86 mo
165.98 292.516 164.638 293.86 162.98 293.86 cv
161.324 293.86 159.98 292.516 159.98 290.86 cv
159.98 289.204 161.324 287.86 162.98 287.86 cv
164.638 287.86 165.98 289.204 165.98 290.86 cv
@
172.73 299.11 mo
172.73 300.766 171.388 302.11 169.73 302.11 cv
168.074 302.11 166.73 300.766 166.73 299.11 cv
166.73 297.454 168.074 296.11 169.73 296.11 cv
171.388 296.11 172.73 297.454 172.73 299.11 cv
@
179.48 274.359 mo
179.48 276.016 178.138 277.359 176.48 277.359 cv
174.824 277.359 173.48 276.016 173.48 274.359 cv
173.48 272.704 174.824 271.359 176.48 271.359 cv
178.138 271.359 179.48 272.704 179.48 274.359 cv
@
186.23 267.609 mo
186.23 269.266 184.888 270.609 183.23 270.609 cv
181.574 270.609 180.23 269.266 180.23 267.609 cv
180.23 265.954 181.574 264.609 183.23 264.609 cv
184.888 264.609 186.23 265.954 186.23 267.609 cv
@
192.98 258.609 mo
192.98 260.266 191.638 261.609 189.98 261.609 cv
188.324 261.609 186.98 260.266 186.98 258.609 cv
186.98 256.954 188.324 255.609 189.98 255.609 cv
191.638 255.609 192.98 256.954 192.98 258.609 cv
@
199.73 278.859 mo
199.73 280.516 198.388 281.859 196.73 281.859 cv
195.074 281.859 193.73 280.516 193.73 278.859 cv
193.73 277.204 195.074 275.859 196.73 275.859 cv
198.388 275.859 199.73 277.204 199.73 278.859 cv
@
207.23 267.609 mo
207.23 269.266 205.888 270.609 204.23 270.609 cv
202.574 270.609 201.23 269.266 201.23 267.609 cv
201.23 265.954 202.574 264.609 204.23 264.609 cv
205.888 264.609 207.23 265.954 207.23 267.609 cv
@
213.98 261.609 mo
213.98 263.266 212.638 264.609 210.98 264.609 cv
209.324 264.609 207.98 263.266 207.98 261.609 cv
207.98 259.954 209.324 258.609 210.98 258.609 cv
212.638 258.609 213.98 259.954 213.98 261.609 cv
@
221.48 276.609 mo
221.48 278.266 220.138 279.609 218.48 279.609 cv
216.824 279.609 215.48 278.266 215.48 276.609 cv
215.48 274.954 216.824 273.609 218.48 273.609 cv
220.138 273.609 221.48 274.954 221.48 276.609 cv
@
228.98 245.859 mo
228.98 247.516 227.638 248.859 225.98 248.859 cv
224.324 248.859 222.98 247.516 222.98 245.859 cv
222.98 244.204 224.324 242.859 225.98 242.859 cv
227.638 242.859 228.98 244.204 228.98 245.859 cv
@
236.48 276.609 mo
236.48 278.266 235.138 279.609 233.48 279.609 cv
231.824 279.609 230.48 278.266 230.48 276.609 cv
230.48 274.954 231.824 273.609 233.48 273.609 cv
235.138 273.609 236.48 274.954 236.48 276.609 cv
@
243.98 270.609 mo
243.98 272.266 242.638 273.609 240.98 273.609 cv
239.324 273.609 237.98 272.266 237.98 270.609 cv
237.98 268.954 239.324 267.609 240.98 267.609 cv
242.638 267.609 243.98 268.954 243.98 270.609 cv
@
251.48 221.859 mo
251.48 223.516 250.138 224.859 248.48 224.859 cv
246.824 224.859 245.48 223.516 245.48 221.859 cv
245.48 220.204 246.824 218.859 248.48 218.859 cv
250.138 218.859 251.48 220.204 251.48 221.859 cv
@
258.98 243.609 mo
258.98 245.266 257.638 246.609 255.98 246.609 cv
254.324 246.609 252.98 245.266 252.98 243.609 cv
252.98 241.954 254.324 240.609 255.98 240.609 cv
257.638 240.609 258.98 241.954 258.98 243.609 cv
@
266.48 189.609 mo
266.48 191.266 265.138 192.609 263.48 192.609 cv
261.824 192.609 260.48 191.266 260.48 189.609 cv
260.48 187.953 261.824 186.609 263.48 186.609 cv
265.138 186.609 266.48 187.953 266.48 189.609 cv
@
274.73 226.359 mo
274.73 228.016 273.388 229.359 271.73 229.359 cv
270.074 229.359 268.73 228.016 268.73 226.359 cv
268.73 224.704 270.074 223.359 271.73 223.359 cv
273.388 223.359 274.73 224.704 274.73 226.359 cv
@
282.98 192.609 mo
282.98 194.266 281.638 195.609 279.98 195.609 cv
278.324 195.609 276.98 194.266 276.98 192.609 cv
276.98 190.953 278.324 189.609 279.98 189.609 cv
281.638 189.609 282.98 190.953 282.98 192.609 cv
@
291.23 198.609 mo
291.23 200.266 289.888 201.609 288.23 201.609 cv
286.574 201.609 285.23 200.266 285.23 198.609 cv
285.23 196.953 286.574 195.609 288.23 195.609 cv
289.888 195.609 291.23 196.953 291.23 198.609 cv
@
299.48 217.359 mo
299.48 219.016 298.138 220.359 296.48 220.359 cv
294.824 220.359 293.48 219.016 293.48 217.359 cv
293.48 215.704 294.824 214.359 296.48 214.359 cv
298.138 214.359 299.48 215.704 299.48 217.359 cv
@
307.731 186.609 mo
307.731 188.266 306.388 189.609 304.731 189.609 cv
303.074 189.609 301.731 188.266 301.731 186.609 cv
301.731 184.953 303.074 183.609 304.731 183.609 cv
306.388 183.609 307.731 184.953 307.731 186.609 cv
@
315.981 188.859 mo
315.981 190.516 314.638 191.859 312.981 191.859 cv
311.324 191.859 309.981 190.516 309.981 188.859 cv
309.981 187.203 311.324 185.859 312.981 185.859 cv
314.638 185.859 315.981 187.203 315.981 188.859 cv
@
324.231 179.859 mo
324.231 181.516 322.888 182.859 321.231 182.859 cv
319.574 182.859 318.231 181.516 318.231 179.859 cv
318.231 178.203 319.574 176.859 321.231 176.859 cv
322.888 176.859 324.231 178.203 324.231 179.859 cv
@
333.231 167.109 mo
333.231 168.766 331.888 170.109 330.231 170.109 cv
328.574 170.109 327.231 168.766 327.231 167.109 cv
327.231 165.453 328.574 164.109 330.231 164.109 cv
331.888 164.109 333.231 165.453 333.231 167.109 cv
@
342.231 147.609 mo
342.231 149.266 340.888 150.609 339.231 150.609 cv
337.574 150.609 336.231 149.266 336.231 147.609 cv
336.231 145.953 337.574 144.609 339.231 144.609 cv
340.888 144.609 342.231 145.953 342.231 147.609 cv
@
351.231 177.609 mo
351.231 179.266 349.888 180.609 348.231 180.609 cv
346.574 180.609 345.231 179.266 345.231 177.609 cv
345.231 175.953 346.574 174.609 348.231 174.609 cv
349.888 174.609 351.231 175.953 351.231 177.609 cv
@
360.231 143.859 mo
360.231 145.516 358.888 146.859 357.231 146.859 cv
355.574 146.859 354.231 145.516 354.231 143.859 cv
354.231 142.203 355.574 140.859 357.231 140.859 cv
358.888 140.859 360.231 142.203 360.231 143.859 cv
@
369.231 147.609 mo
369.231 149.266 367.888 150.609 366.231 150.609 cv
364.574 150.609 363.231 149.266 363.231 147.609 cv
363.231 145.953 364.574 144.609 366.231 144.609 cv
367.888 144.609 369.231 145.953 369.231 147.609 cv
@
378.981 125.859 mo
378.981 127.516 377.638 128.859 375.981 128.859 cv
374.324 128.859 372.981 127.516 372.981 125.859 cv
372.981 124.203 374.324 122.859 375.981 122.859 cv
377.638 122.859 378.981 124.203 378.981 125.859 cv
@
387.981 137.109 mo
387.981 138.766 386.638 140.109 384.981 140.109 cv
383.324 140.109 381.981 138.766 381.981 137.109 cv
381.981 135.453 383.324 134.109 384.981 134.109 cv
386.638 134.109 387.981 135.453 387.981 137.109 cv
@
397.731 101.109 mo
397.731 102.765 396.388 104.109 394.731 104.109 cv
393.074 104.109 391.731 102.765 391.731 101.109 cv
391.731 99.4521 393.074 98.1094 394.731 98.1094 cv
396.388 98.1094 397.731 99.4521 397.731 101.109 cv
@
407.481 109.359 mo
407.481 111.015 406.138 112.359 404.481 112.359 cv
402.824 112.359 401.481 111.015 401.481 109.359 cv
401.481 107.702 402.824 106.359 404.481 106.359 cv
406.138 106.359 407.481 107.702 407.481 109.359 cv
@
417.981 119.109 mo
417.981 120.765 416.638 122.109 414.981 122.109 cv
413.324 122.109 411.981 120.765 411.981 119.109 cv
411.981 117.452 413.324 116.109 414.981 116.109 cv
416.638 116.109 417.981 117.452 417.981 119.109 cv
@
427.731 73.3594 mo
427.731 75.0151 426.388 76.3594 424.731 76.3594 cv
423.074 76.3594 421.731 75.0151 421.731 73.3594 cv
421.731 71.7021 423.074 70.3594 424.731 70.3594 cv
426.388 70.3594 427.731 71.7021 427.731 73.3594 cv
@
438.231 73.3594 mo
438.231 75.0151 436.888 76.3594 435.231 76.3594 cv
433.574 76.3594 432.231 75.0151 432.231 73.3594 cv
432.231 71.7021 433.574 70.3594 435.231 70.3594 cv
436.888 70.3594 438.231 71.7021 438.231 73.3594 cv
@
448.731 51.6094 mo
448.731 53.2651 447.388 54.6094 445.731 54.6094 cv
444.074 54.6094 442.731 53.2651 442.731 51.6094 cv
442.731 49.9521 444.074 48.6094 445.731 48.6094 cv
447.388 48.6094 448.731 49.9521 448.731 51.6094 cv
@
459.231 53.1094 mo
459.231 54.7651 457.888 56.1094 456.231 56.1094 cv
454.574 56.1094 453.231 54.7651 453.231 53.1094 cv
453.231 51.4521 454.574 50.1094 456.231 50.1094 cv
457.888 50.1094 459.231 51.4521 459.231 53.1094 cv
@
470.481 25.3594 mo
470.481 27.0151 469.139 28.3594 467.481 28.3594 cv
465.825 28.3594 464.481 27.0151 464.481 25.3594 cv
464.481 23.7021 465.825 22.3594 467.481 22.3594 cv
469.139 22.3594 470.481 23.7021 470.481 25.3594 cv
@
481.731 31.3594 mo
481.731 33.0151 480.389 34.3594 478.731 34.3594 cv
477.075 34.3594 475.731 33.0151 475.731 31.3594 cv
475.731 29.7021 477.075 28.3594 478.731 28.3594 cv
480.389 28.3594 481.731 29.7021 481.731 31.3594 cv
@
492.981 14.8594 mo
492.981 16.5151 491.639 17.8594 489.981 17.8594 cv
488.325 17.8594 486.981 16.5151 486.981 14.8594 cv
486.981 13.2021 488.325 11.8594 489.981 11.8594 cv
491.639 11.8594 492.981 13.2021 492.981 14.8594 cv
@
grestore
gsave
0 428.805 mo
525.98 428.805 li
525.98 .35791 li
0 .35791 li
0 428.805 li
cp
clp
false sop
3.09944e-5 3.09944e-5 3.09944e-5 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRV+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/minus <1C60D8A8C9B7F374869C4D14FD697FCCAF1C53E703093C> |-
/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368
260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A
577DC235F833AFCC30669C812FBF097879E1> |-
/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A
2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D47
14AF52ABD0227B6CDD854C568D5A6F3817645C5> |-
/plus <1C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B3
97B613EE7D27104427D3AF38200F99E7A> |-
/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29A
CC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208B
D16D82> |-
/B <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F15
54BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D4
E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C9
80FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB4
BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F18
58E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E0
C619907BEEF9FED49CD2B96F29B7B01884> |-
/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD
6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C
69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDF
A8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32
261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D3148
51DE59> |-
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
/bracketleft <1C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41A
FD95C6BA37FE8A> |-
/bracketright <1C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE01
1EFF56C1115332A> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F51
7D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F
992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE3879399
0906DA8D7F8ACFF6D70790F06B02> |-
/ordmasculine <1C60D8A8C9B72E9212E912212D74D133DAE20B7AC5101047C
C31B700C8E9F2AA774D6B7A980248F53DFD85D43212A67D9F8B948AE9809F71D
82BFBEF47CEDD34FA2897E253A7AB3EDF63C2E0939A1BBEBB0FEC7CBE073D9E0
D55717ABABB56776D732523EB03D722D5E377C5EB4DE55F872F972009430830D
81B18D95B7F89258C7B70> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRV+ArialMT /Encoding get
dup 32 /space put
dup 33 /minus put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 47 /slash put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 101 /e put
dup 109 /m put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 186 /ordmasculine put
pop
%ADOEndSubsetFont
/IOXMRV+ArialMT*1 
[32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright /.notdef /plus 
2{/.notdef}rp /period /slash /zero /one /two /three /four 
/five /six /.notdef /eight 8{/.notdef}rp /A /B /C 
16{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 
3{/.notdef}rp /e 7{/.notdef}rp /m 2{/.notdef}rp /p /.notdef /r 
/.notdef /t /u 68{/.notdef}rp /ordmasculine 69{/.notdef}rp]
IOXMRV+ArialMT nf
IOXMRV+ArialMT*1 [16 0 0 -16 0 0 ]msf
225.231 423.61 mo
(Temp)sh
266.129 423.61 mo
(erature [\272C])sh
IOXMRV+ArialMT*1 [0 -16 -16 0 0 0 ]msf
13.7305 237.61 mo
(\(B!A\)/\(A+B\))
[-5.32813 -10.6719 -9.34375 -10.6719 -5.32813 -4.44531 -5.32813 -10.6719 -9.34375 -10.6719 0 ]ysh
grestore
gsave
64.7305 .60791 mo
64.7305 387.61 li
525.98 387.61 li
525.98 .60791 li
64.7305 .60791 li
cp
clp
grestore
gsave
0 428.805 mo
525.98 428.805 li
525.98 .35791 li
0 .35791 li
0 428.805 li
cp
clp
.500001 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
93.2305 46.3594 mo
234.98 46.3594 li
234.98 8.85938 li
93.2305 8.85938 li
93.2305 46.3594 li
cp
false sop
9.20296e-5 3.09944e-5 3.09944e-5 3.09944e-5 cmyk
@
grestore
2 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
64.0088 386.519 mo
525.259 .76709 li
false sop
.013123 .959808 .914061 .001068 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IOXMRV+ArialMT*1 uf
/IOXMRV+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Guillermo) ()
%%Title: (fig2.eps)
%%CreationDate: 12/27/2018 1:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fllpIO>)!`pKG33A7W\<1DpHS,\3M0(iU,%&0M2Ncu8T\F*DO!`K!QrCtX%9^@'hWl>Nk#^m7qtWDolI<L#I$bG3apf,oI+
%7t2?Q*;V<?AGdl"n,$U9Ze<*T-7/oEnU-?iUJeW^qC=hYlDQfAQA3jEH.8*+PKIPmOs^E_jWAL+58HK1)ps-g%0iTBr8iL^rF5*B
%8&Hc*>E\mCi:r1XF#b2##CWR1=/+2:^Xi8aWBQK[`MoKmiuENj$a8YpJ'^9FI<QsIi(rM,pj)EFpZQpT\q553hj*B,@<XEk8S=u#
%;QobQhG<X1lmr'T.8?^Rn-Cua*NL1;+0e1$O-T`sNu-57Ikm9ZcQNWn*f[p'q.jG-/A/WY^;g=q.Uf[k)'PUF$[`:F[I:IN)CR3R
%j&;AU^i=rjQK@/;Cd.=6A-MNLc#NN8;Fd2el-I*9=2BAe+Xjj8ea!PD9Ch_\ruVLgHn**TjAU>H0cN[SorpY\#$u'+8bM+@:E#l9
%CJE:`ieK9Ue;![rPdh@f%r$pbBJc)NqkIT9T2VGV=_`lp83eST!p"GS%Bi5[\BD-Net5Rrr.:QeE&iE>7sN<f!9bTPB2k82p8PD-
%bs3M\q.pgYmgMqSWSIO;%grZ.aW*Vqc_ZljDTMdJ2VVBNT-GG&0_$.SJ"HYCoGM(F3gGF6;htW.a'),L?8;kDX%u-L6a;[`a:"qX
%0'1DF^WM@QL/i4C(ArG1TCb(=^]!8DVO.uVoIlVccV+O,o6L,4<9VeA')j5An2?\f\&fn@Ms$L/b@I8J-3M"<)(:fm5d="[?DieF
%o2$d+LGJZf-7/Eg`U\:&#2e>PMH)-&XAXVLPmY1'<1lpu%WC\+9EnS%f:bIC:+DB$P:i%?&X_W2<2K&I8Q6`05VX)lHpTP)(EG)Q
%#D7V(-j,*R:HWfX%T41a"eY8l"pLXG'L<LK)?pA;GjOo'*lGJf.`!Ru!>L0[_'bJHfARU<-/<ctBnB!0.ek8halphH8G>^E#^kEQ
%3`WNmq$4lHN:7-JObk>.-h!:VK.g%0`^ja2TS?F#0u>=9JcQKFJ5<$5n-D4O(lT%ja^c$)+ikrm!18udE9AYrdA\?r,e/V="F1\?
%AFsC4\FZM3">X\\:)bWKs$7M>+JhpP+KeI/:0tgTi=h(\>)+gF]TC;*$"[LpW&gbq\rm?q#Rj&aPaj2M:qFQ8-R;'8Jh@Zs[flT(
%Ig#KK1-luL4Im<M514j-7cBQn8H\$:q58>+/6"shAF9bU8/$.DO-$ZUqFM],SZZ:9SP`p3l[Vem>ltukip%F>d?Uo[2T<'^)pfsi
%:0_'l$10A415/C?-<1ZP`rFu#_CBimT-04sg0aC]p,MiFr?_J?olQWbdf,DZfdus$r?_Ja3V#7u;k`B=J#*d'V>V_?b%:-Jqb-p^
%lI@A0V#;V>C,PQdqb-p.l9C!K_]6N@R:#NSrZZi#N'aP-9%U-5,[2k^i4j(Cr@X;KHsZVS.cm<k]dfiJPBsnL:eL?bLE;e,1_I5H
%BVo+\^iUmGAb]#lU1[X"(N6YD[8="S&(G@9[.:#/rAP,2Ke/hh;Ro[;l?0NQ'b5MY-f\dS!;(#`f=/u!B$p`%D]3i5;COn5Pu9Wj
%,^eUsfBWPc):XV,-)6&8U#&bZN)D)4AV;TW(Z)%n$Cu?SJ\S_k@T@QA0BKS@NCBt@RmKW;BN4)67@8G)?i]Bnrl5ZW36$bIi<^u8
%ncZQAo6B7#_Oqlr'"[#E[.DgI7]?[BP;g]JR`%f>Od/Bi$u+,7cVmgY_cJm*&b76&BQCI'[<fDX\d@1+Z=qOIU^91H;@4=34>'Eq
%9MI#?j%WTHGO\KX]JOJqi.0_nUQ.bH)@og*@&uJo<FrG+#$O]/5Zr6hi-tka8LU1Y4,&=Z3<l@PCb-C!5gY9JS>jD.q4pn4UTHKr
%ARP`#fu?sIQjB=QT.gUaIc>AbEFf@C3OUt`4@9l=C,i7o=5,X9Icr1l,um-AQm6/u,.n%57?+SZGsX6CFkus$"KeK2_GBq>].i_H
%W,!5?rMmd(Zp5H7:\Je1!a-5u0DRf@8<od7Y'5qV;,\CuZ;sE@(6#[[9P\pk]/%8V[.R/)c(YV9%@hsq]nSjU1?t+OL[#;pW@PgO
%jHCLoVVIQ5NZf=,6rFbbLbaL'[&%Gqf9PV^@_pmHQh#52'`qA_<>fDK"N5tnB@6,sd%uiP\r3%hct)hdY;j8!:``fC6AgIh.$(T&
%#*E'2:t0coj#pZ*=;F1/QEGH&bCRtm]ZYR"X0E$b?`L'KQk598Xg=t,/$]O=?F"5mDkkcR)D,$r)*fN2#O*GWlsb*(^(en97H._m
%'UaHV$RQ21.J0F]\oEaOFE8RQU!HXE];Uql9dl,VP&A`X\0+>bGq=#60$GbS#E_A(N^q5hAggVM!t'8()It2?P0`_B[?jd)_$Dp#
%qii;`2hk'>L(I>'6`CXjTN*0TP9q9s]maj[_t6_`aL!.EQF(82fho4Lpd2u]OeSq&fHL=uJ4S*&PX4d0Ub_il@o(M&V(EA:G(fl=
%W`6L?7^eQ9(tmBnN%9=LdoP)/86dR8cXmGh@0b322`pne8k`W8g'`mVYge\IcQGk24J:!F4U.*L-4Z*$#DSVi;DJ9k33t1]Va[+5
%$gLkPR5:TsoNW,sPBiuc^`k!)r6qKV^:3ZIN@uVON-%@sW3(;]nL0UBB`s\Hj/6Cb\0R@(%SI+b@qK)oH&SiQC9(>6ZFU4iAW6#g
%ri:!A(I]c+WmeccDNkm68W=(*Q*ic0eS-_JA114dZFY>%'eu+!Tt#c/hP@a6%4":h;&R!;<<7`h]T5s62-D)V(&DHSOkjTMQkj9V
%H"_hJj!r@Yl%4)W6lBNmDV'iaa,lTZJQtXk@B')0>tr^P<Ya2AFJl@CWh@EN5e)ag$1k@(Wbp+I3Dopfgn5*\U[G[t9X[8=@sR7;
%k0N5OH".Td-;DG]o"QLudS5;X0EP:u&]3j%%A^uH3^m.S"uV&lM0'++.fe)ATLkEK3)h8)a&a#.9%?lY3(p8^!)ZfOYG3mro;?\\
%W%H?"N+tt_fat]s9_fVS:b'.j@9^SfG&hJ>8[\0TmY1[@P5.3d,k?oZbUK*uW03-PZQZFPrR#(bh,T,-=kgr1UWS`kV6s>q<>[N#
%Q"75*V?%^jOOi);JtSc:2q#a]7OY+_26Ut7ImNJO9#F[5p/iTBV0R7&"C6>=];4e3`"58E$VWHh>@bg@)S.V\:)c'(g3K4n%Jj6l
%<E??*$(`$C1230_'<#?ZEhX-k[GNZ=1:D[IR63BAU6dpcR0nE0*X`/YZ=JY=gH/YGcnS(s=>d-j8Wc't\1;]2Q:[Dlbqj>/Y7t7h
%SB<`h9ri.@]r]I.DPjT(k@p[tW324V8J)>=C`$GhHea6JKCgG,R:%)9&X*j8-Q2GL<+;46h"_A,D4im`0V`RP=Rs<["j6m8?>&pi
%VZC2EAjs"'ALPM97!@:CNfh\*;H$7(iIis5ZI9`T5U35<hj@DUD2[&LHK3Yam&JY_9oU6.I0EO]_7XcO,)(;r%P1Q_5!K:Ch69k]
%Jh]U!#pUQd2UjXfX=hsj8lQ"(Y?.@e6p+:7IN@]O-;W1,":$9jM,onDUgm?g?hZ=XiNLD&X^3`q:e"XJ27]%s>,+Wis)%F&WG_B$
%Zd]iLOo9M7](XbcA7aW\?`Bo/_Qr_Nj.o>7@RjEb<U*VB>?.MO"@qQ7PmF<F7lDjYQca^k6QkkB/E,"Aj8glrURF4AV)*ec-o7cU
%8$'J+k*-kI.GAS4&$H)`m?CXH4e#j<&GlIp"g&3Jl'=b2P<L^E>&'b]7S6D_Yb%b%Ji(;V<@b>S,HKh-2AjTF[6B[IdiL!;;]<_S
%2QYl'Wl*OpG5`AbWE78CJhBZ0o)qK=8@:om0fj"e1Ym-9\=kqRT)9eYTql.B+f`;W.1t!*)ke4&nU,pFN5n[g@ha6i;md!fP@6:`
%:%d'92m<[)<$IN.Y@a%_[T$:Pb@YVD"90A&CM!,I^/a*_6[X+'jO%B-TtJp)i-1O9F>ijkn`]ipR8<b)7T4$L++=VDIm0(kOMsF1
%n-)G6B(F$h-TS%l8"<,,pVBDg&'<:,LHLb)KDp,D8)P%Dn`*!"Ps=J\U>)$HZg[X>oQOaqaj\S`Ca'@9M9E%MO+rLP=attV*_>bK
%`+dKBVp_AXG_"MchrXjXk>VVAMp`^.<G.&X:(u'[-Vci=dPq.]m14M@@Od:!$(TjK@hSr@;L'N6HDB^iRS<R,5+PL)p\L&37Qg2g
%-=a<=d#gmG\hdKTL>@@+O%c8mO1qDu8!JFOn<mO5Q;;Tmj+!:OjkdWAh&l?GW-VK8+T1uGia=a7-9hGIInIV3N1KQ:`EqP.lpA/m
%>1"TA`e2qIeXT>He%\A9)+%MV,U]I]Z6ZEa`9qFk-,+#@5*nt$B>#pdJ)"4/lLbAa6lCj/:of..oIWhLZN9Jk/dF%ZAtk7L^t2A%
%n4m@>%jufi0-j/W*`,c]!jT\fAr5HTUlN.l"%\YkM2K`86k*3ne8T!K8r]fV;sUh^W>5N^@`l(-1:?@ZiWK?Oc('q(Vkh0Y;rNu5
%ku=eZ4W@)lj2!s:e&_T'igLA@RT."5.UT6am`EYQc]O0b7?YCt`HDHLKLc*$F?CaG>9ok1[1O"G6^/3hM@PJBQUpG*<Z*b@WV-+`
%<1fE?1EcO/)%!!H8-"Z@nIb0;LoE(+MQ$2orBL2KJ08>kWm1mGRBAb1[E_"tob8Y2+8XXaa&UB>>oV7JY?-q@[oDjh+@>W2DbnSj
%C;]HF*-DYg=2e$;F-qALct<[]N]9g@4nrt(Li:];r[W7@?2ZQ+NMfA.Y6`i"6LbbnRZfITQ[:k7bg=Of4IV76_tT;^O'nqGl:CpN
%5a3QZGoQ;ZnPAfO*WF'tr]&t8^FHpXjDV.$o#9LMr6k)\dGRf&I1uC4Mk^?]iLeP+1m\&qG5ShD4E^hgC`j3VfoKKR5gI_)B<pai
%_[73le,Gs`$`VrP/Gi+/Dd@oZCO7Tu,8;.J36)*E.lX-(:hO55:-63e,uhW'%_;od,P8B$5\pr#k35Es97KTp]b[N<rpg%Dpka`l
%qJ=Rb*]Ji_;UA,S0E:k9N!B7&2l_3"PYA"6k=F4!>/V/!_=:PISdn>Ijk8_DIl/,RFHbCC"p!R#/^HXO/?"^o,rP^6T[^gg?sr0m
%G6:,F2uj.Erp4jri1Rb%'miQMq"K5=LH(2->S10V:RT,qH@<0?j@TA#R7Rm2KK*'3?O.>mik7SCTdlD8rY1g:+VF_Ak^,FU-;trN
%K$ne=[+9C=2?9&`a't(aIuud;ndZiSVZ.(?_*)cp*;qb5^\e7#j)BYgIc<cnQMaVPqQg,a*_>RCc@:^8in0NdpWn?JrEiBW=15TM
%J)Jp%qXt:[qod<,raYug1["6&d)uepoWEu-@#j[4nbqEBTZm_U(jkt$2NeY1h[soM4ZdgaklC.r"oZ^CO$*)q\*b8+-COo=Q-OGk
%-6fu@j;*8pefb$Pd4<SK$&k2[BK>CQs2u;h[3]`)hF7t"TlPT9UtC8U`cL2efh%j9s+`d.N>\?l5u9U;j(K.omkmBQ^eDYlIM\_^
%7/7qd_;0,.ACQeo?LRZAIt&]VUaO..6C7Qi,jV-U2Mqm/A6Jg`D.Z45Qu_"Y,Q]489dqC`'.nkeoeh+jO^tH(%W2_'YCDH#A-X]a
%b:-!OqQbU.K:,m[?;)mW%aeHZask#lk^WSm7hoKkOrGq]7bo_sk6aqjB_5Xd^ePu,)=hYLM.l$LR\&Hb\/6VuI$I+)4ApENUprc\
%?gJ1H="D259`MR8Jp4(gpsVB1J?o1bJqn>hO]FC:rYMfRhb'VsM$O_,m%J)5\u4'XMKOP4oPa'As'89Co)@7UJA2$gE:V,Dhu1<F
%NRQqgrksL9%W$mu.=hf_e\oq2rsJb-VEo/>i*ZH>o[D@cP`l'(iGjn<qV0h8r?!heIp@urT7=t-&AKZT7X!hVN2B.SBM7emP4QK>
%nE)8"CW$M&+"p,?\LZX/,l\?7!c;lUMLKqG;mD)\X;,h(^N=,>H]"*,(!SJ08bGT:/u78%ci84Qs-@tZ&aXAd_gWEPV<sOO4RZ@R
%1&.!hY@QXSAH/&K9r+b\dJ5c5?qRQ6Ik6UWTh592L2-?N`bBrIU-.h%7(MLL6J`AJlc+(=bYZ#/(4/1hW,H\HAR)F&nRuYg-P#up
%2.c$`mu@3a]%&3i:etU2D5EQ51n0O'(Esi8p]!VB%%1WYW=FSjW$2`O'IT5N0hs/!=_^R7,aRpcPF:WF*-:UORUEbu<#.RTYE>HL
%T,e.+lH!1nP(M/_oIeDn;gfg@`j=(s`C+%Rqm6*7QFo6tonQI>ImKTq7`V.b@&j1IGTd!,/BS[qOEH=g>.BXu=/-.$RC%,qRe1$9
%ppHbQQpT/*=6&Jp(*+koUtQV1'j6]e?gu7=3QA=;7pBl!F?5hu0$ASkl_+\.Z6TnB<u5&+F@#f=L841gBJr:jnX1_lla45@6bA/C
%5#ifHX3n,I$aO]bO,Acm#n9_J`Zq=%P1'FkSP@/'$P"9^AuLNiLQeu6>YmWFILi]@s)<ra(,*>'j-V@=InK\jl0kUdf'?,N:4LW_
%;?Ggb:<YN'[Q+2PM'%o\Cc#14an]F\Ngj5rbgA0+20q^P/&IAD?o4$b`*n/dM9pr,(fo!g9b=koTNo(m:\plrQW%m=A0]*?(t&KY
%5kM:[-<O6Zde5&U+.L8'<!%i-%k#;$G/]#2QQ]-?h7EB'S;VI4[eEd:eRsL8S]_s3p)=Ig>8,0Ar9rnTL)(5A*eFK]03-T/S0a.>
%[Y?s0ms8?4cp":Hl=r"RK+qIeQ\]EP`F2iuCb3ci8Ne)P?&`CNp?5E>NeT\e#[$ZI!T5O@1o>&&oVWsqiUDRG.4Jd`=Z^YA0FK_.
%bNF*hE[be:1Mr+B-s?FoWlZqQAT8N.Kl,E_dfI(3iMg8.$5nCjfo1j.5q6a+f=KV"9&R#==<&5;Q?FCJp\0M4nW;f&Jj5SonaWtB
%7oT4])65;>02&-_=f\f;W9iG`W?_P6j>3BX<i!Ps2i$(6g3#2$O.0q($O2,5;Ye3^JS<7\RmieU!p9b#o[e36^tm8t?$03ho[RWV
%CEo$ch%>Tqe"0Z_'O4/S;S6C?mIiZ1Go=:b3JQK?/NXH\TpOAJ2i9$s.HoKp`^Y$&,bWPha]d,o3,Efc+(Ig(Jb6Dn*,%jBfp.hR
%9S^dWZ5fbK2/Mk>QH*HaJeN\$mt_'X$fWa@$t,o`e:63J*@TP\aZZV9U8%Gs-_m[?4Zci`O-HSA"bE#[S^tI+Q%ipG>uZ[uG9X`Q
%>!'?<BLO@[CrU0['Yt+#2O!nnlGSfM3m^8BhP(\g,n:+h`?nsjE<j`#<NJ"hB<FNGU`oj9_^IG]bK1A8kX:#Ra=d?\ASm<mi4S2d
%X@fOt4k`cpEH%s=*-K&faq%UG1I2Qg/_(-C=<I$sgK>M@f&AA'BnD5W5K)jp1e<hIUu_rb^5B5m/p+-IRl1g!;/Hq)A1<cQ98QN#
%8F_ECIab4rE0_g8QVe^MWDKBk)sA':[C?uQ@-24oF7a?+MYY-O/()UHOSZDLTgJo2mfF"NW_"Ku>jJXab.Bp.e,!*^9It%A5JFnl
%35+hFrB3=b;2rpk@@:R'/rC=3Yl!u&0k.K]a(%,)cFn'14V[/n.hUUroBCKt0SPP0Z:?9&Zm4`c9Bm"LJlV'K5OA,6r\9j8UnJpR
%)i-Y]pY#'OBP48"/^D9!)S9Qd9%P@FPi5Nm.,gcdl2*Esj?S`TU[#:YPC)h^r"6C[JPq=#<UcMiYmDi-C28h5s0V)U/i=\ls03^k
%;Q)[If]!Y]Re?uTouNA0J\WYkRcm_L1Q\E(;k^@q/m#B.^CR74hEX:eVM-A'N]OVE)6aENN.4HC><==_kl^+RlglAcPWhLT5&=('
%((g1<ZR[lj@IFl-o/tJuE:PIO+T02l+uU,;M/k"=ju,`<f\b`!6,5<1"<t$Dmnnqh\3"^\0sSUr0%$05D/ON0*JXD#9,ku6#V35i
%f,_35`Ppe44dIdglu4[L^>8a"\V^K"<-TsThYRDMFjEkiM+j)00ptqE](BA4RSBUCW*>"K7`3pW1)nF*,Fubj:>"H3Djol@dUiZF
%e7##j,\KCHZ90KuV(IRRbS@N6L__*G18iTHmD?LYYqA)bOu*<fUn6C',W)F??^$=0Ki$6(p\UR9)q[j+dI^Af&`t)'m3iBW5SBBb
%oQ'aIXN>QLjUEc8CXDDK5WtqFZRXd1)Y[X5%#43I2=A"nSh*jC$I?cO0ZREDlGH=4XOr8"B?^TC[Bq9"VK8^rQa/9h8t<F;(ZufB
%f86"UimiiB+5.!&`c@qKAl"lf5DGoSR?4C/g/4@OCtllS=VbXS:n2Y(dr3WO$\G[[O=Qn&@NJh@j,kp_K;,B'g4;n#k`.,pa\<ut
%e0iYC&#ePNg/pR0npaK)Yp_M2%TOMQ:=RU@3-HI5.L#3M8\B?4H(;bZ,=3AV@a*?5WJ%-eg7N-0&/Wc\$5Hb=TFMo_#kRJ:c)!XP
%[hDJT3>)QM4&$S1+Im(f7!W6sAGsfS=8eX]CHTO(@9KcY3>L.c&A>cT7-h&m+4X=LB4h/`rRL9/bfm;*m>1J;s0jgM<So+17453$
%pin%#Jaljsc+p<1$.W<pF%_uHa6c1)WV#PnE9j_4^m9(CXhU#Dq9!C'_ooaD6TFGIpGG%*W?_Uf#ds1s7+K[l6fM022i*Dkh23Q)
%*VG2H@,niPq+P>Em01<-D._VCpI^]3UHe/>IJ9U`(U_N6P3k?eOMu_9qJ85ZqT@s?7E`ioUZ&0K.?D1hRjM%An=^0W#e,K4cq);Z
%<HJ!lQ$I%SEY)DE[7g)_YEAb5el\o\MIi+FfaS[.ac`I5_7X/mC7\F/g8nbuKqgeI^Lc&dKpBHeH]J=S(iG"5P7-_b9*`gVUHuZ,
%(d>*=m5l#b_Gic]S)BK8#+d233nJKj^m3@Crjt2SG%<t2QqCY0e.JV>MDYq;QjjNfT[;%8igBL,od)O+WTRbL!fW06Q5sKQ=r:HP
%Y"!To[t.M^(e6:s[GV+tQG&N[@1+TNi5p5?oD5nsJU?;BWs<a_)NmlDrWua;OCLZUKs31(FQ*Kk`5bQ9H_Tl!%K3$VrD`>g0QRBO
%c:E)gdulN^&^7cb)GI&7aY.()'ZQs;+!]$<,5Q;b(>1A;-#e$krR*q7,7Rd0;5c=9\k!'qMV+2s/'7s!C,Qe)iY[4Y#tlEJ'Vtd,
%59nUcf!(#h2ua0;&HDA%)o?;n(V$^Q!,%LXs1LW2+n`^fs4s;pO5fS.(M^E0pW!c\17`q'kl[g+JV6t3@Dt@jL.fE"/l!_cnj#8W
%:*i]S$u_sPpij7qHtL8NZR'B;$B2HBS_p/1="k-3&fHbd.TQu;&Ru@]ZL),<V2IND:F*U0Y+3c<-k`]Dr\lpjFqU]]Rq2^(k;dOq
%QW!lts.SFXg//95Ma\Ko'.6r!<$63A-V?"JJ!eormiVTeoZpu5*1UI(p;"kN3(2!:@2Tt4;R]S.C%+Sa\^bu\fF#E\ZOTM>UZ(hH
%i47B59W,q!`)tCrl,i-L&\]`pG,]W"6:2g"(+ZC*?]'>*a!;as<&1t#m$O`h9MQ6gdLGCmai4A%kO^'ra[7`68"aI\/h=&)/mX`m
%,&tegrUa;P;S;6>\4#C;)C^,1POM:;m@G,WlAK`V)h,&U/7)&oeb=IOX1<\a-W]-8qgJ.>&D=\:Hj7%"fAStoW'ekl5kOi3$\YD=
%5*sp6%q.0V5UCNDRL#*ee;<HlWd+BKT.K/g\]dG'qdDGW<ZbmkP?^n1b;EY'MCe4S_oCWs=/Yt>HsS9kL]$a=OhZI;S^mDiXB)G[
%T:Yjt.6CKO,W?M)rmadeqY@00LihZj!3a(+(sO@c-J4hViQ6L1g!0gHqg7?t"Ul<9dabhE+s8f\g!>?'X--_ZeKW'$gZhWdE(Sqf
%^Z()A]"'Wo\4K]PV.cnV5KUH61G](dGZ83E`UH`NkMbWLYe-=uWM%'B7a0d?Z1%o`A349Y?Xu^SfaU:\":"g<:Ln``E[<q56sEn?
%FW"]pJoEoqeYb@CbNN`"lYZ//YGYR9nhW5X7?-JBOo7aW9:Jg9\6L8Dqq:d6.'53heaKQG$O#aYr-\EaD@X(:I7Y5Y06'ph0,l9U
%"&o=k!M&Br2(YEg#(lE!hiuBZT(,UU25(R>K0%\G*^^DWMrCNtKAuTQboCK`rf4%#iF>fbC\;"G,C:"`d@_[;)IT^sF^)8(RT\N1
%].B5KTY>E*onR=(W/]F1!jg_J`:$B^r:EY+-rA6u[gc9*gmJXu(b29$:/*sVp[YY0GQL^`Eei&H;]C3[m2]7P#\n*27o1kNF\A[t
%_<K\'$7`8Jq.4@57K]`E>46'XgR4ide4JmbBa(o4)Elr<1oNZR/4$BA-em<+faOlCHfI%P_;aL])-!c1YO,OZc)`-D)j`MSNqmWm
%pWm+C\TqUEf!Y?bBCdWnF(kuh&Y5J+:gn86J@DA9K2Zii]7C+=im'F^C3U6+kOidKHOr/+:pXX6<+%WOD#%B<Hli_7TOoh2?T/+&
%mHL[S)sbBBf7'ft9qe^IIjWjPp%&THMSL'aHQ8@KQ;A++?7R<0W/i+iZ62lcTHZ(R[A2C';,<'Ec%aDI^(toDTq4A(&'J!M/)8DC
%>n06@P\(bMH[U)5dHTadU#*0POX8NC7\VUkK*poK!C#L\`lS=(,e&]*S!Vm=Ot"o8@OGsup%>^L]u<e[R/,])V7>^;X,o?kPLGS"
%GLbNR.FdNpr7h]1E+f7LI2:MIZU"([SU3O"fenP2H4Z5]99Y5^eCq)C@>]<E0b-.o%,@FnD$!^BRl9nsV^Tl/+&`.s1:ML'f69P7
%ZgUruF\gS]!Z2@@/UXgs%/27o2XEP1h!mrS6P['(K2"MY\30RH>R.44Gt-2A#G0L&pnm-/f"kmW00YBd"DTYnM]/HN:o^.*'<'7+
%_P%IWU$KcpF70[5-8_Y$7cB9WHn=%/qLtTnB1Ah?^DKkA(=(t:Yr8f/Rp3KAC9i*?DX5<Rr]!Jn*m_'$PIfi;OF35K>.^8q[h)MI
%N`XE#cL<m#RG9ZL>L%*C?alX;[C<_a9qI2m?*<i7R@70KM;.p?3&t2%H].$[*XuqO2lcAuPh@lT_b@MQ_*`c6i`U&GNp5D4p3%is
%:S4+jMmq/LNo,?-&eZlId+SgHSDMiB/`'6HN`q5('D&\'giGOi8^FcQH<FYC.._b*YWpmNW.+Af<lj.99]+u-*dG9*$;iUT[CH`h
%6K`'tS_:Ri+)C`hDg-gmQ/10sMmqg;m=sCL.nDHFd#>\>10796Di[Qa?[JJWaSbGI`TOGHCFu9o2'D;ImalZ'Oq91EJ,bI:?W,2I
%mJZWZk!G#pf#:1,%R6t85%"9]kCt`^PIKPBYdYCmf$3)EG:3(Jg8SV>[!1s6F8K$Sc1LDcm<S.I(cWt5]p7]mfCS(>Gq]MBj!MrJ
%h@n&6e+<,h'M-GJ0>2g1!mfV$e$lZm686'_)gF/c$bPTgD(cSe\.+@"Jc0S%GH<:+A'D1No?E8%R$/[Fn>r?6DcqGK/J(,"iNX_8
%]snM>DdG%^!PJgC+%%jZG)"MnY=]p\oSQ&4]<<cb\\C*"6J]17^]67=M<!B1)l_h@1TV!.55W'p63X>EdGO8COQa/S6i'VGcU?kP
%@=.GoVW^Ad,BeRl?VeOVE;3.lU!CZsQc?U>W2\,W;577/%+M]]9?\"u="e2]/YH_,2hoGF=.Ln8"+:,X"18_3>=36ajEhVV;?o)2
%6t"Sq1:&>8\1u>Tq3cr*]%g[JI"$%N5j`E*X_U`X4+li4%4W,RF@ZV))k02hh;;F(?)rHoQ;D"8Jne^K>bl?`eY6OW<O@>2i!Od5
%5S"^T.@*dr::[gME7>LMk%XM>Q=4P(-k\d!I/H^,N0@Dj<OpS$a\WJ#>I1&>VgAF\:!0foY>'ai^o2Cq,\7-X.gN'q%7\L8aU))R
%kZ\2n_\U6$SQ0h"2bl";RZF5d8!.:T4c1sC'tqseSbm&(Lf\IY<g8&h(M.E1g)gQH=%5*%i0P+L;KWX:el;ua1M\)tc=<+MQ[dO#
%3A!hVd!4LJIVk;E5\s=3`XPDNF6Mct/YWYUlS3UNhV85fn/$o?QIQ8*^7D96W(-JBaX2X-#5aDG1\>_r"P?l0XA=d\J95R9hlT:r
%]b&.)"Js&F@k]2AXLDg\eqr)*'_1tYJlUW$7Te`4g.ik\+';JYn#H*1Qn7*!*BVMSoN37TU+bb#8AO.LmY'utjaI[YQU:k?WqJ8B
%I+blMj-o*FK!rZ8pV-TI[ig*5aAnPhL_i"YS',2H7=E#]olP)a@_X_h`$;4G_i,2$:.L(//l[1tN*-GOphdR'@N*\@a@hMr4\lu2
%)bG)j2NG3[@Eeq'[AVKQ@<p/k#da@UHp"^3g,\fU5gMX"@,b51e+?<;%kbDtF4=N.E5ZA[[-in@/[C\DHGW85la>ian7]ni6<e\>
%k,ePG3lW,ZJjWG(:$nnuf292l*d-Ph8S@QF]cbWreUHQC`sa[fd%54J?3i_sD;=;(j_,TW`/^M$pIbA2HY_cEY9T"1S>KYDi`b)Y
%i*OA&Z*"j6.NEb`6DLq:q,$432`obULQ-Z*`KX8'5[fN%lu',+`O044ZF.X6.'behZ,2Qu/C4uXK^qM0d%#!Kje.HPAiD;K\M9Zh
%9uTQW6Ii8N>L)Q#$T.o=F`#W=H"oF+ZS]ctEj)0LZ1H]a73j##@?SBGZ_`@*aotW93rs\U_$C^7IEJbHm@ILB>f_3si9.[OT+86I
%X3DebUF`:i6.UCRD7c?+"NF$aF1Y8`EjE9!)4SL+NT\l=gLAE+a#)@-hjT"H=_a=KpN/q&/m>TGp(fu``d(X:1d-'S3)%:"VV,d=
%o%e^fYMD*FajcWBS0Rp[IDS:k\oH4Vbh'a&e#hhn^fUmS9r#S>nFHJW$^C-C.j'%5Vc+fJ";NjI=Y/Al>p.5%AiPhl7=]tM5PoW)
%93=p_`0*8slc-(`ZmY:L5XS<]Kq3>*M''7lM-fJC4dhKp*RNfa!"@"[-Q1>X)uZ@.^3`S";r,RCW+m8a?)J&)_#6SQ5S\q%WAb(u
%k)U9k_$t2%`f-*`//4nYRI9raIA/o%2VhO?.fa1FDu=@PL_ZQpDL&Yu=H9Uf3'[,P^JcAXr<A(o;LgGK?4/JpGb0<RN7>BhBf5>!
%Q955/,3Ca-/(OT"MgOX=mQKM:[t<F]k4.PQZ.n1em:H$^a-V7[mnN=]B049Y1(lcV2iCf?%h4HQ_O(tiU;dmgEoW3=lkN1&_EGue
%)[3Go32t1U%(V-_iEdNEi<&B@C^1b]ck+'_<"J/8l33,7hhR^Yq78ElM4Ss:(t.Be]2<Kq>>&kpIo6[67Yd@4fuZ9g?j[K]"PMFN
%=Jin'1tF-bOL2h=Ra[2J7n,5f$3J*K/0o)Nn(3mph\"]]oj#;b,M,iapdi.Q)Tb<!%Q\EcL%A<GRj6srBZ6Z]aLuO6d-l]\K@K/2
%d[MdoD^N..8agVt:scl`o=QY*(`sX(5M^eK#rh^Oc[lnYSI^naQ#o_3P]_O"(Lf"Z3^^`>hC/SelgE3M!jp?r&O2jC5:gaR!-\7,
%rM[!ELq=Z=>"c@K1(t>g4GS[B\7Jf:"ekS(GeCTfal8_0^BYYe]o3EbQ-Db0F$I\,LZKI15NgBs;1r0:L0eFEk6AqcOHB]cC\iZQ
%:TYKClA`u\-AcK='0UNu+)Xejd$0"V0q8i#1=AF;D,-(l:("*KMn:L+fOP.a4a/\5caQa'KY(MCc/"bt\J_N"]1p"5q2nFkFjJkj
%?e2,EB&&@cjI7Z(d$h0qG=1Z5jk:'O^pOR<k)'OO0?r=/IY/SC>0t'eXPsp12tUj1r-#kIe*DZR836Qsh$EZE[_l8%-$1MrF!`s!
%s&A7)2EAk9%i]o9(A+FW)?1.H[d?M+(FT,o8mQC@%)rb*7BP7cr:V,^^nFV@906+'"-?B\e=GU1?J)Z`C;^d4YbEu(OFr5LZ9*'$
%BkYnKgk^ad`j$]Q($$pLl]*0.C]"gIl0VfNW*saHGhVQ-V#R>7Zd$mu;@$Hn_iA?;3GM%)\^k#bR*H0[crA/$\Qt$H`&27="l%bu
%dM=Nk"I>DRD_3n<O5&Bj$gHQM'd"Aq8fLrEJ$bTMA&6G#m<sHe0D)2OF4;1E[#JJPrUJ1Y(p3RE.8Jr_GD@IO:u>Sk<n!e\VRA7^
%O75E$E0)q_$c/d@Pfo'%brRK\duNPq(OV_sD<O;!2H:XX#l;j.MRP[%74Z5_o/7MuS3?S)IBm1]$sEB)E4]&f:"6\"\(_V7Te1Jg
%cGW23F5\$MYRB5*?21P+l"6'Cn%R@Rjk:*ErA\UNm!`Goqua&q(St[VUq*`t1NJ9=<'`a<##AT!bH93]L"oO^-Ytnn=gCRPbf6ei
%L@`oKggYC]1iYoB!Q^#`"YVd>O@nXJ@eAB*=>'<)_tiY/q%/qDK_*m;nq#E>9#CDjA,-Q1c/R]0p9B!/?0L8\iI(@(Hp2uBio8pE
%p9B!/A*DpHiI(@(HjIr2_YNP.q0[qD`J)5*lsoi*!G_FL55SGG9jqBaS1e=jb@bZcnJKPa+3V].3G]_/XTS(4/i7'jkIl!ldXeBE
%S(g,@.dkuUm,T\2f*T$E<A\cg0kf!Q:BAbL*;nDO(l/d(cFiqU>>F)LR\LCX>>uKXI.U`<fW#GY^:U&FLaQ/9:!Mu_crtN[,?,o_
%1bLKFXQOb[E>O&?S$\)kktcpopPGJdfGgEQ:urP,8*nS42J75UHQSM)2+*q0Z;VU,FkF'bIu.#OI&S]-DUo7L`]0==\\U97cAR1/
%V1\erFDU)Ki\aD-0f(Iq+Ki7<p/0?go-FKiEn2.[bL6fO(j:29;,hA='\&R_PScFNE,88;i.Vm"7RSn4eEp7[0-"/#]<ek03G?ER
%?:/kEENbBgY@:dIKdqjag]gTa4W#O^'f-(3)d?f_hP/G6\;4R6Hg(-fZVEX@+rJR;Lad_Ag<1?$@g[@%))KTc&+O=niCh39S`d[\
%\#.,3MiH26S0KcFUMa4]hQ%ipX#\CBR*FSVD@(Ab:WGKffu4Xd`oOY,#Wt';\Jc6\08gA^p;FjACGsK9$R!\VBP12<=eDL7*i=4k
%#5:[;gP`DDdA%dmN>r&Cge$BF9uh3FA_C;B3h8Y4/DAGhYiIs9#BBBn-Q`iaHs/@4kOo-,(<<Is(1A/1cr<CHb4f[U#'79J2XXo-
%BJnM;Le5OBD:G03=Y`!>YuZa`KC,2=J,p\^\gLlRn:VAid<]E=K.9@WjI)ldI[5+\X1DWS'V6\C\6d$g3CW3O`(M&$I\$t](c\#e
%odgT29c/t7=I+lLBpWiYlB[pT1Wr-`]q"dY%;r9N<SN6lbr[;`7?tP<a?TuRL+XICkJ\]Th'X<GLD3GRjD!/BUrR>s0%eL6ou>]3
%?Am07"BBd69p%Z1b\%ebDWJhJC7cI29p%XqVJB>Q%IVTTou>_WrqgY'ef-HUm1hT.*P/K3.%qmrnSh-*DgW,-R/^=C+8O:?HK/Le
%A=[05Qa#>F`d>L\VZ7n+kTGPLN&uW7kBLu#RgY3-S-N<oWk/k=a%%Y:O=X`0p+?VgooLECr*sKJnRMY=+1^mh-#/Zm4PX7VkqG$^
%V.u@mb\\2dIG-JOnSej*>:Q@I;$r@"oEh#qnZrL/n`^.CS_[%[S=aqQ/W42AP<'0@J-bfD[c'mq4U^!@H^X;LB)56^m!I9FGnt#q
%X,bC[SDm_lXt1HY8):<W_0N)Abk($,]4ba3SF>Ct8n(k\Oa6*gBe,7g;nuKr+g*4KcU[#kotbpSNm+7faAj89=[_C,(+@YVCdjJ3
%PRH-TF=n8q2m9>dS-so(AHhTLiDL[KVHJb#;)+kC[ZNW,\6dH@?7a/$Y*Y4K#CbabiR1.^oBA3H*u742"r2L$mXTt/m/uIH+`$K!
%i-FeX@XW*/5]_`k:lo9kO!Y*`&5MCs4W5*2?L^:EZ#m;+MBU.tVKndgWOD]s=F7W!Z%<BHc#PtuT'k3rh+VakI^Aru]H==(eM1s_
%_g8\3K7enZYTBL'H&^R#>B=]'7HD$TlF1@`d$d-GN`2Z')f%@?%e=BIK?k/mF4emqWSJ*g[?;ZcVk6rnaeI?e(aT"NZ[s<&Ia&`&
%Z\W`8#Dtr5nNPMbBP;&_9GFnO*ippCO;n/@k85K151-ct"\c<h_*YCu"ma]g#oH*1>DsJf6I9-r>cpTGTKIt,H&WX2&sT:$[oOip
%eHG!=898A?=Y(uIUTJUbTKFUXF%&B?GhlJ?^8hU`;p5b)JmXiOb1#]kmQCAS7pR87^%E`.RHT&O('sHZL5D8[i\%iteh$b0%7WlI
%L1b2E+t)CPP"fS`:SGGbaTRX#o.`ge**]c%/&7:`HIK]@To'gB]B,2,N-g7n;C1(O@PKnk=6Z,N[I2?5m/,gi[e`h8\NEDVbO(br
%ZM1qS<W1o-ji$+pF^7&@X;3%I@--#[]gX^?8)k!mh6,8rT'AIIH[i.ip*XZ&B'dl'o)Wg@P9LqXB"10GrT=)QmgQ6-7GBIp*q-5J
%md;XDmbl)Oh>l*H#5dB&a=X&sf&8CTB</6ugL.d9dVqlj#eO;j\@.%t2j&Sl7>-@'&Rdl@4b[U$JZ95L_ma]f:lSn-E.dAi,5Nm%
%+7-I;(ZUfX\ba_AR0D*aqI]#gqIUE-pM(Lf[umqMg,NGhY^hW".GR&Q+,a19IMXnnN@.4Tekg.ilakqtNrX*[S-nnX&f3M8mj7TO
%?r8OZiU"b`[&];s,o99F$DV<0gJ$"nmo)[f<BU?12HWEg]W9\qqE+QJ)P$E:V0#6i@T$`fW^lM,lenL#;oc;V'+];2T]r:`k<<$n
%FJ3SP*'@;.7N>0.G]YNZ]q.ffBLMhLY1I`3[_msV<e@?6Ickq646Yd<4_M+Wi]$26)53,JL$.#CfVqZl[k"sX]\=P4X\\*A#8``l
%\aL3!HLrS=DHprn\s73j5eM2HT6m'P;Ls7.;11"D<YX2!2E6$"^;@ZLbB:/F^qQWI0c*%fB/]!S"nn@$opSm/AV#7^PF3s@f]Qh0
%?6ZUL5G]X*c],Ki@pkps8]JdrcWX1RT35-cNRuOOJUM,CURB`\P(A%?Q`qCYa3"H6$LBR,l6En'8d"t7qS_e\.gkW!Ms<)(:oalg
%1D<tM"7aM8qon2!O_e&9fOlNY/ppc;*S>#U'P00Q%.&%#g8Y5ObbFs"6CO+Vk_-=>!rL2:@B;W\(CoeA)Gj.b.agGgiQ-AuW'7LY
%Y;EK0_Xi6,JUM,>-ldPuJUM-=C`$le%I>lLZ&'KIV1F%AkR`\-*\.N_1IHrD3a(L;JUM.IW[?Lf[iDQ4F4Lq]_5_=u&V]Dia40%s
%[rA!D^`N.UdbI5t\IJm'Z2CgGH:>=<m@.A>B4eJQneOGG.TKGQCK*=N!GmB<%8Xq*ek+S77gISDjb:BO<.ql$H!q%RT1hXqgoVm$
%9%TtB@h.M;;<<$sYE@MjFA$Yq$Y%+?218&)2C8[^hhV%K_Siq*N@F=8-*C9$0E:Vm).;gmoqa>AA!r>LrI8,XB6oE&Nt!LY(Xoia
%l>r^b[/'ZM?AC@]q4Au!Zji;kI/0DF&^kq(T>t&iq9/eC&@=N+8,LL0Hra*hmZ*p&`TtUV$]=H,kNEg+XY.Vg=?,2]1SN),3>u-G
%\9p-\prJ_Ma#oXPNenmUcdeRR%bE8Wa#2-+T'g(a]QtKcm@FmXB^H\sr]W[r+BQ<q]K3#4\IE9D1"kK$mi+@cSe#Nrqf]UC3M!9<
%gg#7&/*'arC3@'b=0#!_gRjm*(#aPV<N$FO$u*a1b.:`_+o=N3XVF;!ZtX1g!N'8m?@"'[L?pq2:/lFV*5en(NqV#BYT'?c9enDt
%B7'=k[tjU1cs"C*53#6,dkrG]]kN>VbUg$p9+'E`;k"^qfsLA)7T*L4(d`eF3S[XmVm'BOD-sogf@qH&k%:t=nU`U*_TNs<7W(RA
%m('pmCOmFQN=c6NdLLVba&3@,`+$5;qSisr'k$=%GC%MF?s[q[qT*qLZ:;<#'\YnD'LLc'=:?rfGV5e+qo<,#>T<-sX8eJIE2WI0
%ffN?H?B7kUrgE=6bOrC7]mi4U+Qh)gb+%8bB+]OMglT!VA?OoI=8sj6Y1:H[\\.[_PuW8.HiFNRd.:?=mCTq'cZT)-n9o;!_mWKG
%R(3T\c4/'A['."5l68EY&Um"1[#F\nf/dec$b!([/bYf?eiF(l^Fmt3p`+?sObT/YIM&VAC1mdu^<hak'9uF!F)K&RqVEcb8dgS4
%hBKIKo_n]]FsogO5eeB/Q<oVeTH%Ubdk#"./?nq"gIKJ$IQ"?<WU:POm`jqWDIki`Tdcen04F1r,L'Q6pS*"$jQV8I<3/4lJf\j3
%fsE\p&c+?IrS[2]!i*\9M9"a(`_)ccZ%Y?cV$;/4i\F1c08K-^I@lhi,TJGS1m?B<E<j2!F]L*D<8%pumc/18EFY$F`?h!6V\$$Z
%'5V(#r@6fEiU4MW4cf^)/ai>h2GK`^Y>@rn-JO6_P.=!Z2.d&SL:^"l=YB97,[0];R(][eeF0T@%lO0UeBD/<+u#:&]N_A"'1^t6
%H9%jLdH3^O6,aUN\=2i34Er]DbhERhC>iBSPsZ@DG[<@>#tc#%(YS&E>/^T@5Jru&JWUgL":!l*X90%^C\;#N&h6tt.\Bp1c)b]S
%C6Sknd;!SX:`HZ%"4_WR>p1t#Te\?C#Rj1ClL)!l@hFO,(:9$_P@ngHFZa&BGNW1sfZY0FBQNKIlMf0`$Luk-p<cCJj6ED?/$n2D
%W*=-'ZY'GAZASrM^XKMa@n>P"A&A@_Y,T%bd0TDmDI1Ek]@$lT6`'R0=](B'40H`&Sj;@U=#>"gase9B4(BIpdM6#Z%H_TFZF)>-
%R!H!lH"TV/1ZY*DNBI!6fko?%<D+,ICL`6E#h%%NI5:X,TPf$qZ*B>bdL!b(AM0j*X?&AeYmG(alqV3J%R+b_VN5D+O&^+Y>;kG[
%k$D7Q]7B4W6jHN7H'7`$AP7OR5[,0"0Z*^l2]"oP&_[mHohoqa/Z1++/Gis;MLZO/B/_MgI:@W?I)bJ=%S2ZC<?XNkMN?n%f6qaW
%.H]&7!dCa3V7,;:W(nQk97H't/5VD7RR'I;rF(tmd=n%e;Hq*p&K9HRZM(Yl)E*4"D,3M4n)F9"kENT*,o5_`[APU;)u">fN`ln!
%VU'JL1,4p23Xr5?*FWIejV?D$p7lfUCc]FL24CngL@"fT1=`Xf1\A8\=!"+S)Z2WJ/23/RbrS^g$QG_H4One$E;g387mb*R1PCCB
%_J%B2L<Xo+/YF[S2$bZ&VbnMp&mt!(0mJWKEq76%fl/P>6qjVDAL[m#U,q$VK8ERp'9Ua+`[0p'^RNkR9*+<.n#._GT#7%b$cU#3
%CXu?QROmC22:J=Hqi:Krj.rA+a.&7JGDolXd]@@,>6JZk2]XK%[$5-;F&C04@\XQsB\779L*TqRXgr[E1NslN+c-\<[\\lI0dP.`
%4<iSe(:6H@NCU@>3aICa\rB50aj?@&D1NJs(CaP0^pj_CF;p:^;VD0qM&mkS/2?-9D2iBpU,Pg#l3P^"*`3;KR[\#D:poY$Kg,B,
%l;i%1TguHFU6cVkr\,'!XLbh'AVC<n)"BOj<bT=u<de,E9$k?IZ9f`F_Sq&?os-n+)sR%m/h=;l"dZa$d*S\6lH+"Xb5.N2]8B^f
%(ER=^0Y?^k/hgnb$P+'D[Th\,6OT\=[iO0a>^EpLE!<DXDD"%np46DhKnoB2*NGlS'cacAXB*MMGc1d9g1Rfso"mb@a%.1BZAK##
%mA5),kG1O!4>[OMJ(p[-"_rSr&++eAI"+-1JR)Q+BKnHZAi1AGY2o-ek6hgfLIAVZV(Xs,Z%'4HgR#\Ed,(PBB-&5,?jIJ4d%\NE
%5osfQ1s96NBGP-VXZeQ@["U+p['qCZS<@Nq^$sBT+'&QDAM60A#WKNccl8h7>^5Ha,(JPZ&++9sZn^Ea]C=1]'q:!oD\jJKHC9m<
%fi;:%W1:n1gihmk,)_eINj6.^;")T4`.`uT-^kX:\aak%Tns4fCfm:0\F@lE[R6h,^0hd\h1!l>lq-/6(EV;&Q20R:<u8O=d/LI@
%l_ABZ(EV;>@VP&sHJtQ?/"iXj+%i84G\GulRns`!(EV;&2RBR"93ldU&otg!8S,^hFl=M0,<^P2iV\8&].c"$4s,HN=)d,lmFa@a
%]2s(4TtRc!;H.kSnBf?AKe$8dk-l?dPd]A$L\@j;M!ARg*dYDld+HiQ&tgO'4LDljct=#Jl06(&ja!;q$P2WY+,840]C=1o0n\n2
%G#GisKnkRg#8ao>d&Ihi.4/;+Gj$!LZC2.3m9:_LW+0W7]Z7f<Mq\_!8mCl'6S6$qD!3dsHZ']ARY_6[D/D-H*nk*;7^J6c%ooEn
%>(1QaF!#WaJ)R(k>N_^s*nnYQqFhN9/eE:#.bij(kflQDk/'K4M36n693ldU0/:`o81o/GT`m?>gC>eG<kMa`BRf#o$$m=&*nkr_
%Rp+>Y\a[rYBfJGq`G(RKRg&0iJ2AdsOr#1nmhJ#r=QuOr*h)O4m8P(o'a?AZPYJ't2IVr?'jH?T)u6[j_&Nkr"=D0_DZ0P,6'OhH
%QtGneG0_`\!sj@^-8NfBe[nXsHif;Fb-=uf]s\8VBn>2PBGQCM[Xllda``,cQ>03+=dYETi=G`H&_ejQ-#\jnV0"%>q.q?H1NC#U
%jmqBij2Su?TJ[/^9(e+\gAO[AY]4qE.W'VD0AG70k;\d<D#_.[^O#:.K<MbJ:B]fN]$0>5Sshl&Qi-XBrUTQm5IbSVNb:;SNDT-;
%[1WfE\ki>erB?/+]T49J#?,p>1:SpZac4*i8/`d4\W+q+cpPEl'?Nb)KDRkPhefO*3NUADZ#CHa5;ut,!MOm%M!T4^#@*fMmW8'%
%gH*qg+.[A1e!!R1mMBC(luRZ'Z5l*m^sE0UjQHM</[C^)H%]l<huGmBG*@?>-Qe-0>iJ^lVFkJD<osUA]^ARmeVAIM?/I1"FgVT4
%aUO0_jdup%Hk#l#jlc<VO*iY*S-3_*NZr_L#`S"eB5d="nCHaXfg]jl:u4=HC`I?-?+0H)q5r[N6k*3d;tX+JA_UG(&8ai#PI5]e
%(6JF>$&C"C5[2L4XOl%EC=/i[\'9KL+q$/\@\kYlK@=ug()+[RG*^l6-gLMe[B%IA@0t\^oBGdJWL<ZH5Bsp]n'l4oS$RbAl`64I
%1\5c&a_1/T#^t-,FhK`7<M!E5IFR]0O%0)8Vt6%S/;-UO^DuUI"#;?H4=koAg69t4mHlESWSQ>eiPum@,D.rqlU6ThZ(JasZ#%W1
%VErj.?`-;.8YkD$oG\n5+;#Y:/nKh%B/Y^pKb1t%A+Xgq8rnf??[S*cP=h@rX=*9jiAcVHD/tbRFE:In2Hqas])DFs]6Y0#?f\,Z
%qBEejBLfZ/"]99#@dL^nXJAlhYV4"]&+p+P]P*OZ_";sdAtN?641+J`*##UG5#OQ:>oX)eo$*-r%Kr^>^)<t!i<<"nCl-0>!#S"(
%&uYOt?VKroiiEcDHQAjg%aS<5:$RCKOKcL+FrZi8%.e@gIU7!OR`;+`*rNYqm3[`m_`.iPKJqg5Abth!GTIE`$GW?$]g%KT0Ze>f
%RG3j16LU2c9`;=\aK=VB*k6^.oo1Dk[&+Xk%E]?!pEG1C2)L3+/D9GKVmW#)hCDPtf3:=TQ-\gE\9(^hh?#(N@nM(V^XQUXO%2O8
%He50:F-Y6'*Jk6cZ@[j,40#Fg&^bV=XddT>=U,KO'I)GQ[@8$4L@C6;RunfSLL_(l[X6tY[bJ[Vd!k^P7;[FJTh%k6df6n=_Za:-
%R_p+/4,orR90r,Cgo0Qgh>%Ze[6#BkRYU2QIJ8ku9BID"Ni&!k?J"-gV)S#jo+7rL`8.Q4a)Lpe^0=8/de7<B*,aQ&/#F!NU%o'm
%@BI5dP3;Hl!PJX$.tu*Sg='J`Ht.IdrCGp\6MWfC1NY#9nD+6GVY\"e\N8@phPEh7GMKdkI]dPMKEN.3L'/-A#n,Y:]V!jc%VkQ-
%i<:Xsm9"7-+"H0/V<F:.5eODteDKL"B!pCanR8DDrmnO9T>o@fgLM2N8IHs[@/=]8](738^*7+,Q1&&+;Z'^V-i.Uk>D*Kr@!kl<
%If8=^f0i'qA(WVkI\oI,3`h!Z"8H#T+MRA]+8B8DS_PU03c@!&N;ZQ`^kjCu-]`2Y`5+jo9NYDMRlFPp7CDH!d2,;=E01%WUYP?u
%AY"YKm>\jTBOu7dFF*reZOW)s/q20n<e<tgNWAT>EBQDFWe\22%M_"c<=40uZU@i5@h7-"*TTcpcSXK#@3@:L(*i;fj$EfrU6"Y8
%Zh!fiOq^+3\6p4FKHHTGA_i50\5d]`b!`,CJgu)<)#[Zs_H$_4.:;(pWZ.Aef'^XWU*&K@L"agr(J>+^kcpPSc<+#[+,!JWV's"4
%%dm/WM#u[Iff\.T-l.=r>cXVX-oBZJa<;pR.X=3]piW+^..@Ducs,Ig&pO-DG_cT]kiSjTVQDSE7pFr"$Rs<!6F%jApA&;Y>iH]f
%3uZUCmP4]#eT;YY7?PP[PS\onhacH`0Cg_L@Y0Uf+nW;#6J]bj0KP$Cc6GeTc[,o6>C`b!3rI.35f^NQ0C"#R/C?\o38hE:9$RT0
%k0Y?J&:kOQ)EP)9\MoKFlCb9TY*.QIE//t+FKuTM4g@G2cPS%c8s]>Bm:86Ig]l*g4@2L`08'hFL0F^F"T$\EoK1rQ^=tb%nBoj,
%%J-sk?!RbTE.O.uc7\D]mO<bf+saX\q0M&l4h`;VG3_qikjTIq,oA<KapZbPUr#(N)hL]a0q]aA</Vs/6Q^cJ`]UVJ<70DbEohG_
%70BW,YG!%oM=aT(Qfph,#ShiSKhuPh:n3`^,9qiJq\Rc%6(m4h2H2Up"97St>j#OI>4,HbBP.Qa+70];NFY3"^HXlsZpC!*+ch%8
%>jbUK1%b83/#d2(Gb\Ot`^#107j<2=j5):q<Hr@UW^8*T8=CD)@)(OF=M0co@>0,u$%u%pO=K"E+2CB,&/FIXjC`0#U_&@=]X0r]
%^Bd6Qf='W)AKY#Gm__OJ&3[aC#"#U8%7C;:gT^Y6YidrL=Nj)_DD)&ng*HK4C/=LE.%5kXm(bb&#;u%Rp2r(e8\?)!CgYtaY',6t
%X0'Fd@HheJ>XLhU4g'Z$5L_rWAY$d&js[7%IFh:GrVDh=!8dYoN10<crAE;60:dRY[S']Pe40-0Hu_Le&#h;j4E":9S&*t!3`[8T
%CA5*F)!LSVqpp#*OK;DCB]raK4^F#7%X9Cs-8/:eEW^:^a]$&7aWdNk$p#G]A//$G-PtLXESR?N/>&LS4P-XuoUAq/:O.<6R%WW9
%'@9)?212Y"o_D[M?bFLGpUt"U%.TWcLF$&n$^L`FTX=Z5Zn!!G"P2dFNCNCE<q7qqF\W[DM2o#NBO;_nC/VhE'b$\cRV.'Ji2;ef
%<EnAZ8\I1Cb@Fh07@C1LOgofoL#oic:Gkf&$Vn/K_@[XZ3%l$iQW/DcZ9R(NGT&UX#MkEsDWj">L7S0'N.->O(O,S^Hu/3U/g:54
%/6KS1:CV6GmfoLNj#6DVFs+*jFbF)>ADj9A#oSPR%M7e4Q_T+60(on`o`p<'%aUc?3X=c)`9PL@a)X`VlC(4N(0^DQ8Pi]a$M5;%
%i9"^V<I^QG"_qtDdneT=IW8u+3^0J0T'k"nI_aSGNTN)'#m#mR4o@%&F&;?ge!?c+)M,cXDDnMdQCZbf#?Hjr\\&:cO'/C4S_a1O
%::.FZD_MAUAta(dqga*VH?(0NHQ"R>UE?fK\WsXj(>o1OmD-+U`iQB*.Es9^/\tnPAIlC))G\q-`k=u)c3^o5o)/m'kEWXA-hV4/
%P!1Ec7tp?q6[efi%n4Q*M>Z-h9b09<)qC@$G']73V]4a,'B-6g?Vc<';pTAeoIA1Blcl!Ra*tB8:WYQ4Ftqe!S,S!rF(Je_ep\Un
%X6E1c2K#ZnC6AM5BBe^D<o/u0neW3oi%t8Z]RZN62,W.hf,f6RT,@IL4D^%L.j-_U6M[3kksk%UoYq)u/UfsEJpBU[:jI>,-Y#hF
%P[p%#TG#h4!T+77G^T6$1&,D\@-@%F_?3b+ZEP%CW)C-a8EiI>deg'ENkGmC*:*mMaAj:$mM=b`Z<:G$>c@_2r3kn.QT2'3W3DU:
%Ll7ut28Xf42Zlb[HF^/tK>J*'a_)O,`J<AEc9@/4i+Ys=2o:(:5&)cqHei8%qh<2Q+^Ju4(IkKYh+K0Rok#-20c5^<pHPs;kHj22
%g.X8`H@*,[2NIGDr,['@2Vge`8u%A(U<E6r@TklD2:L/s[/JcbU7Y](YViErWp@>,pNuTQ)ccr:V[N4a=f4.H?4]+ZZJS)9PI](.
%+'0rRYO1:I24iWq(j9-\XnKMS^R<jAF:L"mdHtAXLtR_GW.Y+g2V]/C)oUiJ_cUeaAjTT2rm&n\'dT8`UTsQI=A8;+dr]r"X>&)8
%DRnUQ?1A_5OkIqk1`jms9ACQ4;2*in3a6R=/pZ.`P_KDOrW6EWfn,.+N2O4WBb--G"/Xt![br@I8tg-n@G_mPQds$:10V@&^^,/t
%LcbeN!g,dK*f.Q(%cQSo+Stp"),,K,E9sk4[Qq&^"[[.r3B32$6.'3cG*p$O[BWOk,?UM1hG!"H86`2b@o[.E$g@5o1P-q'fgRd_
%`@Mp>6WZ*Y=0gs$8e0AWQ8%%(Ja_94],9L:H^]f$]j`8m4-#^M==auO+acstbA%s1drOcUh[t2R>$Ac)K(cS1=KZ!G;g2>NWTVlF
%=\Y5;;e5B3e,m5*G-KC*4GMX/3f<,!RW9uT5BBI;X/SkW;6f5lV.o$Iq^aa1DDh%I%rMZeIG[4pD-_acA3gM5ng\i+0U^ohpo/@X
%rThFfKSR;S=8SO:0d^>P.Cj*-K'%H1=H\*3rq\JXf1Q59Q]$!H^Ce6U^tpkiVA"Fl7Q7j72#F:lqg2t*m[354bW_VEm/?EXB-0p$
%%gW+6cIlhm\pii/;_IR/B:m>n^NoPCeAHb,HY;5`^KK[b.oQDS)"A:WUW-`)KGDWH6FmVa+1'M3nmUmATXc?SmBfa4TKe&@IH2d4
%oHJXK[2p'O]=Lfn]XR;Mh.h9eCho<::.jh%ILPtQ*Rcq'2N;Rt3bL[9FLq,f*&;$>cN8Ifhl6m-m5%ufL*utl2'[%97s/;\ak!6<
%`hiZ0Yr)!D-D;^Xf52]'?-Zml30f)Cj5kmq@L1r50TBN&g"0C1i^pM]K&3"%7A?agHpkU,n)-)T@bQ>d/*1*mZOr&P$5O]gbjp94
%+mi/hoh)T(Am=.1>b=8GfAOW]r_BkoDJnkDUI:)HTI6)p+4]KK)=20E4RqE7WaWPC:Ur:f,Ae4C@bCg^al=.B?QlqE0YabG)s@l,
%L%sL<Jqnth7!I8A)oY/oTcjHJo4>S.K-6jK\R_j1$pCk?Qp%%@GVIp:(tJ+`M1js+Gqc0>5qJTG2sJ241)9pK^eW'8*fNW4)/o$X
%.#3g^,W).RCVR$oI\Y8B,r#B9iY5SASpi-,+O#'G$/O'?.q7.3XW4/"_T02I6.rZ^;PZ_`Qiud0^]>FuF93V$5HIF7Ml[<m[VJ99
%F@+pfVJWQ%\^3T\A;dlf0/O6'CY`PLP]^JPK*3>N6!=KH,W6T[D$4"qV!HfbOW-62iuh!dmb0?O^s_@sbU/.fe"dWeAAMHBJh21N
%[_[.(LeWje%9'9.$B'VA+`/H?`26"qhW\5N^'K$/:U>UcZtY7$Pmc5^K,T#Uc0Ak1]`<2R0,N&-&7:g*Q@#3u[#ce1ZPcicN!h,"
%jq]m!.nXk*<L2'")Po$op-Y-N:etg!D(q4:FknO3(=FUJ_1>]cg67*9Ct='V`?lVXY!/C,%1&.6I03oq-G9Zu$Z!+`fa0V_YjI2`
%,P9Il_^<(<g(1fh:#KF'->d:&iC,\>XH?)hUkGJT)6Q56:M@31:?-o58nh"")9lV:R2Tm*N(*t[7F*Gc4iQ<W&Q6e*jW^9t;lHqg
%WC3>85<6EKT:eKZY>L#%@Pi#>df^>U'$X,qh=Zoj_h/utAcjRH=F<gR3k_Z\6iA1LG!`kfRGNb1+"_ANLQ+V;6(b$b6h)sgIe$Vf
%<1JrBcKgE1Tu5Z251c_TCeIj[<c9WVj4`sH)Us0]i.tPr@>CLZ+Z/M5dI?h`W"s5#<1A5BWORptA-g_@(/L#hm@FYEOGX>U_l8f@
%q+f?Tf@8.NPXtt;BhYs!8W0SPN]35:JA(hQp@.!Vm2h$Kj*@J92]f@l0&_P<&SOYB>Y!P3:>C9:k*s$*!AWB8nD?\E&etG8&Ie-F
%7jU^;(?42'o`L$EK\5oD;PUt;O^tG@eP^2e,l<e<aZ'"\1(II)L_PF_f2WtnS8d-1iF<Ll@q3XbBh^BlJ3JXM/ZA8`8'FE5C3=<j
%n*LoN=@nh>rXI=Lm(rmkFpQf^,`C7dHi`OXM&8]-R-)!s>T<+aapGIpVBNU+o6!;SQe^q&lGD;t<?BM77Pe_k:4;oWR-t8Z4Ta#Z
%`=iMJbs@.kPOFGp''NK.QKU86)N`DL@V54S-!sW?&$#Fed&>Q?K+M6kKO@\!Z>"?9cd>%DDm\,8e9?$31W1sI6AeBaPd/bsq7p!H
%WS*Ifq5p8a.`0-iPAG25S:muaPGggkfSYI!R4jeV=^iMG8PC9cdEr,*0STtcfOG$hd#^-]4Scp`,fnsK^'mDN'k^7*M08<ofo98*
%aD*&WOg=)/YIEGgr!JBNdlEU.cL10_"!5Dt9Xn(jTALAj<>di9n#;OS:/B1oUrN!nm\=kagZ[61H=r=fi/6.WB*chiQNN[H6qf?2
%1RPfeSPt\*"5BP(([,*OP_:<Q4-#LcWJiG<'l6t(Ue9+u5`XK]ApN@QQ,a,#m.$anQXLON)Z`P.1r`0ca#_N61!,Ls2nJ[<RDLl-
%hVo`J*se=RCQm$0EXX]m>i4VQ3U8H^BiP0]J4LYeD.\I15cf\d5f2!sr4]q#>=9*uGokO=G(q5Qoo&tCOt`IKcekp]=qW$@B-LmP
%fIjT5Bm@c7X1GHGp=FJ/h]-Ck4bh>3]hWGZJqDE>*&`9?L%s6Pr<O5T8ICsBfVokm:YQ4%&N`Rn>KLn0G/-$q\XF)p'jHbNS/5qP
%A]1HhD_EfAdCT.-RI69UihdMRI(*+f_FY@3/1uS-FK`YR/)McaL>d0tTU&7R%OJP$<X\_\1^;8Pp/=7$^c8YJ`=>%t"&>1#llrZV
%qU!Wd%%C$I2U=jsgm,m)5nl"aS3G&8U!T#S-MaLjF5J'oqWGbDhCEg2?pRqjON.J@QBKPu1-OS96FA2?C_UVVkEX*Q;(HUBk]O'X
%bPQXWC,'aS<NS*MSiQM]=sApSX<d+2G1m6@(tO<7IrOs#&>81Ws.i`tWgN1RP#Y2<U<Y8s\\1^6.In7Z]uKj`Ta6olWcsbf2;o=-
%2qk5784NcP4iQKTigaH0o_dcRcSnTTkL.@6kn>U;*ue7L4V<U!MHFV[1IRiY")hdsEY)mA%-<D:'/ifrAR2/q%EuN1aP:Zo(kB'L
%PE\ffR\+#$''KO6X;!G&_B>rQB2*%kY;#qPkYO:]\GK0EJ'm:([MjW-gGM5"eu8ZKbb2-4NfmWFNErrYGBeds_*;6N[(QAdGKig6
%pQ0oW6Th*WRk3a38r/fj:D<^*M]*i`96/IfQ0/YG:E*E__T_/Nga$.-G]SJPKYs'CJ"86^YW.2pIXIBBAG*"&B5q!X06hJtM&*Cs
%DX3!VXF%8D.\uO,_RQ]JA^$l^jp]+F9p2L#e4K<Qml-Q#lK1)58`"u=pX!W2ROo6H/^`KY);7QX,R],X2L<$iNS7sBCBdA<;"7qK
%-"p;Wl24GbOPP>e",@Z.WUMAK("70Gb[g=6T$"/LV,0gCM>.Kl&EL&0QeB,KSWpG+]c^b9TnggAP%!VS;9S`GSXGF)XB6es4,sA(
%9koMcju%$%hPc_C//f,jSXhDlk<5Aa<?eU(1`[M#..eR<pSr8:>E>oR*K])$/G\LMM@f_u/hN3K/C@.N6RnZ6lT-raC&-oi%$H+,
%YkJ73g[@Sah&`Wi,g-J2c3-CC=N;fu_V0DZ2l.NF.XmpS]I9!n"&4*EAiaN-2(?2H2VLJLq66dK3:C7S<70Ksn^Y]Q-LRc<aJP"b
%W&Y&?n^3fSgVUp1iq%S>5In2n=CCbZ/f9'<(74/FmF-K`Ha>75F6MZO)W-MZC7*1Y/.T%PDjns&'f*k2LfDZ/Wj!BsADa[+T\+Hh
%cGNk5V]"s#.F$3sDk1(*BkkrPP-Icacnn1XVjV[BKr-:nZC/0sXjAmn,?E$i;]\Y3f^7J21o31IQs-Dllipk73n'=!g+t8.'HW6f
%F_ZW-.3HiMAT"&BTkTCOL<Qbu[\g%&HDrbV:%?Wh"VRXEDoXh[Rndm[-5@"r7nDK2)6?arHQ5r\=qroAS;tQ7o2T2I'hH00Yr>Bc
%:IklZe-\oKps<gFo89U9S-]Dce-\oKf[\-]3jh<''Mt6`F_ZW-.@;&)ldQ89;qNp;@@^SqBhEN#1U0[uJ>o/p9iGE0YtgK@9<Q?J
%<a:>mMXWHDldQ89;`_n8@%CJpBhI%a^cM-Fk2'GT;OV_8Z'-A,LY,G/6aD#B&i$Ii""`Y+Au7"@H9E]m/.P.Ej)TE%/c5Y,h3\Hu
%1eh*[:cd0=AX^1uo$kdN$e(>9T;,%lSQ__$b,9p5R9?FgBUZdXg;5nY6IQWnG?\4J<bRpGk&,8+e.SXXW51=0C=5T;e@]KF.sjkE
%b*]&R38:jOF_ZW-.A)d5fuuLb6IV0[`Y=kDVd,[f'JhdcRS!k-c!IJ;"k2T_Q>EMb`](&M*=/?T%!/Q#S7u^sF3#]DAQ`7Fe\.o3
%c;uq\9i7+SR<<7uVC<UV)4"C&b5"^D>GkM8RNf`cF6h<_9iF7;L,(RNe-\oKR%Q%4;_'\!J^%eh]_NUC;a)KVK:-l)0`/`YZuEOB
%Be!Q<U`K%o05-fCk@pB-C5&N6T9c-ac8r@"dhIb\`&`VIa*q93RX,adJNVri86_V5gNJVhReJ=4\5jh3Djj:/Z#qajBkgn5@<'OC
%=%S_7cArMH4.0YR;sjc:=/MtnFkY8#A`7B8ml9Fb1o5I^G]92DDONn"]K8l62bc"0mG;j*]4m/dSfSoM]U>XSr)!kQKjGdtYj;RS
%S8k*6C+]\'At%/lFrhX$]UPefo(;3,jkVbi=uj5T:>)#3o$\Eolf43a9m&W@$fn*[O\KtERug+FeooTd2"^o^Jj"/j=0!K1X!?1Q
%dhGi&]fJo62bj,1Y2%Jd:;*5H\rRY9md4mr=@T7;.*["tG;*0n:kcH1LEjP;Kdr^X"N]tmhh"00!orOdca-F_UQJlSNr0<lT.F<X
%gFe./F^*>:<P1Vr1>Xe6Gho<E&up'1%k`n?()3e<7c=-a%oh><KIYO_SH1X:99saZ)&&\NWGL1UW/\e>!*gXu#'Ve!=dS*9Lcccm
%IOlpq/$sAj-luOLJN:Z[b(i%/A\<R>L#=1^"fr(Oh/3o)oK`dWYBe($`WuMRX1H0ZbT&j62Qa"d1Me'r=(>FSbf7ruF#Bh;X;'AK
%I]g\t%YcT?a%od6FW0%PBj+T^&(Zc5#[k`]8(G8s.MO_\cjK*MAm&3sDHFFjB,ObS*DcPaqB0:\2mBI7ca*CT)Q_URgemQp_d12%
%`0RJtk5oBdBl%hm$('7Q$'"t--X!Ig%eqI0WXqO!.?&q`dV]\)!q`:5%2ge-!WKW8ihMdZ1?NuFG*pn<"p`^3,TEq"X5)Z>kJjX7
%SW:^R1T7Xjr@G05b_Erh+c-q&+-VptW<aH\k&4'1IEHCj91RXe.uHB>?7*P/?;^>4mjVKu_T#nZ";:2D@7,(-Gu59(be6m'NM1>P
%>ki[Xe^YVqM3%_kR^u[U>&q*H?5)J@/_$o]*Aa2(h*Tp9hD#kW\Ss:4:^Zk#FmM7n6;22oQoD\8OmAtbdM*/tPMghb2fBQ:W+^qS
%ZnKK@<?OPtUW1oCTTNd\k[sn#VrL#_8^kH>MN'-nK6EFM6(Rjm^u6LNdA#;W\BHjr/EbV\q!Mae#tcXg)R6g?A#B7_Ds3'X_XN[A
%ZZ[2g@hrH];&@e9KB;fN=hBnC]Tk9-!s`=r^43&g$hH2f-3eM[1=e(`DJhq%1GQBbg#b'%*#qmcS'CD0@Km<s4X#:W'>qO()@+/,
%eHM>m&3@fI?s_;o9MFJS#hHhQO'Eh&BSKOTrOU$?;'=iZOf3`RK9qj0MP;#"308'Z$kQ/["(f[VYrrOHOo+f$n1#KeqhsQe/$XUb
%nMCIY(gkSO;_BV/PhC;#H=+Sljs0[*Q?RYa[t%m]H503Dp(f?S'"YT[e%<9s9JPCn)Sq`EJ,ou=21*$nd,f)LL[&<np&1c;:!6%9
%UK/F(BQ2Eue>VJ]#U.M_gsSniV\.R+C3@*2m]c9aQSX#/F$YIMKB1nD.1Rek_%\*?Nm'OO+=W3CEZERD.4SRd6D@P]W(9drpEk*/
%G#:bOF.YeVp`b%84jlG:%+\"g"XchfjEhW9O-[9#>C>IDUP29)M"54j[$n!el4C>_h(?KsVca2jE4+Mg0_uW-hTbh;DX<bCT"MEJ
%T<caB1GJt:oBEDIrbZ7p*t?.n0bZ?^0K^8K*5!+%j4=Wr]>R)0LlmP!>CHk%f6_jlB?WU<O*-;?R%6<bFbrV/9"Vl_?9YB$kDg[7
%$"3_Vc,CP=m`l;T#kJ)ul?.94,Q(3'[SRdC$Y[l]%_'e@q,G\TY$(bCIpi9+6pu2s!<.*H]1`CS(IU*e;=@78R!E*^W7CGl1Zmeg
%9?LZ#?c)XnQsJF=:TWhBS%d/jZQb#c?8l1H3I!LH'2%k`ahbST+"5BT-3mTVrFn!\)>*H5Ph/S=@$IR`S3)?e2KZ2^rL!Od,[+@f
%]>2^,T%$<'E]o[8:"$WlM3k+J9l`g0(a]8REu:ZDet*eMSLlAq6;i1AZ(5i+Z\9!lqEYnU>V%2Eq9U]2SDG5T).BV*)54nN=^,!s
%O)7Q-/nhJCJOZk38>9<mR#bQU9?goC$<(PN[P6uWnQSn'Bso]>Vu<KW=ls-V.o2S0ftp]ub-EJ&ltp0]1cKE2NQu'S>?GO4(N/CF
%2jr`-s5Y$!S($"F!C(hDnZ#0,=!K/L2JSC#?i)SZ5PK(e@cT2bGe*_D.4416ac)@3Z#VEk-$)pmq:@$XkDh%F*;UL.bR6N-;uX`C
%Ee4.NJU_*<,skdf99sJeLR.k]N-T-4=W.5p19[gl\#sIs=tEI/GpJJH%+$GW$g+F.)[YTCBrDin;r]bKLcY;aR&@r@,S381pH1<Z
%9;H&C&F69rc2RDL?M6@@BoHnNhI[El2A5ueFp6WT=-rsh8Dn]:<>\sj8ArZf%Uj7g_6DFgGu_3r$!W1h%,X2"L4!+<lI;K1H@lBa
%8-hDk7b_K*oaoN_K_]SI0#@n1!@-K$)'S#T`Z7f=O>ItA3E'%]=+e4nZ<8drTOQ7aMCC`%:a>.GcNRUlr\l"YIp56)8(TFR#m!EK
%'!>Z5M&OJS>n5373%u\$_:;W3`!dUo,OP59Z!mUJi95M6Y$j5;@FmWF3*_o`L&m8X?Br_W3H=M/=6CL1`Uf4qFud*UEfs@RY`45h
%GM(S92%%#$Ai9kFYQ3bJ3kK8:Tk=6`ZB?JaN]bS/2/EUY=1/1XT5bh<`]O[J9$'#49BJ]$f*J2KnS'+.]#Y`ZfrRY26]1jBk32Y[
%bg@/)`N/)?`s.+6oh;/#)3P<?(OBJq5m"t^:'$W8%)I:^nd5:7*QPsQ[;7ZFi[M!855GqkR@3r;h(sg"RXuLERd`@Ok7A;jOR++V
%CdG.H&U53>8r1bh\Xc-/UTde7(H:[/&F+=YSU`.@F[1"in^5Z:@S%BT'0%&c783Gt8!es,8[V%ZXR.pU,Q=Hqdodg5)K$`"Xp/#r
%KHq=(bYC""meOJ(]lg$,b/L5ZQ[=i:EDR!q5NHl<]UfESn`D;;#];d&MK@P@b[kPG%gm]6QqDTWdbOlb;Z1OVV(+l6&[V[E7Fjn`
%V:!XY'7ceA6,RCah\eYE$/pMh'3^9&al'I5BkT;S=jCTrda7.R_jegR:jU4[Bn=+#4q6p'jrE8MDM:j1r6DGVA!7"fHR9nM4:a!'
%\2KPCin@r^48S3f69u@e\ZS=`@_&f0bCOj1qn%LAf'W8VA@Kg)mk;GEo=c3ja"!Q2nBkW,7t!BYd$%fAW5o'94h6hO*[+[-I-)k7
%^f+KgmggXMeFmOt:4hA*!^NO+D?J_/ct.;]</$32:!#a!m3(hY@cDNfVi7/)/)PSlQ]s8qBJ`gd6YL1nYmQ#2@_iWSXMeh\H:$0H
%_5U47nZZ2'Big?^m#1d@<*r&G([[%$,E?7"MjLN@^.9*VN%6"84.^`F./s9[3!lq;Y(I`upa""rpdk)-(NGu(*@MAZ,)9;Vhi-+E
%._cX'nNLep$\4?nX1G%YL;cn`5gNUg]%,$AapL1Fa)M\[nN4A@aOsaP7ism=E_"hPCgoqY"!P#`%k5tOhhmRK+^EuMW$]c\_X'fH
%U%c]BVLGO9a4AY=A-TH&3VIrbE7(h^;;WIbNpSH1qFk?jpQ:!3`S>0FLk,S$_.B!]"+H()5_S=RD@:s3HS@0=I&-9eQsuN[\rMEe
%%1FbBY:GI'`_/Vg:#)]6.Gae42.`G5+C#`IMiSQX1(S)B1`[j9eXMff5K'Q.EHb'`j8@>AXfTe0/[Rr2[L@./].@eo*tuT8Ympn=
%$BoD9Vo&f9`q4ZTOi5SEN5KfdoC1QU<8TV^<sQ@V]+h;ee6gZCV3.Ok"E\EBW!LJ#@4>IA<!j;e<i5r$3,IW,jh]m[P/Z1EW/-l$
%.ocq-gs?NG-0B*,2$)8i^Qq\IAr'Nf/.$0jdGkgN=9r93G7$uZ*/0Vo"n=7b>6gpaiXie:E>ZTNBo!rN^I,XSq_]QX3*9"=[U6fP
%$1bKjhBVGFYd52*AGEI\kf7#(HMIN,GGSSB,YS$HkO9Q3'o03/EiG$!AREGH`>UZT&B#>](1hdScBn:7hcq?LZa-U#DY,!q]fj["
%:dO.U&Xa6!OdXU&F6@jh=DO(<m-66Bd$)`&ao/P'2Y1nZ$Va#&B$<t5UK>bg=Lc(!V'BYH%ruE.m>A>a]QsWSg=P)]./s!@B.D5D
%DmG@urPcDCI)]HHqu;^Im\Mqi)juYJ7dK1/8a#+/`UV@G=[Vkg>'!o+RuG$AqfKPqdHUS^q:F0>q;M!\kNo3'gLr/SbF=u(][Af&
%s3tbu_!Iu8(PU8$+hF4<f_tckkC!6_`e0WL#:lFAGE9Z=W!T^`YE(j=dQ+>uR^phN%XY3O2@KJnAm\R'Eqd^G_Kb\5K9aa$de2nT
%<r7luU4^=XpuLK#O-Q7no,?<$NHfV?-.cM\S!Vp.:D]TrX2i,G.B!XGP#\%5]&3%Ij.*/?UZ5-F>P\oocdD!Z\&Okl/(ohX"hQoY
%[=/(!A`WWorp?+;q(\d045.ofUXQF@<ct/@D<k;KpXQfXaGaTh@=+g]Xf4iUrQ@s;^WjNOH[bCZKorDH!8t>+qt^s@Js5<ke*igW
%20eV]TV%R?-=iUqZK8A>J)45RjFSN\.JF&^=0luCLP9IBA&Z(J69#6&s1nGM47Zk+PJ9:s<e^of[#-QhIHI!F8QV&:rhfP]eV+Gk
%4121TO7Wi="ad`[dKDAToZ@ks9q"?!lePWa4hfb#KRP_1T]!7sa8qJ,F-9GG%t8YA!2#,To7LD@*10L%jp/X^3Ii?70L,?_aajao
%bRYgH0mdheB'*^-5)YcofhX@]I^4:)2nQQ+^NIq1fi^LeYJj1bNu"V`jN1cL^OJ;T?@B/eouH(Np3p5nnf9TKGM]JbpiO3\]Xt_(
%llQ_RA_V,]a2^K8^a\Tg3CNPpDc7nU,u@6QpFbi9c11`KO/sEkj3:4JctM.B*%ND#kGDS'*5K?FXg[bGPPNkVPr'S_(9\r=>JcO!
%K#7K61kV\6n9=6sM-Km4qI*!],<FY+6pG"pad]I2RuYefBo=g)1UPk_O*q80eVn7K(W[X=Dc6;uZru7$7@:qSB5SKlULYToI=;e\
%Ho?]Q&<OcqRC@T/K7mq:qlE!\H)?%dY;_dA^FaV:G$BI\JLeb_^%TUO9LXo39ACAEKWePLNdh*hU9g"q?;g<4FYCbD^0bcEhPY(+
%?Y8r4l*[SU43X:B(H$q*H8U.C(b[?UEcSiB2\o3JS`o\.PC@7U/ue#G[d[tW3'/5.h[+M!X_>h/dBTO'.u83?W.M;(Z5E:>1"Y9b
%1[eZ":4)\FHV<7u[Z2HE=uCcc3hDpkCa&sqYC@\^h*pZ)q3bF6k2uB^Uh`_'8eKS54n0cj'u)n<'lOlnD:8+V4J0Jl`IF:\GVaVq
%mtk]%WG_0]2t9=HF1YN4\k[T6HJVh*OS;gVDn^R:]#mPas7l*F?aa9/Y$6n`jAK(&5X4W2rErsJWqo$]@E7g>V2jF>qMVtZ',JLl
%I(cBDLU"D;II%3lErDXgqW@Xj]i2H8b@B@t@n4DF4O6hgJ5ju.0J%Z;FQnJS.h%!p;:c+8\WrNM+&P8pE/#aH0<W+*QR8;%-Z&--
%msfb>SRA=WMDJYjR,0FoL4))*\i<YP"os&<N->H0<F[st>^i1;)'qrdXZn'*'9Q]fT@6^F*M0qRq)g`&rDUD/FonO)nYZe0b@Vhg
%=;U1UnS5LT9@j5q]nON-QoXP7)"nGjik0Js_a4pS\R*T0qSfB<aKHq?EjF*G_c3`Nh:t>RWH:UVCALC.?\o-*.lJ%L.B]9AL`FW%
%Eu<p8$-R^T]sJm5$C%bT1gqBK[sfYn9P.;V'1tsUbM^U^9kH(3n#pX\+\)$1o)4:;iUO$'rKmT![BIg?[,cf;R-;91C2VU@n?cMF
%XhPeK-D7ZBp"MDTD63JpDQ^"XK\j:h,XY'>/8eIn)L;^EBA\G[4BuP/*k,]VgR)-%I`db3Us6Jr>/.>Wn`2"26&CN?/Of^ZnuDM#
%Y-^a+O*b@q]2gR24s!EmF]F#/l#(eI`cj>.CB[=D0o$:gR@fB8_jU=4n(omZFO*PF0Nl-?"D%5d0cN'DK>d6f.T(]Xk-=@.ETGt0
%^NlomG-oiud[S:gCI\s-.rQKpXr[%57E;!sD#<-?'Qj@mgXB6kOgD9mR,5+`IG2fM>AUdm%151EZDi1gRmDu"<sDVhS^dg`HtY^\
%%#9`s;EN3s1]@WYr"%c$>WQR?9eO.>r7hble7lt:m#E^V0P.?ViREjp\Q_DOiVe.hnt)N#OEIa=_6KsmB_f0=GF*4b*\+iXQNH@H
%2aP2M$aBL)BqcYmTKqYWTc*g"Q7M$PG9R1DnU-Aco0#,;h%BW.<k^_M;k@o7@ldadr9BW4@Vg0JT@brlgqt#@>^u7+Y0QNl<l-MV
%h"=F"FOc07f3S>(co:g6@@,A[p;;-dAB;&o*U0bBh3Bi9D6N?AI^csFPte?^X_tiGl?f``MX!cMTDW[9e&0mp$0/R>_u@]0rV/Qq
%^&F]gW2U6R)W>64*QQ!/2:Ti\cgE+rkJ*?qVEu2?]f5dr3nMYk$T%VuF=6]uAOj_rCRG)^0@Dk-Co+Q_mm.9V@K3R@n5n8[k/0#j
%3bu9?$p.20A5dXa6`#!8_L0!Y@up2(00aolGD`4g/>CV%:VeW=]2Q'_WgWhPURo&=\aRr;.4C?@2u-Dd-7gr%WQYPV#1oJ;jpY6P
%r;C:@_9FQf\L+r<GE'1k8)G_D=?ZQBh^0iDQm*99X(tX?^);E&l5Uh:[1E9$W/6ftm(Z*idm)<o_0FPhENC3j9l5A"\Mq6MnGT#r
%-5p`L`:]h3G]C-3I!Bd]IWf]#:Lhu&hJT`.D6>^-)i"0@@fF%qXu)#"-uS^E$$2+%60n>TjBg><e3Dgh4`^"HroL!Qd>ZS)3H*PW
%"KV@[WTLVBWlG)&Va&]&=2bbe(=r8m_4nqMj8ElFpb\^i'Q>7cWJKPgABeB!U2fI\Gh-DN.N7]:HSLSN>VOib#`[S=4@L_rrE?>*
%hG'^DP=iae9&#):(_sBU.5U,PL(mFAU.Xgqa95FP*tTmoHlcZ3`_<<`-ijCGT$IYCA`Q2C54oMEe:lAhm)GL5brkS%lI;_Sj7RE(
%0FO"BJ/ta2Y6WjJ3QmX/"i*Ol`p3_N@?r+@!'=@C?4XOrEun>4M:R[<#O]Hf&XDp!Osc!L!Y9"2ZU4**MP)LmQ*p]D&Hg[7QjHlP
%)I=\D^jRmME15DJ+u'5gK,K5#McI7,=c&K$!H:9I"<=`d?6k9@I4u=RQIbOL0a-os)1_r-<F-jR_#5r#E1Ae^%!dsP!r'N)^q!G*
%,iD+##i#Zk[q=@UZEbsOG$,Q<g-rDeXXn5.K;$jJeH<q^+1(iJCg<p2V-'Z6M"")pQVPPBMA.pO]$a5QI-F>G4<C#92U=R0rWRu7
%lMTW`,4J&p[p;,.3^,M`5.E^=4+bm8c2:RQ'n;:32!C,YW%gK`Gl+A&8TdftapHNfpPbeVG-?SXp1CYC1V7F/;`;6X>'#%sq43r0
%/,Le6hE1PE^$4PE9^eAoQArX&7D->0o$5JJS]R2A^F>;Y^%q3SRGTgX/t7>X\p\qsP<1S8pTC0"r_8l6gRFhlSbYGC/nOWmfXfkp
%r9V_QYM!>1\W5g$p/`fSEF3;uaR]8S/baI4@!Z1L5VtZ4*\>FD]B$,4Z\mo>ZW/=CbKPU,Is4Ijh3Ju(mq5!^k*MJ@1]Qm+]t01f
%R,?N(+3b=`#;cDJ'#(s;#rKDh_[/*5bWM9gGF.gL*MT5&r>_Mmq.8^)beLcCYO8=objXkj#L*dH#;cDJ'#(pZ.5\f3j!Z[tbWM9g
%GF.gL*Libur>_8gq.8^)beO%.n%[g4cSlgDo.8<KODXGX2j2TIMVQ[;IPRF#7dd8$3ZGW=Xn,9N4*/%/r.aY:VA^^\8t;!O6rN_i
%3G[\q1D+?TLkTE^"oKC4%oj;"<3laP/5ZBZQ)3[k8BRAmUo"NOa9*m%CP%Ed9+jJm[OdKp>BAr&MCU>aR&8,!GS[0]AO5#Elrck1
%;#h2nV0Ebf;,bE)Kc)C6_.V(\@S$WW^_U_ED;sW+I,'Y[q/J(a$uh_I(f/[-Upb?mmeQO$/s:H8f![9(1e!^M7:DL=EG7Gkq+s!_
%bpX;Q-5OD$OsJK^89$H7p37]o+=Zt%OZLFF"u'VXCcJYdldL,+h0t)LRIs4M'3h0(AR_&a\)DjM/RPC"N6;i4;MN$NghUFl8q?G+
%#GP0G8]#,rLt!Rp:mbVlS&!H?Y7V3j;KnFfU]aXrCJSE4KsXN)iKci/J?abV(R71JN\qm_T2X>I8NE_?+>PE>_Ik)"eT"9&!)p<4
%/5<YmBqA6W'.L8MaAN61UAW"bYp?du#mD5?'R)$"9M$*+T6%2u,me1Yd=DR0QA!Sq&ZJ,kTJ41b2PHu**[^ge9?C[A1DjjF!-_k;
%M5B9U&q)6pk]k#k!Z4dtA/YItBehI]%O;K/V-YBELR@W4VJHoJRO.ek8c&sL,<$ksf<S=HVW=4AN&/W[G>Rq5jf;N?2T+L@U&ZMi
%8MZ9U`*k,=O@5B\iNm6Ol8YXdJ194UQKC(:d`>Pu,iqX!`LK5%,Ul(7pqgYg5D'Mg9M$*+Sl*q0m8HA]W$6hhU+?VCFX'e>R*Z%j
%$#Dq$D'8Up09U;&bVKM5RT=JK?iJi]<^[m9N_'@-U*Ri;Z6Ykq$&#0UOQ=a$UlJs-".6Agel&XdV8.G?KPnj'3`Y`W*m)cU\R%0e
%hTOHd>)$IZpC[efc@MWuU*S'3SN;c[%:IU&n)[6-*:_N'`LnF8ke.8H,0Srgcd@)&q'?l*:;'+G3]O'o+R"%ua`Da*Nai]5R(t&Q
%PV\gQa\jBQTH]FNF3"qS_kl&.:G?i4VRR%eceN:=,_7Eh80!sBiNmDil4=UYN%ffWBPD)FcT&lmOdHS3Y*(=!6u[P!mF%N9OQ.g-
%KAdq"*l.9.,h!#idKZ'@d21'A,^_M0:`[T@"YaMW^f$:o`Y;!((a9I1</A\aWb"7/;\90e;.WF`KS)Q51gD0F+&c(X0dQio;E(K$
%qD?JBV]I8f'dX%g5t`.[-2ABe:4?B$_.R[)6W/po;R!L5,_$^WFW?Sn_ZVlKV6TQ)*[T*YOT[aA*^a?)#VL)+bUeNg4s_Aj4JoUs
%K?oD+#Y;2soK_t4Or#K@*FqKj&LO^g/^5s\BM=O6?nc$s$ucFm`u#*3dkQOn1%>6uQR%tg5Y>E<*(Ui9nf5KF6VLV_;mlu`9sd^^
%;gXYU=gU[m6-Ve&LY=6D(bfbg&]b%gX[N;Bk-:=NoRPj[pDR1tEmuZ&RKYu&%qQp'1ddNJ)li:u6L2GP'^mO$$BFqr7uV8ac;bW,
%1*o9M,)2)T$uYj%U,>fkSP=?b/]g=-8)^VE,>+H2'9iu\Z:(E(M4g6V-7_odNF9AiW(R5:=s?QU."*LQ7i^qA\6`r%O)UkU6<`][
%,pAMJGcp%^.1DMpat")fGB&K`Ro:B%.Q2nG\PD&k4`[tEO_8@>RKlR]ne=N'aHLq=,W>Vmf]!6;*(W3!Q!HXcW%^P82j-SD[n/;`
%Eu#ou`C@3tLKIs.q)f8>"DJl6cQK<`$sY='+@:t:,aULh&t>gbM*ReL843K=8l/48Wui]$.Ae7<k1K53<+r&7>stYDVkLZ\Zp]RH
%6:;-5'tT]e,k-%"-mA[XlI]2BM?OVe6Quk!=:RsCTgY]DL8^JL9.Ni4NF4i#1.&*[%bGP=&N4g4-&,E/f`^?V!u.jD@i2#_(?H^(
%UZAR$&Z+@BBnZjcnk^N.N'pXhZ,IHVcpk719=SY9\H1COLaaaR1?/eTf8AJpH"'R5*.jF-=;F4`9'/!!U<5tk@>'M@-kRo>+XuR+
%A-c2?&Sr6bk_V=V[^J8,A.ROMSi<a,bd%NeTa7;.9eoZbfm"E%3=>?r&lGc6`_d%7T1YCq,"4F9`>k?QTdhsPmE/G%^qeK%3+<5!
%I%g-7,=8$!=V3[bA1m_#nmW;VCe4n$'U3iU93?bd+\2nhPG(C?k_>lMYrR^RWa[4**d`o8[M)N$mC8BO1eN(slSQG3ag&f"W3D`0
%1aF7oN)6bf--![dW#2d"M\)mt,M8SUXtqN`*Do(`.NaE5`NY4uf9m>$.a<^a+uWSTP(?$MOGF2GWImen&lYtW.>DY6H%`3MLplJ(
%5#4Ree0GKO5"TL:?3OWmo80D2M&N"16l[b0,%i6Z^<`!PN\.G"Kf4PMBa3Z4&U3:'Li=c:<Y8G+E`aYVM@2rB/QF69\3)ZUJ`;5K
%du]@u"q.,(65E*;MJ3?RH#-Ue.^Te(f</RWnE,!d`5u0ZO0Ljc$!d@g/\(B6H0*]0G/qTP:b7]A)A3W0B7e9;-o(JYGuDkkV%orU
%7^,%2S4Bb<A@j'5bt+2N5k:^P8h2$NaPlBG6Rq6'YlKR`dS)G@k"8e(E&_T4$cF4-ZpUr8>8e]>elf&Mb4MM""I;sePt+fUnqL*m
%UIgdU9.Z9+Scg#>A^s[=P=`JO2AQ:t5alDA7$Y3b82M:rkFjl2R!,En@nT1bcoSD"V<Iq>NO;:#oFOT[?m$b]8MZ,B$$Esm!lL2R
%=9-8@Br2a\Fm9n2:NIZhj.SH.R!,En@nT1bcoSD"UCY;J)f%qXAr&GC;N/<3dH+i@o/V,o@q,NN$`'2&6qltR3Lm/p0([eZ<lC;Y
%8>106[E,R?d'MF<Xg0Fgb0!`mW\!eD<]OVo[T`/#L^2@%1EqFR%O\<5o;m+=&R-"pL":h*&jGl]QNLL/4ebOlP[g_aL@*M*Q:Zd\
%*,[X!;Sj822BDkg5alCV7"&XAF=!G.$H6S=f+,3/CfuQ.=pJ*KYbhe4lsm/@6tsLmL?(Uq(dW.n*+#;WOD9#V+oi7,1t.D>WJsB&
%P?#P4?9?Smf^]S&Zjs04,<O)j82q-(6tRE;V)q@nX*TfAQ]`%C,3Nu<XQJB,qeS"fP(>I=N/4b398A^1`-G"1dgFcuhLJS1%]mrp
%.`kV%[3N[\=^?KQ\eSsg%6h?um`pH\Xp%I`[N8XX#'/%hf8PMGkR';PpJ>+oP>NjNk4AkRMKN<L%V_VC/hfB[Lh`Y]b1`nGL!Lsd
%,dSIN,0CUr.3m3n3jtgmjIV(WN/5UcNNRqu<5c?-*`":sF*[pd`Ob/8QU_NW[9PFCeT/XU<6H"D;_;&Z9sn4\1t?WccrA1'6W5R<
%$r+-70f7F$`R%T-'gknO<t%g2>VS(cElHC)b8!BC/QW?l[9PH)eT/V?=3D=G>V0"cEOB%+`78nI&6I$i6X23E$ur[[0uVU_`=Q+o
%'gl4X<t')V>VX1IElASkb8!BI/QW?l[9PGNeT/W*<m)4F=Y3\`A[PbtPgsfn:fbaS6Wl!B$tZi:pSF+Bg#o<5?DfgQ[MMRL_H,U%
%[2`HDCM;5)9hg%6\$)nRm$gHLr.=V")b('ZGKGBmAmY9ke,RLuI+E`)WV7.'$qA2BWhXjs93V'qV;8mpFFa*%HJ^k7lq+\-36`fH
%efi?ZWD+Y[?oOuSfWpP"2nd]ESc>*2<c'M+lQfQX5+.a/cHP)=IS"-X/?,L)omc)rP'iAC9Cff(08X2V<:VNg8E@$23n(ht[/eja
%@8W3<^KXU^!kc]L-)2m;3MG/'.iA1.gc2XD8;boO'#*52^8JtW*#s,#]Jql7dJ\0/H16<S`kg?]q:3;]kI^Rhj634YWM6KC\GUCH
%\#/@Ye6m*/p%d=_]mg+h?(o[~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -75 2018 a Fc(Figure)19 b(2.)f(T)-6 b(emp)r(erature)18
b(dep)r(enden)n(t)f(signal)i(as)f(a)h(function)e(of)i(temp)r(erature.)
32 b(A)18 b(linear)g(\014t)g(of)g(the)g(data)g(results)g(in)g(a)g(prop)
r(er)g(calibration.)-75 2109 y(A)25 b(resolution)i(of)f(0.8)h(K)e(is)i
(ac)n(hiev)n(ed)e(with)h(a)g(1)g(s)g(in)n(tegration)g(time.)769
4045 y @beginspecial 0 @llx 0 @lly 519 @urx 415 @ury
2834 @rwi @setspecial
%%BeginDocument: figs/fig3.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig3.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Guillermo
%%CreationDate: 12/27/2018
%%BoundingBox: 0 0 519 415
%%HiResBoundingBox: 0 0 518.0821 414.1963
%%CropBox: 0 0 518.0821 414.1963
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 10882 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0AFFA87DFD2FA87DFD0DA87DFD2BA87DFD09A87DFD0AFF7DFD19
%FFA8FD5AFFA8FD0AFFA8A8FD71FFCAFFA8FD0AFF7DFD05FFA8FD0DFFA8FD
%05FFA8FD07FFA8FD0DFFA8FD0FFFA8FD0DFFA8FD0DFFA8FD13FFCAFFCAFF
%FFA8FD0AFFA8FD18FFA8FD5BFFA8FD0AFF7DFD13FFA8FFFFFFA8FD43FFA8
%FD11FFCACAFD05FFA8FD0AFFA8A8FD6BFFCAFD07FFA8FD06FF7D7D7D527D
%FD05FFA8FD11FFA8FD09FFA8FD2BFFA8FD1BFFA8CACAFD08FFA8FD06FFA8
%52A8A87DA8FD68FFBCBCFD09FF7DFD06FFA87D7D527DFD05FFA8FD11FFA8
%FD09FFA8FD2BFFA8FD19FFCAFFBCC3FD09FFA8FD09FFA8A8FD16FFA8FD4F
%FFCAFFFFCACAFD09FFA8FD0AFF7DFD13FFA8FFFFA8A8FD17FFA8FD0FFFA8
%FD1BFFA8FD09FFCAFFFFFFCAFFCAFFFFFFA8FD04FFA8FD0AFFA8FD16FFA8
%FD4DFFCAFD09FFAEFD05FFA8FD0AFF7DFD13FFA8FFA87DFD44FFA8FD06FF
%CACAFD07FFA8FFAEFD06FFA8FD0AFFA8A8FD14FFA8F8A8FD48FFCAFD09FF
%AEFD09FFA8FD0AFF7DFD05FFA8FD0FFFA87DA8FD09FFA8FD2BFFA8FD11FF
%CAFD09FFA8FD0AFFA8FD0AFFA8A8FD5DFFCAFD09FFAEFD0BFFA8FD0AFF7D
%FD05FFA8FD0EFFA8A8FD0BFFA8FD2BFFA8FD0EFFCACAFD07FFA8FD0EFFA8
%FD0AFFA8A8FD13FFA8FD4FFFAEFD0FFFA8FD0AFF7DFD13FFA87DA8FD43FF
%CACAA8FD07FFA8FD10FFA8FD0AFFA8FD13FFA8F8A8FD42FFCAFD05FFAEFD
%15FFA8FD08FF7D527DFD13FFA87DFD3EFFCAFFCACACAFFFFFFA8FFAEAEA8
%FD14FFA8FD08FF7D527DA8FD12FFA8A8FD1BFFA8FD1BFFA9FD07FFC3C3CA
%FD06FF5E33AEFD14FF7DFD08FF7D7D7DFD05FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFA8A8FD08FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0BFFA8FFFFFFA8FD
%0BFFA8FFFFFFCFFFA9A9A8FFFFFFAFFFCAB5B5FD05FFA8AE835EFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FD0AFFA8A8FD49FFA9FD07FF
%CAFFCAFD05FFAEFFFFFFAEFD15FFA8FD0AFF7DFD05FFA8FD0DFFA8FD0DFF
%A8FD27FFA9FFFFFFA8FFFFFFCAFFFFCAA7FFFFFFA8FFFFFFAEFD16FFA8FD
%0AFFA8A8FD11FFA8FD35FFA9FD07FFCAFFFFFFAFAEAEFFAEFD1BFFA8FD0A
%FF7DFD11FFA8FFA8FD1BFFA8FD0FFFA8FD05FFA9A9A9FD05FFCACACAFD04
%FFA80A83FD04FFA8FD18FFA8FD0AFFA8FD10FFA852A8FD31FFA9FD07FFCA
%FD07FFAE83FD1EFFA8FD0AFF7DFD10FF7DF8FD31FFA9FD07FFCAFD07FFA8
%FFA8FD1EFFA8FD0AFFA8A8FD10FFA8FD30FFA9FD07FFCAFD05FFAEFD23FF
%A8FD0AFF7DFD05FFA8FD0BFF7DFFA8FD0DFFA8FD1FFFA2CBCAFD04FFCACA
%FFAEAEA8FFA8AEAEFD17FFA8FD0AFFA8FD0AFFA8A8FD0FFFA8FD2FFFA9FF
%CACAFD07FFAE83AEAEFD25FFA8FD0AFF7DFD05FFA8FD0AFFA8A8FD0FFFA8
%FD1BFFA9A9A9FFFFC3B5FFCAFD05FF5810A8FD26FFA8FD09FFA8A8A8FD0F
%FFA8FD31FFCACAFD06FFAEAE83FD27FFA8FD08FF52527DFD0FFFA8FFFFFF
%A8FD26FFA9A9FD05FFCACAC3FD05FFA8FFA8FFA8FD0DFFA8FD18FFA8FD08
%FF527D7DA8FD0FFFA8FD28FFA92BA9FD06FFCAFD05FFAEFD2BFF7DFD08FF
%7D7D52FD0FFF7DFFFFFFA8FD25FF7FF97FFFFFFFCAFD05FFA8AEA8FD13FF
%A8FD18FFA8FD0AFFA8A8FD0EFFA8FD28FFA9FFA9FFFFFFCAFD05FFA8FD2F
%FFA8FD0AFF7DFD05FFA8FD08FFA87DFD11FFA8FD13FFA9FFA9FD05FFCAFF
%FFFFAEFFA8FD09FFA8FD26FFA8FF7D7D7DFD06FFA8A8FD0DFF2727FD2CFF
%CAFD37FFA87DA8A87DA8FD05FF7DFD05FFA8FD07FFA8A87DFD11FFA8FD11
%FFA9A9FD04FFCAFFCAFFAEAEA8FD0DFFA8FD26FFA8A87D7DA8FD06FFA8A8
%FD0DFFA8FD21FF55A9A9FD05FFCAFD05FF83FD35FFA8A85227FD07FF7DFD
%05FFA8FD06FFA852FFA8FFFFFFA8FD0DFFA8FD0DFF7FF954CFCAFFFFFFCA
%FFFFFFA8FF3333A8FD0DFFA8FD0DFFA8FD18FFA8A8525252FD06FFA8FD0C
%FF2727FD22FF55CBFD04FFCAFFFFFFAEFFFF8358FD35FFA8FFA87DA8FD06
%FF7DFD0DFF7DFD05FFA8FD1AFFA9A9FFFFC3FCFFCAFFFFFFA8FFFFFFAEAE
%FD1CFFA8FD18FFA8A8FD09FFA8A8FD31FFCABCFD04FFA8FD3BFFA8525252
%A8FD06FF7DFD05FFA8FD07FFA8FD13FFA8FD09FFA9A9A9FFFFFFCACACAFF
%A8AEAEFD15FFA8FD1BFFA8FD0AFFA87D7DA8A8FD06FFA8A8FD0BFFA8FD1D
%FFA9FD05FFCAFFFFFFA8FD3FFFA8A8A8527DFD05FFA87DFD0CFFA8A8FD1B
%FFA9FD05FFCAFFFFFFA8FD40FFA8FF527D7DFD04FFA827A8A8FD0BFFA8FD
%1BFFA9FD05FFCAFFA8AEAEFD41FFA8FFFFA8A8FD04FF522752A8A8FFA8FF
%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FF
%A8FFA9A9A8A9FFFFA8CAFFFFA8A8A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA87DFD09FF7DA8FD0AFF
%A87DFD14FF7FA9FD05FF7FF9A9CFFFFFFFAEFF335EFD42FFA8FD0AFF7DFD
%0AFF52F8FD07FFA8FD0BFF7FF955FFA9FFFFFF55F9A2FFAFFFA8FFFF8383
%FD29FFA8FD18FFA8FD0AFFA8A8FD09FFA8A8FD14FF55A9FD05FFCBA3FFAE
%FD05FFA8FD43FFA8FD0AFF7DFD05FFA8FFFFFF52A8A8FD15FFA8FFFFFFCA
%CACAFFA8FD07FFA8FD1BFFA8FD1BFFA8FD0AFFA8FD0AFFA8A8FD07FFA827
%52FD15FFA9FFFFFFCACACACFA8FD4BFFA8FD0AFF7DFD05FFA8FFFFFF7DA8
%FD11FFAEA8FFA9FFAFFFCAFFA7A0A8FD25FFA8FD26FFA8FD0AFFA8A8FD09
%FFA8FD11FF8384CBFFFFFFCAFF84336EFD4DFFA8FD0AFF7DFD09FFA8A8FD
%08FFA8FD07FFA80A58FFCAFFCAFFA8AE0AA8FD34FFA8FD18FFA8FD0AFFA8
%FD1AFF55A3A7FFCBFFFFFFAEFFFFA8CAFD4DFFA8FD0AFF7DFD09FFA8FD09
%FFA8FD05FFA9F923BBA8FFA8FFAEFFFFFFA8FD35FFA8FD18FFA8FD0AFFA8
%A8FD17FFA9FF7FA2BCFFAEFD55FFA8FD08FF7D7D7DFD05FFA8FFFFFFA8FD
%0BFFA8A9A9FFFFCBC9A8A8FFFFFFA8FD2BFFA8FD1BFFA8FD0AFFA8FD09FF
%527DA8FD07FFA8FD0BFFA85E84FFFFFFCAFD59FFA8FD08FF7D7D7DA8A8FF
%FFFFA8FFA8A8FD04FFA8FFFFFFA8FFA9A80AAECACAA8FFFFFFAFFFFFFFA8
%FFFFFFA8FFFFFFA8FD0BFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFF7DFD08FF7D7DA8FD07FFA87DFD09FFA9CB7F84CA
%CFAEFD5BFFA8FD0AFF7DFD07FF52F8A8FD05FFA9A9A9CBA2F908CFAEFD17
%FFA8FD09FFFD06A87DFD1BA87DFD19A8FD0AFFA8FD06FF7DF87DFD06FF85
%2BAFCABC5485FD23FFA8A8FD0BFFA8FFA8FFA8FD0BFFA8FFA8FFA8FD07FF
%A8FD05FFA8A8FD08FFA8FFA8FD0AFF7DFD06FFA827FFA9FFCACBCAFF30F9
%7FC393FD25FF7DFD05FFCAFD05FF277D527DFD04FFA87D52A8A87D7DFF7D
%7D527D5252A8FFFFFF527D7DFF7DA8FF7D527D27A8A87D7DA87D7D7DFFA8
%A8FD0AFFA8A8FD05FFA8CF7F2B7FFF54C5833359FFCFFD26FFA8A8FFFFFF
%BCB5FD04FFA87D52A87DFFFFA87D7D52527DFF277DFFA87DA87D52FD04A8
%5252527DFF5252FFA87D7DA8A8A8FD0652A8FFA8FD0AFF7DFD06FFA8A8A9
%F97F5AF96ACF0AA8CAFFCAFD0DFFA8FD17FF7DFD04FFCAC3FD04FFA8527D
%5252A8FF5252527D7D7DA8527DFF7D7DFD0452A8A827527D7D7DFF5252FF
%FF7D7D27A8FD057DA852A8A8A8FD0AFFA8A8FD05FFF8A8FFA9585A55C4A8
%AEFD29FFA8FD0EFFA8FFFFA8A8FD0BFFA8FFA8FF7DA8FD16FFA8FD0AFF7D
%FD05FFA82754FFA93358CAA7FFA8FD11FFA8FD17FF7DFD39FFA8A8FD0AFF
%A8A8FD05FF54F97FFF83A8FD2DFFA8A8FD0AFF7DA8A87DFD05FFA8FD06FF
%A8A8A87DA852FD05FFA8FD05FF7DA8A87DA8FFA8FFFFFFA8FFA8FFA8FD0A
%FF7DFD05FFA87E2BAFA8A8A8FD07FFA8FD1BFFA8FD09FF7DFD04FF552BFD
%04FFA82752527DA8FFA8A85227277DFF527DFF527D527D527D7DFFA87D27
%5252FF5252FFA8525252A87D52277D275252A8A8A8FD0AFFA8A8FD04FFA9
%A9FFCAFD30FFA8A8FFFFFF2B2BFD04FFA87D527D7DFFFF7D52527D7D7DFF
%27A8FFA87DA87D5252A8A852527D7D7DFF5252FFFD047DA8A87D7D527D7D
%7DA8FFA8FD08FF7D7D7DFFFFFFA9A97ECAA8FD0BFFA8FD25FF7DFD05FFA9
%FD05FF7DA87D7DFFFF527D7DA87DA8A87D7DFFA8A87D7DA87DFFA8527DA8
%A8A8FF7DA8FF7D7DA852FFFD04A87DFD05A8FD08FF7D7D7DA8FFFFFFA1A1
%CAFD32FFA8A8FD10FFA8FD10FFA8FD16FFA8A8FD08FF527D52A8A8A9A82A
%24FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFF7DFD39FF7DA8FD08
%FFA87DA8A8FFCAFF2A2BFD33FFA8FD0BFFA8A87D7DFD05FFA8FD06FFA8A8
%A87DA87DFD05FFA8FD06FFA8A87DFFFFA8FFFFFFA8FFFFFFA8FD0AFF7DA8
%CAFFCAA27DFD1BFFA8FD17FF7DFD04FF5810FD04FFA82752527DA8FFA8A8
%5252277DA8527DFF527D7D7D277D7DFFA8A8275252FF5252FFA8527D52A8
%A852277D525252FFA8A8FD0AFFA8CAFFFFFF7D7DFD33FFA8A8FFFFFFA8AE
%FD04FFA87D527D7DFFFF7D52527D7D7DFF277DFFA87D7D7D5252A8A85252
%7D7D7DFF5252FF2752527DA8A8527D527D7D7DA8FFA8FD0AFF7DFFFFFFA8
%27F8FD0DFFA8FD1BFFA8FD09FF7DFD0BFF7DA87D7DFFFF527D7DA87DA8A8
%7D7DFFA8A8FD047DA8A8527DA8A8A8FF7DA8FFA87DA852FFFD04A87DA87D
%A8A8A8FD0AFFA8FD04FF5858FD33FFA8A8FD21FFA8FD17FFA8FD0AFF7DFF
%FFFFA8FF83FD33FF7DFD0DFFA8FFA8FD0BFFA8FFA8FFFFA8FD0CFFA8FFA8
%FD09FFA8A8FD0AFFA8A8FFFFFFA8AEFD33FFA8A8FFFFFF7D7DFD04FF52A8
%527D527DFFFFFFA87D7DA8FF7DA8FF527D7D527D52A8FFFFA87D7DA8FFA8
%7DFF7D7D5252A8FF527DA87D7DA8FFFFA8FD0AFF7DFFFFFFA8FD1DFFA8FD
%17FF7DFD04FF5227FD04FF7D7D7D527D7DFF7D7D5252527DFF277DFF527D
%7D7D27A87DA87D7D525252FF5252FFFF7D7D7DA87DFD04527D27A8A8A8FD
%0AFFA8A8FFA8FD36FFA8FD0AFF7DA87D7D527DFF7D52FD047DFF52A8FF7D
%7D7D527D52FFA85252A87DA8FF7D52FF527D7D52A8A87DA87D7DA87DA8FF
%A8FD0AFF7DFFA8FD37FF7DA8A8FFA8FFA8FFA8FFA8FFFD05A8FF52A8A8FF
%A8FFA8FFA8FFA8FFFD04A8FF7D7DFFA8FFA8FFA8FFFD05A8FFA8FFA8FFA8
%FFFD04A8FD0AFFA8FD3AFF7DA8A8A87DFD2BA87DFD07A87DFFA8FD0AFF7D
%7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87D7DA8A87DA87DA87DA87DA87D
%A8A8A87DA8A8A87DA8A8A87DFD05A87DA87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA87D7DFD04A87DA8A8A87D7DFD0DFFA8FFA8
%A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8
%A8FFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FFFFA8A8FFA8
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A8A8
%FFFFFFA8FFFFFFA8FFFD05A8FFA8FFFFFFA8FD11FF7D52FD0DFF27A8FD0B
%FFA8527D27FD0BFF52A827A8FD0AFFFD0452A8FD09FF7D527D52A8FD0AFF
%7D527D52FD0AFFA8527D27FD18FF7DA87DFD0BFFA87D7DFD0BFFA87D7DA8
%7DFD0AFFFD047DFD0BFF7D7D7DA8FD0AFF7DA87DA8FD0AFFA8527DA8A8FD
%0AFF7D527D7DFD17FF7D27A8FD0CFF527DFD0CFF7D7D27A8FD0AFF7DA852
%7DFD0AFF277D5252A8FD09FF52527D7D7DFD09FFA87D527D52FD0AFF7D52
%7D52A8FD51FFA8FFA8FD0BFFA8FFA8FD0BFFA8FFA8A8FD3DFFA8FD09FFA8
%FD36FFA852FD3BFFA852FD067DA8A8A8527D7DFF7D52FF7D7DA87DA8A8A8
%7DA8A87DFFA8FFA8FD057DA8A87DFFFF7DA87DA87DA87DFFFFFD057D527D
%7D7D527D7DA87DA87D527DFD3AFF7DFFA85227FD04527D27522727277D52
%A8527D277D2727275227527DFF7DFF527D277D2727525227FFA852277D27
%527D277DA8FD04522752277D7D5252522752527DA87D7DFD39FFA8527D7D
%7D277D277DFD0552A8527DA852527D527D52527D7D7DA8A8A8FF7DFD0852
%A8A82752A87D525227FFA87D7DA8FD047D52A87DA8FD047DA8FF7DA8FD3A
%FFA8A8FFFFFFA87DA8FFA8FFA8FFA8FFA8FF52FD07FFA8FD05FF7D52A8FF
%A8FFA8FFA8FFA8FFFFFFA8FFA8FFFFFF7DFD0DFFA8FFFF7DA8FDFCFFFD18
%FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Artifex Ghostscript 8.54</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2018-12-27T13:02:24-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-27T13:02:24-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:MetadataDate>2018-12-27T13:02:24-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUi8zWtrdX3l+C6&#xA;hSeBtRflFKodTSwuyKqwI64qi/8ADHlr/q02f/SPF/zTiqjaeVPLEdrDGulWZVI1VSYIjsAB1of1&#xA;4qrf4Y8tf9Wmz/6R4v8AmnFXf4Y8tf8AVps/+keL/mnFVGbyp5YaSBjpVnWOQsv7iIb8GXwHY4q3&#xA;c+X/ACxb28s7aRZlYkZ2At4qkKK7fDirVn5T8vQ2kEL6XZM8caozfV4tyqgE7riqt/hjy1/1abP/&#xA;AKR4v+acVUbbyp5YjjKrpVmQZJG/uIjuzsx7HucVVv8ADHlr/q02f/SPF/zTirv8MeWv+rTZ/wDS&#xA;PF/zTiqjc+VPLEkYVtKswBJG39xEN1dWHYdxiqt/hjy1/wBWmz/6R4v+acVd/hjy1/1abP8A6R4v&#xA;+acVd/hjy1/1abP/AKR4v+acVUV8qeWBdSSfoqz5NGikehF0UuRtT/K8MVVv8MeWv+rTZ/8ASPF/&#xA;zTirv8MeWv8Aq02f/SPF/wA04q7/AAx5a/6tNn/0jxf804qo2nlTyxHawxrpVmVSNVUmCI7AAdaH&#xA;9eKq3+GPLX/Vps/+keL/AJpxV3+GPLX/AFabP/pHi/5pxVRm8qeWGkgY6VZ1jkLL+4iG/Bl8B2OK&#xA;q3+GPLX/AFabP/pHi/5pxV3+GPLX/Vps/wDpHi/5pxV3+GPLX/Vps/8ApHi/5pxVRh8qeWFknYaV&#xA;Z1kkDN+4iO/BV8D2GKqknlzyvGhd9LslVepNvF/zTiSkRJNBKPMfl3RH8v6pJHpVpAiWk7K31eIS&#xA;EiNiCPh+D9fyyPNs2j5n7P2/d72V5JqS/WPMOi6MbMandx2zahcxWVkjVLy3E7hI40VQWJLMK7UA&#xA;3NBirHF85+Xdf1/SLXSriSaax1F/W529xArL9TvoucLzRxpMnqQuvOIstR1xVmeKrY6mNa9aCta1&#xA;6e4BxVdirsVWtXknz36+B9sVQ1/8T2kHaWdS1NyBEDKD/wAEig/PFUXirsVWx14mvi3WvifEDFV2&#xA;KuxVbJXiKeK9K+I8AcVXYq7FXYqtFfUbwoPGnU+1MVXYq7FXYqtjqY1r1oK1rXp7gHFV2KuxVa1e&#xA;SfPfr4H2xVdirsVaZgqljWg3NASfuG+KQLQcepwSSPHEskktTxQxyL0+E1LqoAqD3/pkeMNx08hu&#xA;aA94/QrpAxcSTHk43VB9hP8AV8T/AJR/DphpgZ7UP7fx3IPzP/yjWrf8wdx/yabC1pliqVeZNC/T&#xA;VlbW3r/V/q99Y33Pjz5fUrqO54UqtOfpca9q1oemKsJsPy/utF8x6NPeamt7B9aez06OCGS0kitx&#xA;BqFzSaUTy+q9ZgvJVjFB9nfFXpAiUAAFtqdWY9KeJ9v864qtjij9JACePEAUYgUoelD74qv9Na1q&#xA;fH7R8QfH2xV3pLSlW8PtN4U8cVWtGnNCSa8qipPWjHap9+36sVQkfoy6tIqvU2kKqQHJIaYhiG36&#xA;8YUP0++Ko0xKe7eH2m9/f3xV3prWtT4/aPiD4+2KrI4o+BAJpVhsx8aHof8AM++Kr/TWtanx+0fE&#xA;nx98VcI1ApVu37Tdqe/tiqyWKMqORNKqN2Pjt1Pv/ntiq/01rWp8ftHxB8fbFXektKVbw+03hTxx&#xA;V3prWtT4/aPiT4++KrFijEpoTUKv7RrQHau9e36/E4qvMSnu3h9pvf398Vd6a1rU+P2j4g+Ptirv&#xA;SWlKt0p9pvCnjiq2KNBGhUmlARQmnjsAad8VXCJR3bw+03t7+2KuMSnu3h9pvf398VWvGhdCSa8q&#xA;jc9aV239v8xXFV3pLSlW8PtN4U8cVcURasSQBuSWNO58ffFUMzPIp+rh/TA/vamrdP7vkaHp9o7f&#xA;OpyN3ybRAR+rn3fr/Vz9yS+TfLS6HBfW/q3k5u7ye6eS6mWQqZTsoKOT9kgkncnfwyrBi4ARvub3&#xA;dh2rrvzMoyqA4YRj6QRyHu/AZGVTkASeRqQOR7EV2r8svdUlPmu1jk8s6orNIAtpORxkkQ7QsNyr&#xA;Anr3xVOMVdiqT67/AMdTy7/20JP+6fd4qnGKrY6iNa9aCta16e5JxVdirsVWtXknz36+B98VYN5H&#xA;8wea9Q87+b7O/wBF+qaBDNbzaRq3KoufUt0Xbs1UjV9vs1o2Ks7xV2KrY68TXxbrXxPiTiq7FXYq&#xA;tkrxFPFelfEeBGKrsVdirsVWivqN4UHjTqfemKrsVdirsVWx1Ea160Fa1r09yTiq7FXYqtavJPnv&#xA;18D74qtlnjjoDu7V4RruzU8B9PXoMBLKMCfcsELzHlcAcQarCN1FOhb+Y/gPxwVfNnxiP0/NXJCg&#xA;sxoBuSegGSakKsk85f0fgiY7Tt1I4jeNTWvzNB7HI3bGyeStFBHFyKirN9tyasaeJOEBIFIHzP8A&#xA;8o1q3/MHcf8AJpsKUyxV2KpPrv8Ax1PLv/bQk/7p93iqcYqthFIkH+SOnTp8h+rFV2KuxVKvM+sR&#xA;aPpD6jJLDAsLxqJLlgsYMriJQSSvUvQbjf7sVRlhYJZxlEdnDBK8qUBSNY9qDuEHXFUTirsVWxCi&#xA;n/Wbp/rH2GKrsVdiq2UVUf6y9f8AWHscVXYq7FXYqtA/esf8lfn1Pt/HFV2KuxV2KrYRSJB/kjp0&#xA;6fIfqxVdirsVQ0sxkkSOChKseUpFVX4TsP5m+R+Z7EX3NghW8vkqwwJFUirO1Ocjbs1PH+g2xAYy&#xA;mS1Lcqjemg9SbtGvXfu38o9ziSwJWrbM7B7hvUYUIjG0an5ftfNvopgrvRw96qg+KT3b/jUewyTJ&#xA;diqW+Z/+Ua1b/mDuP+TTYqmWKuxV455T83+YtV85+hf3Y1KC31N3tbSE25ks6walH6E6pHbG3l9N&#xA;EPoyvK2xb1N+OKvYA7ECsbCtNjx2rTwPv+GKrYpG9FDwY/CD1U9j/lHw8cVX8mr9g/PbxHvirubU&#xA;r6bfL4fCvj9GKsO/NDyno/nDQ7by/rFvLNZ3F7DJIsJpKqRMeTpxJO1QG2OzfSFWW20cdvbxW8MJ&#xA;jhhRY40qKKqgADqeg/ViqoXb/fbH/gff39sVdyav2D89vEe+KrIpGKE8G6ttVT0PT7TfLr92Kr+T&#xA;V+wfnt4n3xVwdiPsMOm3w96e/auKrJZGCA8G6r3Ud+n2l/zOKr+TV+wfnt4j3xV3NqV9Nvl8PhXx&#xA;+jFXcmr9g/PbxPviqxZGMrDgw+FdqrtU/wCt/Dt3xVeXb/fbH/gff39sVdyav2D89vEe+Kqc10sK&#xA;gsjFm2SMcSzNSvFRXr+HfpvkoxJVdC7GNPhPQb1B+n7TfryKpb5k1xNF0S71WascVpG0jVQyk0FQ&#xA;oVGU1qflsa7b5XlycETLuczQaU6jNHEBvI1zr72tG1BtZ0u21IczZ3aCaCMJ6TMjAkeoHYn6Bt8x&#xA;jjlxgHoU6vD+XySx164mjve/l+PkmE0yQCMsOEYbiNwB0oAByFflQ/LJ8nCJ6ljHljXNX1fUtYgn&#xA;0u5023sJxCXlmLtKxRX4xhqcVKkNUb/GOmY+KcpEgiqcTBklOUgQYgFlUSJEvCOIote1NySak7/T&#xA;mQA5QFLg7f77Yf8AA+3v74UrFkblJ8DGjeK/y/6x8Pbriq/k1fsH57eI98VSnzXNInlnVCtvJITa&#xA;TgqpjBFYWNTyZRt02xVOMVdiqT67/wAdTy7/ANtCT/un3eKpxiq2OpjWvWgrWtenuAcVXYq7FUss&#xA;blry5juitKQRDipJCPMpkkSoArt6fWmKpnirsVdiq2OvE18W618T4gYquxV2KrZK8RTxXpXxHgDi&#xA;q7FXYq7FVor6jeFB406n2piq7FUPJcu0hhtlEki7SOT8EZ2PxEb8qGvEfTStcsENrly+/wDHf96F&#xA;0FssZMjEyTsKPK3X5Afsr7D9eCU726JWi4YqI4V5ygDkSSFU0r8TUrX2pX5ZXfc2CHWWwQ2p28Ca&#xA;ddTXMzhVhkM8qp6pEYUlgsQVyRT9lRU+5yExsbSNTweoDaO/Xp7tz+KS7yl5ns/MGjrd6Vcm+jLG&#xA;NrloJLeNGCjkoDrGX4n+X5VGQw5RONxNuJj1Mcw4o/p/SnS24WRJHYyy1NHPRaqfsgCgH+dcuAbQ&#xA;F8NrFC8jpy5Snk/J3YVoB0YkDYdsQKURpVwpdiq1a8n+e3XwHtiq7FUt8z/8o1q3/MHcf8mmxVMs&#xA;VdiqT67/AMdTy7/20JP+6fd4qnGKrYaeklOnEUpSnT22+7FV2KobVLOS90y7s4rmSzluYZIY7yAg&#xA;SwtIhUSRk1HJCeS++KsV/Kby9N5f/L/Q9PudQk1Sb0hL9dmoWZZELRhakkKkXFRudh4YqzPFXYq7&#xA;FVsVOJp/M3Sn8x8MVXYq7FVstOIr/MvWn8w8cVXYq7FXYqpl0R3ZiFCoCzGgoBy3J8PnhAtUEdRt&#xA;rqT0kuUigOxbmFkfsQgqGUdPi6+Hjk7jDn9X3fju+fcz8GZF0a9yNAgt4QBxjiQfIDISle5YxiTs&#xA;EPPcEqrSc4bdiAKI5kauwHwiqb/T8srJZkxh5n7P2/d71SOW2gt4VUcQyj0okXc9Oir898lYDXKd&#xA;7lpoZ51JlPpqR8EI33P+/CCOX+qDT3OCiWNErdJ02HTbCKxgSOOCAcY0hT01A6n4anckknGEeEUE&#xA;Y4CIoIl6co6/zbdP5T4/wyTNdirsVdiq1KcpKfzb9P5R4fxxVdiqW+Z/+Ua1b/mDuP8Ak02Kplir&#xA;sVYnJ5l0nWdZ0ePTmmlWz1SWKWdra4igZ1sb1G9GeWNIpwrIQTEzAYqyzFVsdRGtetBWta9Pck4q&#xA;uxVDanI6WMojYpLIBDE46q8pEaN9DMCcVVViSNYo414Rx0VUUUAUKQBsRtiqpirsVdiq2OvE18W6&#xA;18T4k4quxV2KrZK8RTxXpXxHgRiq7FXYqhpdRtY5mgYt66gERhGJblWnDajdD06d8tjhkRfRFrY7&#xA;eWab1broArR243RSDUFjUhmB9tvxxMgNo/NUjvZdT/xpaXEOqwnSo7SWKXSlVObTM6UZ5Cfh7f8A&#xA;AkAGuYUifEBvauTucUcf5SUTjl4hmCJ71VHkOv7bJFMhWGh9a4bky7gdET5fR+0fw6ZfXe6uU9qH&#xA;JjXnnTdV1rT7aLSNRutMkjuYme7t1dg8XNQ4CqDyop5q3So67mmPqIymBwkjdwNVCUwOEmO7I7G1&#xA;jggjC8mfgoaWUs0jUH7RYlvxzIApyYxpEYWTsVWtXknz36+B98VXYq7FXYqtWvJ/nt18B74quxVL&#xA;fM//ACjWrf8AMHcf8mmxVMsVdirzDSPyxtfLHmSwniuIjb32oyBI7WBrOYj6tfz87uaOVvrMw9Xg&#xA;JOKfCKUxV6YIlAABbanVmPSnifb/ADriq2KJPRQVNOIGzHw9uPj4Yqv9Na1qfH7R8QfH2xVKL25g&#xA;bzDp+ki4X1GgmvZrQyfGYoTHGsnGvOgkkWh6V98VTV415xnf7VdyfBvn4/59MVXCJRTdtv8AKbtT&#xA;39sVcYlPdvD7Te/v74q701rWp8ftHxB8fbFVkUSBCKmlW/aPc09v8/vxVf6a1rU+P2j4k+PvirhG&#xA;oFKt2/abtT39sVWSxIUAJPVf2j4/T44qv9Na1qfH7R8QfH2xVDzS0YwW6tLMBRiXYIlQB8bV603o&#xA;N+/vlkYbWdghh3lv8v8AUNJ/MXXPNNzrFzeW2pQBI7SUBYYiXVzwpKxonCgBQdfv3Gs7Vhl0ePAI&#xA;RiYG76n37db7+jCOM8RPey5Q00x9EskXFazFiSwB24A9tvtE/Ibk5obtyeER58+79f6l9LeH9xCr&#xA;PJ3RGYmpru7V2rXqxqffG6ap5CT5tiz9Qh7o82BqsQZvTU1B9uXTqR8gN8a72NXzV/SWlKt0p9pv&#xA;CnjkmS2GNRGlK9B3NPH28fDFVwiUd28PtN7e/tirjEp7t4fab39/fFVskal4zvsxPU+B+fh/n0Kq&#xA;70lpSreH2m8KeOKu9Na1qfH7R8SfH3xVwiUd28PtN7e/tiqxYk5Sbndt6Me6+1PH/Ogoqv8ATWta&#xA;nx+0fEHx9sVSnzXaxyeWdUVmkAW0nI4ySIdoWG5VgT174q8y1XVfLd/58k0K6Mx81NeH0r863Lb2&#xA;0FkJgqm39CWPjOA/p/Vli5F/tkoebKvY4kZIkRnaVlUBpH4hmIFOR4hVqfYAYqlOu/8AHU8u/wDb&#xA;Qk/7p93iqcYqthNYkNa1Ub9e3zb9eKrLu4gtrWa5uJVgt4EaSadyFVEQFmck7AKBXfFWDaN5X8u6&#xA;z57sfzCRPX1IaULSG7ictAyyJFKJRT4eRSdlXf7P4Ks8c/FHv1b/AI1PuP44quxV2KuxVbEaqd6/&#xA;E3v+0fc4quxV2Ksa/MTzrp/kzyvPrt8JDDE8caiJPUPN2otV5xbePxff0zZdldmz1mcYoVZ33Ncv&#xA;gWE58ItFab5jsta060vrSYW1neQx3CPMyJMUkUOFCVPE77k/RXZsxs+IYMkoTIM4kjy2/H6+5tjj&#xA;nIWAa9yaVt7VEiRdzXhGu7Me53O/uT9OY85kmysYE+5bIi8TLeuvAEUir+7FegNaczXxHyGQ97I5&#xA;BH6dvPr+xJdB80WXmC+1CDT76KWOyZUlESsJRWuzBmITcEdK7ZVjyiZIB5OHizjISInkyGKKOJOC&#xA;Cg+8k+JJ3J9zlwDeBS7Cl2KrYTWJDWtVG/Xt82/Xiq7FXYqtc/FHv1b/AI1PuP44quxV2KuxVah+&#xA;KTfo3/Go9z/DFV2Kpb5n/wCUa1b/AJg7j/k02KvN3i/J3XfM1xO/mH9GawupTWlzpDalFbTy3ltc&#xA;tBVI+ZuI/UkjqnosnIEGlTir1iGGKGFIYlCRRqEjQbAKooAPkMVSnXf+Op5d/wC2hJ/3T7vFU4xV&#xA;bHUxrXrQVrWvT3AOKoHzBoel67ol7o+qw/WNOvoWhuYd6lGHam4YdQRvXFUu/L7QLHQPJej6VYxe&#xA;jbQWyFIz9oeoOZDHuw5bnviqftXknz36+B9sVXYq7FXYqtjrxNfFutfE+IGKrsVU5p4oUDSEgE8V&#xA;ABZiT2CqCT9GSjEy5Kluq6LDrVi9vqicraUrS0Ko6rvszclkVmof9UfRyzIw6k4ZcWPmOu/7Nvt+&#xA;5iRfNKrmbVk832EWn3tlb+XbW0mhu7UoBIsgKhVjNQvw/DQDYUYHtTXZJzllu9t777d3hxYRo5cU&#xA;JnMZR4SOXDv0/HSmQIyozJbKZpukszHbkOzvv9yjb2y33OnnkMvxsqx24DiWQ+pMK0c7Ba9lH7P6&#xA;/HCAxAQWk6Jaabe6jNbxRRnUZhdXBjQoWlK8SWJLAn4a7d+2+RhjESa6sMeIRJI6m0zybY7FXYqt&#xA;jqY1r1oK1rXp7gHFV2KuxVa1eSfPfr4H2xVdirsVdiq1a8n+e3XwHtiq7FUt8z/8o1q3/MHcf8mm&#xA;xV5/rOneedG1h49F062stCl1AXi3NpA2p3VxLd3frXAnaVkNoGaR2qkMiqP20xV6lirynQ/zTsfN&#xA;fnT6ray20um6VqMX1A2r+vcyLJY6hFK80cZcp8cQKrxqFILUJoFXqYlUgEBt6dVYdaeI9/8AOmKr&#xA;YpU9FCAacQRRT0p/k1HbtiqE1W8VU+qAOHulKCQDZQ0kcJPjUeuCPkd8VRqugUcVIUDYBWGwFelM&#xA;VaeROcYINeVBVe9GHf5dv1YquEqmmzb/AOS3ent74q4yqOzeP2W9/b2xVbLcQxIXlbgi/adgQo3A&#xA;3J274REk0FWwzRtHyWpUliCFO+9e3+f04FQ97qsNv+7UNJNyVCAjsELnipfgrUBPTx+W+XY8Jlv0&#xA;/HJBK9BDB+/mZpJ2ovMoa/FQ8UWmw6bff0yE8m1DYMoxJKG1G9WK2Mt2riMEMtrEKyPQ13J47im4&#xA;B+k1GUyO27KWSMOW5/HIfr+xXjEs0aiaNreH7ItgKmg2AdkqoG/RT9JFcIFtW8tyileNUAVSqqNl&#xA;CkUAFaAU8Mkyb9Ra0ofD7J8SPD2xVYsqGVqA1Kr+ya7nb379/wCuKrzKo7N4/Zb39vbFXeotaUPh&#xA;9k+IHh74q71VpWjdK/Zbwr4YqthkQxpQGlBT4aDw7bdu2KrhKp7N4/Zb29vfFXGVR2bx+y3v7e2K&#xA;rZJEDxgg15ED4e9CO/z7fqriq71VpWjeP2W8K+GKu9Ra0ofD7J8SPD2xVwlU9m8fst7e3viqxZUD&#xA;SbHZt6Key+3y/wA9sVX+otaUPh9k+IHh74qlPmu6jj8s6ozLIQ1pOBxjkc7wsdwqkjp3xVOMVdiq&#xA;Q61aWseu6FdJDGlzPflJ51UCR1j0+84B2AqwXm1K9KnFU+xVbHURrXrQVrWvT3JOKvOre11fXfzQ&#xA;0fzFY+ZVm8uWVpqdvc6Pb8ZIGnhufQUllYjl8YJJ3BjoNmNFXo+KrWryT579fA++KrsVdirEvzT0&#xA;jzRqvky7tPLOofo3UyyOLgepUxqayIPSWR/iG3TNt2JnwYtTGWePHDu259DuRya8gJGyYeWI9YXy&#xA;5pdpd3QuLy3tYYr/AFM8m9eZEUSSReoKsHap5t/wPhjaw4/GnKIqJlIxj3C9gfd3D5so3THfzX8i&#xA;S+cvLVtoenX02nPa30d3NcwAMaKkiOHZpIqn97zO5NRv1rmd2J2uNJnlklETuBjvy6HuPdScmG47&#xA;mmV6dbPDa20MTG4eCJYvr0w2IUAEolf2qdRsfFs0uSfHMyA5lJyEihy/Hz/FKPmby/Bqnl3UNNYO&#xA;8l5F6ZmUgS8gQUblVB8LfF4e3bKcuMSiR3tObEJwMe9E+XNIg0fQ7PTIA/p2sYTlKeUjNWrOxBbd&#xA;2Jbr3w4oCMQB0ZYcYhARHRMcsbHYqtFfUbwoPGnU+9MVXYq7FXYqtjqI1r1oK1rXp7knFV2KuxVa&#xA;1eSfPfr4H3xVdirsVdiq1a8n+e3XwHviq7FUt8z/APKNat/zB3H/ACabFUyxV2KpPrv/AB1PLv8A&#xA;20JP+6fd4qnGKqaIjW6oyhkZArKQCpBFKUoBT6MVYf8Aln5D8t+UrO/tdEszawfXLkLz5Mx5SliV&#xA;Z/i404pttRF6nfFWaYqtcfFH7N/xqfY4quxVIPOHmzS/L+kXV3c3BWS3VWaKD03mUPsrGNjXjXrt&#xA;kMxMIcRBpqzz4IGVGh3K+lXsOraVbapNzWxuEWWCCdVVirU4NKFqCx7L0+npZDKOEGPXqzxXMAgH&#xA;dfeXcos5mSKVyEkkS1twPrElORAHLgqVpty6natcqlLZsnMQG3ql+Pn93vYh+WOq6n5kOoandaXH&#xA;aaGsxGjlwiTnieLCSNBT4addhXseoxdJM5LJFR6N/wCYx5tNCYlkOQ8XEJAVz2Iom+7fu5Da+iZn&#xA;OMtlFVH+svX/AFh7HFV2KuxV2KrQP3rH/JX59T7fxxVdirsVdiq2EUiQf5I6dOnyH6sVXYq7FVrj&#xA;4o/Zv+NT7HFV2KuxV2KrUHxSe7f8aj2GKrsVS3zP/wAo1q3/ADB3H/JpsVTLFXYqxi917Q9S13SL&#xA;XTtRtb260/VHiv4LeaOWSCT9H3g4TKjExt8J2bFWT4qpo6LbrI7AIqBmcnYACpJJJ/XiqlpqOtjC&#xA;XUrJIPVlUihDynm4oenxMcVROKrJWClCelTsOp+EnoDv+OKoddSilqtqrTSglShVkCkGh5lgOI/E&#xA;9gcnCNizsPxyYiV8nkHm7yn+YL/mDqWpW/meFdKuo7WIaVdLK0CROI45aROGhA5I7UBJIb+apza6&#xA;/X6eXZscEICObi3l6eXF168qHwc7s7T4zklLOJHDwSHp7+Hz2es20U9wqTGUkU+GcheRBHWNfsp1&#xA;3JHLtttmkAtxZSP0j0j7fx+KRcEEawukfw8mfk4PJiakVJYvU7d/7MlTACuSlZaVY2i0iiTlyZ/U&#xA;4IrVY1P2VXxwRgAz8SVUSaReSYrZTRRvT4l9v2h7jFV2KuxV2KrQf3rCv7K7fSff+GKrsVdirsVW&#xA;wmsSGtaqN+vb5t+vFV2KuxVa5+KPfq3/ABqfcfxxVdirsVdiq1D8Um/Rv+NR7n+GKrsVS3zP/wAo&#xA;1q3/ADB3H/JpsVTLFXYq8w03yx5js/Ntnf6va6dYG4vzb6bJpMzOsVpHaX8qQ/V5bSFEZmlZ5H5u&#xA;WY/sgKAq9MCMAKyMaU3PHelPAe344qwb81PPWj+T9BtrrWruWCyupIYnWJS0zj6xCJFWgU09F35V&#xA;p277FVm8EiTwxzwyFopVEkbAAAq1GHUV6Yq1PLFbxc57gRJUL6khRRVqKNyAKk/jkowMjQFqxL8w&#xA;PO2n6D5Z1DUpZp0soE4y3cMbsf3riEeiycKkPKo5cxTsSwIzP7P7POpzxw/xyvblyFnfpty/RzRk&#xA;iRAy6e/v+NoP8rXln8nWk1hfXuoR37yXZ1G/asjLI/w7MZuHwKPh5VrU0+LkNdl0mTTTlhnvOBIO&#xA;9tOjiIY9yZy8/wBP6maW+nLFRmlZ5BUhtqAmtSAQd/i+0an3yIjTeSSbO5RPFq/bPy28R7ZJVsaP&#xA;wIMjVqwqaV8O6j5/2Yqu4tX7Z+W3ifbFXBGA+2x6b/D2p7d6YqtkR+O0jdQNqeP+qfH/AD3xVdxa&#xA;v2z8tvEe2Ku4NSnqN8/h8KeH04qlz+YvL8crxvq9qskbskkbTwgqyMQykVqCD8JHtiqmvmTy76h/&#xA;3M2pAC/8fENOv3dvx+WKrj5k8u/9Xq0H/RxB7+/virf+JPLlf+OzafL6xD4j3xVr/Enl2n/HatOl&#xA;K/WIPDr1xVqLzL5d4KTrNp0BINxD8+9DirY8yeXf+r1aH/o4g9vf2xVx8yeXf+r1aD/o4g9/f3xV&#xA;p/Mvl3klNZtKctwLiGlKV9/D/PbFW/8AEnl2lP01afP6xB4U8fpxVv8AxJ5cr/x2bT5fWIfE++Kt&#xA;DzJ5d/6vVof+jiD29/bFVq+ZPLpZ/wDczajfb/SIfDtX5/h88VX/AOJPLlf+OzafL6xD4j3xVLvM&#xA;GqaXf+X9UtrHV4pbhbG4kKW8sEjlFiKsStH+GripA60xVkuKuxVJ9d/46nl3/toSf90+7xVOMVeU&#xA;+fPKOian58sPMl8XuD5Z0aS8OmNIPq0qCdXBaEh0JCxyHpQsI6n4RluDEcmSMB/EQPmgmghtP/5y&#xA;E0GX8vm81zpc20S6j+j6Swi4b4h6ikiJoE/u6/tVqM6TN7MZRrfy0SDLw+PqB3czfVphqI1ZtJfz&#xA;E1fVfP8Ao/lrT9NmvbK21+l3b3tlA7ELCSkySwidWrHXnsadNz1Go7M7UhoNX6sfimpR+rhFg78w&#xA;eVfG2XacDizjFUhe93e3Pp5G2c6p5Fh1nUNMOvXNzPa2lo1m+nqhe3kailZJA6urPVeW1d1U12zW&#xA;jLMagZokwIugCevmKdvj1FaWeERhUyDZri2+O3u8zztnNjY2tjaRWdpEkFtAoSOKJFjQAeCIFUfQ&#xA;MlOZkSTzLrAK2CvkUuxVbFTiafzN0p/MfDFV2KuxVbLTiK/zL1p/MPHFV2KuxVJ/Kf8Axy5/+2hq&#xA;f/dQnxVa2s6yPNiaSNIlOktbGdtZ5r6YlDU9Pj1/j7U3yrjlx8NemubsBpcX5U5fEHi8VcFb13/j&#xA;bzvZM7+drexuJ0VnaGJ5FSNfUclVJAVKryPgK75a6989w/ml50XS1e680xLIkF9c2l1btp88V7fQ&#xA;xae1vpYna0gRnd7mflFHEJVpx5txJxV7B+Ynn+z8laVDqF1Ekqz/AFlIlkmEHKWCzmuo4lJV+TTP&#xA;AI1AFat36FVhUH5qecpdaRon0mfQZtSW2t/SgnMz2ja6mjBhOLkxlmWdZg4Tj8NOPxVVVk2k+etU&#xA;vPzR1Pym7Wf6MsYWmguUSYTTSBIC1srFvS9S29bnMRX4ZIxxUhjirCvN3n/zdpdpqH1rzJHp0tpd&#xA;a0trcxwWsSXE1lbQS2NgqXK3FfVaV/hVvUenwtiqbeUPzB1iTUPMUt7qf6VbTbTUby90atqn6Oms&#xA;76eKC1rBEsy+pBGP74uTTkNjiqGvfzm1vVLwDyq+lGyheCK4km9S9Ltc3tpaRsjwTW6oAt8JNw1Q&#xA;tB9qoVR2u/ml5i07yx5V1FRp4vtana01ESxXHpQqr+nJfKqOzLBCwBkV2/bUeoOpVTD8zPMvmrRL&#xA;6Y6bexxWh8vavexQi3V5I7qya243DSOXDKi3BITgBseXLbiqgLPzt5jPlZJdG1e11qWfXZNL0/Xb&#xA;2OO4imtgjuJStgbKJyrKUqnEbeOKseT85PzDls4ZEj0gTfUv0rNyt7kqYHttOuEgUC5qHX9JMpkN&#xA;QeIPAdMVZjbazqWseX7i61P0TfwWfmSwne2RooXbT78WfqJG7ysgcQcuJdqVpU4q9DxV2KpPrv8A&#xA;x1PLv/bQk/7p93iqcYq8Mi/xF5e/5yEu5tJsdQ1XTfNNrb/pGZ3ma1tTAZIKseMgTg8O3JvhDHjs&#xA;d95ouzsGTR5M08gjOJ9MdrPuF7/sapTIkAAye48gprXme4mlvp7zSGjjliguUNzZR3PNmd4EuRNH&#xA;J8O2+w5tv+zmkw6rLjznJjlKNxrYkDu/hr9VtccFZTIkkVy3r8frZvpfl210xYVt5pT6EawpyEX9&#xA;2vEBKKihVAQAKtAO1Mhw72SSXLyy45XyTNq8k+e/XwPvkmK7FXYq7FVsdeJr4t1r4nxJxVdirsVW&#xA;yV4inivSviPAjFV2KuxVJ/Kf/HLn/wC2hqf/AHUJ8Vbbzd5aXzEvls6jCNedPUXTuX70pwL14/6o&#xA;rmWNBm8HxuE+F/O6dzHiF11TaRwiM5BIUEkKCxNN9gNycxGTze0/Pjyveacl/aadqFzDS5luPRNj&#xA;IIbazW3ee5kkS6aIpGL2LkiO0gJIKAgjFWcatJoVtNa3+qXEVs1p6z20083ootIWaZqMyq3GFXY1&#xA;+yoJ23xVI1/NXyK2sNo4vpfry3X1EqbO8EX1j6x9U4+uYfRp9YpFz58eZUVqy1VTS284eXbnzFP5&#xA;cguy+tWwZriy9KUMiIsb82JQKEYTpxavFjUKSVairHtS/N/QrO2muE03U7pbaW9juY0hiikji02N&#xA;Jbm4ZLmW3b00WVaCnM9lOKomw87eXfNA1bSLm0ubXTvq90HvLpoYoLq0hmks7mWGSGZpURXQ/FII&#xA;zQhhiqK1r8y/JOjXMVre6iWmmFVW1guLwD40iAdraOZUJklRAGIqzKBuRiq+8/MfybZaXpuqXWoG&#xA;Kx1ev6OkaC4rK+37oJ6fMTGtBEwDkggLUHFUL5p/MrTPLV7JBqOmaibZI5XXUY4o/q8ksVrLdm3i&#xA;5ypI8higb4gnphqKXDbYqqL+ZGgw6I+q6rDd6WIrxtNmsZYTdXSXS1Pp+nYG8DclHIcGbb3xVBN+&#xA;dH5biCKc6nL6UxYIwsr4niqQyGUgQVWIpdRMJT8BDVDEYqqanrem63pj6lpsjS2kukaxGDJHJC4e&#xA;GSGGVHimWORHSSNlZWUEEYqzPFXYq8q0Tzvr2q+ZdGj1cWzWs0731gtjbziSGMx6lbelOTLP6rUh&#xA;Vuaog+18O2Ksw80+ddO0XSLjUpJljtLZPUmuJA4AWoFEoj1JJ41IoD40IzJw4JSmIgcUzyj1/H3+&#xA;XNQQl3kI6fr/AJa07Wy4mtrqEuscDzPG7sx9b1SyoXb1IyCtOIoABSmDV4cuKcsWUUR02/HVmeEf&#xA;Tv8Ajp+v7mac1G1D4fZPiB4e+Y7B3qrStG8fst4V8MVWu6l49js3dT4MPA+H+fdVcJVNNm3/AMlu&#xA;9Pb3xVxlUdm8fst7+3tirvUWtKHw+yfEDw98VWRSJwJoaVY/ZPjX+UYqv9Ra0ofD7J8SPD2xVwkU&#xA;itG7fst3p7e+KrJZE4CoPVT9k+Nf5T4Yqv8AUWtKHw+yfEDw98Vd6q0rRvH7LeFfDFUp8p/8cuf/&#xA;ALaOp/8AdQnxVDt5A8pN5wXzi1hXzIiekt9602yemYqelz9L7Bp9jNgO1NQNP+W4v3PPhod986vn&#xA;5sOAXfVO7u1gu7Wa1nXlBcRtFKtSKo4KsKjfoc17Ngcv5L6LMn73WdUeeSGWzurkmyDz2MyW8b2c&#xA;gFqIxHws4xyRVk2+3viqb+ffJLebobGwkvJbKwje4+vSWzRrO8VxaS2rRp6sU6UdZ2DHYjsa4qho&#xA;vyr0NWjkkvb2eZLgXbSu0AZ5RqsesEsEhRaNcxAEKB8FQN98VTKy8k2Fn5vvfNaXl2+o38X1e5ie&#xA;RDAYVCejGIwg4iEo7IQa1kfkWqKKpZrv5VaNq63QOo39k17JevdvbNb1eLUYo4bm3/fQTBY3SFd1&#xA;o4PRsVWD8sraxs9d/Rt7cT3GpWV7aafa3jQrbWgvZJJ2jjaGBZeBmlqTIZGAApiqnY/lBotu8kk2&#xA;qajeyySQSmSdrUHlb3Nvdight4hRpbNeW3QsBTaiqM1H8sdGvtL0fTmvr+CDQ7g3ti0EsaMLrn6k&#xA;cz/uyGMRZuKkcfiPJW2oqt8w/lnZ69rF7qN5rOorFe2Umntp6fUzbxwypxb0DJbSTxMX4yMVk+Jl&#xA;XlVQFxVE2v5f6fFYw21xf3l7NHqLatLezG3Waa5ZWT94IYYouPFqURF6DFUqi/JjyvHGI1ur4qLF&#xA;dN3khr6Kw2cAb+6+3x06PfpUtt0oqqazpljoFhdWsBmkinsvMF2SVMrCW/ulvJR+6TZBJMwWo2FA&#xA;STuVWc4q7FWH6x5V0Gx1PTJNJ0yzsLrU9TeTUJ7eCOF7h/qN4xado1BkPxsfirWp8TiCRuOaQAea&#xA;H/M+Ly7p/kPUpdcRJNMKhr4SLIweNGEroBEySfH6dB8VSaAnuLNPmlgmMkDUgef9v7UylGqr0+/7&#xA;+9f+TEujy/lj5fk0XgNMe1UwoiyKVckmYMJGduXq8q70r02pktTqp58hyTNyP6NvJiOGthXxtmuU&#xA;q7FVr15J/rb/APAn3H8cVXYq7FXYqtjrxNf5m/4kfc4quxV2KrZK8RT+Zf8AiQ9xiq7FXYqk/lP/&#xA;AI5c/wD20NT/AO6hPiqlJpvmg+bo71NX4+WxAfU0r0oSxuB8I/een6nAg8vt15Dwynhnx3fp7mgw&#xA;yeJfF6K5bc02v2nSxuGt0MtwsTmGNWCMzhTxUMwZVJPcjLm989wx/mFHpaxzT+Y7kCC+bTbiKLW4&#xA;GbVzFp/1VLiKR5rkQLILnk0z/V2NeIVaDFXrv5kebdZ8t6day6RYtqF7dm6ihto7ee6dpY7Kea3H&#xA;p2/xBWuI41djsFJ3HUKsNg1X81pNaS+S71JtLm1JTHp8mmwxotk2upZBGLWy3Cr+jpWnJZuQ4h6h&#xA;Q1VWTaTqnnGX80dTsLo3g8pxQs2nSvZKkUlzwg9WI3AXl6cXLlExpzZpByYRgBVhXm6Dztb2moRt&#xA;ceYrnhda0dMmsxe+s919WgOmBxYLGPq/q+oByUQ1+1iqZ+VtQ806bdeZtQuxqb3FnZalc3y6mL82&#xA;Ju4r2d7QWf1grB6X1YD/AHlPHjxrviqje+aPzQ1y8EuljUtFtIHgjMaaU0fqrPe2kTO31+3kf93b&#xA;XEsnwUoV+L7LDFUdrut/mXb+WPKrWZ1BtVnnaHzBLFp0c0i2Svwlumj4KqTqOLRoq0erUjYDZVD/&#xA;AJmXf5myeY7uHSLDVYdHh0y+is7rT2hMUsrWfqes3pTG5EyyfuoVMQow5KTy+FVE2bebz5WSDQ7n&#xA;V7KG412SG0u7yCe41CPTCjtykXVo5pgvqj4WmXpTtTFWPJq354SWcIN5qccyWX1+R/0Zb1e4e206&#xA;T6mym2oESW4uVAFJPhILErUKsxtpddk8v3C65JNNfwWfmS2+sXESQyywW9+IbWZkjSKP97bxxvVE&#xA;CtXkBQ4q9DxV2KpPrv8Ax1PLv/bQk/7p93iqpqtjbao82n3UCXVq1q6XFtMSI3Fx8A6Bv2UcE0qK&#xA;7dcEhYpjKNii7yrpCaP5b0zSkhjgWxtooBHDUoPTQKSKrGdzvuoOCMaFLCPCKTTJMnYqtf7Sbfte&#xA;/wDKfbFV2KuxV2KrY/snanxN4/zHxAxVdirsVWyfZG1fiXx/mHgDiq7FXYqk/lP/AI5c/wD20NT/&#xA;AO6hPiqWyfmDYx/mRD5FNjdm7m09tRF+Im+rBVfjwL0+fxdK/D1OKpl5x8wS+XfK+qa7FYyai2m2&#xA;0l0bSJ44iyxKXYl5CAqqBVqVNOisdiqxHzB+a2p6Trc2mDQlKtLZWulz3U15bLeXN/JbxIsUv1GS&#xA;1KRvdfGVnaQBGPp0GKpxaed9BfQLPzDr8UWnXET6hEQA936Mun+uLz0pViVyojs5DXgvIClKkDFU&#xA;APzh0b9NtpbaRqaqL79H/pApa/Vi/wBfGmeoKXBl9P626J/d8virxoGKqp5Z+drC6833nlVLO8XU&#xA;bCL6xcytGggEDBDFKJA55CZnZEAHKsb1AABKrBz+dutCwkmby3HDfQW91qF5plzdXlpcQWVnCs0j&#xA;Ol1p8LGVufFFQNGxBpLtiqe6L+YVvrrapb6xpkFtoX1W9uYZmla6+sWVpcyWdwbi3MCCPlw5BFaS&#xA;qmnXbFVTW/zc8v6beR2tvY3+rM3ESyWUcQSJnnitkV/rMtuavNcxqOIPWp2BIVV7780NHs9E0TV5&#xA;NP1CSHXpRa2cEUUbyrdsaJbSgS8Vd2VlDcinwmrAUqqhvO35j6n5Wv5I30Rbqw+rXE0E63ircSPb&#xA;2zzs31cRScLcOqQtM7gh3X4CCCVVT/lZEtpokl3qejyvqcOpvo8mmaXKl1yuFUyKY5rkWCspjoas&#xA;FodvfFUq/wCV8+XTbRTrouruJYzcFFjteSWvpWsy3LD6zTg8d/EQAS/UFQdsVTK61+31/SJdSgt5&#xA;rQHTNctpbW5EYmimtLiO2njf0nljJWWFhVXIPUHFWc4q7FUh803tnZXegXV5PHbW0eoP6k8zrGi8&#xA;rC6UVZiAKkgYq1b+bPKEcs8r69pxeZ67XUOyKAqrXl7cvmTirdp538nS2kMg1uwQPGrcGuoAVqAa&#xA;EB6CmKq3+M/J/wD1fdP/AOkuD/mvFXf4z8n/APV90/8A6S4P+a8VUZvO/k5JLdf03YN6khUEXUB4&#xA;/u2apq+32aYqrf4z8n/9X3T/APpLg/5rxV3+M/J//V90/wD6S4P+a8Vd/jPyf/1fdP8A+kuD/mvF&#xA;VG187+TpI2Ya3YJSSRaG6gH2ZGWuz96VxVW/xn5P/wCr7p//AElwf814q7/Gfk//AKvun/8ASXB/&#xA;zXiqjded/J0casdbsHrJGtBdQH7UirXd+1a4qrf4z8n/APV90/8A6S4P+a8Vd/jPyf8A9X3T/wDp&#xA;Lg/5rxVjmn+bItOjntodQ0C4ha7u7iKV9XETFLm5knUMgt5ACBJQ/EcVVR+YKNdMnreX+caKwlOs&#xA;ilJCQVB+q1/3Xv8ARiqnqfmyy1TTbvTL6Xy9NZX0MltdRfpxl5xTKUdeS2ysKqxFQa4qkOo2nk7U&#xA;bq4ubpdDaW5MbycPMt3Eiyxen6c8SRxIkU6+gn76MCT4R8WKqGrWHlvUtM0vRZZ9DGh6dJPI9n/i&#xA;K69Sc3MUsb+pcrGszB/rDmTmzc6/FiqvY/4PNtbTJDoQ+JLpPW8xXDyiT66mphpGaFyzfW41kNSa&#xA;nb7O2Ko23u/Ldvr9z5giXy8NYvFdLq7OvysZUkWNSjq1uUZAIE4KRRd+NOTVVSiXQPIMtmLOSPRj&#xA;AoaMD/FN+G9F4/Sa25hOf1b0xx9CvpU/ZxVUuB5ftYdXj0yXQ7W98ww3NpJcP5guLqKA3Ilmdo7e&#xA;WL04kMrs5SIIGY/SFV9jpnkmy5mFNEZnaKRmn8zXlwxaCaG4jPKaKQ7S2sbnxI3rVqqq9/D5Pv7K&#xA;wsruHy9LbaW7y6fH/iCdfRldg5lQrACJAw+F68l34kVOKrNUtvKeqare6peto8l3qNv9TvlXzTex&#xA;wSwem0QR7eONYCArsV+DZjyHxb4qq6fe+WoLNdPj/QrQ2N6bxHufMdxPK906cjM080Mksm0pX42P&#xA;4DFUOmneRkQItt5eCi2FiB/iG4/3nWO3iCf3P8llCK9fh67tVVGy6rodtp+oKt5otpa/UtWdYbXV&#xA;frckl1qUwupSFkjipzl5tQN1IAFOir03FXYq7FWPfmDql9pXkvVtQsbj6pc28BZbzir+gvIB5uMg&#xA;ZP3aEv8AECu24piqH/LfWbjV/LslzJqX6Zhjvby3s9Y/cH61bw3DpFLW2SKA7DjVFANK4qynFXYq&#xA;89/MXzLrGleZ/LsFnqiWdpMxNzpiyww3V+zTwosduLiyu0mKKX5RRyxSENXkKVxV6FirsVUrxLt7&#xA;WZLOVIbpkYQTSoZY0cj4WaNXiLgHqA4r44q8a8qfmF5lvtb8qw32vBrzULbS2l0L07SP63FdWM81&#xA;1e8fS+sfu5YxvE4jHHiRU4q9qxV2KsU83avrmm+YfLK2lxGum3txdw31p6JeSUx6dc3MdJF5sqh4&#xA;B8KR8j40+Eqpb+T/AJg1fWNCuTqmqprl1byor6rbzW89q7NCjMkLQWmnFCjH44pI2dCaF27Ks9xV&#xA;xIAqdgOpxV86Xv5saz6F9c6f+YMF1p0MF5LZ3ix6Wkk+oWsHOO0EBjkaO3uZeSwRv+/fg1HYFWxV&#xA;9FIWKKWXixALLWtD4VxVvFWEfm15nXy/5fgnHmFfL09xP6NrJxtedxMYnMcIlvQ9vCnMBpJHU0UE&#xA;AgkHFUr8ieatcv8Azzf6ff61b6tD9XZ47awlhMNr6QgXnLA1nBcp65dnhc3MiSKTxFADir0vFXYq&#xA;8e/MXz5rOkeabu10rzCYrZbdY9QtGW1aTTWaSAm9EUtqjrbrbuzevJNLGZDx4jjirO/y41i61fyr&#xA;HeT336UAu7+C31T9z/pVvb3s0EE/+jrHCecUamqKFbqNjirJsVQWt3cFpo97dT3MlnBBBJJLdwJ6&#xA;ssSqpJkRCkwYoN6FG+RxV415b/MLzXca7o9td+Y4b+3+tC3MFrcWhk1JJrxokntn/RqxX0NvER67&#xA;WzwMgV2Zfs8lXuWKuxV2KuxV2KuxV2KuxV2KuxV2KvOPMH5r6tokOrajc6FDJoenXF3ZRXMd831i&#xA;S4tbd50ElubYLHHKY+HJZXKkg8aVoqhrr8/dAhklCaXeSpa3klhdRrJaG5EqFkXhbLM0qh3Wg9cR&#xA;Er8S1xVE6t+d+iafBBz0q9F5c/WoYrOSXT45VvLRpUa2eI3fqkmSAr6kaPHuDzpiqH0f8/vK+oub&#xA;GOzupdbSOGumwPZPLJcySwwSQIv1msZimuVUtPwQgMysyqTiqOb84rCDy9pOsXei35bVIb65a0tf&#xA;Rme3g01v9IeYySQfZT4uKBj2AJpVVS1H89fKenB3u7HUo4WFy2nzehHxvVs1mMptx6vMfHbmNRKq&#xA;FmZaChriqhL/AM5C+QY7yO1rOxlR5EcPaDlxaVFCxNcCZy72zr8EZCmnMqGBKrLbPzabv9ABNOnt&#xA;5NdEs31e5aIS29tFEX9VxC08Z5MYl4h/299xxxVjTfnVpjanbWcGjX3p3LTNDczta28c1vFBdyia&#xA;Bnm4EO9gyATNFQEMdqVVULL8/wDyfeMiw2l4S1td3ZAeweosmmWSOH07p/rchNueK2vq7MpNA2Kp&#xA;zJ+aehr5Gj85LbvJp0jEGFbvS+ahSwJMxvBaEjhXis5btStQFUiu/wDnIfyVZ2SX9za3sFhMwW2u&#xA;pjZQpMqwJczPEJbpHb0Y5o+ShebFgI1chqKsh0b80PLuqaprmnKskEugwC7u5GltJ0aAlxzU2k9y&#xA;V/uieEoR6EfDviqSt+eGmQVW80HU0aJA1zNCLWSBCLe3upQHaeKRvRhvI2f93vuF5EYqhLf89BPc&#xA;29qNDYT3CW8Kj6xVBqMuoRWM1ly9LrCtykxam61+EUxVVP59aPFBPPcaDqhgt45J3uoBayQmBLVb&#xA;/mC88UlRZSLMw4eKrybjyVX3f5w2Oox3OmWOj65Bc3CPFaXkKWIblI1xBA8XqXD0Mk9nIkfNOoBY&#xA;BSGxVOvy71vWJbc6Jr0VxFrVrbx3rG6ZGlNvdzzrGjGP4WaEwGMt1ZeLmjOVCrMsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirFrz8sPJV7eXl1eWc1w1967XEMl5eNb87qJoJpI7YzehFI8TsvONFYA&#xA;mh3xVKNf/JLyXqVjdQ2kMlhdXUscv1kT3UqxBbgzukMRnVIlcyS7R8QrOWAriqP/AOVQ/l96sUp0&#xA;2QvEF63l4Q7JJJKJZlM1JpedxKfVk5Oebb7nFVS3/KvyVbWc1lDb3a2k3ploP0lqJRZImR0mjBuD&#xA;6c4eNW9ZKSV35bnFULqf5R+Vr79A2ZSSPQ9DjvIl0tZrj98t5wLLJMJlkZPhPNH5K4ah2xVFS/lR&#xA;+X81xLPLpQkeW4S64vPcNGksc/1kejGZOESNMebpGFVz9oHFW7T8q/I9nbwW1lZTWltBamxEFve3&#xA;sUcluTIfTnRJlWcD15OJlDEcjTFWQQ6Rp0E9tPFFxls7drO2bkx4QOULIASRuYUqeu2KsBsPyN8v&#xA;tqup32utHfwXjH6lZW31y0itQxuORQteXDBiLx9ojHGp+JUVjXFU2/5U1+XFTz0p5Q4cTrLd3kqz&#xA;ep6nJrhXmYTtWeQq0nIqWJFCcVRj/ln5Nk0iDSXs5mtLa6a/jc3l59YNzIjxPI9z631hy8crIwdy&#xA;Cp4nbbFWofyx8l29haWNpaT2cNi/qWj2t7e28yH0khI9eKZJirRxIGUvxagJBOKr9L/LfydpbX7W&#xA;Nk8banBJa3fO5uZgYJWZ2iRZpJFjTlIxCoABU064qoWn5ZeWBpiWmowfX7ho2jvLovNEZmktobSR&#xA;yiSUUvDaxg8dtqilTiqvJ+W3kmQAHTFBXUZtZDJLMjC/uVZJZuSuDVlc/D9kbUGwoquuvy58mXUN&#xA;zDPpwaK7jkiuEEsyhkmsl091HFxxraxrHt06j4t8VVbbyH5Utp4riGx4SwGIxN6sxoYJpriPYuR8&#xA;Mt3K3+yodgKKoy10NIfMN/rckvqT3kFvaRJx4iKC2Mjhep5M0k7ktttxH7NcVTPFXYq7FXYq7FX/&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2A94A7ADF009E911B6F39A24F3C73226</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2A94A7ADF009E911B6F39A24F3C73226</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>1c3221bf-063e-11e9-0000-3298a7fe3c22</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6f1ac0c7-dd94-486e-b45a-c8eec4d91b49</stRef:instanceID>
            <stRef:documentID>1c3221bf-063e-11e9-0000-3298a7fe3c22</stRef:documentID>
            <stRef:originalDocumentID>1c3221bf-063e-11e9-0000-3298a7fe3c22</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2A94A7ADF009E911B6F39A24F3C73226</stEvt:instanceID>
                  <stEvt:when>2018-12-27T13:02:24-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">C:\Users\GUILLE~1\AppData\Local\Temp\tp8767129b_304f_43dd_91ff_0ffb43690d2e.ps</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>182.767828</stDim:w>
            <stDim:h>146.119246</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SymbolMT</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -414.196 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 414.196 li
518.082 414.196 li
518.082 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.500001 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.0806 371.501 mo
44.0806 .25 li
517.332 .25 li
517.332 371.501 li
44.0806 371.501 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
@
.333334 lw
[.5 4 ] 0 dsh
65.0801 371.501 mo
65.0801 .25 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
@
65.0801 .25 mo
65.0801 .25 li
@
123.58 371.501 mo
123.58 .25 li
@
123.58 .25 mo
123.58 .25 li
@
182.08 371.501 mo
182.08 .25 li
@
182.08 .25 mo
182.08 .25 li
@
240.581 371.501 mo
240.581 .25 li
@
240.581 .25 mo
240.581 .25 li
@
299.081 371.501 mo
299.081 .25 li
@
299.081 .25 mo
299.081 .25 li
@
357.581 371.501 mo
357.581 .25 li
@
357.581 .25 mo
357.581 .25 li
@
416.081 371.501 mo
416.081 .25 li
@
416.081 .25 mo
416.081 .25 li
@
474.581 371.501 mo
474.581 .25 li
@
474.581 .25 mo
474.581 .25 li
@
44.0806 320.501 mo
517.332 320.501 li
@
517.332 320.501 mo
517.332 320.501 li
@
44.0806 263.501 mo
517.332 263.501 li
@
517.332 263.501 mo
517.332 263.501 li
@
44.0806 206.501 mo
517.332 206.501 li
@
517.332 206.501 mo
517.332 206.501 li
@
44.0806 148.75 mo
517.332 148.75 li
@
517.332 148.75 mo
517.332 148.75 li
@
44.0806 91.75 mo
517.332 91.75 li
@
517.332 91.75 mo
517.332 91.75 li
@
44.0806 34.75 mo
517.332 34.75 li
@
517.332 34.75 mo
517.332 34.75 li
@
.500001 lw
[] 0 dsh
44.0806 .25 mo
517.332 .25 li
@
44.0806 371.501 mo
517.332 371.501 li
@
517.332 371.501 mo
517.332 .25 li
@
44.0806 371.501 mo
44.0806 .25 li
@
44.0806 371.501 mo
517.332 371.501 li
@
44.0806 371.501 mo
44.0806 .25 li
@
65.0801 371.501 mo
65.0801 366.251 li
@
65.0801 .25 mo
65.0801 4.75 li
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMSA+ArialMT /ArialMT findfont ct_VMDictPut
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
61.3306 388.001 mo
(0)sh
123.58 371.501 mo
123.58 366.251 li
@
123.58 .25 mo
123.58 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001B
CD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB
63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF20
0B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC4
9372EF96DD9EB13A793559C13CFDFE477> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
119.83 388.001 mo
(5)sh
182.08 371.501 mo
182.08 366.251 li
@
182.08 .25 mo
182.08 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
173.83 388.001 mo
(10)
[8.89844 0 ]xsh
240.581 371.501 mo
240.581 366.251 li
@
240.581 .25 mo
240.581 4.75 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
232.331 388.001 mo
(15)
[8.89844 0 ]xsh
299.081 371.501 mo
299.081 366.251 li
@
299.081 .25 mo
299.081 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
290.831 388.001 mo
(20)
[8.89844 0 ]xsh
357.581 371.501 mo
357.581 366.251 li
@
357.581 .25 mo
357.581 4.75 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
349.331 388.001 mo
(25)
[8.89844 0 ]xsh
416.081 371.501 mo
416.081 366.251 li
@
416.081 .25 mo
416.081 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /.notdef /five 202{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
407.831 388.001 mo
(30)
[8.89844 0 ]xsh
474.581 371.501 mo
474.581 366.251 li
@
474.581 .25 mo
474.581 4.75 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
466.331 388.001 mo
(35)
[8.89844 0 ]xsh
44.0806 320.501 mo
48.5806 320.501 li
@
517.332 320.501 mo
512.081 320.501 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
32.8301 325.751 mo
(0)sh
44.0806 263.501 mo
48.5806 263.501 li
@
517.332 263.501 mo
512.081 263.501 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
32.8301 268.751 mo
(2)sh
44.0806 206.501 mo
48.5806 206.501 li
@
517.332 206.501 mo
512.081 206.501 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
32.8301 211.751 mo
(4)sh
44.0806 148.75 mo
48.5806 148.75 li
@
517.332 148.75 mo
512.081 148.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
201{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
32.8301 154 mo
(6)sh
44.0806 91.75 mo
48.5806 91.75 li
@
517.332 91.75 mo
512.081 91.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/.notdef /eight 199{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
32.8301 97 mo
(8)sh
44.0806 34.75 mo
48.5806 34.75 li
@
517.332 34.75 mo
512.081 34.75 li
@
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
23.8301 40 mo
(10)
[8.89844 0 ]xsh
44.0806 .25 mo
517.332 .25 li
@
44.0806 371.501 mo
517.332 371.501 li
@
517.332 371.501 mo
517.332 .25 li
@
44.0806 371.501 mo
44.0806 .25 li
@
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
65.0801 316.001 mo
65.0801 331.751 li
.0131228 .959808 .914061 .00106813 cmyk
@
59.0806 316.001 mo
71.8301 316.001 li
@
59.0806 331.751 mo
71.8301 331.751 li
@
98.0801 281.501 mo
98.0801 297.251 li
@
92.0801 281.501 mo
104.08 281.501 li
@
92.0801 297.251 mo
104.08 297.251 li
@
122.83 271.751 mo
122.83 287.501 li
@
116.83 271.751 mo
128.83 271.751 li
@
116.83 287.501 mo
128.83 287.501 li
@
158.83 241.751 mo
158.83 257.501 li
@
152.08 241.751 mo
164.83 241.751 li
@
152.08 257.501 mo
164.83 257.501 li
@
200.08 228.251 mo
200.08 244.001 li
@
194.08 228.251 mo
206.831 228.251 li
@
194.08 244.001 mo
206.831 244.001 li
@
251.831 178 mo
251.831 193.75 li
@
245.831 178 mo
258.581 178 li
@
245.831 193.75 mo
258.581 193.75 li
@
316.331 128.5 mo
316.331 144.25 li
@
309.581 128.5 mo
322.331 128.5 li
@
309.581 144.25 mo
322.331 144.25 li
@
388.331 87.25 mo
388.331 102.25 li
@
382.331 87.25 mo
394.331 87.25 li
@
382.331 102.25 mo
394.331 102.25 li
@
473.081 28.75 mo
473.081 44.5 li
@
467.081 28.75 mo
479.831 28.75 li
@
467.081 44.5 mo
479.831 44.5 li
@
grestore
68.0801 323.501 mo
68.0801 325.158 66.7373 326.501 65.0801 326.501 cv
63.4233 326.501 62.0801 325.158 62.0801 323.501 cv
62.0801 321.844 63.4233 320.501 65.0801 320.501 cv
66.7373 320.501 68.0801 321.844 68.0801 323.501 cv
.0131228 .959808 .914061 .00106813 cmyk
f
101.08 289.001 mo
101.08 290.658 99.7373 292.001 98.0801 292.001 cv
96.4229 292.001 95.0801 290.658 95.0801 289.001 cv
95.0801 287.344 96.4229 286.001 98.0801 286.001 cv
99.7373 286.001 101.08 287.344 101.08 289.001 cv
f
125.83 279.251 mo
125.83 280.907 124.487 282.251 122.83 282.251 cv
121.174 282.251 119.83 280.907 119.83 279.251 cv
119.83 277.594 121.174 276.251 122.83 276.251 cv
124.487 276.251 125.83 277.594 125.83 279.251 cv
f
161.83 250.001 mo
161.83 251.657 160.487 253.001 158.83 253.001 cv
157.174 253.001 155.83 251.657 155.83 250.001 cv
155.83 248.344 157.174 247.001 158.83 247.001 cv
160.487 247.001 161.83 248.344 161.83 250.001 cv
f
203.08 235.751 mo
203.08 237.407 201.737 238.751 200.08 238.751 cv
198.424 238.751 197.08 237.407 197.08 235.751 cv
197.08 234.094 198.424 232.751 200.08 232.751 cv
201.737 232.751 203.08 234.094 203.08 235.751 cv
f
254.83 185.501 mo
254.83 187.157 253.487 188.501 251.83 188.501 cv
250.174 188.501 248.83 187.157 248.83 185.501 cv
248.83 183.844 250.174 182.501 251.83 182.501 cv
253.487 182.501 254.83 183.844 254.83 185.501 cv
f
319.331 136.001 mo
319.331 137.657 317.987 139.001 316.331 139.001 cv
314.674 139.001 313.331 137.657 313.331 136.001 cv
313.331 134.344 314.674 133.001 316.331 133.001 cv
317.987 133.001 319.331 134.344 319.331 136.001 cv
f
391.331 94.75 mo
391.331 96.4072 389.987 97.75 388.331 97.75 cv
386.674 97.75 385.331 96.4072 385.331 94.75 cv
385.331 93.0938 386.674 91.75 388.331 91.75 cv
389.987 91.75 391.331 93.0938 391.331 94.75 cv
f
476.081 36.25 mo
476.081 37.9072 474.738 39.25 473.081 39.25 cv
471.425 39.25 470.081 37.9072 470.081 36.25 cv
470.081 34.5938 471.425 33.25 473.081 33.25 cv
474.738 33.25 476.081 34.5938 476.081 36.25 cv
f
68.0801 323.501 mo
68.0801 325.158 66.7373 326.501 65.0801 326.501 cv
63.4233 326.501 62.0801 325.158 62.0801 323.501 cv
62.0801 321.844 63.4233 320.501 65.0801 320.501 cv
66.7373 320.501 68.0801 321.844 68.0801 323.501 cv
@
101.08 289.001 mo
101.08 290.658 99.7373 292.001 98.0801 292.001 cv
96.4229 292.001 95.0801 290.658 95.0801 289.001 cv
95.0801 287.344 96.4229 286.001 98.0801 286.001 cv
99.7373 286.001 101.08 287.344 101.08 289.001 cv
@
125.83 279.251 mo
125.83 280.907 124.487 282.251 122.83 282.251 cv
121.174 282.251 119.83 280.907 119.83 279.251 cv
119.83 277.594 121.174 276.251 122.83 276.251 cv
124.487 276.251 125.83 277.594 125.83 279.251 cv
@
161.83 250.001 mo
161.83 251.657 160.487 253.001 158.83 253.001 cv
157.174 253.001 155.83 251.657 155.83 250.001 cv
155.83 248.344 157.174 247.001 158.83 247.001 cv
160.487 247.001 161.83 248.344 161.83 250.001 cv
@
203.08 235.751 mo
203.08 237.407 201.737 238.751 200.08 238.751 cv
198.424 238.751 197.08 237.407 197.08 235.751 cv
197.08 234.094 198.424 232.751 200.08 232.751 cv
201.737 232.751 203.08 234.094 203.08 235.751 cv
@
254.83 185.501 mo
254.83 187.157 253.487 188.501 251.83 188.501 cv
250.174 188.501 248.83 187.157 248.83 185.501 cv
248.83 183.844 250.174 182.501 251.83 182.501 cv
253.487 182.501 254.83 183.844 254.83 185.501 cv
@
319.331 136.001 mo
319.331 137.657 317.987 139.001 316.331 139.001 cv
314.674 139.001 313.331 137.657 313.331 136.001 cv
313.331 134.344 314.674 133.001 316.331 133.001 cv
317.987 133.001 319.331 134.344 319.331 136.001 cv
@
391.331 94.75 mo
391.331 96.4072 389.987 97.75 388.331 97.75 cv
386.674 97.75 385.331 96.4072 385.331 94.75 cv
385.331 93.0938 386.674 91.75 388.331 91.75 cv
389.987 91.75 391.331 93.0938 391.331 94.75 cv
@
476.081 36.25 mo
476.081 37.9072 474.738 39.25 473.081 39.25 cv
471.425 39.25 470.081 37.9072 470.081 36.25 cv
470.081 34.5938 471.425 33.25 473.081 33.25 cv
474.738 33.25 476.081 34.5938 476.081 36.25 cv
@
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
44.0806 334.001 mo
48.5806 331.001 li
58.3306 324.251 li
68.0801 316.751 li
78.5801 310.001 li
88.3301 302.501 li
98.8301 295.751 li
108.58 289.001 li
118.33 281.501 li
128.83 274.751 li
138.58 268.001 li
149.08 260.501 li
158.83 253.751 li
169.33 246.251 li
179.08 239.501 li
188.83 232.751 li
199.33 225.251 li
209.081 218.501 li
219.581 211.751 li
229.331 204.251 li
239.831 197.5 li
249.581 190.75 li
259.331 183.25 li
269.831 176.5 li
279.581 169 li
290.081 162.25 li
299.831 155.5 li
309.581 148 li
320.081 141.25 li
329.831 134.5 li
340.331 127 li
350.081 120.25 li
360.581 112.75 li
370.331 106 li
380.081 99.25 li
390.581 91.75 li
400.331 85 li
410.831 78.25 li
420.581 70.75 li
430.331 64 li
440.831 57.25 li
450.581 49.75 li
461.081 43 li
470.831 35.5 li
481.331 28.75 li
491.081 22 li
500.831 14.5 li
511.331 7.75 li
518.082 3.25 li
@
grestore
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368
260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A
577DC235F833AFCC30669C812FBF097879E1> |-
/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A
2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D47
14AF52ABD0227B6CDD854C568D5A6F3817645C5> |-
/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/D <1C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD247
4EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4
D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767
633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A048906
8CBF65F37E7CD4C7284AEAF641D010DF> |-
/K <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B4538
2285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
/W <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0DE
3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A55141
4253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E525
278C31C213B6FF1A25> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A0
65D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D55
9B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C2
47BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC
9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD8
8F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF57
5C72F67F4BEBB98F8AFA57505EC9> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/w <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA
646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D726
4371419D7043A117419C0FAF4C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 68 /D put
dup 75 /K put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero 
/one /two /three /four /five /six /.notdef /eight 
11{/.notdef}rp /D 6{/.notdef}rp /K 8{/.notdef}rp /T 2{/.notdef}rp /W 
9{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef 
/r /s /t 2{/.notdef}rp /w 136{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
147.58 409.001 mo
(Disipated power / glass area \(mW/mm)sh
IOXMSA+ArialMT*1 [12 0 0 -12 0 0 ]msf
418.331 401.501 mo
(2)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
424.331 409.001 mo
(\))sh
%ADOBeginSubsetFont: SymbolMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SymbolMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /Delta put
def
/FontBBox {0 -220 1113 1005} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235
BDD70699E096A6312D> |-
/Delta <1C60D8A8C9B7D7E8D37714888B3A9969C9B649A6AE211DE5892AE2A8
71F281F62C724D805D2A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMSB+SymbolMT /SymbolMT findfont ct_VMDictPut
/IOXMSB+SymbolMT*1 
[68{/.notdef}rp /Delta 187{/.notdef}rp]
IOXMSB+SymbolMT nf
IOXMSB+SymbolMT*1 [0 -16 -16 0 0 0 ]msf
14.0801 208.751 mo
(D)sh
IOXMSA+ArialMT*1 [0 -16 -16 0 0 0 ]msf
14.0806 199.001 mo
(T \(K\))
[-9.77344 -4.44531 -5.32813 -10.6719 0 ]ysh
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
65.0801 317.501 mo
65.0801 331.751 li
.955352 .928405 3.0518e-5 3.0518e-5 cmyk
@
62.8306 317.501 mo
67.3301 317.501 li
@
62.8306 331.751 mo
67.3301 331.751 li
@
74.0801 295.751 mo
74.0801 310.001 li
@
71.8301 295.751 mo
76.3301 295.751 li
@
71.8301 310.001 mo
76.3301 310.001 li
@
83.0801 280.751 mo
83.0801 295.001 li
@
80.8301 280.751 mo
85.3301 280.751 li
@
80.8301 295.001 mo
85.3301 295.001 li
@
95.0801 283.001 mo
95.0801 297.251 li
@
92.8301 283.001 mo
97.3301 283.001 li
@
92.8301 297.251 mo
97.3301 297.251 li
@
110.83 273.251 mo
110.83 287.501 li
@
108.58 273.251 mo
113.08 273.251 li
@
108.58 287.501 mo
113.08 287.501 li
@
128.83 265.751 mo
128.83 280.001 li
@
126.58 265.751 mo
131.08 265.751 li
@
126.58 280.001 mo
131.08 280.001 li
@
152.83 241.751 mo
152.83 256.001 li
@
150.58 241.751 mo
154.33 241.751 li
@
150.58 256.001 mo
154.33 256.001 li
@
176.83 210.251 mo
176.83 224.501 li
@
174.58 210.251 mo
179.08 210.251 li
@
174.58 224.501 mo
179.08 224.501 li
@
207.581 207.251 mo
207.581 221.501 li
@
205.331 207.251 mo
209.831 207.251 li
@
205.331 221.501 mo
209.831 221.501 li
@
241.331 169 mo
241.331 183.25 li
@
239.081 169 mo
242.831 169 li
@
239.081 183.25 mo
242.831 183.25 li
@
281.831 142.75 mo
281.831 157 li
@
279.581 142.75 mo
284.081 142.75 li
@
279.581 157 mo
284.081 157 li
@
grestore
62.0806 327.251 mo
68.0806 327.251 li
68.0806 321.251 li
62.0806 321.251 li
62.0806 327.251 li
cp
.955352 .928405 3.0518e-5 3.0518e-5 cmyk
ef
0 lj
62.0806 327.251 mo
68.0806 327.251 li
68.0806 321.251 li
62.0806 321.251 li
62.0806 327.251 li
cp
@
71.0801 305.501 mo
77.0801 305.501 li
77.0801 299.501 li
71.0801 299.501 li
71.0801 305.501 li
cp
ef
71.0801 305.501 mo
77.0801 305.501 li
77.0801 299.501 li
71.0801 299.501 li
71.0801 305.501 li
cp
@
80.0801 291.251 mo
86.0801 291.251 li
86.0801 285.251 li
80.0801 285.251 li
80.0801 291.251 li
cp
ef
80.0801 291.251 mo
86.0801 291.251 li
86.0801 285.251 li
80.0801 285.251 li
80.0801 291.251 li
cp
@
92.0801 292.751 mo
98.0801 292.751 li
98.0801 286.751 li
92.0801 286.751 li
92.0801 292.751 li
cp
ef
92.0801 292.751 mo
98.0801 292.751 li
98.0801 286.751 li
92.0801 286.751 li
92.0801 292.751 li
cp
@
107.83 283.001 mo
113.83 283.001 li
113.83 277.001 li
107.83 277.001 li
107.83 283.001 li
cp
ef
107.83 283.001 mo
113.83 283.001 li
113.83 277.001 li
107.83 277.001 li
107.83 283.001 li
cp
@
125.83 276.251 mo
131.83 276.251 li
131.83 270.251 li
125.83 270.251 li
125.83 276.251 li
cp
ef
125.83 276.251 mo
131.83 276.251 li
131.83 270.251 li
125.83 270.251 li
125.83 276.251 li
cp
@
149.83 251.501 mo
155.83 251.501 li
155.83 245.501 li
149.83 245.501 li
149.83 251.501 li
cp
ef
149.83 251.501 mo
155.83 251.501 li
155.83 245.501 li
149.83 245.501 li
149.83 251.501 li
cp
@
173.83 220.001 mo
179.83 220.001 li
179.83 214.001 li
173.83 214.001 li
173.83 220.001 li
cp
ef
173.83 220.001 mo
179.83 220.001 li
179.83 214.001 li
173.83 214.001 li
173.83 220.001 li
cp
@
204.581 217.751 mo
210.581 217.751 li
210.581 211.751 li
204.581 211.751 li
204.581 217.751 li
cp
ef
204.581 217.751 mo
210.581 217.751 li
210.581 211.751 li
204.581 211.751 li
204.581 217.751 li
cp
@
238.331 178.75 mo
244.331 178.75 li
244.331 172.75 li
238.331 172.75 li
238.331 178.75 li
cp
ef
238.331 178.75 mo
244.331 178.75 li
244.331 172.75 li
238.331 172.75 li
238.331 178.75 li
cp
@
278.831 153.25 mo
284.831 153.25 li
284.831 147.25 li
278.831 147.25 li
278.831 153.25 li
cp
ef
278.831 153.25 mo
284.831 153.25 li
284.831 147.25 li
278.831 147.25 li
278.831 153.25 li
cp
@
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
44.0806 328.751 mo
47.0806 325.751 li
50.8306 322.751 li
54.5806 320.501 li
58.3306 317.501 li
62.0806 314.501 li
65.8301 311.501 li
69.5801 309.251 li
72.5801 306.251 li
76.3301 303.251 li
80.0801 301.001 li
83.8301 298.001 li
87.5801 295.001 li
91.3301 292.751 li
95.0801 289.751 li
98.8301 286.751 li
101.83 283.751 li
105.58 281.501 li
109.33 278.501 li
113.08 275.501 li
116.83 273.251 li
120.58 270.251 li
124.33 267.251 li
128.08 265.001 li
131.83 262.001 li
134.83 259.001 li
138.58 256.001 li
142.33 253.751 li
146.08 250.751 li
149.83 247.751 li
153.58 245.501 li
157.33 242.501 li
161.08 239.501 li
164.83 237.251 li
167.83 234.251 li
171.58 231.251 li
175.33 228.251 li
179.08 226.001 li
182.83 223.001 li
186.58 220.001 li
190.33 217.751 li
194.08 214.751 li
197.08 211.751 li
200.83 209.501 li
204.581 206.501 li
208.331 203.501 li
212.081 200.5 li
215.831 198.25 li
219.581 195.25 li
223.331 192.25 li
227.081 190 li
230.081 187 li
233.831 184 li
237.581 181.75 li
241.331 178.75 li
245.081 175.75 li
248.831 172.75 li
252.581 170.5 li
256.331 167.5 li
260.081 164.5 li
263.081 162.25 li
266.831 159.25 li
270.581 156.25 li
274.331 154 li
278.081 151 li
281.831 148 li
285.581 145 li
289.331 142.75 li
292.331 139.75 li
296.081 136.75 li
299.831 134.5 li
303.581 131.5 li
307.331 128.5 li
311.081 126.25 li
314.831 123.25 li
318.581 120.25 li
322.331 117.25 li
325.331 115 li
329.081 112 li
332.831 109 li
336.581 106.75 li
340.331 103.75 li
344.081 100.75 li
347.831 98.5 li
351.581 95.5 li
355.331 92.5 li
@
65.0801 332.501 mo
65.0801 349.001 li
.953826 .0484932 1 .00991836 cmyk
@
62.0806 332.501 mo
68.8301 332.501 li
@
62.0806 349.001 mo
68.8301 349.001 li
@
88.3301 288.251 mo
88.3301 304.751 li
@
85.3301 288.251 mo
92.0801 288.251 li
@
85.3301 304.751 mo
92.0801 304.751 li
@
107.08 279.251 mo
107.08 295.751 li
@
104.08 279.251 mo
110.83 279.251 li
@
104.08 295.751 mo
110.83 295.751 li
@
131.83 255.251 mo
131.83 271.001 li
@
128.08 255.251 mo
134.83 255.251 li
@
128.08 271.001 mo
134.83 271.001 li
@
161.08 232.001 mo
161.08 248.501 li
@
157.33 232.001 mo
164.83 232.001 li
@
157.33 248.501 mo
164.83 248.501 li
@
196.33 231.251 mo
196.33 247.751 li
@
192.58 231.251 mo
199.33 231.251 li
@
192.58 247.751 mo
199.33 247.751 li
@
242.831 205.751 mo
242.831 221.501 li
@
239.081 205.751 mo
246.581 205.751 li
@
239.081 221.501 mo
246.581 221.501 li
@
296.081 169.75 mo
296.081 185.5 li
@
293.081 169.75 mo
299.831 169.75 li
@
293.081 185.5 mo
299.831 185.5 li
@
353.081 127 mo
353.081 143.5 li
@
349.331 127 mo
356.831 127 li
@
349.331 143.5 mo
356.831 143.5 li
@
390.581 103.75 mo
390.581 119.5 li
@
386.831 103.75 mo
394.331 103.75 li
@
386.831 119.5 mo
394.331 119.5 li
@
425.831 84.25 mo
425.831 100.75 li
@
422.081 84.25 mo
429.581 84.25 li
@
422.081 100.75 mo
429.581 100.75 li
@
grestore
65.0801 344.501 mo
68.8301 338.501 li
61.3306 338.501 li
65.0801 344.501 li
.953826 .0484932 1 .00991836 cmyk
ef
65.0801 344.501 mo
68.8301 338.501 li
61.3306 338.501 li
65.0801 344.501 li
cp
@
88.3301 300.251 mo
92.0801 294.251 li
84.5801 294.251 li
88.3301 300.251 li
ef
88.3301 300.251 mo
92.0801 294.251 li
84.5801 294.251 li
88.3301 300.251 li
cp
@
107.08 291.251 mo
110.83 285.251 li
103.33 285.251 li
107.08 291.251 li
ef
107.08 291.251 mo
110.83 285.251 li
103.33 285.251 li
107.08 291.251 li
cp
@
131.83 267.251 mo
135.58 261.251 li
128.08 261.251 li
131.83 267.251 li
ef
131.83 267.251 mo
135.58 261.251 li
128.08 261.251 li
131.83 267.251 li
cp
@
161.08 244.001 mo
164.83 238.001 li
157.33 238.001 li
161.08 244.001 li
ef
161.08 244.001 mo
164.83 238.001 li
157.33 238.001 li
161.08 244.001 li
cp
@
196.33 243.251 mo
200.08 237.251 li
192.58 237.251 li
196.33 243.251 li
ef
196.33 243.251 mo
200.08 237.251 li
192.58 237.251 li
196.33 243.251 li
cp
@
242.831 217.751 mo
246.581 211.751 li
239.081 211.751 li
242.831 217.751 li
ef
242.831 217.751 mo
246.581 211.751 li
239.081 211.751 li
242.831 217.751 li
cp
@
296.081 181.75 mo
299.831 175.75 li
292.331 175.75 li
296.081 181.75 li
ef
296.081 181.75 mo
299.831 175.75 li
292.331 175.75 li
296.081 181.75 li
cp
@
353.081 139 mo
356.831 133 li
349.331 133 li
353.081 139 li
ef
353.081 139 mo
356.831 133 li
349.331 133 li
353.081 139 li
cp
@
390.581 115.75 mo
394.331 109.75 li
386.831 109.75 li
390.581 115.75 li
ef
390.581 115.75 mo
394.331 109.75 li
386.831 109.75 li
390.581 115.75 li
cp
@
425.831 96.25 mo
429.581 90.25 li
422.081 90.25 li
425.831 96.25 li
ef
425.831 96.25 mo
429.581 90.25 li
422.081 90.25 li
425.831 96.25 li
cp
@
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
44.0806 331.001 mo
47.0806 328.751 li
51.5806 325.751 li
56.8306 322.751 li
62.0806 319.751 li
67.3301 316.001 li
71.8301 313.001 li
77.0801 310.001 li
82.3301 307.001 li
86.8301 304.001 li
92.0801 300.251 li
97.3301 297.251 li
102.58 294.251 li
107.08 291.251 li
112.33 287.501 li
117.58 284.501 li
122.08 281.501 li
127.33 278.501 li
132.58 275.501 li
137.83 271.751 li
142.33 268.751 li
147.58 265.751 li
152.83 262.751 li
157.33 259.751 li
162.58 256.001 li
167.83 253.001 li
172.33 250.001 li
177.58 247.001 li
182.83 244.001 li
188.08 240.251 li
192.58 237.251 li
197.83 234.251 li
203.081 231.251 li
207.581 228.251 li
212.831 224.501 li
218.081 221.501 li
223.331 218.501 li
227.831 215.501 li
233.081 211.751 li
238.331 208.751 li
242.831 205.751 li
248.081 202.751 li
253.331 199.75 li
258.581 196 li
263.081 193 li
268.331 190 li
273.581 187 li
278.081 184 li
283.331 180.25 li
288.581 177.25 li
293.831 174.25 li
298.331 171.25 li
303.581 168.25 li
308.831 164.5 li
313.331 161.5 li
318.581 158.5 li
323.831 155.5 li
328.331 152.5 li
333.581 148.75 li
338.831 145.75 li
344.081 142.75 li
348.581 139.75 li
353.831 136 li
359.081 133 li
363.581 130 li
368.831 127 li
374.081 124 li
379.331 120.25 li
383.831 117.25 li
389.081 114.25 li
394.331 111.25 li
398.831 108.25 li
404.081 104.5 li
409.331 101.5 li
414.581 98.5 li
419.081 95.5 li
424.331 92.5 li
429.581 88.75 li
434.081 85.75 li
439.331 82.75 li
444.581 79.75 li
449.831 76.75 li
454.331 73 li
459.581 70 li
464.831 67 li
469.331 64 li
474.581 60.25 li
479.831 57.25 li
484.331 54.25 li
489.581 51.25 li
494.831 48.25 li
@
65.0801 325.751 mo
65.0801 349.751 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
@
64.3306 325.751 mo
65.8301 325.751 li
@
64.3306 349.751 mo
65.8301 349.751 li
@
71.0801 283.001 mo
71.0801 306.251 li
@
70.3301 283.001 mo
71.0801 283.001 li
@
70.3301 306.251 mo
71.0801 306.251 li
@
74.0801 266.501 mo
74.0801 290.501 li
@
73.3301 266.501 mo
74.8301 266.501 li
@
73.3301 290.501 mo
74.8301 290.501 li
@
78.5801 262.001 mo
78.5801 285.251 li
@
77.8301 262.001 mo
79.3301 262.001 li
@
77.8301 285.251 mo
79.3301 285.251 li
@
83.8301 217.001 mo
83.8301 240.251 li
@
83.0801 217.001 mo
84.5801 217.001 li
@
83.0801 240.251 mo
84.5801 240.251 li
@
89.8301 205.001 mo
89.8301 228.251 li
@
89.0801 205.001 mo
90.5801 205.001 li
@
89.0801 228.251 mo
90.5801 228.251 li
@
97.3301 167.5 mo
97.3301 190.75 li
@
96.5801 167.5 mo
97.3301 167.5 li
@
96.5801 190.75 mo
97.3301 190.75 li
@
105.58 151.75 mo
105.58 175 li
@
104.83 151.75 mo
106.33 151.75 li
@
104.83 175 mo
106.33 175 li
@
114.58 106 mo
114.58 129.25 li
@
113.83 106 mo
115.33 106 li
@
113.83 129.25 mo
115.33 129.25 li
@
127.33 71.5 mo
127.33 94.75 li
@
126.58 71.5 mo
128.08 71.5 li
@
126.58 94.75 mo
128.08 94.75 li
@
135.58 47.5 mo
135.58 70.75 li
@
134.83 47.5 mo
136.33 47.5 li
@
134.83 70.75 mo
136.33 70.75 li
@
grestore
65.0801 341.501 mo
68.0801 337.751 li
65.0801 334.001 li
62.0806 337.751 li
65.0801 341.501 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
ef
65.0801 341.501 mo
68.0801 337.751 li
65.0801 334.001 li
62.0806 337.751 li
65.0801 341.501 li
cp
@
71.0801 298.751 mo
74.0801 295.001 li
71.0801 291.251 li
68.0801 295.001 li
71.0801 298.751 li
ef
71.0801 298.751 mo
74.0801 295.001 li
71.0801 291.251 li
68.0801 295.001 li
71.0801 298.751 li
cp
@
74.0801 282.251 mo
77.0801 278.501 li
74.0801 274.751 li
71.0801 278.501 li
74.0801 282.251 li
ef
74.0801 282.251 mo
77.0801 278.501 li
74.0801 274.751 li
71.0801 278.501 li
74.0801 282.251 li
cp
@
78.5801 277.001 mo
81.5801 273.251 li
78.5801 269.501 li
75.5801 273.251 li
78.5801 277.001 li
ef
78.5801 277.001 mo
81.5801 273.251 li
78.5801 269.501 li
75.5801 273.251 li
78.5801 277.001 li
cp
@
83.8301 232.001 mo
86.8301 228.251 li
83.8301 224.501 li
80.8301 228.251 li
83.8301 232.001 li
ef
83.8301 232.001 mo
86.8301 228.251 li
83.8301 224.501 li
80.8301 228.251 li
83.8301 232.001 li
cp
@
89.8301 220.001 mo
92.8301 216.251 li
89.8301 212.501 li
86.8301 216.251 li
89.8301 220.001 li
ef
89.8301 220.001 mo
92.8301 216.251 li
89.8301 212.501 li
86.8301 216.251 li
89.8301 220.001 li
cp
@
97.3301 183.25 mo
100.33 179.5 li
97.3301 175.75 li
94.3301 179.5 li
97.3301 183.25 li
ef
97.3301 183.25 mo
100.33 179.5 li
97.3301 175.75 li
94.3301 179.5 li
97.3301 183.25 li
cp
@
105.58 167.5 mo
108.58 163.75 li
105.58 160 li
102.58 163.75 li
105.58 167.5 li
ef
105.58 167.5 mo
108.58 163.75 li
105.58 160 li
102.58 163.75 li
105.58 167.5 li
cp
@
114.58 121.75 mo
117.58 118 li
114.58 114.25 li
111.58 118 li
114.58 121.75 li
ef
114.58 121.75 mo
117.58 118 li
114.58 114.25 li
111.58 118 li
114.58 121.75 li
cp
@
127.33 86.5 mo
130.33 82.75 li
127.33 79 li
124.33 82.75 li
127.33 86.5 li
ef
127.33 86.5 mo
130.33 82.75 li
127.33 79 li
124.33 82.75 li
127.33 86.5 li
cp
@
135.58 62.5 mo
138.58 58.75 li
135.58 55 li
132.58 58.75 li
135.58 62.5 li
ef
135.58 62.5 mo
138.58 58.75 li
135.58 55 li
132.58 58.75 li
135.58 62.5 li
cp
@
gsave
44.0806 .25 mo
44.0806 372.251 li
518.082 372.251 li
518.082 .25 li
44.0806 .25 li
cp
clp
52.3306 365.501 mo
53.0806 361.751 li
54.5806 358.001 li
55.3306 355.001 li
56.0806 351.251 li
57.5806 347.501 li
58.3306 343.751 li
59.0806 340.001 li
59.8306 336.251 li
61.3306 332.501 li
62.0806 328.751 li
62.8306 325.001 li
64.3306 321.251 li
65.0801 317.501 li
65.8301 313.751 li
67.3301 310.001 li
68.0801 306.251 li
68.8301 302.501 li
69.5801 298.751 li
71.0801 295.001 li
71.8301 291.251 li
72.5801 287.501 li
74.0801 283.751 li
74.8301 280.001 li
75.5801 276.251 li
76.3301 272.501 li
77.8301 268.751 li
78.5801 265.001 li
79.3301 261.251 li
80.8301 257.501 li
81.5801 253.751 li
82.3301 250.001 li
83.8301 246.251 li
84.5801 243.251 li
85.3301 239.501 li
86.0801 235.751 li
87.5801 232.001 li
88.3301 228.251 li
89.0801 224.501 li
90.5801 220.751 li
91.3301 217.001 li
92.0801 213.251 li
93.5801 209.501 li
94.3301 205.751 li
95.0801 202 li
95.8301 198.25 li
97.3301 194.5 li
98.0801 190.75 li
98.8301 187 li
100.33 183.25 li
101.08 179.5 li
101.83 175.75 li
102.58 172 li
104.08 168.25 li
104.83 164.5 li
105.58 160.75 li
107.08 157 li
107.83 153.25 li
108.58 149.5 li
110.08 145.75 li
110.83 142 li
111.58 138.25 li
112.33 134.5 li
113.83 130.75 li
114.58 127.75 li
115.33 124 li
116.83 120.25 li
117.58 116.5 li
118.33 112.75 li
119.83 109 li
120.58 105.25 li
121.33 101.5 li
122.08 97.75 li
123.58 94 li
124.33 90.25 li
125.08 86.5 li
126.58 82.75 li
127.33 79 li
128.08 75.25 li
129.58 71.5 li
130.33 67.75 li
131.08 64 li
131.83 60.25 li
133.33 56.5 li
134.08 52.75 li
134.83 49 li
136.33 45.25 li
137.08 41.5 li
137.83 37.75 li
138.58 34 li
140.08 30.25 li
140.83 26.5 li
141.58 22.75 li
143.08 19 li
143.83 15.25 li
144.58 12.25 li
146.08 8.5 li
146.83 4.75 li
147.58 1 li
147.58 .25 li
@
grestore
278.831 366.251 mo
511.331 366.251 li
511.331 273.251 li
278.831 273.251 li
278.831 366.251 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
278.831 366.251 mo
278.831 273.251 li
511.331 273.251 li
511.331 366.251 li
278.831 366.251 li
@
278.831 273.251 mo
511.331 273.251 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
@
278.831 366.251 mo
511.331 366.251 li
@
511.331 366.251 mo
511.331 273.251 li
@
278.831 366.251 mo
278.831 273.251 li
@
278.831 366.251 mo
511.331 366.251 li
@
278.831 366.251 mo
278.831 273.251 li
@
278.831 273.251 mo
511.331 273.251 li
@
278.831 366.251 mo
511.331 366.251 li
@
511.331 366.251 mo
511.331 273.251 li
@
278.831 366.251 mo
278.831 273.251 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSA+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629
C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFE
AD7BE7BD65F1051699CCF4B0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSA+ArialMT /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/IOXMSA+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero 
/one /two /three /four /five /six /.notdef /eight 
11{/.notdef}rp /D 6{/.notdef}rp /K 8{/.notdef}rp /T 2{/.notdef}rp /W 
9{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef 
/r /s /t 2{/.notdef}rp /w /x 135{/.notdef}rp]
IOXMSA+ArialMT nf
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
317.831 292.001 mo
( 80)sh
%ADOBeginSubsetFont: SymbolMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMSB+SymbolMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/mu <1C60D8A8C9B7FBE1CEF90ADFEE69DD2DD9D352B10CB42426EE82DC52C52
D4F8699E0A310464D7FB1FA805D8CC4DAB824E1C70115C99A4D0C4724CCCD002
46EE5727B763DCCC1EF93F4F836F440B68CBB4BA9924DABB089DDC3F318794A0
4D0CC8D5CBFA71E33ABDD1062939BBB2EF2A57DB0B26627DF9F16DB477D13BA9
B64308D9B28E9254BFC154A0BCA92D3CE9FAF30F5A21030ED7A722CD4D7FF3F8
0EC6836885BE3B1F2C1291EADA749447A3397B77736C040716B308AF7942AB81
3E31A36FB9E2F49D3817C6B7D80057676EF942208B0DC64D84FF73D34BE1D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMSB+SymbolMT /Encoding get
dup 109 /mu put
pop
%ADOEndSubsetFont
/IOXMSB+SymbolMT*1 
[68{/.notdef}rp /Delta 40{/.notdef}rp /mu 146{/.notdef}rp]
IOXMSB+SymbolMT nf
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
348.581 292.001 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
357.581 292.001 mo
(m x 100 )sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
418.331 292.001 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
427.331 292.001 mo
(m x 10 mm)sh
302.831 286.001 mo
302.831 287.658 301.487 289.001 299.831 289.001 cv
298.174 289.001 296.831 287.658 296.831 286.001 cv
296.831 284.344 298.174 283.001 299.831 283.001 cv
301.487 283.001 302.831 284.344 302.831 286.001 cv
.0131228 .959808 .914061 .00106813 cmyk
f
302.831 286.001 mo
302.831 287.658 301.487 289.001 299.831 289.001 cv
298.174 289.001 296.831 287.658 296.831 286.001 cv
296.831 284.344 298.174 283.001 299.831 283.001 cv
301.487 283.001 302.831 284.344 302.831 286.001 cv
@
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
317.831 314.501 mo
( 80)sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
348.581 314.501 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
357.581 314.501 mo
(m x 100 )sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
418.331 314.501 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
427.331 314.501 mo
(m x 20 mm)sh
296.831 311.501 mo
302.831 311.501 li
302.831 305.501 li
296.831 305.501 li
296.831 311.501 li
cp
.955352 .928405 3.0518e-5 3.0518e-5 cmyk
ef
296.831 311.501 mo
302.831 311.501 li
302.831 305.501 li
296.831 305.501 li
296.831 311.501 li
cp
@
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
317.831 337.751 mo
( 80)sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
348.581 337.751 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
357.581 337.751 mo
(m x 100 )sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
418.331 337.751 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
427.331 337.751 mo
(m x 40 mm)sh
299.831 334.001 mo
303.581 328.001 li
296.081 328.001 li
299.831 334.001 li
.953826 .0484932 1 .00991836 cmyk
ef
299.831 334.001 mo
303.581 328.001 li
296.081 328.001 li
299.831 334.001 li
cp
@
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
317.831 360.251 mo
(150)sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
348.581 360.251 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
357.581 360.251 mo
(m x 500 )sh
IOXMSB+SymbolMT*1 [16 0 0 -16 0 0 ]msf
418.331 360.251 mo
(m)sh
IOXMSA+ArialMT*1 [16 0 0 -16 0 0 ]msf
427.331 360.251 mo
(m x 20 mm)sh
299.831 356.501 mo
302.831 352.751 li
299.831 349.001 li
296.831 352.751 li
299.831 356.501 li
ef
299.831 356.501 mo
302.831 352.751 li
299.831 349.001 li
296.831 352.751 li
299.831 356.501 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IOXMSB+SymbolMT*1 uf
/IOXMSB+SymbolMT uf
/SymbolMT uf
/IOXMSA+ArialMT*1 uf
/IOXMSA+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Guillermo) ()
%%Title: (fig3.eps)
%%CreationDate: 12/27/2018 1:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6f6/[VXshrKHOTk*jJ]-eapt__S9'\tAR!Wh,aY=7pH!fSUYkq@r)aVCZ&4gI,l-5<mqC$%Q&6hX&-)_B+P53qUY2m'++@0Y
%s!\/k9T[SsK:*/ET.^?H[D(M_?UthtR:Ma>'VJisbG93X[$]'V!ihAY$5jn"eOJBJ[ksVHaeQ!qR8c\/OZY&sX+.U6_;k4oHI<;[
%97t(EhndI.h>LgK1e,A3.U/59mD8<-4Ga4ps8MGFP]*qaj_R%#oVJ-Pq=9!s[F$'eNKO.pSd'I(al-TPiO(H,%sfV0muAZg@20.E
%GOZFBp3M>%M0]T&Q/D=kh8-0?SY6Nd^&;mAI"J!O?La@TBf\[B6=%DUW#jh<ZGS="\Klt07,Ho**t1A?80@fP<$"1mBKtS*pq&,-
%9g%ASC0X?fj$A#AOa5qAaUB('IapX2U'N'T=G#_badcHEK*Cn='@Xc;-RQ0&Se#G>\R\/D"f7)7WR>.%l/0J<=d@q1C;8.m0O:!B
%Qi6qNLuZruN[(aMUPmejP-9Z>WIgi7IXtH_*qc<0r=(^5(pj=)*<*uoY=aYP[eq:C&RCD$ZY=nG/-b\q'Ju@NmCss8!HL5eL0(,h
%guUpB@54Ah:j[SUb6JDgR!]rB8EUS)A6#;8p8TqYm6E2/r>\N&)4LA"\c:&!()&esE%k-#7"m1\EkeML78=-NaU9._1=,kOd/Q_)
%&H\h.Bh69pBXN/f[D[(,X9.DH'9Vafh$<iaW+@S%bX8ihLmWq)p9]g.kONmAfTQ4IXSb6#,`@LSK\(#U?4-p]X]F\iU'U4^#Z!l$
%Sr+_;MW^C.b@[GM2@JEJ=X]T\6Et@8d@cI7$;dTrJ22f[Ahj&\`<lbs#+sfgMH-]RXBL=XeLE\\<hW3^!DaYoC_g)j1n[+/5q8!l
%P:i%?&X_W.<2Io0Qkt""@PBEZKjl_g3a2(_"pM2,"pP77GjH+bUb[l:?Juh3$=9DTJh5>,$jp>2f\lr1%-%Df"K/%#:^i'_Y>D+D
%JD]QAiQ`*1'3l/L_(2KW7Sa4R\kdWBi8`,3WM2i&*u'>^_CIH3-Ba=X4B!R:5!Uh>,FrP#)H%Hm#d<_,#"[qX?BrgR:[e_1@#XSI
%-BjN!5q_C&^ne>f4&7;^:*&RC_*&JWaJ66gUF-/ZSL7\fO@e2Kg.2hP#A%:nPX])3\2kKfGmn29="$OO*QCY>67Tl'P^rk0lBKF?
%-P>t_(kg<d3E)ZGFGDqR8;7ZZAJ.&5"T,!E"SW$S5p#GVSJXCOdX<N5iKNCq"6;K<;`[\kPu'B,H\*Bg6j*H$;V&@Me3VV6pM,(F
%OeqRKTleEZ)C=D.)DtC;f4LN3>+5ub'1F:OY+^MlQZec`-4Q0=4O;tNGZR9ZYP\\.H)/-;5?Qt(:O=I=W-TdXIa[)p?S4j_C[^=;
%T-rOfGnkX3q(%fR,OM'"<@[(Ap.kT`oid@QUqMu,HC]H8hT6k;r[Dk/jq(k@r0$O@)gR2n$L):de#79J7\cL"eJ^;2H08qbpPSOT
%TY.%_nBR6n/a"(\9UWPW7c74*8(5<PMCW;'mksYGSYSL3oT,Yp]'md'09Tr+^C$N1i:)#g2\eJ\W._nF5PRC$^I.Z4O1U6PdlOB:
%+^;d%[(^+F3V\pQE]%*m<e=q&OTKeEPTK>h>lg&=R_d?,!l2q.0J)k#;QWni',XkT1*6Xf&JTe6KN94OW?C?NSs"<q4KFF5TFQjZ
%UG(8n9W=IjkCoS3U:!dcd\_b.RS+T3.'$BEf+dQQjLQE4C_$frV:-@R5c0g7M':EU`p)MT(&U(_f78G;<B#t@L#4",/Z4e6T^/ZE
%iF\#Ndnum#Cq)O.6jlj_n3f3+V(AUKNDZK-Wk`@O+d!0[/ZPaZ3KE82;^=,3'9o2$8Frc@:V32'#_Y#`PX\BK;]<HBVf[G=UONX(
%Ul>gkW.I&UQ?<P1T2cL%/!I65H-Xo.&\8'=iMk"!``,g96It"m\=a\bgD*]a=4)L&@E&-ICJ_Qlrm;pWqC@t+LA%<Gc\n2PD&,K_
%K\0\q!Frm;@=V/p3uOh4@)9W<7O\`65k@6H3S^>=16hq&S=rGq9jkch24@HSSX<h4Ls@lLBr/+-pNZ%l:j>#'b[W^%N.TCXq5fYh
%&g>E9ETOj38JEZ?<O0SS$mHGZN+[K,a9G+?LBdObJOMQrDQ6/d6sXBVM@([Eee'o07>5"M;8p1^E[pjrIVf0\#\XeuP@;?'$$=BS
%KVgG8F8E.W4eg"3)J#T8U(WHX1a(G5N1hChcBF(c64k^cD3UGNcXD&tqC67iBgP7ZW3*@.1)uYfJIVbk/L)[E*(,:ABX7h*6PcE9
%kEMK9,gu-lih0:?Q;c9uJHF86$D]Vl$*._@"]Zq.0<#;B79L>OL\b=R3(@[-O66hm6`'C#1=bGFm>&]BX:?H<FW9-NWCnGs6S*Yb
%W5pZm&J5\fFc9"X-7lK<YL)cl*1E"Y:fZ+,0h5:UF[=4gHBTQ_kk`2\cBB\MCJ'.E`p-M0=^"sB>kq,3Q52fhAhr`NPBS,lOl.4!
%4`h\?!rZN7at+,3#0G0[*DBri?"F]e"a-UJ(d5kgg9a2qn;ks\LrH/t;LkoO.iK2eS3Zg)<.sB_P+`an<8u3.C0t+0.HWouIb==Y
%1gI0sL99`&fjIcE_MMC@<!91&+ZP('<*3_6Am*S@E-&$IcrPKu>nKr@gPk\jB:>B,:%R=Z$JB)l9IEMM:oV=3_Y@&0Q,OKml=hH>
%'j3dl0')Zo6+<iW)k_gTo+]A?Pr(<EjG3lpT^+]<ke>@.hq@9sUEFdb]7Ih@CYD(d0`JO2Va0uWKp[HW+`q15FY!SZ+]D5D]N$R4
%`]BuD&JQFj<O/>nd4PtP0slZO879`%-6gk#65_8RrQ0tClm8S:"bZU%jK3%nUkpKs-FcqXEj"^Bo!G@a)QQR^ZV="qTmXGgl5?Fm
%J%&OYF+ab&)5spAj/+<j:W:%4J:H+(<>:*Q6W$8!H`kT?`CdU-1RQR3)]n#pNJ*SF#P:/2MV1$Fe9$+8&IK2<B1L741O2IH,PL*#
%XW^jtD5?c74=MJQT+lU^Y0t&oFC"'dk1D'f@\of^/QIli.;OZuIoKBV7(,FYMC[753ZH,fY0bAn<@CqK"i@4FLgW^V"i^#+E"GD,
%8A`pKBlso#R=_[k"9cX2RRkl3DujRG>Z\!iniPsO]P`_(h)-$3g@%&^n#@[F,tm$(NA^?_hNH@GWcMLF<cX!C$-/0B1,;@[#SE%C
%i#gs"Ti'b=U^j$Ga9JLN/OYK[;Oh!>5rVeS--T;!.1c;o89`!fBI9:r&1(\mP0j6kmlAW4aJbBV!d#Pf+rgl"U+$5/TRj0QT_TR2
%rX5HpK\#cfOcWMT7;7?9l=7ue'^#QI!/nN;fBD8#C6Fe"Oj&Kq!?0-8&d/`?MO6o4J23'?WD"A49L-%BQW+ET!(,3d<GWa5SKiG<
%F`cTfj'e&,81CL2Gg'h5XEHHXNIjh>)3c#(^niaR87Tu1)hfi+Xrs*2MjeC'M?^$s?`LN5\GI]&BJ0X-dN>Jl&:B+F5g`&IWp"R.
%Z[b#5<UI@-V%'`e(Gbe[)(CYXm+=Lqih0&7`_:Z85:+M4JQ_#0f3h8U1eDt%oMbS3@R*n(]Xki+cCsOUnB#1Z=K&J.WN!\3N`ibN
%R85r7oO14i@MB^66u"2+;>]XoIk'Fd/$A/#`G7W"^fXD`$6PZo.PsGD,EtYhMXgtJGF0snhDL08ZVLi?Wfq$H-5*'k`_QH,`(QaY
%K2<.0/12!rK`<mg!GR`JWtkbJ>ga!CKgB2_RC#9(mj]ZleVmlR$--:VE<]>8,AZ0O<3i3,5SFs&=dW,9JGr.Y7M-Fd8N&!/OKMJ:
%0s5CdhtSs&NDRkUW46']GKkl`e*/*iN[>^d7S)8e8Tm`@rU3[[VG*a9?.<XXf5$I)65aB?U`*i66^sZQ'GHkZ\G79_R2/G<=]Gid
%Cb$2!/6,(Tq$*E0bnSTIL-kJsh,M*cC4kF-N0A!-B94"HSL;r&qmaHt#;scIa@3[f.YFB$\I2n\9*AN[-s%gG)iZSZdEsR][)OX3
%RW<uq?ImUb8sY>J5:Fl9+eZZJFrZ3Pj9GC_MFp>A_39Sd"feFC0]JNA!^j?I59ajV"=p<:q5$]5@5aBmZ:pf-j)f#/Znh(a^U+?e
%1O1:FU1BuOTqIFQWNENAdnFt.dfk1&ndb@T9AdZ8P\.Dkf]H=26Wr=2nk<Iii`5'?.\c-!:Xp]o\qVj46.@L%bXPokC,?&K_2des
%`"/,5L+\DF2i9`/>\[5NF>=O)3P)Y&#V70DWC>#,/smhs.^Z<.C]=^kOU<SkMQ/^FfL4$47=nB3['BE+c\P2ks-fNf;4To!^QXdp
%]P[?0:gK@RC%bUk5H7APgKJ+c>kQiR(U7bE;MD4nk7!V4?t[M7jIrk-Y>ROG3?j4mk_,"Q?ikpZ*g[1)OUW<THW@mJPu<lU'WRp&
%nTi8u<8K'K=$KVtUVbD(]4uepN2r'u(#pdYX)^X3>F!K8'qGte@^LT\8S+#.5L<u)Ng!W-'NqLZ-@A_2%TP:.Q5V"&REq6>.E<0&
%3A4:f\EX)!%>,:n-8%UXYUc5q3i\"7n1r^9)WI\f8E`ALSBqDEVUo9g5S[[+I$6!*W]It\U0S=1K`"MkZ)"u7oCNnt@q^Lp5#2NI
%eWj)\H4?#3R_k_r-j;[+9'8c=6pSO=OM[e+[B;B*%2#A.'IoY$RM466KcIE-@S0TG^S3ngX\r,A!u\8mlmDEjSk?"$AB6%Man^\j
%1Fo%F>eJ[JQqH=]oX8'Jp)lCrq,eYc6XVXeVNT$N1O1eoI4.n!0DO4s1nBU.s*>+O9.ZlfAtu=^kmou_;Qu6WIE:fj,`%+JeS"G$
%aGV$:U=5])WV=5"mLRFC]ajj4)@ZK&8KWLZp"CK0P,u<ikG`?+m`rQ(#L\*"@nE8@Nb4LKYa;rf[cPmjoeGbCE8(KZI@<4!#PiIr
%Zjf6mp@)_*s7&*L6/nX2$[L6iTjO]HC"R2s5#]lgI[g$94Xi7RgH>k;^enST"&Mm@,c,g^ks1\2qE[;D8DX%:P)Mjm$)T'0Fr-hs
%Rne*=Z7HHsJ"n[M<(A!X8]+;-%fD72k#8X7W]M.!XgBPOhPK]?YWkP+F$^5m^Y`l=L8/JJoC)4I1ec"N=rgW0V7t\ikS?K8R\\GX
%0Un`(ZUnp.n'P[#OObMqWTg<38a<d.G;b^ahm4Gt(K:+<?5LjNDQPG^qL\gCN7;O>eNb/ODGRjM!U`fK%hF/%D&LlTO.YgU4+X+'
%3!o-Z+]ZPSJ=7r$Lh10Vb65RkFnB5^5cS'b<L#24lF;/?N[pl*l:gl^>&U$tg*\$:R54YSRJQP3Fb0XgAkkpO;c;S=WGkK+FK3ph
%SdhRqn_ilcl!scNED6[[9e'L+Q*8_ApZ1;`k=A(l,0A_u@QT36W_EK&l$1oUm5>"$<Z>a_FL7lDQ_HhkeKrYTUfBlY8SYq&.FffB
%q@&1o>"1jB(_V?D;LCn01h%qnPTjkU?N72mr'6>u,?8@ZdS/8bR9Jclnp$%SnMgD,n?4@H'?g9@be`VqAG.SiK-uJ:![Q:s$_$pr
%4+aQ#@dmAh0%#hU*`M^?'R`F`#Hf*L\-4.eB`6kS4HlrI*_SZsdKC=4P6HN5?W-0!Y<WDE<s8%%c0H(MlH'l-bJ0VXB'<Z%*mM_%
%_tR$d?f?$De<,?B6!KY,jCokV`a@-j41lrqrGfcPISG,1akp8(j?p.!"f:0bUVU<Qne:eUMk^@HiEt#@1mW`L@"Yq*H0b^Wfq:KE
%b<c%k"*0,c3Kr465)>JIGM<(tbsFJVUNPRtNLkFtJHX+tJjq.L<,euDQq(IJ?(oQ\oUU1)TLu/3[6<^tFH"Ser;i(`BL/#GjJ;Di
%agKafl"@4U5c`$q_b4Jtl%<A$+bLL$dR?KMrQ.!uHMJgu1@TF^CJc\C$+l;b+qIJ)Ur2b>neo(YN<Zu9lq.?[n;Utq?R$=c=e:eF
%s"I8a@2CW%>lD![+:9*=<$-V`]2!=,Jq/_AM.ut&hpimqV?Kc6f#:SM1;7':nX)H'5D`N_W$=]/om\)\R#(M9Y_T5`cMCIQ!bX"f
%];+ib9U\XtU'jRPR*o0m)-?l@)4sI09)j2%'Z`)OopbqDJ<[@hiGeGX+oW6.!ZHh=,k+_[m;FEj7uo>#hrB9`53INqnF?T5]X!:J
%r=.Wod&0+l[snX./pJ@`I--$o!.&lUMVe#&@p!OP[fZR:VU,YP+,o,"cUKZVffP@iUM&2-i$?Nui1-DGs6eT;japO<.B*`Rlt^RQ
%rSTBHd3LI1G+Z7M2DQ[GT`XFj*D]sQ;c%K)j5#1c0%mneZS))]d5mqPnOG<(W'SlhR7Bl,bt4]n7imhi#b(V)kjPH)j0*V;P`F5B
%=2ed":!k&5MVr9b$]1g!q/>AM]AoZM;,=KC]G1kTk8RQ&4Xkq-L"u,>%2H"mEEp")bO,>WAsNRR.G+MdMEA+&Pu9q&[?".\5),CQ
%;GEFsiJlgWorkedfg;cd3<d#^?hU\s@&=]o#8<SY6cA.[3MeYJrR_):;2+)2j982/;>3`KGsW/r)ZN;9Yg^W?%Id[.M.l$LR\&Hb
%GShi5I$mC-3)Y!6Uj,6q^YKbuSiFX29`Han"TLf^pm630!+l0J":sPZ,-u1Zr=9Hh^Ik6>8K5#i=@3ZBHDf9m$,/\GqPX#Ls"%3B
%]`7jN5i;S\8Fjlqhu,c0N2QJnOtU@b@-U'n%ig?&.Da#VVhq<?rt4f`_rm58^u\f+q!WZMqWV^A9$)S$nE@\UDPR)i2jXDtN(Q6&
%a_b.0HQ(Jms--pq;jGbOBfqs6'Iaqjdef9!=la:Ak">XjSH92BbL'#O9)+@NItgjPf"-?!5JEt.]8*bq-$6#gE+`3uMT`pObqZ%d
%oga&X=1A4es3ECo/bSsWE9pj@qd!0f[TD>Kq4R#A_1;YRjX;]P%\Cej7%+;t"-B8d;r0/1a6bT22!KM9:lYIq3"8][/PeI'[bM76
%iS61\lUF&SZW+)dgV'0je9?91A`VIbGVh:DCCg9+RrXb^HfKR<0!*2kW$em*[dnmO4I_@_(N%fon,J_()7!^X<!P`E<,E0GC/6Ii
%@[p=!:7`uZ;S.msXfV.Cj-[a)dKForVfKDur\FoPk1O/SYE"![;H@a?PMY'#_,OctT^f+25qu4JGd8IR$AEj_QS)f>TsIUG35q+!
%`okS1,S_>#XZm[6g4(3RANBqc(d7hLJ/c+^#$7Q-dLL!dCc(CoT^cO.YWsZCnTf&'2mFFC"NE7bTTBr[[M0PmK!O[QE@onl\1rmG
%T!9rlq^Up,$QlZ"%F*+P\<c]4n7t#KIZ7r<<#0DF&lQeiPSg'!6u8JFNFQQ0C8V(n2r@-Eg/A:e:r85>3fTX>_!,Yr7U9s6+YZ8P
%F?c:SgEal&6gj]1,l'+>-tMkblT1&[QMd'`]TW7M%G#n)BtMh9oV[p=Gc_WkfltpeIa$Lf;XeKZ<cQ4b',`i7L2E<+C,i]l'p3DR
%^,-%hOaPV!p*ZI<?+>K;X\:T<4bm<gl)$]0PMTV@gJal31"O7(k,8NRM*j/:VV7<DI)5_?1k),23,Fnj+muYj*k6>1NkqMA)kT]B
%8WHpg^WQG5fjI).ncne)7mlpuK!MrF]=P^"VSV4gYZ^RoWa`ECUl!4l@8H_qUG#DVT@/"M)iW>*!)1m8,YG!%@99jgCs1j14WV#D
%)Td<mdA>>5%=>5hY[XU7^tTuF9R1@EQR%W#UPC$b'QVls'0.uh#0l3:H/=*W.[o_JfHV#$f)IPV<#g\!\-ombNkEDS^hI2$C7):n
%<oDF:j'm"ic8bO*dI'V<#g.6@%Lj@M]+EHgqa@0'aR]QYQqsX9fi"#+'l;4#Ot<0GkNkZu@Br8HVaU_djKh$8<i*Vt2h/A)`a^6n
%F>L>`II&'dWSZU!0JoJibFq?/!HX"uIC3<0E*%)a%p`1jHSl`->0,hgFol10Z5<3i"P;$/&b"@P]5/fFn)Mu4`@u8Y[aRJQHKEt&
%=dUB:Jo\Fc-<_Ximu2uQf#MAM:V28Y(rrQ`V#LQ@+F'\CA6Fo4Ei@3Nb&NjW__s/Xm47]CKEoT7:4'c-34u@Y!N]6j1DPCD:p<$E
%HW&2,?43W*7T98,G-jRI=]D:+!\]Q!WcbQs%F:L1W"^th4*i3\IWju(MGhIHN8'FBJlA,5-M;$$8L!hKTIELG9dpLN4W([CRsanL
%*Ag:9[aGj.;hIUe7I'H!;+i[1P9i'4M$*pC4nb"QeeBoKZPdMZ8uo0Zg/>=sLrMFlFWaR4#Zs"\,=qHnlB,IZ&U;Hhg^cO5IMe)%
%[3XBH@_Mnjd@r=/\I.+n<OhKaa*kLWJaeI=PI_p=<&(TiA,;;H9c;s+;$.Ab98kHtm@uJ)8?F,0>@b\3>1d(7e`'<qmP"uh@;AX1
%1)Hb#j(.B#5g"Gh",gnlaU-RFXHE&pd,r@*Wl'[imIA6k<taC40RA4E:.Nh5o2&P$KYN<%`'Nb'4Cl5eYl8ku-cqCY"4KW2*cW(F
%e\.&9,0e==3\&<jWoVWVZ=$m7\%NKY8alUd^GcL[d:=GJ"B"$Kh#li4P?`Z^L,qPo)-5AA/c/GW/m4kVQbk?\mrD4]5BE"j3VeZ7
%4*FBe,tIMrdWksf+W>@:F10%7?ok?j\JG+dWVa3TGgQEDJVZjjmVq0A>?#:i+)&A49:?"cT0Ubt>G9>-P'V#"]!BJ]<rIIh:6WAB
%IWd7M9kGDgCn_ZK$"Coh,c@IZ($Y?Vni6;fOrR(9D8o^p;[O?I8$Fug)Xt!)[ARW)Bdbt:D"f'Ca6507'Ea>8-r!Bn,?sM!j.nuW
%Zn;J2Y=%bUM:&gpE[rka_>l49S!b$NVi;3SI2CI(\dlU"CtSD-/9(.QE2`2%=DN)iR&f$1I^;qk"YqPiQ:LEBJ^Kfs."kPH8[Fd8
%WE<^p=FausWAa$Bi2b7"AnJBSr'&PCm+-jg%Gmq<cMq]\&8<-hH5&@Y.Ze5*qNS66qI(jg;\1Z+;DP.KZZT\^OSBIEBLs+/bYlcD
%%ggK0qU]9;9Hhn_fDY^Gb5jM"E]!_oD$3f4^Cu;E$V8.GQ!Q+&_4"%&<8YJ@\d$Cs!7Xps0O3k=d^TO@1)P?+f=:"WH,?L`'qS4<
%er@(0e;*q'=LAU'c<2ZDC2$E$biI5E0'uo4eN!.EQfMFUf;Y8MlIC]5(-3jG`c@A7Al"lf5DF$5*?\!r[%g#734=Z:Z6IT!@!g>d
%:VYXZ9+[=6KfmH[;"H*=O%54>%Z785C'UnYUFW?PV`0TG0V@':I6]+9dDG`?P5gHgN(pR^ZA%SDE2%dkg1(Y^WD_)7Qc+f;?H0Np
%(fB9HM_S/rV%T62Bn*-[6W2"X)H;O]_&PAc&D#YBT1a\/m\H<0E[7hqG+16B5hNd:[,m,XP4^?/hXkk>XiV+bKk7rWjAoM561k/J
%19JH?HrO1<agqC2qKK!tZZ<rqZjk]prdU^EWqn?I/\5*XiQ%EGC_)T7eI3WQQn71+(:T5KEkH:j>ADJJ*4IO_!5>88>2tla^fO%D
%*bP0F*l;@c]s%54/N"]=6`?!J's*Do4X:X&VEnbKl;fcbm]\od'H>BKc=_!+QX15>ct:g6I%+ZW1]#:/h=p>ppJBUjkLd>o9tC53
%;kG'X871'(\S,4CGVgC_5NU;%jNp<K&O&&1+5sZT)&c(nWbP78Q9#PY9X[)'W-2=8rd,o?*GM7t?c<@&q4*0HZXc_Wra9':4uM4E
%/T"PYhnlfCp>7W7c,NE74da7o&WAP5O3*ZqYbVBbZdGH'SIZfDNrC%+<tQpTSPAVQ/Ha=c+>n;t")t(n^@g%[h2,r]aATQ!O#lYW
%\LuE&4_B7tGUG>TC3rXKT)+V:L=H/V#6dREHRg^0$n[E$#$3#sp"Ma3=%l_`LK\Ydm(TflVI9iOPn;/aV$d=5XathKe5nTm_KDZH
%:4a.t%<-\bq[^QT1sr9A#SA/b[bPZA_:^NpQFid3OVl:^_6Pjp"73C9++ac113a82e#jCL0J!Q@dLVA#AM@g'nMr:DYT8rNZqV$&
%!u6bOAAQ3XdST3Q)f46JJTKYU4M[e*_fi7I7UXq<Ul_o#V#UG/8#1)#_]#u=Jg4s(rSRYD&9cg>+H7ZI31GkYn,6Z6:3@BV^\a5`
%;:6D-Tm"%gJ*`m\dg<OG5%(s,82uSJ<npV[UbjX]mAZmf"mfd;WT8nhiN:U\BJ.VacR_%V^1<4u^j4\d74Hr4"lg0!aE[(%Y[S0)
%"@Lq:gWl^%HKaD^7)JkFjgG[bO`2W@^Y-/@dPq]Z/>Ecdc\^hmS,ttA%or'RY%fXq'$`n4\EO?d$B`@h;,3PSS!d"6%K\m_s(j%#
%,oFX9%D84>LIh3NYb@1'FXs;Z"`L3$>@#1,UB5g'l[UlJ)GVpcSlb6rEdHM4N)e\qSW&"Fb#_TN0!u2A=NEk\@n!N[bP#;k0fe,d
%.N?5_[OfX2jsUq]E?*>2E_ZjUT@8R7llUPhrWHhVq6ITHT?l"4TLdjYCcCsOMj80@.4u>sNlOba;\;2"l0\):W'31B5N)iO@d.W2
%WP'+:?`hk:STaCk]AHV\$F-.[lt7`p+&kVtRhn'U1)0cdEtO:cc0qHQ<!^HdS"Yi66sMgo!7Rdn[p?00G#3eYjC>gTk\<hT/$jQg
%puo/0\0&;X:MX=Ze0NMc$p*E^jmDiU>^bJl\F&t=%pU0q8'AkK-<,tp.ujGp[+O(=,uU3KW/k<?Tll2VKYCg1f*:Y)7bZ.4IDP@'
%IqfLR9WQsk'\@,sf]Qc+m6nJ.*U]3Pk\E+Ck2tS@eNBmA0JKY.dT&C^0!^f+Gj\n@^,MZNjjTQslc+*2rJ-F0BHkX:A/^=5NT3j:
%Rlh-K[SNWk`)D([)\U@hjQ(c#4#ae3aS$JF6lBV6U7rS\):B&lF?)5oH'PCnHt.DT^^/o9r>O;Bi.oNA!9`q%j<K^Nk@Y-8@<,&r
%br<VrXjqXf[5gKpmq_:J[O)OUo@DSDQV(V>EG#k#(3#Ie9&G%<`@[cIIoKU[:p\$2<6,Pa#D&"E;R'F80FRQL&m;mh&!!`a:0(`-
%'g&@rh=KFk7Y;$n^]7,"mUBDVdpl%L.ufn&/QAlM3S^rlRU&?ieqS3Ua*P8[q\QF*IWB-3[2I]Ti"'.t/>4t+_Nb<?k!kDBiF2KG
%%7<R3gSsM$Hn.G+G)lW<`.[)]pg/=fn.>d\4Yf9V\TpBu.$Dn72[rS>RIAb4*Rn0dq/^dl"*Lf<br+'s$l+=J'%BS=mD9?JCJ>4U
%4]t/.%R!Tg5G\`<W!LTmIpS-$riCMi=Ud<u2(7nH5g?I7rlcF(ekjiiO'L^aq[>j2P\)2>n%sDIUipVZQ"u?T#I[GfN_cLK'i^P>
%"BaZPkGo-E83XTGf"Y*AQO%>DCh0-^k,YFG]ha:j:bt=CQPUJg/-PXDYD-r)&%gWEIR++8;:AWO?U))CV3JE?arPoF93+k$(^rBR
%>^u""iL6ISE2S?;95CJ]Rh(:rj@H_4H?h((0N>[rR"p%<9HU-KTK]6`X8U4t%Fj)'nu2AO1I)*t)"7tnmFri\8ifOlg-OQXDI,5F
%Xe?dN2K-I+P7dq,3S`B-c%[h"gN%OSeIH>dH\h.'(n^pI!r-;5q@i-`_j4,k4"J@[:qqm?bl\o`:F5GjV$r\@>7^Hb[PEjek-Tg<
%-JjGnTs!1c6rO;g(lTXh6F,B+qZ<]N'D%_$Ha/k6Fr*FrrYWW'N$$n):qm?7"4Wspgp]sVNoiUZg^Uab/'hA"31AD!C>@%==/klA
%rp^/D\i2@([=0mn'WBJY$pu=K'Y1a!Xh>A0&Y>o>"20@KkN_a+#!bm$TZXUMp!BQMcJ9_DNL<Wlm\CK)^n)B^M*FZNV")UX_%i(I
%@d3aQ8>e1:LEW?Pm/g841tEW9l-EXP4,T[PKJ6A-eheYqE]lmY]X)ND[mEDis5![Rf\K?U4saCqBOG$E$/uEIp*j)#m`"G>9@HL]
%[+BWRKMD'X,k$dHY$PgbMl47tY5Qi0d,;h2</3<u35(WbYC8P0qIBQtnto6fI0t@Cq,soR=22<`S_?8mVf@9jEm8qE)rFo`IMekD
%)**_hq5DSPFn=):[Bh`GVqIuPiMdl4\#muFIJ&B>A'Fr:o2k_:p*h-O-(M]UYQ"+_,2#.K9E+@^rR:C5U@!UjIOFr?D-stS8>kjI
%T'V=Z-`$:15K,5/lG\bQkgfB@BHpR&d&4(Q)/5ePj4u@lTOS[h+b?\BgHLU6$V*(0VcsrH#&0mK=>^GJZ($b`p$kAVGW0`ag[WY<
%G\c\Oe\:fn-$=02>Eo[N&K#&2?=)_,ToBrde3)JY9fK,4];J+//Ij9g>SFNM\nU+H=AAI43Y=ab.s83YPV.&E<*g.pGKpg8Bp7):
%q_Mio];sp<2E$CT<3/:?CSEn5S0)WhWL^X=2MMc4hRBV[U;`hI)g)/s0\>6Wa#6c#X)#8(aKl?*q^5UH0Ue9H=L9)$f3Ea6[Y;<'
%har8nW6G>NFZU;bTIMG3)N3[_N5.^GD/?:g:a_aC%?4O[*Rr;G,[>X8=@"75HK:J7Xrck#URecGMG4HtW7b1T/)D+K5X4&rrMp%M
%k$$=W.bGJ::l234Zjih/[&oI\^;$n-RQigFZ%iZYMI+pX^hZahY'rtk8m$0_V'c;5Eak<?/I0Q8%Jj;9=SC)e<o>gFJOY'[At2FR
%%c4!ne8Ctfp'5ZTDP;>W'fJ_?52\meH3\ZSof2P@9gl%^90i$dU#.IZY!RBX6t2G/j?uETqGIDk5oi<OLa`K,q@%f.!+)6c.0QAM
%)n^U^TF6`nOion&X_BPP434M,CG3<[E:6Cr`XP[+<#Bb#mtVV)q%Ib//#c=D[LOsk(csd:5j94.1E+/@NGl";[T"6Pf\bMeY:D9r
%j,nDTLp+->EU;7++2?sunFFZsG4_q*N:g)YIV=FX9EH-lnOrb^VO?jQ,8Ab<%ZfC7#VYH_.aA`dC"urJ9V^,X!i+VX-BlCS5pqE7
%Gaq7d3TQu#dZ#iDiq:<E0;mAJ?ap#K*rFD[A3])>c]dM.oS&*:.u=9>K7.1p^WOj#7pnGhs1OkKS5VnmH=ILSor$Uo(.;nul:*4u
%No-lO+pL-er&ub!-s5lD?4'8:aUOuGRF,(@K72XW3uWI[c8Lf`5E;f.$eq?CV(OmV.YlSAglag#?`0;Tmh740&$Ako5Gmb+"1mA6
%)jlt.H4h=#SE;Z2k2D%a!Z#<RJ#Xf\0OMn)1^G%c+*GG4"(!TrVi#ia=72XDO9cdagc-n@Q*<S843&d2FQ,Hh+m?1-GpjZVgR<]j
%g+1F8`dKO"kY#Do##r1_&S>(MM317T1t>qb`pns2'!8ShJMu44Y:K$>\k],eqOr`JgdE@rP=T4ggZ,*oFir4=NYo%M"kkKIJh>fU
%5"DjuZZbIb/OY0>$,n6r4WUpdcVg^njJ.u)%BF%IK5oKiR7[D#:S!aRWu9Jh:E;&bpKqN*;6$'eC/b#L%UW(V/[cfbe0etLY"sDS
%4$WjR]4Io+Tg##RW6B$;LUo'"4H46iT'&*bXD;lJ*Q0"rd0<r:#nI^N.YkLaP5a]=CJ&5a5\m>f>15FL/JW!t;NW:W'kuYOXXPd.
%)WUtLO%ii91doM//ZuS9XtQk:$^J>q;1c#!Y0k\%k(dY"jOs%-A^?F'IbgWg4f>,6=%Y9:ds,BT&j]GLFr9pn3$;nP5Cs<riM?25
%[BkNu'b*fq&WPr'Kq\#Ejr<L/Gdd`kHbq;Um:'``BUoo%+YHc]cFC*[d<KK29Ugb?92Ppuf]VYBFH7;ej)!pY\0`FqJ#qoL.,fIB
%1%bXbcMd9GhpqeJP\)45lkni0nmf<"g\4:Geo]_OOsiTL_n%eAJ/;)P4:Q6(oF':r?7ao;*IF.1\j#B1S*.nk(S55pf1+$Ba4lL*
%#Sf.1?IIii2h16Xa9Y6BUohKW@2`o[T:SUF*)\R"n<I;u^.b'b[!J21ARK]\?t*MeENLpd=W(P'Yjp`[r'&I`]=lZZ'9n5J/)6n/
%Gg4X?oP/FeBZe#H1W=tkp\R4Zgfk8K(kq>Ob_&QD(Nb=X*rr.R@dW:jE--aU@[QE):?.Em$10jN_N/AGCjU+6.?o"+\!\&P%JO0;
%5<*upNU@FCHUgGbK5\e&.!3C`cB?aog*obFVYqMWlIB]P#ZT'Wi1&/;Cir&9N=QK$0dc&6pX3/+ht05NME9t61nqf$(Zh.V+TeEG
%'tm-dF&1A4kA^NL]"1<@%;V[;+VB;q'P(;Mk7@g9o8nFs'5dD!2r%q,bdj"-X,eB(&>W\2X:aMbc%Z*K*"cX&B_Zj:"uH`/jDiCW
%'[GYhYG/!g4%hkOq4h?a<^:?#kQ-HtQe"bF;'\!*[PM3N$h#^U/IlD"mHhiJR@A+(ZlfC%YrTjb$acYk6_-[(ZQ[qK%]pK#h'h'?
%c!'=L+]L@XN>mkk>15R_@E1?DcpZj%UsWR/EKF6,*jir?2Pj#ZO-UZj(3S7eZJ6l[rn,QAjj4Z!=iJls]$Vp+IE:/'q/&^OD=Ws2
%SJr*fbnR!_Q>YQMpX%WVV=EP2\s_+gB^I@XW-#X08@Nl@!1Go4d`nB3TV9?$)eoPPRsnM0\"RC"io5^bdS72nF0<qfgfcpM,4EXd
%3B>W34-8#G]!3m^0bUhbWo)V`CFcl>5;jA5<iWa3`Wiba0.*eHY-RM1/Taj*pA;#,,VEDA2A\/#$!5`NT'X]G`Ll:DZ#B+e32_!T
%P/(Oa5AfM2ChUfA2<<VU:UAg(V2?44$Yse0f8WLI-9gJ=*4>gE+7nKJIY5U:#uOrDI7,hB[038/MIal#o8;\ir*i6jl9@bUc4^LY
%FVm#GOlhSWDJce2J'/b!]S/LVU_U6r0#"E\L>8nM0?Y7jj?rgRC5&OJ/A+/%PNLk[p:id<beC<n40->_&Y6Yea&gs1)9p04`S!Lf
%>85kDF0B.2/M&e;c?.^UX!5>"B3iueP8fte1bNau$\9*X8$.2"Hf*)qh%!!I_X+E0-m@eUfb;CfD8QEF,].td,h0t8r1?Gh:>BU/
%ACP[9ZVkomk*;r&nScG#7!+"5C%&e.&fR\:(ll&2nJka&R3TE#0/KsO[:Y6^Eo6aKb`/;RrpXS=c4l3o:O[!5`e*#_VJIK*X`i?6
%oF;.'YdX^VA7=beGq/r?b9L.LKuGOS!Ae_[ZSajeWI)2Ma7ij+TlG.aQ^Us8lLN-DX!+%[3L>f02[cPT3Tor65qaOTcT.=&O(K9o
%I*T9MYRi?3S^0<_O#U((OO!$Zb87snMb?V(1IG_pq#]^.`VIsXS9+K-jHPeGe+qL=[7mM$0M>"#F3`kTOCZ,Fe+oMTq$bQ5q:#.]
%=[/csEJ&:I#_9?Z7bS`l>K2E=Hi%?LqaAoQ9(:B/WpF?%YNk2^IBMSJ3I$:ugj2Oi0KP"q;<?^YXr0*I\P[L[@^)Zk7b(&Epfk\A
%*KREn7SR-cUpS==5?(cBV:[^aPE0MY&R#>LCABg"6+W*GaZ4@kfI'nt"6u1f!28".\N@AB:us'McSc!M,MgqCp2*`M)#'*N;RK<\
%Ena+U(1.[sk<O`ej).>=]=7EsRDRleEn'610@9r.6J>^];9*n:b0<&(K,E&)r5P'+/95b!j'r=P^tW`1+NBZ+iS@>8B[)Ga9`+tC
%Xm#r#U1VZEh/G1+]h7LCX`<^N1+&</]AZ!CeQNZ1KHD_!eg.Ue*rs0E_oB4.dAA,4_:P&4qu4A$ZEoSMA((gFlcst>d)n(VRuF5c
%1hUsTHVU8?5dTShn=G^'P(*QJ*&dH2Egs#Ze;%#g(/B@)NeLK2aEqb.]d7@V]q4@DfR$^ee*-Js1PZ!0:8-)$\H#'3#;p2\bp'8M
%Vs'eNLpcBI24%^"T1F#pg@6smFW4m@896en_%gYgJ+7XT`t1`e<:4't%RS#.,SSI5VgV?bB3s9JVL_Xd(c=-?)_Qo;V#"_J4>mPo
%]*k64mXC]%gh!76<M3OPm6PM&X^s"2=Eh5Y)of)b#P5d1<2g`cmTFn>Za;f6c=,<D7Fpf+a`_Q"^`FKs/NqCcSMs'I*o4oh06qa;
%$k17;j.f@UFhNNDZ#0>Mh^qc.Di36^oY++.OH2dmPMr4EBl2>)lDr+We"3K'*WeqrCm*df%/fpQlneWMS$m_PW6'Kp:fX!2o`_ld
%\r:?LXtC$YX?+mYUQU-Lo$m?S'3@!UNC12QH#N%:i[ltY4JPO;]b/j'?R`\_jre%qARn!nNOW"oYn%$/*!Z.cY_`$Cmo;jt[':V>
%%2p54YgL,"8`'ce]Jh`1m#Vb@&lRu^]fFGA:d`s,q/G3'2aeI$aq\12HNT)GGRG^>c@`##El\`"$//T)I.;#f9T:W0YIha:.&skJ
%)]Pc%X,Bf-,&@aUirL?LIMV>nK3-m(#7(bklt^QVO9M-AjX2b/XsYB0%91oJ3E,i<#9IC<]mYd1.7VoB#=Eq^Z=Og];$>[!876H.
%Fm9R'>C_]5&l?IH_\RU)QOC!Ee@mX_kKPB;m5+@d4T`r<Hi>hm!qtfT/Mf2$nR,HpR<`+j@@*(D7hd@MEo+)Xo)aA>([&ucZeANt
%XXuIf&%bfcaa)(Tb[WcEF/sa21@t-HE,O'KF(aWLmVZN*kBr\C2B0^aCTV>4OEnRQ28*l>YfL&?*dW,!2>!&HSPCPN5\hE-0AWJ?
%c"Q)&Ium/TY5sum%65NFiGGog2!"Ph(!H%/21.b"P`LP=XD;n@-_WA$IY9gJHO$!d*WotCeboJ/R@,/EDtELoJJh%XQ)?kR\$R\6
%>sCSL*:q=62uZ1<mC2SX[0?@<,@"`uq,MQ>f&O4:ki8UOgsDShBP7R5^nUa_]AmRECVn*!+]"Nl2Hmk%f\k?I2fN&,dsJD[[I]C\
%L:jo=QSU<X7?9<uI[60CbHJDqq;NnrQ='/m?$]2-j]Bk<Rl1Q2P'toBBC?s<'O+1mm-R]6A8dg",^[/),hZDj#@4re^oI0oCT$Q"
%&(+2XI^D)u)D]14NM4&WntTDeT!n=Z.:6cFUc`E'eC'QOglSt?Uc]1%c=J9_=k]Ij:Wg#l"b%UDO,!7N9-9cZ.1brRi*YdkPXa+F
%aaR%#2_<D-jC5%El\DHR&%6eQf9e.'brtJkeSJJW%oI*`c=HRIfi4/n\24Z*FH!EA*2VrfjC-,aFBAX)CP?mVUnM!6ahhJgd-K%t
%Q(B:%/+Z$o>lP'UL?Gb6pruGpPUMGCTu96j%bIgaiR9sF^4$5=HZ1S65q$'O!&Fu=DrD&s20DqY%%UE_ku,pi$,=bl8#Xas9!8N>
%Jh@m@Q\r5WiKSMP9X(6a#;rqAI%8qV`E.r7A`SnqBm1(_Bm5&sP5X650(mseHGFJ;H.NO@cRC*?ElgSsB7pHHT#+8pPE<d`1q9)\
%*NLp^mbS^/_XNRqZ6.[HE$mP?Z`@jXhnk:Wg7;HRh^!&#>cnro]<R%sQgT=V,rR*@PPlCiS$l/Tan9Pm(2@OO3H:mb=/eIZ#j<(9
%1*Y8(hR?K^A%@rZpX$<QG4k$pIWqe"\?m]Rq,F:g=\L"/l)AJq;5m&5r,#VF)`-/]Ze.WmY?ncIfOB0.R8/:#5EY,FZXMmidd;:(
%\c^4EehX-eZ1^o:W$'EWZ=^[PcQ(??nF_*.^*mQ1k.b6Kg[np4^b'<U,HA2H[MG9Rm,5N8lWLabU@u$nqosHD8!n6YoA9'E>m%L0
%L-97+DL%7N[H\FcIW3&$cTA.c\&dd@:>=-!5Dadu%cV%Hp:9s7QBg*8Q.9M:g;8\p<eFo\!_Z/Pe+H,Nl>tkWoUXWI25Gb,,3BO3
%`:)_o&M-#KccS-PBG[?o/$[EIf_%RfI;Xu8OqRYnZMJCnh=E#f=_770Pe2d<R+Q%[bF5/[QB9a3jeZ%b,*nSJB,+OpLsBQXp0#L?
%,&ER6fOr_^+Ftgdp=Uijb>.E1RR:iqnNr(\<`shTf?c8cqlH7W[or&HZ-TF!9<E9?`'16'^?$N_iI&R(OQN.ekDZdE-2(L/_AF&?
%AL-tP24t.Y/haKU.]^n"&1f'2:G'e$o`a^R4m,Q+ZYI9ZfIW9>B9h";f,MI\m?#t5Q.9Lr"VsbtZc_P@\/^tomkoKIX?Luh@.(rs
%Ma!Q7,.u0`hF83N-_7'i7bfrTLr9BQB27><jAkmbQ,>e`c^!nN.BpSdNR^(VFGlcTcXqI3pfV3^=_t:9DJ_!2<SAe%#FX^@#G80n
%ihAWAF#3h"I]e)s<HZeC?]=C%-aQi];UrIT.c[R*p;.$FFd.@G/O/n5U$PIX]qj6`+LTBE[`OFXcZK!?>bP3t0E396`pNai?Vukb
%K0s$/m56PAq4HZQEQdTNo]U?Y2m2oT/U[Ad??Ed?43i9M+2aZ[p]#N\L![/[iUT3;K(]m_jn\J^^`7"A*?#q,F.L^4Ph%/:^*K#I
%F.8c,=$:6XLE=<l"0U<FBQ0)&j!5-;8iG)V3IQp5:"i@9qmCh[6lOP)'@Q\3$ff5bZ8#a:PH:=]&<\+5VDJHuLG^!VRbFs7VNdtO
%Ws_?uXaJ]>SX9<ncmk/nRA!Z[[3^Q2SUE/sr2G,GKQEJNC2\rr&^-DKSbp656W*m>$(+Vp3.0c81<('\>&alhF)NJc242WGE"#ok
%ao-;+p,,7m]gX.-[IEU!RE$8@es<0/6-%3$brUZN?-I,ig"R'CXpVJG(Y:C"_L1&o,R"sS2[N1_]5?'kc"JR%AaIeqMl)S2^?igp
%?\9A&o5nc9RhRQHlo]J9VG=tS#:K=`aEn8J^$UXq>5/p:gre*,ViZ/tL@"@H,@Rk22N`>%7C9_Hfp_0sC_gqm6u0RqFB)rnH?S/7
%YPt"E^Wa4HDAAT!OWXPWq\O4`l[(YdrWR6bVSgr6h@hW7'`NWd$O#WfBjsb@l`:'J)OJS*[U.P?)tJ:CT7aAYEBd:Co:\>KH4cSp
%G=/q;DrGM>,ZQIUa1'B_W91,X"MC>&$?tj]YPdTNH^3.tch;e`0uQl4jW0$Qhh9Tt?`,]kE'm:>p4ZO4'XN_ig^Ue!;%\D'CWKTN
%]p/gro0D8="IG7!:D9^6AW7QF0^.\rn08k'U[]0@<i1/aV.-]4%"#]=NDXR61=I!KOjkOk=_G7>V@;%h?XK]PC"]?9SnLH/4Bo+7
%nrR*\m3@t?]har)6/<&mjP<l)mM!UQ>@Y0uj`+5UnnpN&?^G34/^jC:\I=\eBkX;Lc?>EG]N\kcLoh?=;r2BQDX(YIpSQX!0BY)a
%H=P/3no!EL55R4aOH/_"GMAP\^C8RP#"hhX+dVk9@KB<Q#pE:u'Kt72EOI!c(g_sVYJ$u5oW"F8:M3:ki?8]:i)4c+3Fser)1Ab1
%UqS7*#$9G@1G=6Di`MGnbWI!KE])\,BZr)X\uY)4S[FA/]?C3oYMjh")#S*&Pe]obe-9Z2F_rOE^"VQM^0!Z1i'Z\seT@LDeSpcn
%\YabX68dm-Y5VsE:Nea=,VtM;-IO1aT'rpC/F%<;@U"J#]6qE<B6<T#3]97B,bPRt4qSAMq1H#-au,bpG.E[eeb-,q9o%,iNJWI.
%#H1A"BF@h3HlT4+TT[ihV?B)bB!:T`*-W=ere=ifJO^@j55q@@5lP<FF"XJW4'e,aPZp0(#oWFBCl6BAf.Y_*!i%ZQUQgC.h0@SV
%Qtl>[au;B?FCDEU3aK@:[de4e:,4e6h;ZnR00L79a,O1];s[GEpAA3BAf!+N]&ai7mk*_Gej*)VUHJ!cSSbk>Z<B8>D2^f7W\_sU
%DGJZi\[&m?37l>\I&+g%I%j6bPg2>rXi6Vo%#,TQ%j?f?,><FNP@CaXFiu3nghWO<k]H;Iqa?]D$lI[i3k_u9@)F+umc-[0kjmr,
%AkZGkg:r]lMgB:,R%Te1&bT&2[?3=Tj4-i;:TX=5S8"Ik^A("GOEP8UK?`LRK1%^Qf!X8ch=Y?(U`ghBRLb^B[!1;MbZeQ`g<Q^L
%f(<BYrqpK1'2hQd<KFe&'*+A=`<-C8p<&rn5si::l%Z;N3FFi3fY\akjSmh&j]OYRaCm,Q"qAVZs1S4&2"up&Vo?jl$,*5%]fKI5
%g@>oT!.V`iD0c_jjc)"Oo+Kl>L[^Mljm,eZLH\F*#DN[Zf&uD"WpBPX'E=@iM#j&Jm$a9N[Rb;8:4Yaf+1b_Rl[98fnH'*+k&Lq'
%.XQW5HY[L8#s!3gFl#&OX3<oJoT2f.UG\AY:nL:"]2H]ldNi%J@EN&f<u]E[Lr=?rG=j(&>#+mL1n84(PXM^CDHI7iT9<k%drtPC
%oD#$B\7j6bFo"a&[-WH75,'K4^gB^.f3'jW[sh6gc0Kt(4sCYN0i(E9f6g!b6JspOd:#SWSQZPiZr9SkK=ZZH6cZ$EVYo:^KdMEN
%S]_AR\F#T$=eXudqpijs"8%bfhn?,<IRA.TQPE]YSkHi":`jZ@OZ^m:Eg$n4_pr21FBKb;Tbk>Bd*O/R?>YeN8rm44QE;c%>hZ/X
%c5.Pu817]jWE'eD*L['_kIg;'hU#T$(EV9V!.)?'a5_l/c9hpuT5*Kd_F'*k.fNfk=Mh%<pqfC2pDU*f/p-'GF'p8"UmH)[TsHY\
%"t)!KiLuE2B&a"(0XkOFFQ&p7XAhHO:r\TPh[9rH#H+T^$hudU(EPV9Bu&]u'42Os3o>+jGVH4>iLr%4#JB,EHF`Ol=WIu+)3PA5
%GfV)aI+oefkTsJYW$^2#-DLbBVoMqIGj+LMYh%:c\F@l@[_jDE?!hp1MK,ONNu&j`]Vj+21"cBrJi7D;d<RtNKnmsU(c,4T^@9L\
%:Xm[4(7dWA4ES=)O@H4pRiS81Gj$\@W%R"oXlargU%<,V`jqN7_F'e(DrnDp,FH"p4>cQA+eU-c5^Jr]4_=lAiYNXsn!,=0_;Z7P
%`Z/nY1i.TdJ)R*iHO:Qa\WG%E*R:!D,+1)HFDf&MPsk1iiLuHW])f$T\LA?G[iJpnD(5DHG^=JI:O:go0cpF+daGcE*a3a2Hm%?0
%r5`2h35;K]lbZ$P<cE$+1+k\2c:6?;c%6`QH9>ZRI,Ud6.gc`617W+F2_i>G_F''1/8dOkfN<,eoIsQq31in9IGpkeC,!CH)P\Ao
%Z@gt2K:QmAU^GVg(ERnK`Eh]E6X;2hkEh#.k.U92\J<:iNd36>ZtVt^(h`ZaR'#g;<?EhUFAC@f@lY=<nBfkT2*13h^@9MF[R8NL
%2Xc?T<nPo>4(OO.(:s"^e(Jo&?[1eNf=?hJ&$9HmiZQK+'!HBn*\JG,kj?5SB8od']t2"5LX$g5Z;\:.Knh3;c*n_Y%$*h04ETHM
%@HM1,$P/f'NrrS.mp[(SlB,]NBA2]Aq7lFGffNr`)s-\.6g$Xqi1qZ(GfZs$jo^o(R-2SH1$;g-1g)0\:1fK)k"poH8'N&j.;W8K
%rUiaH%>+neb.>7Bed)&r@\V,H+j38I.sQk(\Co,sNAQk<XB!?YCZQ5'NEQ4gEZ7?[?&gdBrDfl?nr?Q"]md[+LXq6kFD/#%2+#^<
%j`sBF?67.q#/s2NG=UMJ>p"N5EqPX$a>F=t4g%XBXE2Y]m".=A<?A]Ga+l9k*1\@cbH9"tGPPFBE7]S#4TKQ03W.rUNqa^aApgi&
%h3L)ZmeQM@OF*QGn$q!J`/o>(?EA3dgFj.A5"TS5PO`cqSr>T$j]QU"3*@8'hNQqrI\rp0IZ2QqZ^[ZKlcQf#$b&&@fTTXTH+;R6
%)p5/"L6-jIfmLC_k#\\q\r#'>j(rf2Hs=b5e@``EQLn-PjGl.tTP96?+9=,-P5ES)p!`p1"Z?Q9A;M(:L&2JH%go#_+FUE)+;:p4
%9LnM\gY7RZ-,)&od""'b\)ZtgeQ<D#D7HjQDAlO<9"S?glF+Md=%?oo,_+Rd\ZKVXl;_XJQ,$IDY)j(6HMpW3Sii"@i3u^=2Qs,#
%)COq?N0uPmkST2Dp8Gdpl0&jQ1*b,)5q%jk]S,92j!YWAlp$56&)k4K=tL6f%JdaDTgEGb%X3u*KbCAE(Qou488[5!don0rZRU$q
%p.o#Z%aOLs&7V;BXRX[f^K'[1;`pC]]Y<fN*JJ#tpl2k(SB"Tgj#TCgG0uYG+)H1@WNVR4XtHjl^8Dqe:8[M^:a!WtV`tgL/(BH<
%>\%A]654_rVL0tM+b$GV:qe!I;i1Xa`k>^qVtKK0:Ou/Mp:9bgk\*jX]Y/__>W=;`?/<aoZj5q7G'@E>KD&JkLH_X`n,idt5=:b*
%Fbr<::MH*@)Y?n(%o.EC_$cPS>cP=JeUD!o2lgrc!SLm_Tf;_0OLQ/s;Yqnt)Hr+C_>7f!*aJ3m@uKiYdY3K2EZU4jip3p?\@')t
%G<TJ-paqN2`-9gR7:cskAAkba^iU5O4HrIsWTCagI@.Kb?E&$qNSB/_g?hl?*J6aZJnlNm8AdPp,rDPeUpRT7@(+#%eb#Rk8:Ef>
%?MU]"IT/Da%p`p*:sDG2l8Q3]0and?dV<S;R^?gj"Bftco)*/kD6f=mSukT/kD/t*q/WppY<V[)@*uOEA+c>'(<ji=dSsQHn8r''
%j8MKC,^u"j7UI\-\s*S?$$clco-t`!I%)=o"nW*YhKaj.*cH<m/'6T+-#j'[7/VmDd^Nr=7XaSA`8lR!jD24*e+/TpeK6dD'@1d`
%9mGpOmQ?<lKA+oqjq9eFY<NmcRYNGV,[=k3cO#6Iom47^H.gs3DUqpZ;SA<Z$qYeCPVr+DjQ@eCMSNW8i^VuC;#?2XmVcO;pR,)I
%$!ISQNT6'Vr0FeTc?\I;k.Y#WjWfaSrV.^XY\tL^EO,!gi_5QBbVC>82aZKOG7'#_<@E<DG6%d://7Csc9q,o+-6OH+Wj!:mLld>
%.5d(i.\ntQK>M`1Ne^%&9:\[P_GH^`QVf.DLFZ[97"P2f2"(j.gCR#eolf@QnotGG'"GOg-6a=!JN/%:.O(!^8I;fC@gkrFSN*0F
%&=A:Jd;RP\-qSW_9,5-1'Pfh[86Ph@OZ3NplWiuB;O9#!F6P@udXl"/3*`8bYD<Drk3F\68).Ue&0/YS?lTe77dIodWckU0i_]G?
%Oqj^FY<ca(12QH:[J`ln_']gW913W4*j$]Q&N9Am0[7YB,j#1'CqDheaCZY_AEDt!`=MfkPi=Hh6]`$1"IjchH_`MoQWi3KCg)YZ
%KtRLHo=h``N9Ts"R>B5!g\s3$_jC2e_rEZ4aqYi1O)HbATRUd`5+'$Bmft,QYIB?EjXV]rgfA*qh9LEep#tGcW7j&=J?Y.P_B3u5
%oI3d.=;j+Q8!$r0XnUD6LmO*7TnRhG<`4c;h`ZHU`lMI`Lodd#)rP50\kNuCpgSX`ps/peYr8R`Fhnahm?;T%n>Wg-m_YS+>-l4q
%GifR^?gi7DNJQ`a%%D5B$'c1d*%2="B:risWKZ30"Z;qm$OX5t7&.NRk76o@2nhSU`H&_B^ipm,%4h37&!X4)cZJ*=`.;:jh[`&%
%]2D";/Vq:0r`Y5k+1t<ll%GJmcHC?]3q_8nP<J1!B>0l6Y#B@>]&3\f&#V,1!Zqs1mHU(OQtCOL=,?^3?a.l7pc2EmSn=\)^K.gd
%2d=,XhHr8F<UZ)FY?jq;r:3Kk(A6M6;OiermHgMA4iqa5eM`T,I%t6>b1"H7^9tFQV:^V@a]:g7m!XIN*dgT/%%3d,qV%MGH,'V6
%5G<WQ47AhfeA>M\$"$INHMEB]F:h)lpEJ>>:uHQqKk#g"[n.C)7qb?]8>B_nY7H,kl1e2O3cc@q';j]XR0(.mT7I-pnY]c)`O6.4
%;c$o#^a"4I$0\<APsJ'[*tHlsCK7@<5"5q>Mijn-]o17Xmm2&@O[mTC<U78VgWfhJ0B9@!`B9CtbL%kGZbmg7U3WEP6gEh*L4,Ba
%gkHk(VYQn4=3"<omWK8)?AO=CeTmRlq85'Lp%!D^UQ=TckX2t(kk-aC8)dYfd*Z/0>"a15pu^aO9m@<Z8'XJ7K?,2[[aDB]%'aHK
%oT:XfT,e`jX_`.k]kgb"D^VS5phOkZ<%HO#V>,N<[N]#D]jL:Kkc&OS.'.#G68o6e(VT,*_.mb$p9>R?,h);nU8;O%ZZL-d#X-0W
%"]iTF&mG[Zk3bhNFls2O"51)i]jgs'W@1e_YN;hMb>Z)sf&udVaseIsgAZ;Gd\mWM$MBt?qP`5..5Hr2-d%QS%*lOQ?(KJTrJ/_i
%e]k4T^hcRGq$S(rU!MLilf+l"DJpkaq7Z?U*E\8AEIIIa"WpZ8o4iUU9r%cDIOip2amIj&lh$V&gH,,@d)PE5i5/*&GIA)=:c_\q
%S$5T+W1KlV0%P9,BjP)MOr*`Ce`+s[_R\1"I"fK$r]lgYFuRVX>(c5OHL#OPp/GfcGJ;4$2=\]hecX&dI4F4[TlSKJcSanW;qc=L
%R;Q"_p$B5?h>TqSg51@`=XW^TNNZO@fWDJ]m5Hra]pm8.3*LfMe<98>YOU1Yq=J1o#iQr?<dR''>[XG!KUt,<>]5$m6gRr<pFtE(
%#cD:aS2dEaoEfLI#ds)7a_L#^3rP"dNhHQcRA1jQL"pcVF`$b[=Urt=B+E4a[pEWNAa8u4@LAECD:WSG+gH?=[$R5I%a1tJ84JcL
%G$1dPXh@%ahi67LQf?3>_pNG43OlVH6:Ds+^!pTjM+>XWUM#>g+pF:Pp3%^[phX3t+hKe<<\%OH_l$Zn[lNt)D!)TmrWeCt=GaV7
%5W]DlJME*$OkY*io+^&CgV&&qf&m637ub<o%3,\_`%[;q=L"Duph!-f=5l2sGT,E*CM!7TX9[B&NL%)i(f68Bm2&_>=%`(ADI3K8
%?p'D$L>9G&)ET,*RV=;O>+F"Ve)IU>VXYO%g0m2gBk)`+oOUCPPD;IQekPSK9*P#f:WV-YZm(/9:\@BMrZ?^crt%'q5e2TNK?I(R
%ZA2)la\HZJ5M-DkL?D?/SV-JZZ;8_kRdk9HYXskb<=[D>*l:*+K%U[n-FG!&S("^Wk=.%eGq36=r<_*L+0u2c7`$[&gSI@p7`,[a
%[!>2jXq,*R!N'6E[2ir?\MZXeOnNZ&GP9EH>_VH]g!`_m3l]I_W\%30mWKMTd!^oAD*<<]erghfEqOinf^TAM<@bH'hYC/D%n[Sn
%OIT[nHX5A;(b[A8a-jA)3%.W&E5&,Zc+?0u@p-cj2TnoHS0]49L_il;]WUIu[H:!9rdqs-MS9M=WppjrPNI""PY^WbiB+,]7&DPI
%PnBl4/A'lc?]'!k*<__X4e%gT&[2qP>mRZpS<,FqfHB"#S`KtKb(\h>j',VCd*qTO/QbbC6]nkP4<3`qa6Uuc:CJNZ$MV<AhLI!S
%96pX/CMVB;A1uWT?&DAB"?N2dYBl<.p%DVgCN'!3H:.0TmX6XoU\OlaHD=^3jofN_?jPpMNu87nS$gr_*B-5tmK3\CJ*,`TR"Ni4
%C[W5&<D]h[#S5bCKf(ASBmuCRs%Glfg,kqO8TQ^\FV,D`5]]2)Ie[_SW!LTkJn6Z/o-IMO0UWH>k&o0S9L^IJ!>4@GaljM34.egW
%p!&QNM82Sc="?j;W8CYD:Wi2^[o`!hT/:;Z=9csUpo(]*HY?*FbH:-caklpFGcNG]G>>V>r(Xo6g7-W.V.a.N>a9@(F#j\7pB[)F
%_D+NW/A\+OgNs&5g6S'gK(?B(F*;8`[!rNH5ctJt7+_'?jA<Qn^=-*f+8aNQ@GNsX^8!neYAQ![pisLBj1_#o[*bMS/5,$t4h"Jc
%S[C\AT@]\N?@,@tj6RJoSnWoffJcI1Ab\u6>5cZ.9*S,rXj`$XIrIb7:F.nnhp*A"[&Bchq'C4f-<n';5*`=Ss1ESs?fFk@f+@dX
%X:rL;=mp0-?5th5^%dm4Y?uoqUHE5inY#:-:F%;8<0D.K0P\mPR#,I9gC.0\TuVsj:/`SN^*KElqcb>+^N0&dRR>rdc+\hQZ-:nA
%;icXWYKjk7f"'#XfCILAFnY'3nLr3Poa^ulm,P(#AaO\S+&@<8\_Q_!B&DKl1\^7rWE6qL[+Qga^U=2I#O^n6kU=lr\hPI##(p2?
%^M"&7Q7f_eF9n#[O=isA07&gFB&VUfN#MQ";Z-,Y[Ci5O=5E*.S0Vr>fJ_af3^`j*.C$HbWb^=f&2)ar3cu#6]X"hIC/Q:"'P1,A
%'>Mt/XD;ZldRkj_+T_UdGB[(g)sE'bUfZ+?,\\lm@o7a08r+EjO$'/f>+BNF,Y@PjrXI-29p5GJ4F)XFVPa_p<dC5S/LW`uD;jM;
%TNtP8H.L%][adN(L2<:nSEd)gZ?&qb'#+=MXk]KB[NfIe*=8&RT2@i%:%Ws3)U555ONu*%"AhHr*n$7m%Eb9)4-J0/^4MR*/r#Kh
%M&aNKdOXYr4==50>[nO:J<Q'=F#HpC1b`6t7.=$B>j<q1<KSt^4B7M_V]d5!hW@2pn0j28MMED%i1^"oH_G[T-?Mf"aj*F"47(?P
%"qRQqc\U*S__mk?6%R0`9%ruh"FN&7C3tiKdk:k8_Mn4[$n71Mmm<dKSKL5$gcoOEJ6Q]Z86CI1&,N[*0S@I>mEh=;6/a`g)Mi&9
%+>EDp&bXZ\QlC)c1&mc;D]ir]6pS9se^$Jnrip0JcU`*(JY]A.6'15S+IlN]1,Qf1ck1`P2J<3_Lb4fh\",%Aa.nOu$DJ$M(DSju
%\4m(JF=;I(1GTTgD4!CnC`l<92<PhhpWgZbV2]Z_<8WEVBc/s_^c2gWo?SZX"peL3UtI!1JOe]$m6l+tA$X3Ko<>5FQ\mOh,F<2<
%d7]b>"as6$<+7pA6>7mD%.]=GPT?#;SY/MpU=N:a6,$'i=A#'(+Ii[Q+u##Z=]>Bt"FEc4b53X8]b@O?c>b_=0%0<.7b"gh/1Q/Q
%NNPNBF7+fh-X93ccj@#7)#KG#O=UO0b+gT;hM%=NLB(eY+0L^m[>0CE/%XM`G)(gQDk.3'_/+7;%V)MhA]j(YSA_D3#KF<Cc)i"a
%7Lr6Cg)lj%*Z"ojpYAmZgR!l'+_MmMQ0e,9:P'k\6`N<e.S8WUOT%eT$st;`cU2GiZ5pR6P)CF"c0NAm4Zsumm,n(h,8C1UEs;9n
%1r((:8BcCKGcrCQ;^_H>6"a:i%eAe:I'^)e.:(KtHccfg>jD<K=&5l)%TrcrFC`u";@fjbZR8n_G(A^mPKG$a&,SI,B!$D0i!`I0
%F39I#N%R[;m$>/%R)U/UWcX.^%*FrJ%k`f6G#/$Pj^+DbC)Q#.$ZRea8T$!i>oW.[7^bp:m-CUm*IRP.OOnoXgeUEMBY#19CIgOr
%MX3s(+l),ZF94[WLbAC(9gI'`Z./<oH<,7u-0k7R/3#mK`P'#UpXLK[.O9`B4l"]MS(5-^P#hJ1NJZcre\74.n0#.fV3-1gkO7")
%3m%0,W=1fH6.d_/mGc#!'Q48ZM6#b;CpnL=TpGHkUuM'n0PCH]6&.9Pmep^X*$Zr9D:K.j`u$(s(%1#HU4E`\S"a#f-gH*Rip[X[
%laAe;CqhGf8e[_#pk8*96En$D3['?_.@.,p>6mlk-&`e1TKR;.qd&<qa\A.qo:o:"dr*%e%WFme/$,>XncU#19tn_V,PYV!JG!/H
%#_-+20L1!m"X/H'W^;EN_nO3^><K.CUR5::hAGns&!]aip10o,f]/iteMue"54o22U,9&<,>8\#<cUsA#W,D6:U8=W@qs6Ge4G32
%T*/f<!S#X&4_WtlJfQ5;8.pc\qpQhNKY6.j<m0)6>=0CX7?2T&*+KkV)0C0D[>2ah=Qe0XcJ8ktK3k]?.lisP]hY2aF3hP(lF)U5
%>_\IFRdM7$p!AaYZ#he).&ViBNjQ]cg.M*$(J0!2$=(dq+eRI=a)Ms-W&n):N9&Qe3aYbND]mJ)4V!923_jfXd?D#=3%&%M>d=$"
%\gN'OA28&UJa[Mp_9jeG(3;GE2T4.1o*p(<+eu8M"jmsZ&7.M:"ORjY&Bp-)+>QJ23%9U2UlZ(7LI\>ipQZA]1mR)2VPclNSc@/*
%`6cVX49As/GB96andnfl*'.)<mg5,s_>uZ."fc?\@0ut2B8NH0#3:r,Q*Z.$hh^6Y+^9f@5-TqJh+6u^YQ/.'pD2p,boqV3<WX\B
%*"hV9CFprboV&su$sL(>K$d]ATOeKRU=koEO;Z13#U!->,0/i5AWWYeMOF]Fl.B,="dj?9]kB`R$D7A^bf$8'A1<&o:V/>o!CRYN
%HVJ1_q49k::%qgr.u"5(QhV-L]<@^Vmb,k3TF:"'W/)%e6\?YH^@mIU0mVQp#6bqi$'diSlEp!>*oGe3*b,)h8d`C0Tq*<0U(dsu
%c@2F<8?gWtk*/3T,&JcbQ7.Fgs'#/n$-aoQ!rqhh$-aoQE-/Q"9k[9N7!AtU6%fcL[aTmLV,5A]L$6onQp(,?CQV@r8f&%#H3hCB
%W/3ds9hZ(lLLiIE/qQ)(6mlF:9InDE(r`AlGGiOJN)]n5X_(RpS.2#c]HBp_-iPTN!5Ue9<;ZKOGStT\)tm+cO'ZR1=mk0LlU%)5
%i*3dClrE8s,<hQLHS;gORA3=jX%J3/+:b%i]U_0$RB7sk=`&UPU(RC(WTTui:j;U?!#em61f85S;<O]'DS/_fq:6Tg&^,)o7uDuD
%n6tud_$HP?)Fh&Z;<#3i;]\\Lj\h_G]c$m06MD^*U.DNpCrMW5VZ2Zul,uYO^hA0@(FKfkoJrF0KPsg5p0199#_Q(S7).n1K$c8b
%\h;<#Ur.-u^tuush+<:;142'<nD$i)&V,`':Da`&?o.J/Tt-^^MQ4C4o?8<k5il*I47]$_@@rOmG'#r(Bh+n"A'QK44[o*Ze8?MW
%GP<UW:QZjMSs5G9psUF.dM+4\ib?>(+*FquC`!"rMI88eB@69472MYW]=0EDHW\m]#H<:IW=1toPf>OCasu:\P\`X3Y*;bnO4C4F
%aE4d'lULojFGj-$6N@Ph?G.T2A!UbIK4)_M)=!Db$"t\6;5mDVY<LreQP&cUZt+H+Vc,+b0!B$?f$gtV#njJ;4,DShpgmP5r1(Q]
%A5t_9QtOXbhOW*u;2Ct.g^nnI:+=*Ig]=7fZ'\\MJRp/RKA)KcE^go9dH]`oS6u/$$Mn3ISb*F%7)QTdNq^lfRE<e^OZLn3G/*TX
%c?rl(e`-@%jj\Jm6uJ(fQ&D+FZ^A%_?P%YhVl:UNDT(en_N";'!q[+C<cgp+?Y?+7:bX;+rE0M3.qk&@b)G,([E2$-UBkd<_h0Lh
%(Puu;fF7F/Mn7V0AlO7s>OCNXN9&\L+0Q8[3qQ%<C%r_k*JY//Uk8R7#hts#m,I%ifqo>6c^n<#Ih\*kE"oELVBLYlF=>W[[r#[0
%("Wh#gagE&:VJ_i!K0`gB%55GYl9/]0?0J9!/B<"j"#gsC-?uC44i$e%jD*?J:P:c3^I`mL=upo67;N&[*;&`?BS827M`\nAiEJU
%.F_P5QPHZoL?TT-:fDSF]R"7<k>,ZN?c@JN<KP4;EY`l3SOkT-+L/`i6)uB3CA3`2R<$PT(klnYceRKhHrV6E&lkt&(k'5!.R^jl
%lJ_$*6f>4Nh8;8Bc1;Ch0"/bRdTPd]nSkbOr;bT3bQ1F/Lm]'M\@V-TXloZ3m('L3X%\7S+ZO2&G*Eh.h(a`<N4PT7LHoSZ;A4n)
%Bo7J$AsQ<7,U-@jT[:9B<J`rB*7:nE4)oH&`g/PDO-UA`!\?$&SPV"R@.si['XN]*0tKI@@8-C;@KK`2WFdJc#8Nm&HR.+[LE4(M
%GR$d?OWF-I&Jg`\p-FeX3-@_i1M.FCEdE\_;eut>^Y^s'>[08a!&]kjM/Lo3A6O%:!EW1Y89g_\$bdV7c@.#idhZq:2m1UNr(+DD
%kX?KF?B)g/fMU,q84im+n*HueIO*0"p^9/u)MV6)R*VIc.'e*U_2kDWcoP6+b2c1#4/Lc.+%]Hm4M$^<oHOqQZ$09tS:2`bVg35-
%'rD<(9%*W.?r/^tr()Eq`mCl'IO#I_AlmEe\FJ-2[$GG!;Vf)0$#eeuE$`cj7s]m>F#b_5Npt.:Fc:b`?u@K#84@RMO-Hc&`Dn0r
%rJ5?m/?C$UlUSneZrN7\89Rmnm.@'K-I_*RO`mUJ'knbPqe["l,gRZ/WOHY>NNd2361)aGC(sM5PFc,C;A*9*<$TC9@':Rc;uQSX
%-ZHh"g2*nI4mB<tp;.6Bd<C9?p?`/m#U3J7B[#!I,Y;0",_NOd;uPk%^.nZ2=3#HGZGc.ZkTWB"`Ffl-GC"N@0NuD-`41Q#gM"^`
%C,k]O$b6,:D)I&2IreggIgPkQD6)X0A+oPt%a>quUiY:IV<anOq6nguK.^]E2C@psFm\23AacR3C61VoBPBPC@=oI4+BO?ogJJX9
%He\oC)-3%@2R-6kLkoqF3O&.9?iMP]Dqbd=35SOk4\Uqs]@]<crZj]$[GNZ-3,4W6:q+/E5tbK:H_Ao#e\PVb&#lS?XafR1@[cu$
%Kk@rHL.U;>iiEUdB?KMMoJgXX\a$pBB5Q9ce*jCj0@&:UImt4UlRfL+fsg+Lp?AbMFg['*U5!bp_!gId[rr4kks#P*5EFl#05LM6
%K8d:W6VW,?Poik>3\!A6\i@9*dsm>,I7@;m.R-\2+hKnD)un'AVEc^X]%U3\;6@5Pqgo7!%umnu[P,^pr$]_T&q*'3b)[/pjup9o
%8aW&J6k9\1)1,1CXP5O@\Nks]HWB_C3bH^^l\6;Igs3TGk&nR8n)uOpRDEaQNdGAU)eRPQid"\@,,4ZmC#6ao-L>nYA8@\'*1cL`
%r/_2n,aH<-POehY!M#hqneD^K3Rl#dE8d</o'Nj0QK"3"FTIFqop\p1pU%qaZdl^n]'i06]m[5K#AA>ChU_Y#-!r4@"6@MY]mp@/
%f):6:/C=Q1li'b)UR'sAZ??2/8BAb55atr5oisKu+="c"F>K27n-,m8Fg8S2$I4c%1iVfJ'0S2(d'"dB=@@AF,^Ok)Lq7[aeWLAY
%n&*/r/jtWYO_443<"hFCf\MP:-`#FK)VTYR;t[u3Rcokge@"*K$fDtkQPs=MQ0867ID=\J1@C&(fNWfS0@9kTd_F]J1?_&.aN1P3
%H75K#b7(X6l9]0L.g5i/Dr*!DNuE*`\;us2`lki3Tr+[p;$lV_*V-BAiHPC<lB)&@+UbLMr:*-ULti1X]gB)[DpcQSLTnUi0,Iio
%:@oSX6#.cW10n^#kX8YI&oM2bU_%,2b=F^QmV-gKSi2p1j@^X'R'(S\ksPse?T3gJ,%l8%C#oV-Tb].h92F:#aK\'XI>iVZ]<"3b
%%r-7_-2/B0A3Q%DfueZ@T,O4Z[X3FFq&,&*Or&()_>19j3#i,--bh7dj^dj>.8jR</gl:dM4'j0\ss3.-=q,?]?@1][^YQe6o&/k
%.?#ehP(X@61*j5<:S?GKCj<Vjg&&H6&l!rRXXk*lU>@9J?/0_#[a,.k,"F_;<ZT]6]nb-<iGGX)NF;]!M+gRE#^,*9#MG"#3@(h0
%V@_@H!H3*O/8nhTOO-/6K(p@ECW2PRi@T(O&51X>>uW)a/oKHl,J;<TFU2+'6A5qj\1h+JRRhKA`5-*(]jDTIBEiZZqEQJ%b4a=#
%;O[?<C(+'oNo;M78^kAY3K6e%GTJJS`8R'aS;V`diObomqPA666<?_LZ*0)>'&DsC0i5=Hp5P\>g8hjA:WCNYmWP(Y'nisLk5V'Y
%@cM?u1Lm9W.f47qKBJQn\A&q,1AU(uRW^FY()Skgs#tW0`^@rN6;),*`rKO<3KeH-YcUnSke5km6%,L7U*'mn%>,&dM!ppB^KI#8
%5%>)hI-qp&,2W'1hUURud>S8m`^GXK,;F<WK-LC2h*0iYr*9Z*ck01'G"N*^^T'`:]>kr@r#8'9D3n">&SMp3"Z^M[3!:CfGhM%[
%lY?qL7tj@dd4RnWV'qKfl+C-O(gSSbkl-mcc?oB__Z/bjZRFP@I_L0Ve18LZ]8U9cZcu4FA/-G%j>W9&@ToY\D^MMmV]#X.bK24n
%;h^4D[m]dlaXWFK5n-b_OBsfLUe)6SXrK3E@&Jo#'4[=>JmbF5@0sX&&-T'/"%>Q2LEI^iO2sGBMP<NF65@c@h@C9Qg&.5%[3//a
%/?*"\:=7N5T/X;*Q>:[J^@Tb/[YP=;K#=iZj20,<fq@i,BT;IEedk$<b8?JDs0_"t`5W%_2ls9n$rM\SJ<Mh\,DnBq7?QTq[$O8*
%&Oj;/)_5X0*)WLm]'Q6?E^Z&3-ql4#'H2V@Kt#fl;i#i7E&^Ygc5;>IU``?AYEY0l[8.'skX;>\6KBkjd;(*A`.b`Bm]ad1'V/o]
%D\'5#B3tuXm,IlgM);/V,a[9+ggM%BP6Hp\U6cZ`&-@%0NI)Dm_Lj!!UE)2\rYEB91O.HN/SHPb<2?8j1:nH)i[gk]Xs1fA,MaeP
%#Ml@](!FWN&-[M\'4)cs^L-%0SFfh*@AC(%a3OE#cCpi=9DFlm`(L=iUe4?b32tStlj;n$jfn<h8*$;U;"S7><f"h+F&)`L-34>f
%<FRuIQrp6aC.*Ynht*0Y'!P1V3qSRZ&e_W*pjdDBRO9cdF`DVVUF/q3PgKlBne*4*[H7led(JhKT!n9!"T@:^7L/j5pLga=KZPp+
%"OMTlo=c`%"KDR<pI'F">@9/BN:a8t<Ou/:PEW;nA9qpfV_0-dFJ%;D\;LF`(^">Li8/B=bjgt8>J8N#C)>PZE-^u3\;R^baCX";
%[FNR_IIfSYn*q?\:bl(mB(+,c/#*)k48,11Rg'ZA/DOB\VF7Po?Tr"N\F#T^/6Q[ZMQ4BaA][PC,!k:5b*!Z^3Ie\.";,qP:g)B3
%3/e/Ee>2NnP>kRfmj7\,d83'VE#>fBb[d\r><k4<Hmrt*9hrBG`o'2pQqg:n3$C5dKl!Qgl`sX(k!c$a]d0\3Qi&9Adcq'<A([DI
%XC)RJ0s:-FRI=HM2'3LaBQk2[)$`@&qt;2mQ=Q;"X`%5W=K5B!RinrA=*KlOEb*gFf-Yilr$U2@WI)&0g7B'eYt2=,6%SSIeWAXN
%$=9jG!5:1"#sK\K5t1/[%u/ma<ZM7J*$:BNTYcg?bO@5H>BPJ'H$i:7hNq4YTSGBSL0_rhiF;Ge2Li5k\n/*VGIM2?c"Yo1VRr<P
%mBF3L22Q`u=gN8FrSZo-cD"b@Wn>#f_1E2E3u2.8(Bl(A6@4U7KetJ'B;8"mN*)*P%od7bJ1BB_^s4I))-O$0X^(Q&+2f\ZcG(mD
%N'&Z?k-FS`6rEmEq*(%)%XOh.]/JGo'AA7BIXWLYJ^]P&?d$.3/A6R[-KMAM>Nl6TIkBN7W.Q_B*bT9TH+!8EN#L($hq3RmH;!`(
%$!A+#FX/`&>1cscdEfpbG$;aFpC);+qS]i*r:^V%7=@MkG_6bH:iBY3)N6A8iuk30/^KL,CJce;)'")o875e:4QGs-Z&)<#mpR5l
%7(/3d(F6q\MO<1Q%=d$:CE;ZV]#`P-L:JHG=FaY'OB4@:c<g5E^\4i&X,UB;J'U.S+&!:[^rE`b]b1sp%Z.MIA.O=n+UaA7aI>7u
%hV\=.;O(3r[uH_tk2*Xejr@i%V7!p.<PL#K`9-E4?517GFi5K%^1!P\QT(B3`[7XpgI`u=:+nVW;fGLP)c&tF:+pjhK>52=SC7k;
%l*0'(_)]35_K96uE+R@%2qj=ikF>sPg!b/K2Z,7q3Z?^_>c-l\X6BXAe;(=Wg@Omd`6A`jp0PM(26oJ5drU,,I[X$YWgTLgUDrGi
%/T_uFf<LR+jK/s]n$q5VOmYN.UI9*&FF8CqZ_H.5Fi>qq2Cu"FCAHG9H-M3f'ZEAt7XK'f/i[aeKeU':KWpI0MY=?E0*ku4XN3tb
%/^90g)F])"<?!CKj7Dc[pB:TqW9,_9Y9mMsr6I-I<+Ec.`tL'/p^r9\`tL)E?M?Y?E%/S`i(Y_58cBnE`K/5[e&1$4cmT44lUN_r
%i(%&```27\!,`)XJ57u7q%8,*\iU@Wk3i3UNidXRn40aeg:bt8SV\/?rW4.f,aTZTm\ZAb\M`7JBIZ+Q"I_#>k4-E=c&^FtbF/'7
%>,hIiKJ?k"q>3Bei.1BL:iaS)"pE'R6HQ>J21gHZ+"4ZhTZ.@'!V3%tW?-HP7*1i_EWBE'n<F/\Z>mNlmG5J??9n>G_]],`^md6b
%:ihXon_J7?TR7lH*72P$J9%dE7h-s9M3;YhmImPIa[*5;5l&FiZ&.r!$Rf@a=,NI';*.WqnaUk%'I>]4qDd<'3fj1K"I'FMP&oH#
%4RQ"\W3csr?M>i$#fc61A.bd1\j+#K`-C"k#\RW/3mY`h-okD^GCM1B^CSfo-omrQ*%9FoBP!kO.,R!J>j--[.\c!m'qmQ#6cj*T
%Pi8B8!-b'rj7A!Lhn]>EEddc=+=OegAiQH2+I'OY:?7H`?nYgX4Q_1-DSI&f^toQ"`)&D>D7$M0rM&@1(DDs^EpuB["dI'dlKm,1
%+I(Y@plFY\9]%F131tXA.10ZC!)ThH?3Qp!mYR)ckI2:#?@tlj*)O@S&k8nrCcilb8'),OR"_F,9rn31EWMW/nU#6\!m1a7a_Ug#
%Wfc^0k_YH)(Dt%Q#6e(a2M.st3@LOuRR7SjPRiF>ED:a?TX\N"\3pM>)oFh'>RS"c.!toej>D:iGYk&\+I'OY:.Pj!PRiG1KBKoY
%PUgWn[gQ$8:]#UPIYVI>;O#t#^^)4k^J56&(PK#nJb"@gnlk:?hek^Tgf!q5gWO8LIRH;8E1hS$IRJXUeO5\fb)^;o0qX=4GE*c5
%fi2Xp.n@^@j&k3se'sJ1IF6S[7PF=;0;*\LIT.hS6s_J?e,ab(#*ek9P0\(&&KcKB)V/$mPcqdTO<*jrM@8["7*XPkpVao&`D*0r
%>\4/$W+M+gb5;j`j)/@>GCecP^5g(<RH.fGE96DOnP(uhH@KcSPT8KlL:n+t?[$P(BYsl4"/4f$ARoKDW?7A[^^oH.T<&:fGekam
%Sr=?Y0L5G!-ol>3.I\`-:3N):d[`L-2_L!ZbqV:H)-gQ7'sA/H:/CJi482XJ41tiW_`<!<Bg5PjoR3-!BAb4k5i$sXjJ!N^!>ekn
%C#"f6^UDRb$c9pHgFhh[Xp4j=D(f[]_nE2,&*0j\Kg`,Yg*YgEjha_D%V[kf_PRfi&6Q/bm=@Ia[fS9g<6_U>3csl2.,Ie^!`\:<
%:c0;\@sm-050u/FD^[_q0ud%\+B61VLp;^"/CUDMnNN?*j79,]ai<m$bpI%N?KIrhq0Kf7W`BbPi!Nf00jHTcGI&(&S`,OMGtm8"
%nkL8H8#T2H(#2;ra,>.Z"i7)Q1[SZ'>,]mI.-1.$qC_TMPD`Y]Vq%84Fc_/Fo9fjBg;82bZu/V?/hm04e#JGs8tsr<453`"%c@BP
%WuKnF!U=W$htrRTBjkk2'ZJAMj]YjlTZ]=_V_d*L;<<5@Qhp<D\@J%KW^#bD`3%$O;u_/+N\CZqo?UU*f^ZP2;RQPm0F%L`%i`N]
%3C4R8B'7unEp]8u[*'9r`djr6I_27k=*Qfm!-_g"X?u=?VXr%in7q#]e@omEo6<![RFj'M,]),^igi)O,2['c!bcI#pYDZ.Ut_5d
%1a)If\Y<Vh+7j2D![:u#%:MuH.q!N2q/BPj8uieGjn$E2pgNROA%7+hM,K,PUKkY"m@GPnK^%`:@,2GF%fB;a;1q1Dl#+j$O4$3g
%is>Q^i),:q<?Cq7^nYWbnSEq@Ph.GjIOah8kMT^mVE+fDl.`I#Ri7)QPp&t6n0tR"c/h<ejo+bK)MOY!%P@FKEaJn-:q8;L'SN,7
%ZlI`Oc*^HAnr<@:^7OW[PHI_Ba9'8Sjo$ZN21=P0GdP+jW8&9(._DOi9WLPXbo!R,mO61ZX`pGgRFr".Q4Jj<3OeRq&Z@4.b5^K6
%-kg%=C3ATY45`uKVsgNPZb:k'e5'$?($HdDR1kaB90@DKmuWaoo&e_oq"Yj)A<tD1hS\i:Uui`.o>mb^bm.W%**H&%b([D6:jkAk
%.8B9=c<Kb>h_CVm+L4oHa;k_@Wm7^?:I:_kN_<6)nqLn^9[<D+L+5?k6JbP=HGfK3o%fn,o4e`tQhlLNe`#=Ilno6cUI5u:D3/NO
%i*sJfUDgqBnH%cUJ@Qci*A1kKOY_ssV'BCuXmYG31S`iA2lTQ"C:W72g\a1G7a[i7-VF"l?4YZK)Rq*Wpen"/rmdT/\6[.5>-W%Y
%5.pW#7=753d!+e=Hib+Zf3D:UWijt>jk&/hUAEE=-GG%V"Y.2lO#%;egB9,_L1#0.[nV+r`Xp@si3qkiPq0IQYDc>@H*s/Djd1CB
%DK[_6r0"U-U+G4m&*]]fouj:1L2M)mm*&89aH^ffYB$T<R9$6KVYG/a/r[rI*(+):B7$21oM)7\>9)"FY*DgpChqaGPBe8F('hCI
%27&hYkSLDsN4u(P"ZR.Yn@u$_lKRk,IdM[s[l6OtJ3W\[`3UILgr&C>'1sR#r:1.V+O-FBXR=d+IDFCt),HgkE'5Uj+s4u)+SbHs
%F>d6*O?^p15(\ND=8O%4oH?j&c:MLZV.pPc]_\DA"]7lJRrKDo/r3Dag%^IfPVGtAnp7];k>U4/U%[_`F5'dn$mKIEN<f;I&RBOn
%RL'7%;$<2f3hJdiX,+R><Tc_hE23ajI5mPY7I(M:r!4i!"SHddDe@tbk2G,oa7@nT\HY["%;nA<X0?@*GhhKp=M"&O`&]E+^s^cl
%J;df74)u*]PjW-'Ngp7o"ifQE,-Z1N;)NOM<]QWfhQ_IJ3L8:`"WN.$/6B-VJU!D>(c.W,5p$RA2'2a,8=tMu*"JX217n[+ih1uJ
%.fi5dB/UH:$6GL(5jukRG&SX4a;s93/#DTO"apmA_oFeF_K'ReK0C7bCAl)%l@!%9rJ=_p(K#+QY+&sCja"MY5['_`GZ8WZBQ(#U
%L7sVt^*p@t<X4)E<Ep6l;la\5JO!qJ@rZ_r8llN1kOAlbmsdG$"h)cD[5r.Li#R:TeRu'"cuOW\h)0UnYlGS7/gme!=:rfKrJaPq
%WMsfSR9q\qd%TYQ-i":jPER8^45SXENgX'Gl7+'%i+\Gs^r$sAZ8f4?4nQeOJ<+!7II[ks/aIb1[!P%9:1I3U8FuWO?DFQ,5F?1'
%^7i$_.>!;].:<AA5HQ?5fei3#K&lioh?u8T1"hSk%CK0%A3niTm)T!p>N5+Jdnl^f-sajUE:7\^<>,0f=7/u&b,d*iT?#5$'l;.*
%!juGW02]P!_7SAhf!TLA`mX>HXqe-P"g%$LXd7NpAe\a'#D^p.ebf49QR[54Zsl6O2A_uY_ZcXV30?g\4Dnh(n<l!XM1_;^4FT'1
%8&d;-%VG1pYe/6D$oi:3\>:;$1P%ETm7<e4qW5:S#KjjSD-6c/Co!]@+1(k`4t^e<?Tr0EX*sj&;]C*?QlcM]:X0J\ZE*$<k5)s9
%9pRebe:rnp^FS[tKYs6[5JG`N._ZTFKZ,TQB@fX0?:t)F12X,K3DEKD%5tb@Yc](kRlRMG-?,o0r'mn&I0b&!\G\nfK%4cunO*-G
%25]'>8N<>*fq)Gak0ppF\9`&Ek2o4gL>AK]LA\dIHBkt:TBLEG+)'%tDsQkGr=s@a8&pa[c24GM7*jFK]Qh,qg;p/Cf@M(W?s>$>
%#?aL;/C9#J@/?<^9cLgSJ,R3j4X#Y]06ClOmI@KUi@ksMk+)@IP3FuG?G5StX$:fXJ.N!7W@#)!j?iH:5D]d(T@G<ui(A".VV\7i
%mfb1U7o.S;A+rr-lR`U`r\4SgpYQ]e(j$G1cF$jJE124Cc282cJVO[rBZ7omDuB\8V+3PB+cL?_-eH\q7<:CNU3GXkH6VU3c'8gs
%Q4CG.ZnXeITD9]`)Ph+j1-lm`D!Xi0q=")M"4%0#L9Y_<Bo_f;gp@AbF&sG7Hk01D:BFp0S3q2\KHuafr3(FKdO\&V=e)>]\`^_&
%Nm=8eIl[LK<`^JrqG?@@[Y39n48cgAIWY5&dD%;8^E<A74Z^3Vce%?G[TBoGZ?Z'+i;;J1]kLO+6YaTB-;"Ch.*HK4?)&[KI`aU`
%D;KMdGCT9anG6J3%75+,m_nJID9\k')Y^rt9M?LaL\ea6D4LfnnH:oseU`j7J2VIYp#pf!f3733qdk>>On?9Z;b=_8RUTteT%>.J
%5JMo1]$lH/(Rln"0\\kM-)M'6#2J#CA3?<!9h[.1c:uM88Yu/GHM&6uS=`QTAtMdSSmB++-9:`ls*Cd;>*!gj)a2GIqJ,IV?0T(p
%X#lW,NdO?`pG3YRgWquN?Ys\YmgL1TqsNd[Vq,7$gnt%;26ro5%^kuS+Hd1#J@Malj(pV*D"259"\;2-emojYJ'4,:`^GNuWMt.m
%R%IgH^tS5S!YsL/H8:0&KiQfPMhqdWgUPjI&kV%4K9(Y/]lDq$,.ldhl?_>iGJ_G(>/MB"Pr@?;aQ(dJVYO-mr?fcjG%68b5jEL>
%,ijpZFDI1VH,!t\%=6`G!>TqF4aeAbmNL)P6_/U9g/Xch=UW3"S#pB=nm65lNOL6uE(KT$@H@GM8%[6B<^%ns:CrJ*^_:CG*pVhc
%GkfbZ3Mr\KmJ3c%s%SLl<*22T@45^XKlIf,X1g`,IVEZ#L@K96$am2B^[V&J4HAC462C*+:.mY[$2*@7#l-BZ)IJpg^R/!rD;QeU
%+.YY)MtZNtZ4]H>BCf!"5O4fW^Y[2;cL!:?ZF<&J/Y"kpCS%GBd3!hr1S>t$H\&qrQZ%#&oc*au>FI:]FR17DMiIZ*=@+'[U3nrB
%S(#WGePDAFJ)"C5HkjK\8[gNtNCHPnNbe<EKUAf^PKBef[I`5Mh;o0.cJ,C<<_g'cnP\sKE5.M_MsnC83B[,Fp2]uVK;F35+5/1t
%J"uf6dAte:LVMD@hJ[i;dU;6V&^RtHl4cFhBjt4@^Z/C4'Reu+],*qtqJuQ!/ZVBIONc+`Xm_RJ"],n<WJnKa*KgCP<#bG\H\PU*
%I]."o#_6-RU46OXqm-G::Li-t%0%S<NsjO=+L#>L/c1<@1"Q)T21r4G<n<W]%^#\>Ic-k67l:@*!LK$S'uV19l@j`?i^1qOPlO5[
%;Qr^(;GYD^_+M\@)*Vr"Mj=qc!MifMZRE$TR+Gfsj#JXg*$KN)\s7&9^%`8UnFb0j3lkp%Qag\l3Lgi2SAK&PeWe*JW49CHX$`gK
%^XU'V1UX?6>4BAD=acY50Cf78\93lrA@NfD9jCG!fJ]=EZk:Q![%bekV7fZrXe)0BrBA+f'/4nebW]cLHsCpL_l<RAFI!Q)Qe[sq
%>e[a@D&h?rBOc>5ZiLVloiE)a\Zd$]BAA1^SUmQu]q%$*cf`#!kO66R6$Y,4;Vpa2\M$b(e;guAn,\n/R)cln8C'>cIV4<e\7KjB
%cKTC%nP=\uEA[VdQea?,G><<&ZfO!4K:^Mp%sLC&?1dVNceO"1Z`h*4`k!W2/JoiL9M[7S4`Li3hj8aL14A^f:%Hgfm?Jo<YLg&2
%K-u_3\L0o!ol+5a&*VEJ>I7HFhriQiPLnF9C;,-)9*N"(ID#CR*=,KnUCB"'/mN-Y#Hkrs?\e.G)6AHCGf(=`%>QUR\*O>O_L9?9
%BH8E9-9fd;7!!5doSC5lFTAjk`?HkYIljDoR*dsq^CISn*O&UI#CJ(M*P*f=h+RSIISI=@d)'XAnb/8SLE8+dir%7uI(u#G+5009
%I,DO7Fb^_5fLX'+5jf&"Ln*%:??CIdb1j]9^)g!kD#hMj52*OA2Ef2*5_d#OF(UXi6]:&chLj1IBCC[*IC_GeC+;pX%LJ.PO`o7>
%@h@c;kgkL&0Qag+X$P<e!#bj/2H1V64.('GH1-e62hL%5Y4qPPIbQ8h5WbKq`b^TXD:p&C]b[W;Nl>ZjRTHr6#LUr7NgMC\;VF;0
%'A6`;m+RP>:IN4WfM26g[0hO?1:1oYq!QochZubRALjIcl$FA>]t#G^NJm*AS'0;NEb"8!\bsS52O8hf,Mi2t_%nW5U"q@cE)JA*
%?1FfbRb,R)'OsE-S(@&^.'^&T/a;u/Wc!]4lc*pDHr1+FDO%G0HqW\pm!BpqO4D&'XoG88cE7Bs9k6%oMf*H:^Yf%Qiq)Ys6(Hhb
%.g8WLS'be_B>N>u`Q-fVX'_u8KD9]HBQP8Jh5%ZB"5D0'?q(udmcNG>3]kd!IkZ5YeU'/^PO?Q2%[**N(_GokZ'\GS]\&t)doVR-
%7,qKt>O)a1UdRC-Zg-58_cn&RSt<<8Gt%++P4dFoa,Ou=NtuN-%,impk\KBE^'gCoD)fP1Ot/,a[Q\=uYQ<?QDh$VR_<Qn#rOu9b
%)n_j"YdU<^Zb1h+oQ._rI*B32Fs"t:2)b;uRfaBMr(%8[DXrD>kg1*P5T/"/+u#+3qV:aZq:MoHJFs_NK3<.U[RRW8)ft'7ClJ^t
%FP6r"[5HN)%O'DiXc]2L\\DB\[RRVX#1i9'*a<.%.st%!7b*JS2`AZfCGZA[RN':[CG\-_c&Lbi2:A4M\ZmkI>9dfsA8WB>X\kSe
%[7,(RmHfp='34b%b1]%jquqQC>OgS@dIER0pASDhMU@<mq*.^Ulb@.?(L^>Tj&dU:S_O-G]/I(&s'rerVX&(.EUD"&SR8OK3Oo"X
%rG;N3YPLBB]mA2bfikN(f7A0B&`9Q`W=];\MHZ9=K,J`+O)qLJ/Z:>e5Hk'f?2LIJ4P)sRd(de,<7,&6og#@geq7!CW;f9acajDI
%O6UZ@#PH!'U/BIh>SkEQ:aE/"Y+N:q36PL:;S.*(N^He`Q=XL<G"51TB3Pm4O/aN!J!'$rXVshqWl"g)TG+J<P@f5Z(\>3M`Aqj+
%V)leF'-.4L8A1.QF;YO'VN`K'+N9edS8p[I>Uc@M279Hs6-:XS@h!T)b[k49PZ(>t)_<:o@Smscjcn6!#0R<_&JR]*3TY@a_/_m>
%@O<N]82%0g_=mfNDIh7c%&3kAk4l&a6"X?E7$5^S'O'fs7]f*7LP9;]Pi]Au-)#01:HAb9X3fj+KU0<iZ:IMhIZ%8?1A5<>>EOQ/
%Q?'4s1?R31f![Xq#AC8nQhK<R^Wi&8d4c!4ih:`3_4O3cI!S!al>t[]7_@:9D$Q7$Vajs(LI_B]N:"gWkC;0DYWeuN/tH9sfg#;<
%J+;Xe)#\P5nQ3++rE4bYl*,=_WD?7??bOBp$T89?PH&crF#KFA?9\!L`-<Y-^9>&gFPTlMSkqE/$$G(]fVEi\D*q)mNd"sgpK9G[
%SpThN'8sjmZ**seRoll-IcuX-j.0:r\\h.CVp$mf`00XcXLnDj-Iu,h)1#cVGUM&kLLlSdZHMJ^LIJ1fYafO&R:X-GAkq!RR9_*P
%iljNjJS(5JVO:T'e'@:eq35L2aTgLha"1ed#g5'6X+b,TSPM5toYrG/PXt4cH<3`,1d-n=Yj%-M&h-[&BR3a\&NDqGE3SSd=W[B_
%=(-8/kJ9afe1+QCU^3fc66>;mOQdi2$5-3k>q&<"7&F9B=Tp)\>9R'M@eI$8o6H#,?o4k^Kc(%DW6'it91#Xk>aL#l-6O>k<d>&$
%6@&"IS4$G`jfEp$kq8g*+^eJJaYaWb5"u[#Zqk/20cI6dguLoR%]1PMa^@;#&utf:MFShh-R.NOKJM+88H8l?&OgU!__>`bOWM,b
%UfVAIE!ie./;;;="RtlZbE@.h50Qi?+[s71JsVV*HpXjY#lPNMX>_G*4jN$D;jJ.e*!M70dgmg"]t+A6XNh-c(8F\mXr<668MMa<
%&l'k':;Yf0nd29V,P53!K+-G)gW(]mP&)mn&9\VB(m^Jn$A;NP'7)5C""[krN8ka[=nC^YR%t':V$uU0m@*$%B=2O$(g@&Lr5h4:
%Bj\1Xi"$,cBTuQ_:`_)Q2.I5r=ulht#$I9a*2q`#<Ye7u3I/at@k&[+P>#.WTGho0;r2JN`2mH"Qb9acm$6;4Fj6lui)D^V:e[or
%@4(9?2@ZZ\?;V8DKS8bi$8irCbb4OBY9(4)JNRT`G*TsiW4!+$f/b7/*.,0VM-lg5*N,),_[pn,*\iqgA0f]Ee9_KZ($D`(*h5Js
%H8ioVL.-*U?;.I&WC\PAP3B`mWZngPWh2OK*U4ggNNMB`MM'5R_dbKK(mKRlLci]>,RhMpp6ZUH%rj!c+:8P`ecSme$ll0\+;2<l
%PCa,u"<pAE%IcBFH%d`AZIJ#JpcKl*r@4j,8#H'C,M4hm+47h61pJlJ<#YUU6ea@-Rq.3@XK<G^Y%@A;`7-H+Aq"#EAt2:"4(&bU
%ZmAV)ij3sQ6H*]`dc?k%f$-BI.G\JLj5L\;<+mC`4[91pLs5U/)i0*5omeKiJ3tF\)Bq&sc,%Us:YBPa,Xo86!6;/8/(BV(pt"4Y
%80>9h+ts7rLpB>\2M422QQpM'C`E/#g&3k<^!J`p+t>M0c,E@1$58Vk>M7kE$1im>@>lf$JPg/q]>aDnXq]mj/58rW-1H548sG%2
%N4"f_H:hEg3uXhbMQQYp1,Fmn_H(FJ(@\$!_!j+=!%B7k2G<_=!"-$D]1F+.*BR+3MGcnW(L"']TrURaddT3I8f[^k@J[dt;._XQ
%A&h6E']rq<C/gqDoSJ1qi1I9.Du[/PnEp8:/U[F;\qP)&,I[+/J*7Z^rD2=f\,U6PnEp7E/\D`:Zl4BeG`]?1`$s\3\R&mP"@YA.
%HXSB4C*c9D&fK+)GUDpn)8Jj8BK4N.&^jNE)imb55jfaX$bo7Y:SYK0"!Ug!drlZc2-DgY)<ro+%9c5/M[K\b_q+tScqjhrdV3Eo
%'+(YZTMRDcM&o`!V?kP:rEn;R?m3BD7S#$P3(;0J5[#U&0cK/*(G:LM&s5J=TUDI1;BSFTEWXKr(u&,Z.S?cj6X.ri>8D(.#sq[-
%.je@Q[`FM'@l(8UfSUPI9ItK7F45E!`\\jV+Z4cb;T217`@RpE1hpX"Lh)GURC!^(`#qrk+OsULqBH9XKMd=9i;oCK'Iuc`[h58K
%bKO#*cJp=MMYc'_@$t<;=;[@>n?Y*mMFh8-9!"E6-&a(MQj'pm`Ph,lrqdhH_5nsc3]e%W-%kkJT`;i!I1>BQ0N)6[>3SQBCI#LW
%Ts(2QaCob-HK!j[.s+C8;D4I;.YBtnp&ht,9/Se@33l#::;`4N,QaSB`$rnY:cZFU+l\6O^_hAaU4B&qKXRGZacZY)Fk[HP8ZgEk
%1gW6FUtHleAhrRPEf,NL*^^!L$`6'"XQF3oG#6)7XZdU:N+&Z-3J,V"'XL7;OgTt4Q#ge1Aurj+J18g'V7(#@$r[sKOgBV,;Qh_@
%h'&m\RE>5M-6X`:XYaS76l-+%JXCJ]IV)WsRb9AH6V`haK%u.bgrPdX"\-:3#_fPYV3u?$1T<dR\V;;I`?8ck"=l77Y10Kk)?2:V
%))E*UPD%Bf-u'k6MAhm2&gZ&_O(c1L;A==PXuKuq!T0Wge;-=1@>86KPt<qY<p,-BMc-2W0oAPLYZXl.(9Qr@$$-ehXOt>qYrX9)
%>5W_A>(&2(D:4#g*[!%dKIn`'7d7@J:-g!u?1Pq;X\(ee`Q]8J&#p`#`K6"Q[M9X<#QV*O#XK"GFQp5,PGh:LO?P,CYAT?"*nJEU
%,[pj"RS?7ZU.kq382I=a'.:FfL$LMZ3(@3[F:3q0Smr'VIY=#M#)d@G3dK`:X`-k3)pu`b'?PhOJ^BUG,Uc"cRitqS8[46^QY@FL
%)gT7*Ih%H;P#A=);OL)_8tC5".U8Z>"uGh5A23''aSHla:=tNILb(@#.OO2OfLCQF1lei#\mSrS?JC-dgJGg>U[9g7o#%1O-KCoS
%7Wf(sQEcF^?r;I<>Cb:c-t+!1SjE.AXcaO@l*jOKJrO8V,;0l8;c-pc_nn8)ZJ$j&`%F]/=XTbW<Od/2*Ta5X-q/e-MUcSQr9U`C
%/1\$iUTK>T-_5*S[tnN8j[B\96#L$(/0t$4Q1lgqfHrm5,nJ@_?k7uo4+`05XHnr?.j59&b#h[R`OYfD/U_6+6`;>iSK*JE4\4`?
%"gN6':bo7DJ-h#>?Nt5d.#G/3$"MD"W^0#g%)EAgOYJ$_\]lh4M;;@V_&-+-h4A*Y4G61r8jEFdm3$C!%hm)VN@Ss]D("$o@SmMq
%V?Y&5;.^qabES1"_$-(Kq=^-o-n2H&Rlp48-g6>E<fXs$=KsT5"KD6cRVfoL?cLcdTFVrM-k'.?OBe[/9X-`-K\d^W23,hY,\mjV
%W%C6!#spI*7,k-<:eQU^XtkoO%NTpgXi2V6^LV,2Y]_*NB*VSZj@\PGSWt&l>+'#V4M\Q>d"lXD3C4tAFJ3&b5V[l/n[>6G"/8L5
%&u!Lc09n7\"=;.8=D-`/r!f2s.ORlPFBMb%E@EU8*:9D8Zd=LQ6^NLs=kX15Yn!^1QUTPfZV#oQ;'+u-cnsl]*b3sR=k8BRV6OOY
%l+f3`K/%G51o&Xa,AS2*>6SqaJ-!L'jX(ZdQV8CZN7!9Kftka<4E\:n5m)8p-BoW2Q6n3lZ*Ddrp/9@bPdq*_0eSAh(*ZtN[=cTF
%oFtkS6<T1X2J3WGS`-)aH)hrUAmqG.(Y)/2lXm3>F2a-g<murs/<IDl$7(X[0OGI]fk.md&K+Mc9O*6L8a@aX<4jfi)Ts6WJ-"Ac
%V1WRj<(@"b*X@.nWF3o_q@PClFDc\`B*uG,-+O8=k?b,D,t*ROF4_CZGGM.#V/1m@]d!Q`E[grb;h5O*/Jscn-U_Im13\XNCu!H@
%[[lo2%$@O1c^:r&67GT$WUW&*.G?oB'M7FZ,GJa\&P9uEb3L6V/2Qj4U'r-S7XMeEb!KY.@B5%%U#8>XgTi@uA/8UNX<;%\M%$^c
%68I+rNl27/3[aQ(b`FMuQo/GDO[k5OO:gWrOV86X-UOo[$,%+V#sP[cDJW@:H%]:j'@J<EIQ#4Z@WbH0[tl8h"+0*`Z5>gTKJ=PB
%j+QLcign=[6E8<:r>,E.gqQVhCN4i7X-"rPd"jm)4@,+_k'0n[gadR[ra(1eO$&S`+W&"([`J.u`kulXEYJ`GVkpD4p-WpbnoSjf
%9"dC.i8QLJ]:DMr_?qYQ<9GK%R<0?W;+gN7qNNKpWMfQJ.OR>Hf-='-Q)LXk)dB_7p1p#2C/d1gOU!Z,;HO5,AHLmfCbu`c,g9%S
%<Sc_kl$DFTP!EOI6'=jAqFZ?tbMZAMS:1W/)0Is0XHdm"<E?f@WZTD6<30t?WZ9I.b@BYM]L27JXlH,jqfnE6Z,5V%E(H`VO-Nks
%YX:HGSZ=,pVEE&*=P`OI3M_e(LZIaU\uo8R34GW_'q\W0Tji`!;rNga@F:l'>;-uBBiPI)&WTW(]Bc0>ej"jb?ZJTBJ1A)7>/R[d
%k&@KkJ@X3)?iqVq6<u^#dWRU'JU9Om4J>QQTNK<)/.n]aFBJ<?C0AcX=@<Q/=Mb.9S7EUd:=1nYS=MoSOV8'QSbjG<dY.g^UJMNM
%$KW/CRgB1_(<d4!J9Eh<8S=UJ%fE^Y72SW!0mE!&*k70Sg]T<8?TE`m7g'gY!ehIL`i8tR\oiK#M8]?EZoM9/$Uj2<bmSkBJI`oY
%ncGG/PC`[Cp1njQ0!(s5iN=q[/2P)U*0@7oBA`m6(1[jkmY^1X!XDYY'RRa6PT_6t_Q)'_Ot"Wr&0Ua)ZnT"8<$#dj:EG3"A0n<6
%FI6Tt4gIun$2,cWQ\@T60MTQUX>^[!h523QJ25"`)+:!'O0Mu($7`peVOSc<]?mpR$t1:f5"aU="$t:mj&G4Uame4:,k*a5=gTX1
%KdPS;b1qgY8P$$jBEE5HR0Lfk"%54kQ\@R`n<^@s#6$[7CDT$(E^X4"6L.L<_\qm8#7ckk+$gZ3&.ucj@Ghf-(Ku"m'norW3%ub-
%*"&$d4h=Q42GRTB@TcXR&pM\I(>,Ch$QY#TUU1CL9C+C=$Or]$)]#tTXS]L.[keCB_C<C<,;EfP,j_=XHAmTdA,Q4k1DBT]flCTn
%.M2A-h/m*\/8kQNl]=HFO_6ca`[:h_coW.sQ:0+dKG>Mihi`f:+F/jD^d?\jY\d]_]&hR#&d=FsYVsk-7+aE]9VeKbj/O=0"%mhA
%;.`I,h9_NS1ZsIQ?7sN`!!Z(cOAO(E8-3#\lC.+2XDZ6H5PNMr)4&W'>92-gXfh%ZRWDZg"d6aVTn'ou=S6@#0:@(P(c&29aSaWK
%^n19]`FPLFmg?c!Hl?\=SJ#FC=I50GXVnBu%VD9c*'1KAaa>!Y;,Dul@E2FY8YMF!0F;J?p!0-0!N_DZ"65<Pa+e-A4ZOc$rtbBO
%rO>mYSR#',E(5i/2ZShe,cNdsT2-#\Lh5*@F.ki8BXt/"0)Q"j?,Z?#`sAe37?B2PgC0cXR,tHak#5DQ?)N9om[R'5POM;?4WoYE
%7\Me4qO'lCh/o-@hB7L3jf*BSJHG-O08*[tm/2agO4\d16/t7Z]8qXhgEifN.NER.b:g:.f;n%1BkQ8!'QS+ekf)apWUZh%im^$h
%i#qr,l_egCPcF,PgQZ[7FD$[<BGR6K+\O.#LYW7Ja3//O_5/Yo2n"1I9f*KS]F[MSdPKTVC5$I)OVA/!G)Nq@B%;%RD(8_&8=VXP
%9;NG-pE1l,RZiQUNma^:">6<=FWGUo$Ha`IE3_uMEietFBl_gKhMk"sq2iVIDmtR<@47)*g_6Z_<?n2:=ufGi:W:a9mW3!jFju6b
%K"%?f.7-(o"W.^0+Q-bC<@+'K^l&P?B_0LQ<g)U`S&?e=F_<!*f*Ip$D%PKYp_gk2+Pd%4ZW;571ZcOsPS*8-kerM!C8WMEO/u9^
%FeL*W:dR&lE+st<oV=oC^C/[+0EHl\)(32WZ"iVcj%(JR"Oo#<R=W7KKfu>CgirF::>4>3W2+l.e$QfO.[fj%d)O"X^#/\"M?43#
%F\(:q!]'>/:RQ?G`Ns85iLurUHRlY*iRStEVg==T8A;OP^Y%eIkc[IO3V-FnXhhl3GR?Q+*31qe<LeE9eH[[0KVuk\Jqu&'$pM&Q
%<:$($O4N'L9M?_?DeV*_fMM4h@0e#*Nt*9h4+S=U5hkXA/fr8H^?2ZI82gg6o5OaASJ*DJ#]]3u%3dY:,T?k9R;O"[eH;+j.LtE)
%-Z'(WR9d`$7grA7_Ot9j1Zm;gICh@kB3Roc!h?bi;U@V\5]W-#UG-_?1PghiD?Fp,)H>RbbT<$W2iP](M.sj5h&tX?4[\2T$\EqK
%!h?k&K<rhdG9N8i,cLZ62\K#Oh,(K/X%lMj+9PpT*?<0ZUDSLIL8*:(A[mkQB5Ke,gdojm-.t77!#-es)"9H%W>e;BW+=nNqQl5]
%$`aVb/GNcsg.i8nf"9T\]ka5=-Db$.V4PtPBW(]*(RkWt-(uTa6:@o=-[sm[4/F,n\*?:M]W'2:$H"967"?h,j0YS@mAhSCmH=,j
%6=JCBFO>:?J*/?e]=2LI&2L)K,Ri8]D[_[OIq.+Qq&@3hajIs^%2!a=Lf/gkM4X:.^dK^'a(06)-IE*'kXsmpQYM^/KJTtL@BkZN
%pB">CLLLrq)e^=e?8)[c&dhQp'Nq[ID_=CI[InDbq^4&C^as&i]2pIi.0Emf1K%Q^h?l);?NXW=1eM-6JG3$.Z]r;$hU!4#LHX=W
%j,SWC*#g-Af#m3XI\E<UFiS==2Sb5:+45#`WPdW';hr,-V[e4::*!B@;\+>U`9o69UanJ"KF*36jMf8_]NX\04`.5;cG6'rDr->f
%hma>R^MtV.J)a9LWn</q8k^n#'Li!Qd;.'jjS$h+]9/2i9Q)>+>eLnlmIkSfg>p[_]XN'-f\ZYok^7PSAP>;D5<er(I/hC3d<Y-5
%n\tM-*7af0cG!ZR?QT/B7J5^4UC4KH8+hedhuD1d\rs0L3P"iOc0kT3`ueS,~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -75 4136 a(Figure)h(3.)g(T)-6 b(emp)r(erature)26
b(rise)h(v)n(ersus)f(dissipated)h(p)r(o)n(w)n(er)g(p)r(er)f(glass)i
(area)f(for)g(micro)r(c)n(hannels)g(of)g(di\013eren)n(t)f(geometry)-6
b(.)36 b(A)26 b(linear)h(\014t)e(is)-75 4227 y(sho)n(wn)h(for)g(eac)n
(h)g(data)g(set.)-75 4453 y Fi(similar.)35 b(This)25
b(indicates)g(that)g(the)h(glass)e(\015o)r(or)g(of)h(the)g(device)g(is)
g(the)g(main)g(dissipation)g(mec)n(hanism,)g(indep)r(enden)n(tly)h(of)f
(the)-75 4553 y(lengh)n(t)k(of)h(the)f(c)n(hannel.)42
b(F)-7 b(or)29 b(the)h(taller)f(150)f Ff(\026)p Fi(m)i(c)n(hannel)f(w)n
(e)g(see)g(a)g(drastic)f(c)n(hange)h(in)g(its)h(slop)r(e,)g(indicating)
f(a)g(di\013eren)n(t)-75 4653 y(heat)e(\015o)n(w)g(in)h(the)g(c)n
(hannel.)50 4788 y(As)h(the)g(tec)n(hnique)g(is)g(confo)r(cal)f(3D)h
(spatial)f(scans)g(are)g(p)r(ossible.)40 b(In)29 b(\014gure)g(4)f(a)h
(v)n(ertical)e(scan)i(from)f(the)i(cen)n(ter)e(of)h(the)-75
4888 y(c)n(hannel)d(to)g(the)g(glass)f(surface)h(is)g(sho)n(wn.)35
b(The)27 b(same)e(exp)r(erimen)n(t)h(w)n(as)g(rep)r(eated)f(for)h(the)h
(smaller)e(c)n(hannels)g(resulting)h(in)g(a)-75 4987
y(constan)n(t)f(temp)r(erature)g(pro\014le,)g(in)h(go)r(o)r(d)f
(agreemen)n(t)f(with)i(theory)f(and)g(previous)g(exp)r(erimen)n(ts.)36
b(In)25 b(the)h(case)f(of)h(the)f(wider)-75 5087 y(c)n(hannel,)37
b(t)n(w)n(o)e(di\013eren)n(t)h(temp)r(eratures)f(are)g(observ)n(ed)f
(separated)g(b)n(y)i(an)f(abrupt)h(c)n(hange.)60 b(The)36
b(cen)n(ter)f(of)g(the)i(c)n(hannel)-75 5187 y(ab)r(out)28
b(3)f(K)g(hotter)g(than)h(the)g(w)n(ater)f(surrounding)f(the)i(base)f
(of)g(the)h(c)n(hannel.)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 769 1848 a @beginspecial 0 @llx
0 @lly 496 @urx 388 @ury 2834 @rwi @setspecial
%%BeginDocument: figs/fig4.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig4.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Guillermo
%%CreationDate: 12/27/2018
%%BoundingBox: 0 0 496 388
%%HiResBoundingBox: 0 0 495.8111 387.3975
%%CropBox: 0 0 495.8111 387.3975
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 100 8
%%BeginData: 8888 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08FFA87DFD15A87DFD0DA87DFD1DA87DFD1DA87DFD15A87DFD08
%FF7DFD11FFA8FD64FFA8FD08FFA8A8FD0DFFA8A8A8FD65FFA8FD08FF7DFD
%07FFA8FD07FFA8FFA8FFFFFFA8FD0FFFA8FD0DFFA8FD1DFFA8FD1DFFA8FD
%06FFA8FD08FFA8A8FD06FFA8FD6EFFA8FD08FFA8FD07FFA8FD07FFA8FFA8
%FFA8FD3DFFA8FD24FFA8FD05FF7DA8527DFD0AFFA8A8FD06FFA8FD63FFA8
%FD05FF7D7D7D52A8A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8A852FFA8FFA8FF
%A8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF
%A8FFA87DFD05FFA8A852A8A8FD0DFF7D52A8A8FD10FFA8FD53FFA8FD08FF
%7DFD06FFA852FFFFFFA8FFA8A87DFFA8FFA8FD09FFFD07A8FD4BFFA8FD06
%FFA8FD08FFA8A8FD05FFA8A8FD0EFFA8FFFFFFA8FFA8FFA8FFA8FFA8FD53
%FFA8FD08FF7DFD07FFA8FFFFA87DFFA8FFA8FFA87D52FFA8A8A8FFFFFFA8
%FFA8FFFFFFA8FFA8FFA8FD2BFFA8FD24FFA8FD08FFA8A8FD07FFA8FFA87D
%FD06FFA8A8FFFFA8FD05FFA8FFA8FFA8FFA8FD53FFA8FD08FF7DFD07FFA8
%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FD05FFA8FD07FFA8FD2DFFA8FD24FFA8
%FD08FFA8A8FD0DFFA8A8FD06FFA8FD05FFA8FFA8FFA8FF52A8FD52FFA8FD
%08FF7DFD06FFA8A8FFA8FFA87D52FFA8FFFFFFA8FFA8FFFFFFA8FFA8FD06
%7DFD04A8FD0DFFA8FD3BFFA8FD06FFA8FD08FFA8FD0DFFA8FD06FFA8A87D
%7DA8FF7D7DA8FF7DFFFFFFA8FFA8FD51FFA8FD08FF7DFD07FFA8FFA8FFA8
%FFA8FD04FFA8A8FD047DFFFFA87DFD09FFFD05A8FD09FFA8FFFFFFA8A8FD
%36FFA8FD06FFA8FD08FFA8A8FD07FF7D52FFFFA8FD0BFFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD0FFFA8FD3DFFA8FD08FF7DFD08FFA87DFFFFFF
%A8FD07FFA8FFFFFFA8FFA8FFA8FFFFFFFD05A8FFFFA8A8FD05FFA8A8A8FD
%05FFA8A8FD18FFA8FD24FFA8FD08FFA8A8FD15FFA8FFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FD05FFA8FFFFFFA8FFFFFFA8FD3DFFA8FD05FF
%A8A8A87DFD09FFA8FFFFA8A8FD07FFA8FFFFA8A8FFFD07A8FFFF52A8FD04
%FFA8A8FD05FFA8FFFFA8A8FFA8FD11FFA8FD07FFA8FD24FFA8FD05FF527D
%52A8A8FD14FFA8A8FF527DA8A8FD08FFA8FF7DFF7DA8A8FD05FFA8FFFFFF
%A8FFA8A852FFFFFFA8FD0BFFA8FFA8FD2BFF7DFD05FF7DA87D7DA8A8FFA8
%FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8A8A8FFA8A8A8FFA8FFFFFFA8FD06
%FF527D7D7DFFA8FD05FFA8FFA8A8FFFFA87DA8FFA8A8A8FFA8FFFFFFA8FF
%A8A8A8FFA8A8FFFFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA87DFD08FFA8FD08FFA8A8FD
%0EFFA8FD0BFFA8FFA8FFFFFFA8FD05FF52FFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FD07FFA8FFA8FFA8FD2BFFA8FD08FF7DFD07FFA8FD22FFA8A8FFFFFFA8
%7DFFFFA8FFFFFFA8FD37FFA8FD06FFA8FD08FFA8A8FD17FFA8FD0BFFA8FF
%A8FFA8FF52A8FD04FFA8FFA8FF27FFFFFFA8FFA8FFA8FFA8FD05FFA8FFA8
%FFA8FFA8FD2BFFA8FD08FF7DFD07FFA8FD0DFFA8FFFFA8A8FD09FFA8A8A8
%FD04FFA8A8FD04FFA8A8FFA8A8A852A8FFA8FFA8A8A8FFA8A8A8FFA8A8A8
%FF7D7DA852FD06FFA8FD1DFFA8FD06FFA8FD08FFA8A8FD17FFA8FD0DFFA8
%FFA8FD07FFA8FFFFFFA8FF52A8A8FFFFA827FFFFFFA8FFFFFFA8FFFFA87D
%FFA8FD2BFFA8FD08FF7DFD25FFA8FFA8FD0AFF7DA8FFFFFFA8FFA87DA8A8
%A852A8FD05FF7D52FD2FFFA8FD08FFA8A8FD29FFA8FD05FFA8FF52FFFFFF
%A8FFFFFF52FFFFFF52FFA8FFA8FFFFFF7DFFA8FFA8FFA8FD29FFA8FD08FF
%7DFD07FFA8FD22FFA8A8FFFFFFA8FFFFFFA8A8A8FFA8FFFFFFA8FD05FFA8
%A8A8FFFFFFA8FD09FFA8FD0DFFA8FD0FFFA8FD06FFA8FD08FFA8FD2AFFA8
%FD07FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8A852FFA8FFA8FFA8FFA8
%FD29FFA8FD08FF7DFD33FFA8FFA8A8A8FFFFFFA8A8FFFFA852A8FFA8A8FF
%FFFD05A8FD2AFFA8FD08FFA8A8FD31FFA8FD07FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FD05FFA8FD29FFA8FD08FF7DFD15FFA8FD0FFFA8FD0BFFA8A8A8FD
%05FFA8A8A8FFA8A8A8FD04FFFD04A8FFFFFF7D52FD04FFA8FD24FFA8FD08
%FFA8A8FD3FFFA8FF52FFA8FD07FF7DFD29FFA8FD05FF7D7D7D52FD41FFA8
%7DA8A8FD08FFA8FFFFFFA8FD24FFA8FD05FF7D525252A8FD3FFFA8FFA8FF
%A8FD07FFA8FFA8FD27FF7DFD05FFA87D7D7DFD07FFA8FD2BFFA8FD0BFFA8
%FFA8A8FD08FFA8FD23FFA8FD06FFA8FD08FFA8A8FD41FFA8FD09FFA8FFA8
%FD27FFA8FD08FF7DFD07FFA8FD2BFFA8FD0DFFA8A8FD08FFA8FFA8FD21FF
%A8FD06FFA8A87D52A8FD04FFA8A8FD41FFA8FD0BFFA8FD27FFA87D527DFD
%05FF7DFD15FFA8FD0FFFA8FD27FF7D52FFFFA8FD24FFA8A827A8FD05FFA8
%A8FD4DFFA8FFA8FD25FFA87D5252A8FD04FF7DFD4FFFA8A8FD25FFA8FD08
%FFA8A8FD4DFFA8FFA8FD25FFA8527D7DFD05FF7DFD07FFA8FD2BFFA8FD0F
%FFA8FD09FFA8FFA8FD0FFFA8FD0FFFA8FD06FFFD04A8FD05FFA8FD4EFFA8
%FD27FFA8A85252FD05FF7DFD07FFA8FD2BFFA8FD19FFFD04A8FD1EFFA8FD
%06FFA8FFA8A8FD05FFA8A8FD4EFF7D52FD25FFA8FD08FF7DFD4FFFA8A8FD
%25FFA8FD06FFA8527DFD50FFA8FD0BFFA8FD19FFA8FD06FF7D2727A8A8FF
%FFFFA8FFA8FFA8FFFFFFA8FD07FFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFA8FD11FFA8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFF
%A8FD05FFA8FD09FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8A8FD07FF52
%A8A8FD4FFFA8FD25FF7DFD08FF7DFD07FFA8FD2BFFA8FD0FFFA8FD0BFFA8
%A8FD0AFFA8FFFFFFA8FD0FFFA8FD06FFA8FD08FFA8FD50FFA8FD0EFFA8A8
%FD15FFA8FD08FF7DFD07FFA8FD2BFFA8FD1DFFA8FD09FF7DA8A8FFA8FFA8
%A8A8FD0BFFA8FD06FFA8FD08FFA8A8FD51FFA8FD08FF7D7DFD07FFA8FD11
%FFA8FD08FF7DFD15FFA8FD0FFFA8FD2BFFA8FD09FFA8FFA8FFA8FFA8FFA8
%FD12FFA8FD08FFA8A8FD51FFA8A8A8FFA8FFA8FD1DFFA8FD08FF7DFD51FF
%A8FFA8FFFD05A8FFA8FFA8FF52A8FFFFA8FD12FFA8FD08FFA8A8FD51FFA8
%FFFFFFA8FFA8FFA8FFFF7D7DA8FFA8A8FD13FFA8FD08FF7DFD07FFA8FD2B
%FFA8FD0FFFA8FD0DFF7D7DA8FFA8FFA8FFA8FFA8FF7DA8A8FF527D527DFD
%08FFA8FFA8FD06FFA8FD08FFA8FD51FFA87DFFFFFFA8FD0CFFA8FD04FFA8
%FD04FFA8A8FD07FFA8FD08FF7DFD53FF527DA8A8FFFFA8FFFFFFA8FFA8FF
%A8FFA8FFFFFFA8FFA8A8FFFFA8FD08FFA8FD08FFA8A8FD51FFFD04A87D7D
%52FFA8FD04FFA8A8FFFFFFA8FD07FFA8FD09FFA8FD06FFA8A87DFD15FFA8
%FD0FFFA8FD2BFFA8FFA8FFA8FFA8A8527DFFFFA8FFA8A8A8FFA8FFA8FFA8
%FFA8FFA8FFA8FD08FFA8FD06FFA8277DA8FD51FFA8FFFFFFA8FD07FFA8FF
%FFA8A8FD13FFA8FD06FF7D5252A8A8FFFFFFA8FFFFFFA8FFFFFFA8FD07FF
%A8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD13FFA8FF
%FFFFA8FFFFFFA8FFFFFFA8A8A8FFA8FFA8FFA8FD07FFA8FFA8FFA8FF7DFF
%A8FFA8FF7DFFFFFFA8FFFFFFA8A8FD07FFA8A8FD56FFA8FFA8FD0EFF52A8
%7DA8FFFF527DFD07FFA8FD08FF7DFD07FFA8FD2BFFA8FD0FFFA8FD0FFFFD
%05A8FFA8FD05FFA8FD05FFA8FFA8FF52A8A8FFA8FFA8FD06FFA8FD08FFA8
%FD56FFA8FFA8FFA8FD0AFF7DA8FD04FF52A8FD09FFA8FD08FF7DFD59FFA8
%FD0BFF52A8A8FFA8FF7DFFA8FFA8FD06FFA8FD08FFA8A8FD75FFA8FD08FF
%7DFD15FFA8FD0FFFA8FD2BFFA8FD13FFA8FFA8FFA8FFA8FFA8FFA8FD06FF
%A8FD08FFA8A8FD68FFA8A8FFA8FFA852A8FD05FFA8FD08FF7DFD51FFA8FD
%13FFA8FFFFFFA8FFA8FFFFFFA8FD06FFA8FD08FFA8A8FD64FFA8A8FD05FF
%A8FD09FFA8FD08FF7DFD07FFA8FD2BFFA8FD0FFFA8FD1BFFA8FD05FFA8FD
%09FFA8FD06FFA8FD08FFA8FD76FFA8FD08FF7DFD07FFA8FD2BFFA8FD3BFF
%A8FD06FFA8FD08FFA8A8FD6EFFA8A8FD05FFA8FD06FFA85252FD05FFA8FF
%A8FFA8FFFFFFA8FD07FFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFA8FD11FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0FFF
%A8FFFFFFA8FFFFFFA8FFA8FFA8FD04FFA8FD07FF7DA8A8FD75FF7DFD06FF
%A8A8A8FD51FFA8FD24FFA8FD08FFA8A8FD75FFA8FD08FF7DFD07FFA8FD2B
%FFA8FD3BFFA8FD06FFA8FD08FFA8FD76FFA8FD08FF7DFD07FFA8FD2BFFA8
%FD3BFFA8FD06FFA8FD08FFA8A8FD75FFA8FD08FF7DA8A8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD09FF7DFD23A87DFD0F
%A87DFD1BA87DA87DFD1BA87DA87DFD06A8FD0FFFA852FD0DFF52A852FD0B
%FFA87D527DFD0BFFA8527D7DFD0BFFA87D52A8FD0BFF7D527DA8FD0BFF52
%7D52FD0BFFA87D527DA8FD14FF7D7D7DFD0CFF52527DA8FD0BFF525252FD
%0BFF7D27527DFD0BFF52F87D7DFD0BFF5252527DFD0AFF7D52277D7DFD0B
%FF7D7D52A8FD14FFA852FD0DFFA8A852FD0BFFFD047DFD0BFFA87D7D7DFD
%0BFFA87D52A8FD0BFFA87D7DA8FD0BFF7D7D52FD0BFFA8A87D7DFD41FFA8
%A8A8FFFFFFA8FD79FFA827527D7D5252277D52527DA852A8525227A8FD6D
%FFA87D7D5227272752525227A87D27275252527DFD70FFA8FFA8FFA8FFA8
%FFA8FF52A8A8FF7DA8FD31FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Artifex Ghostscript 8.54</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2018-12-27T13:02:09-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-27T13:02:09-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:MetadataDate>2018-12-27T13:02:09-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWMeXNB0O5sbme5&#xA;061nnfUdS5yyQxuxpfzgVZgSdhiqZS+XvKsMZkl0yxjjX7TvBCoFTTclcVUNN8u+UJLCA2mnWE1u&#xA;qKsciQwOCAoA+JQQfvxVXl8t+XUjLLotpKw6IlvACd+3IKPxxVL7TR9Hubi2caRYxWtzE8yxSWkP&#xA;qhV4U+JHdN/U8MVR1z5U8sSRhX0mzoHjYUghG6urDqviMVVf8MeWv+rTZ/8ASPF/zTirv8MeWv8A&#xA;q02f/SPF/wA04q7/AAx5a/6tNn/0jxf804qpL5U8sC6kkGk2fNkRSPQhpRS5G3H/ACjiqr/hjy1/&#xA;1abP/pHi/wCacVd/hjy1/wBWmz/6R4v+acVd/hjy1/1abP8A6R4v+acVUrbyp5YjjKppNnQvIxrB&#xA;Cd2dmPRfE4qq/wCGPLX/AFabP/pHi/5pxV3+GPLX/Vps/wDpHi/5pxVSu/KnliS1mjfSbMI6MrEQ&#xA;Qg0IIO5UYqq/4Y8tf9Wmz/6R4v8AmnFXf4Y8tf8AVps/+keL/mnFXf4Y8tf9Wmz/AOkeL/mnFVKb&#xA;yp5YaSBm0mzrG5ZP3EPXgy/y+DHFVX/DHlr/AKtNn/0jxf8ANOKu/wAMeWv+rTZ/9I8X/NOKu/wx&#xA;5a/6tNn/ANI8X/NOKqUPlTywsk7LpNnWRwz/ALiHrwVf5fBRiqr/AIY8tf8AVps/+keL/mnFXf4Y&#xA;8tf9Wmz/AOkeL/mnFXf4Y8tf9Wmz/wCkeL/mnFVK08qeWI7WGNNJsyiIqqTBCTQAAbhTiqC8yeW/&#xA;LqeXdUdNLs1dbOcqwgiBBETUIPHFWSYqw3zF+YU+k6lq1hFo8kzaXa214bme4gtreSO4eRCVYl3A&#xA;Qxcfscmc0C0+LFUd5F1O3u9DaTeCeS8v5JLOUqJojJfzHhKgJ4sOVD74qyL1Yv51+8e/9DiqB0qY&#xA;jRLIxlGlFvEQrvxH2F6mhPf+XFVbTr17q0hnlWOKSZVcRpJ6lAwrSpVN9j27YqkVtrmlrqOj6Qmo&#xA;W0WrS6W9zHayMGcwqYAX4BkNPp8fA4qnVhdST6fbzTOjTSrG7emCoBcjYCsh8R1xVF+tFSvNada1&#xA;HSlf1b4q71I/5h4dR1rT9e2Ku9aKlea061qOlK/q3xVb6qeqQWHQU371p/EYqu9WL+dfvHv/AEOK&#xA;u9WL+dfvHt/UYq71IyachXpSo61I/WMVWxzRlSeY25GtewNa702oRiq71I9/iG2x3HUmn69sVd60&#xA;VK81p1rUdKV/Vviq2SVBG1GFaGlDvWtO1T126Yqu9aKlea061qOlK/q3xV3qRg05CvSlR1qB+s4q&#xA;71Yv51+8e/8AQ4qtaWPko5jrvv2413+8Yqu9SMmnIV6UqOtSP1jFXetFSvNada1HSlf1b4q71I9/&#xA;iG2x3HUmn69sVWrNH8Z5jjXY12+wG/Vviq71I/5h4dR1rT9e2Ku9aKlea061qOlK/q3xVxliB4l1&#xA;qegqK7ED9ZGKrY5YzGlXFSoO536Hxoex7Yqlfmy8tIfLWqerPHHytLgLzZVqfSOwqfcYqnGKpVrX&#xA;lPyzrgYavpltfcxGGM8auSIWZ4hUivwM7EeBOKqHk2GKDRXghQRwxX2opHGooFVb+cAAeAGKpxcL&#xA;O1vKtu6x3BRhDI6l0VyPhLKChYA9RyHzxVKPKI1K18n6V+m7mGa+hsoje3US+lCSIwS1CzUAHU1p&#xA;326Yqoad9X1XTNOSK9NxpWoadyKwtGY5IykSfBKi86Msh3V6+BxVB6Hpnl3yxomjuAttYaNo0w+u&#xA;TsZHitkEEklZX5PwHCpFabewxVGaT5m0qfy7pt3aM93BPZw3UEkUbFHhCIxcO3CPYMNi1a7Urtiq&#xA;eevL6HqfVpOdaejWPn868+P/AA2KpU+p6pLBPc27RQwpbLdRxTQlpKOJCFYpNx/YB2xVvUDqTRX8&#xA;M1wnpw2vrK0CywScmEgFHWU0pwGKprDEsRKLyKhRQszO25J3ZmZjiqrirsVdiq2P7J/1m/4kfc4q&#xA;uxV2KrZf7p/9U/q+Y/Xiq7FXYq7FVr/aT/W/41PuMVXYq7FXYqtT7T/63/Go9ziq7FXYq7FVsX90&#xA;n+qP1fM/rxVL/M//ACjWrf8AMHcf8mmxVMsVdiqT+U/+OXP/ANtDU/8AuoT4qm0s0UMZkldY41+0&#xA;7kKBU03JxVIdNt7K9ttOR2+sW01gyXEHqM8D0WJCrx19M7MQQVxVAaNqvl7TNQ0TytYqkd9Dopur&#xA;fS4ECUtQ8MQZa8IwOQO3Ku2Kpzp9jfcLRrjhHHBbm3e2eMMxDBOXxrIy9Y/5cVQUqJHotokYCIul&#xA;SKqgAAALCAAKHFWR4qwe884eWtOj1DTr6/jt7u28vRajPHJyAW1X1YzJypx+0QKVr7Yqt1zzzYv+&#xA;nbfRLeXWdSj0GHVLS2hBSG5glMwjMd049E1qDsSSOgJBGKsssdTguHSOR44b8xI09j6qPJE5BLIe&#xA;PXiQRUGm2Ko7FXYq7FVsf2T/AKzf8SPsMVXYq7FVsv8AdP8A6p/V8j+rFV2KuxV2KrX+0n+t/wAa&#xA;n2OKrsVdirsVWp9p/wDW/wCNR7DFV2KuxV2KrYv7pP8AVH6vkP1Yql/mf/lGtW/5g7j/AJNNiqZY&#xA;q7FUn8p/8cuf/toan/3UJ8VTjFWPXep6xF5s0zToNKe4tJdPuZZtVaVI4Y5FkhAiZCXlq3WtD26/&#xA;EVVRljbzw3Gnx3CRrPDaSxco2LghTAPtFUO5HSmKplMJihELKknZnUuPuDJ+vFWEeYfKF1NLO8ut&#xA;XyRSaDdaZ9Utn9GBPjjJuY1HJln4mnPkenSm2KptH5T0prO40SQzSRfo2Gya9aVvrhUrLC0huRST&#xA;1So3cGtcVQ+m6TY2flh9ORDLaw6HbWwExMrNEsUq8XZ6ltutcVTbUFVV1RVAVVsECqNgAPX2GKta&#xA;gZ0n1KWGVoXis4nRlCndTOf2wy/hiqItY7pNSmjkvJZ4kijdUkWECrtIDukaHoo74qj8VQ8d/byX&#xA;T2q+p60YDMDFIq0JIB5lQprxPQ4qrRghTXrybx6cjTqTiqEsRcG7vPUuZJUjl4RxMIwqgxxvsVRW&#xA;6sepxVG4qtlBMThdjxNDud6exB/HFV2KuxV2KrXB5JToG369OJ8CMVXYq7FXYqtQHk9ehbbr04jx&#xA;JxVdirsVdiq2IERIG3PEVO43p7kn8cVS/wAz/wDKNat/zB3H/JpsVTLFWA+cPP3mTRL3zDDa6Zaz&#xA;w6RptrqNrJJcOrSJLLJHMzqIzx4el8KA/F3YV2VZD5SuYzYXMQD8k1HUqkxuF31CfoxHE9exxVO/&#xA;UXwb/gW9/b2xVBCRP0haUrQW01KDanKHpQU79sVXvDcvqEc6yqI0VoxGYnrRypb4+YHWLbbFUUJV&#xA;pWjdK/ZbwB8PfFUl12VpHeGG3mmkNvNCAsZVS8jR8B6kgWL9k/tfjTFULBq3mE+b7uJtHI0QadBI&#xA;l36qG4Nz60v7r0Ps8eFW5c/AbmvFVE2+nak9kI2lW3MtslrLE8DOyhAybMkvGtXrXwxVFnTYpZHl&#xA;vZGulmRUlt3hX0Sq8mX4CjP+2erYqxrW559AuPNWr3l3y8v2+jxPBplvafvIWjNwZWDR1Z+ZNdxQ&#xA;fIE4qrv5ms9R1bVLG3ttQhaLSba/jvWhntoSJfXKIHPBuY7ow9uoICrLIzHGgReZCjYtzY9v2mqT&#xA;1xVDxOP0rcbH+4gHQ/zzDw9sVS953s7m9uLdXmWGD12ilmlCirSs/FeLrU8QKU/jiqnoOuT3ev6/&#xA;p8umXVqunzW9L6VKW1w01uhYW7/af0ytGPEdcVTS21H15Zo/q00QgPFncLQngr0AVmb7Ljt+OKoi&#xA;Z09J61pQg1G3h3FPv/ViqncahZ2yq1xKsIb7PqfDXau1cVS+TU9SfmYlgiSOaOEv+8nD+q0VGFBC&#xA;AAJfE1xVNRIKAGpNNyFYDv8A0xVa8ickrWobb4T/AC9qj37f1xVf6i1pQ+H2T4keHtirvVWlaN4/&#xA;Zbwr4Yq71F32O232T3NPDFViSJWRgD9rf4TX7APQCvTxxVf6i+B8Psnxp4Yq71VpWjeP2W8K+GKu&#xA;Mig0o1f9VqdQOtPfFVkMiekgFacRSimlKewp2xVLPNl1FF5a1Tksh5WlwBwjkf8A3UevFTTriqcY&#xA;q0UQ1qoPIUao6jwP34qlHlP/AI5c/wD20NT/AO6hPiqcYqhlsbdp4rpvU9ZE4qfUlC0NKjgWpvxH&#xA;UYqicVdiq2T7I+a9K+I8MVQ8f/HVuP8AjBB/xObFUVirsVSXUJ1MuqrwlANkEDmKUIWT1ywDleH7&#xA;Q74qhvN17qFjpOvXen2Danew6crQ2CSLE0prN8Id6gbb4qn9vJJJbxSSxGCV0VnhYqzIxFSpKkqS&#xA;p22NMVYxceWbCDWPMuqtJPcy6jZ27tBcStLBCYEmRfq8TfDHXq1O+KoXUfMP6NuvNEerWa6RoOnW&#xA;Fv8AVNZnniWCf1vWBUISGj4SHgAevbYiqqeXUNvOl16iJKn162K8gGG4txtXxBxVbc2llJHdRPDG&#xA;8cV9ahUKqQu1vsBTbbFUxhvNPlR4LSeKQwrxMULAlABsOKGo2IxVDXN4Z0eP0JIvQubdGZ+FCTLG&#xA;23FmPRhiqR6t5z8rWFtqtzc6nAIbPV7OzumRvVMVxIbZVjcR8irVO9enfpirL8VWt9pPn7+B8P44&#xA;quxV2KuxVav2n+fv4Dx/hiq7FXYq7FVsf92vyHWtenvv9+Kpf5n/AOUa1b/mDuP+TTYqmWKuxVJ/&#xA;Kf8Axy5/+2hqf/dQnxVOMVWw8fSTj9niKdOlP8nb7sVXYq7FVsvHiK9OS+HXkKdf8/DFVP6jZfWD&#xA;c/V4vrJ6z8F57bfapXviqtirsVQ13ardJLAZHiEiBZGThUqeQp8QY9/6d8VQd9psMFjfXHqSyXD2&#xA;8ivJJI5BAVyPgBEYpyNKLiqa4qxjzfJ5lXRtcl0OzibUTZcLJr1wtuzIZCxf0maT7D1XYVOxp1xV&#xA;U1jTrPUtN1W01S1gu4Xskae3kRZYTIjzP9lhQ8XWq1FfpxVb5us9atdHlm8sRwSaxLdWhVL+af6t&#xA;Q3MQcsFLdEXbiP6Yqler+Wruxh8y6h5SW2tvMmr6jYSTXN+Zpbdmi+rqOSK1RRC1AtN8VZI97b2n&#xA;19rnmVadUJjjeTdoYlGwDgVJ/a2xVLfMEGuXNpKNFvIrGcarYSTSXEBmDQBrcyR8OUZVmHf6NuoV&#xA;RCaXpto2pta2kMDXWp21xcmONV9SY/ViZHoBybbqd8VTSyuruaW4SeGOIQOEBSRpORKK/QolPt4q&#xA;iX48o69eW3TrxPj/AAxVdirsVdiq1OPKSnXlv068R4fxxVdirsVdiq2Hj6Scfs8RTp0p/k7fdiqX&#xA;+Z/+Ua1b/mDuP+TTYqmWKuxVJ/Kf/HLn/wC2hqf/AHUJ8VTjFVsf92u1Nhsak9Pff78VXYq7FVsn&#xA;2RtXdelR3Hhiq7FXYq7FVo/vG27DfenU/Riqy5tbW6iMVzCk8R6xyKHXpTowI6HFV8cccaCONQiL&#xA;sqqAAB7AYqg9cuLeDSbszSpEGhkCl2CgngdhXFVGXS7a4t5nsVt4JLpHje6EXqMyPXcMGjJ6160x&#xA;VU1a4it7KI3M0aEz24LsQilhMhNORP68VQk8lyiSyvGskFzcwTRPbGW4bijQipCR7CiE1riqAtrH&#xA;UYbzXryfUpby0vb+yeysZI1iFqqpAGVWRRI3M7nluPnWqrrXQ9K0i/129tIZzdavqdtc3rAz3FWi&#xA;S3FQvxhAFB6U+4ABVN/0XdTM7yXhSOaRJ+MUQjbkgTjX1fV6emNqDFVDy/rmkalf63bWF5HdT6be&#xA;C2vkQ1aOUW8RKtsN/l3qOxxVOG+0m3f38D4fxxVdirsVdiq1ftPt39/AeP8ADFV2KuxV2KrY/wC7&#xA;Xamw2NSenvv9+Kpf5n/5RrVv+YO4/wCTTYqmWKvNfPnmLz/pmt3sVkzpoRhsnivLSwe5mt/UNwJi&#xA;dpxM7SRRLQR/CjVp+1irIPy3utZufK0M+p2sdtdy3F5JcxK7VSZ72UypxK7cWLD7RxVlFZf5V+8+&#xA;/t8sVWQmT0Uoq04ilDQdB4Ajx6YqvBkruop41Nab+3yxVwMtN1WtNviPWg9vGuKrJS/EVVacl6mv&#xA;7fuB7YqvrLT7K18OR60+Xjirqyfyj7z0r8vDFXVlp9la+HI9afLxxVYC/rtRV+yvfelT7V8f8+iq&#xA;+sv8q/eff2+WKurL/Kv3n29vnirqyV+yKfM9Kn28MVWQmXgfhWtX6HatfYeNd/8AaxVfWTf4R7bn&#xA;pX5eGKurLT7K18OR60+XjirEvNWiPrmkX1herd6fBLfWk8dzbXCwyERSwUo0Tk78DUGn0bHFWRWc&#xA;eoJNdPNFEqzOJE4Ssx2jVKGsa90xVF1kr9kU+Z6VHt4YqlHq3VpPfyW1rC/rXkQmLSGIl5IoIgx4&#xA;xvyoKdcVTRzLyjqq15eNd+J6VA9+n+0qvrJX7Ip8z0qfbwxV1ZafZWvhyPWny8cVdWTf4R7bnpX5&#xA;eGKrIzLWT4V5cugP+QOpA8fEdMVX1k/lH3npX5eGKurLT7K18OR60+XjiriZa7KtO5qa9R7eFcVW&#xA;QmT0Y/hWnEdDQdO1AR4YqlnmxrseWtU9KKN/9EuOXORloPSPSiNXvirG9O/NCbUPNQ0O00Z5VW4m&#xA;t7grcIbu3WCQxtcXNsVAhhYiqF5ebqQVQ4qzzFUn8p/8cuf/ALaGp/8AdQnxVOMVWx1Ma160Fa1r&#xA;09wDiq7FXYqtkrxFPFelfEeAOKrsVdirsVWivqN4UHjTqfamKrsVdirsVWx14mvi3WvifEDFV2Ku&#xA;xVBatHeSWwW1RHYPHI3qOybRyK+3FJDU8fDFUYvLiOQAanxAGoB9jQYq3irHPMGpaT5dtorjVdSa&#xA;NNS1GztoTOEAa4kljVEX00XqsffbYnFWQtXknz36+B9sVXYq7FXYqtWvJ/nt18B7YquxV2KuxVbH&#xA;UxrXrQVrWvT3AOKpf5n/AOUa1b/mDuP+TTYq8x8nab5UvPP11qui+bHbUbi7uGvNOkBN4/1eaRXg&#xA;kLStEYVPIL+45hDswO+KvYMVSfyn/wAcuf8A7aGp/wDdQnxVOMVWxf3Sf6o/V8z+vFV2KuxVbJ9k&#xA;f6y/8SHuMVXYq7FXYqtH963+qP1n3/hiq7FXYq7FVsf2T/rN/wASPucVXYq7FVsv90/+qf1fMfrx&#xA;VdirsVQeqoj20YdQwFxbMARWhFwhB+jFVOxhEdzdAPI4WcKokkeSi+gjbc2NN2OKphirsVdiq1Pt&#xA;P/rf8aj3OKrsVdirsVWxf3Sf6o/V8z+vFUv8z/8AKNat/wAwdx/yabFWPWvlbzZZebre7t9Uj/ww&#xA;s80p0mFFtUiSaOYsnpJG5nd7iRZDI0q0oaJvXFWZ4qk/lP8A45c//bQ1P/uoT4qnGKrYv7pP9Ufq&#xA;+Q/Viq7FXYqtk+yP9Zf+JD2OKrsVdirsVWj+9b/VH6z7fxxVdirsVdiq2P7J/wBZv+JH2GKrsVdi&#xA;q2X+6f8A1T+r5H9WKrsVdiqHvbM3SqvryQqrK9I/T3KMHWvNX6FcVSfy3d67cX2tjVLBLCOHUmi0&#xA;9lmWZri2W3jCTMFUemX68a1H61WQYq7FXYqtT7T/AOt/xqPYYquxV2KuxVbF/dJ/qj9XyH6sVS/z&#xA;P/yjWrf8wdx/yabFUyxViH5peWte8xeWBYaG8AvVuY5jFdO6QSIoYFZOCsWClg4H8yg9sVVvy5sd&#xA;SsfLEVpd3i3kltc3sMlwyMJJHjvZVeRmLtUuQT074qyekv8AMv3H39/liq2MS+mtWH2R1U1rQeLH&#xA;3xVcBJXdhTwoa039/lirgJabstabfCetB7+NcVWuJafaFOS9Aa05ezDt/n2xVdSWn2lr48T1p8/H&#xA;FXUk/mH3HpX5+GKupLT7S18eJ60+fjiq2kvqk8hxoNqHx/1qdPbFV1Jf5l+4+/v8sVdSX+ZfuPt7&#xA;/PFXUkr9oU+R6VPv4YqtjWYKasK/FT4T1rt1Y7YqupJv8Q9tj0r8/DFXUlp9pa+PE9afPxxVbIJT&#xA;G1GFaGlAa9fZh2xVdSWn2lr48T1p8/HFXUkr9oU+R6VHv4Yq6kv8y/cff3+WKoO1Ev1q8ow/3oFf&#xA;hP8Ayzx+DDFUZSSv2hT5HpU+/hirXGUqQWWpHWhHb5+OKoPSIWjt5D6juTPMKyPJIQEncAAuzfs0&#xA;G2KotVm+P4hWux4mn2QP5v5v8++KrqSfzD7j0r8/DFXUlp9pa+PE9afPxxVxEtdmWncUNeo9/CuK&#xA;rYxKI0qw+yK1U1rQ+LH2xVK/Ni3Z8tap6Usaf6JccucbNUekelHWnfFU4xV2KpP5T/45c/8A20NT&#xA;/wC6hPiqcYqshAEMYBqAoodvD/JoPuxVfirsVWSgFRU0+JfD+YeNcVX4q7FXYqsAHrMa78V228W+&#xA;nFV+KuxV2KrIgApoa/E3h/MfCmKr8VdiqyYAwyAmgKmp28P8qo+/FV+KuxV2Kpbdxx6f6UllaQAy&#xA;Soj0KwklzwXpG9acq9sVTIVoKih7gbiuKuxVimgt5omgdNYMNkX1W+htksmEqyWYaV4mk9aMlZKr&#xA;RgNvvoFUZYwS2tF04W1uLm8uI5aw8j8Jlcf3bxfy9Griqa6dLdSxO9w0bESSRr6aFP7uRkqas/Xj&#xA;XFUVirsVWQgCGMA1AUUO3h/k0H3YqgPM/wDyjWrf8wdx/wAmmxVMsVdiqT+U/wDjlz/9tDU/+6hP&#xA;iqcYqtj/ALtfkOta9Pff78VXYq7FVsn2R816V8R4YquxV2KuxVaP7xvkPGnU/Riq7FXYq7FVsf2T&#xA;82618T44quxV2KrZP7tvkela9Pbf7sVXYq7FXYqlHmTVNMsLez+v3UVqLq9tbe39ZwnqSvKvGNak&#xA;cmahoMVQ66bZpYFoUNuzXhRmt3eAlWvSpB9IpXY0xVVT63b3kkdvPSN7kQn6wZZ+Ki2EvwlpRTeu&#xA;Kpdc68YLnRIbKyl1NLvVriC4mtGiZLZGW5YSzcnUhNu366AqpfZ6rqWgQ6Tb6/NNq93qWv3Vtb3F&#xA;jZuqRJMbgxeqqlwiINmf7+jNirIfKWv6Rren3M+l3AuYre+vLWZgGXjNDcOHT4gOmKp1irsVWx/3&#xA;a/Ida16e+/34ql/mf/lGtW/5g7j/AJNNiqZYqo3t9ZWNs1ze3EdrbJTnPM6xovI0FWYgCpNMVSzy&#xA;mQdKmI3B1DU6H/t4T4qnOKrYaeklOnEUpSnT22+7FV2KuxVbLTiK/wAy9afzDxxVdirsVdiq0U9V&#xA;vHitelep+nFV2KuxV2KrYqcTT+ZulP5j4YquxV2KrZqek9enE1rSnT32+/FV2KuxV2KpV5i07Tr2&#xA;Gy+u20Vyba+tp7b1kR/TmSUcZE5fZYAmhXfFWNt/j2x0c8DZ6zNceYdg3KyW20x73pt63qyIR7bH&#xA;vx+JVyec1ttSpr2nz6QZ/MR0rTA/+kfWS1lSCYegH4LL/lfZ7nFWXXxAnsSegnY7Cp/uJewxVL7K&#xA;ZXkgUJIjLfzsRJG8dQ6TMp+ILX4cVV7S6tYITbuHUzXFyF9OOQglp5SfiRaA7E9a98VQ8cdzGsBh&#xA;urgCS6uI3j5rKWWMzFVBnD0+wB9oYqqyfVb+4sp5LPi63LxcpljZj6ccwIBUvsHXFU1hp6SU6cRS&#xA;lKdPbb7sVS/zP/yjWrf8wdx/yabFUyxVi35keS5fOHlz9ER3S2jCeOcu6yFWCVHEmGSCVftVqkgO&#xA;1DVSQVV35e6ZLYeXVtGu5LgW91fQ1KRID6V9MpYKiCnLj0rQV2xVkvBv52/4X39vfFVsat6a/Gw+&#xA;EbHemw8RXt3xVcFateZI8Nqd/b3/AAxVwRqf3jdKV+HwG/T2xVa6sBXkx+Jdun7XsK9/898VXcGp&#xA;T1G+fw+FPD6cVdxb+c/h418PoxV3BqU9Rvn8PhTw+nFVvFvVPxMBQH269OlO3+e2KruDfzt/wvv7&#xA;e+Ku4N/O3/C+3t7Yq7i1ftn5beJ9sVWxo3E/G37Q3pXrSu6jwr4fRTFV3Ft/jP4eNfD6MVdwalPU&#xA;b5/D4U8PpxVbIrem3xMdiaDbvWmwr7bfrxVdwalPUb5/D4U8PpxV3Fq/bPy28R7Yq7g387f8L7+3&#xA;viqD1O0u50iWG4EQWRXYtGZP7sq4oFKfyd/H5Yqlpv7aKwCXExgkN4rhZ0MAYG95VX1FWooR3xVE&#xA;BCdQHxk/6ds3w/8ALBSvTFUfcadZ3LK1zEk7IaxmREcrua8artUGnyxVTuNMiun5SSzLJE1Y5Ekd&#xA;KEx8eQUUT9o9j/DFVD6i1rNZJ9ZlmDXTv+8EexeOZ2pwROpbFWLaX5g8yxtoVrrOhzw3WoatqMDS&#xA;2MiXVvbxxC4Mcs8hWMr6o6fD234k8cVTLUrnzDb3uhDTLFb2zl1O8XUnaZInhiCzlWjVlPqGopTk&#xA;Px5Kqn+m3L3VsJCk0HFmj4S8CxKEoT8JbuO++2KoPzZBK/lrVONxJFS0uCeAjNf3R2PJGxVOMVdi&#xA;qT+U/wDjlz/9tDU/+6hPiqcYqthIMSEUA4igFKdO1CR+OKrsVdiq2UjiK0+0vWn8w8SMVXYq7FXY&#xA;qtBHqsNq8V32r1PvX8MVXYq7FXYqtiI4mlPtN0p/MfAnFV2KuxVbMQInJoRxNQaU6d6kD8cVXYq7&#xA;FXYqtcjlH0+1tWn8p6bjFVxAYEEVB2IPQjFUA2jWgkWS2/0Nlbmfq6RLybiUBaqNWisRiqPxVahH&#xA;KTp9relP5R13OKpH5k0f69qWgXZ1C6sl029a4eO3kEcc6/VpQY5wQeSYqqWdxbXC2phlSUC+uQxj&#xA;YNSv1jwOKoPyxoFhoOladpdgZjaw394U+sSyTyfG1y5rJKWY7nxxVOdGZWsarSnrT/ZpT+/fpQkf&#xA;jiql5n/5RrVv+YO4/wCTTYqmWKuxVJ/Kf/HLn/7aGp/91CfFU4xVbFX0krWvEVr16d6gfqxVdirs&#xA;VWyV4ilftL0/1h7HFV2KuxV2KrRX1W604inh1Pt/HFV2KuxV2KrY68TWv2m6/wCsfYYquxV2KrZa&#xA;+k9K14mlOvTtQH9WKrsVdirsVWvXklK/a3p/qnrscVXYq7FXYqtSvJ61+1tX/VHTYYqhL43BurT0&#xA;7d5UikLySKYwADG6ftOp6sO2Kql3YxTlZWDmWKrQgSyRLyoRvwP+VStDiqHs9NVlLX9rbtOssjxO&#xA;P3pAeRnHxOiEU54qgfI/l7SvL+gDTdLiaC0W5upBGzvIQ0lzI7byHl1OKo3zP/yjWrf8wdx/yabF&#xA;UyxVLtf8waToGmyanqsrQWMP97MkUs3AUJLMsSyMFAG7EUGKoTyXPFcaG1xESYpr7UZIyQVJVr+c&#xA;iqsARsehxVPMVWxf3Sf6o/V8z+vFV2KuxVbJ9kf6y/8AEh7jFV2KuxV2KrR/et/qj9Z9/wCGKrsV&#xA;dirsVWx/ZP8ArN/xI+5xVdirsVWy/wB0/wDqn9XzH68VXYq7FXYqtf7Sf63/ABqfcYquxV2KuxVa&#xA;n2n/ANb/AI1HucVXYq7FWnYqhYKXIFQi0qfYVIH44qg9HE62fGaFoW9SVgrFDUPIzgjg0g6N44qp&#xA;eZ/+Ua1b/mDuP+TTYqmWKpfr+iW2t6XJpl07pazSQtOI6AyRxTJK0LVB+CUJ6b/5JNKHfFUF5Stb&#xA;ZbC5mEKCV9R1LnIFHJqahPSp6noMVTv0ov5F+4e/9Tiq2KKP01+FSSoqaDwHsPAdsVXCOMGoUA9a&#xA;0Fa7/wDNRxVwhiAoEWhFCKDpQCn3AYqtkjjAqFUHkprQfzV8D4nFV3oxUpwWnSlB0pT9W2Ku9OP+&#xA;UePQda1/XvirvRipTgtOlKDpSn6tsVW+nGZWJVa0B6Ctak+HsO+KrvSi/kX7h7/1OKu9KL+RfuHt&#xA;/QYq704wa8RXrWg61J/WcVWRRRcCOC0JYbAdK0p0HYDFV/px7/CN9zsOoNf174q70YqU4LTpSg6U&#xA;p+rbFVsscfpv8K1oTWg69fA99+mKrvRipTgtOlKDpSn6tsVd6cZNeIr1rQdag/rGKu9KL+RfuHv/&#xA;AFOKrXij5J8K7nfYfy/I+AxVd6cYNeIr1rQdak/rOKu9GKlOC06UoOlKfq2xV3px7/CN9zsOoNf1&#xA;74qsSKL414Lx5dKCn2AvgO22Kr/Tj/lHj0HWtf174q70YqU4LTpSg6Up+rbFXGKInkUWo6GgruQf&#xA;1gYqtiij9NPhWvEb0Hh8h4ntiqV+bLO0m8tap6sEcnG0uCvNVah9I7io9hiqcYq7FUn8p/8AHLn/&#xA;AO2hqf8A3UJ8VTjFVK0lWa1hlQkrIiupNQaMARWpJ/HFVXFXYqpXMqxRhmJALxptU7u6qOhHc4qq&#xA;4q7FXYqpLKpupIgTyREcjelGLgd6fsntiqrirsVdiqlbSrLGWUkgPIm9Rujsp6k9xiqrirsVUruV&#xA;YbWaVyQsaM7EVJooJNKEH8cVVcVdirsVUppVSSBSTWVyi0r1CM29COy4qq4q7FXYqpQyq8k6gmsT&#xA;hGrXqUVtqk9mxVVxV2KuxVStJVmtYZUJKyIrqTUGjAEVqSfxxVBeZ/8AlGtW/wCYO4/5NNiqZYq7&#xA;FUquPKnla4nee40axmnlYtJLJbQs7MdyWYqSScVSnzR5W0W08s6vd6N5b0661e3sriXTbY2cLCW5&#xA;SJmhjoFFeTgDriqW+QPLuh3+gGbUNGs5+NxNFZ3c+mRWcs9sj0jleAxR8Cdx9hagVpvirJf8GeT/&#xA;APqxaf8A9IkH/NGKu/wZ5P8A+rFp/wD0iQf80Yqwf8ydCuNM+py+W/LmmXMDw33rwDS455PWitJJ&#xA;rd+QFAokjHwcas1AD2KqbeQ/Lmi6h5dW41TRLKWX6xcx29zNp0NrLPbRzulvM8Bjj4M8QU04rXrQ&#xA;A4qyL/Bnk/8A6sWn/wDSJB/zRirv8GeT/wDqxaf/ANIkH/NGKvFNWuNSj8zanbaXo0N1Y29w0VvX&#xA;y6sZe7SRvSsw3ouPqsinj67Ny5ozckQrVV7X/gzyf/1YtP8A+kSD/mjFXf4M8n/9WLT/APpEg/5o&#xA;xVLPM3lXy3a+X9QuLLRbCO7igdoZE06O5ZWA6iFELOR4AH5N0Krzn8tINX1PX0tfMHly0jgpOGjb&#xA;R0gha2jjiMN8s7wQ1eedpE4MEYqoYxIa4q9Z/wAGeT/+rFp//SJB/wA0Yq7/AAZ5P/6sWn/9IkH/&#xA;ADRirC/zQ0s6Ppmnnyv5Ms9Tnub2CO+eOxtZvRtTIokpGxj5NJy4g9FFWJFMVa/KzRrfVtHupvMG&#xA;g2bSpLEIpZ9Lisn5PaxSXEXpNGhKw3DyRq1NwOrEE4qzX/Bnk/8A6sWn/wDSJB/zRirv8GeT/wDq&#xA;xaf/ANIkH/NGKvJfPdpfaf53a0tNHt4PL3pwBp7PRFvHtkYj1btibORH3YxhUlYjqY6VYKvR/K/l&#xA;bRbvyzpF3rPlvTrXV7iyt5dSthZwqIrl4laaOhU04uSOuKpn/gzyf/1YtP8A+kSD/mjFVC/8oeWI&#xA;rG4ltfL2nTXMcTtBCbWAB5ApKrXj3O2KvGvIjeab7X7K21zy5ZrbyzQhCuiCKG5SRJGvS8slvC8X&#xA;1IrGic1TkSR+82YqvbP8GeT/APqxaf8A9IkH/NGKu/wZ5P8A+rFp/wD0iQf80Yqx/wA9+UdJh8rX&#xA;suh6Raw6soUWX1ewtZmaZ3CRoyyQyqELMObcfhWp7YqkH5baG91qeq2PmDRLOaOxUIJZdKgtVSdL&#xA;m4i4RsIkSZXt4oZeSVALdQCFCrP/APBnk/8A6sWn/wDSJB/zRiqcYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FUHrK3j6PfJZVF61vKLYqQreqUPChNKHlTFXlEVh+enl7T7aLT5P0vdXcYlaOdhdxwS&#xA;hIleOWa6uIZR8PqyLwYqX4r8C1YqpXp9x/zkc98mo3tjIvOOb/cejW5hV47fjHKf38VS7MpEWy1B&#xA;rvvirJ9F1L87HOoy6lZRJb/U779GoY4Vl9aOONrGSQJNKBJLyYSRiqqwNDSmKpJ5e8y/nfrGl2P6&#xA;PsDa2aqAmpXcUTvcRfWUgV2WS49QOIecrclWpHTfFWefldd+abry7NJ5k5fXlu5VUuvE7KhlVd2+&#xA;BLkyohqRxAoaUxVl+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2994A7ADF009E911B6F39A24F3C73226</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2994A7ADF009E911B6F39A24F3C73226</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>446d50bb-063d-11e9-0000-469bfc15c447</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8a37e619-96e9-40c9-b6ae-b21fcd1d2979</stRef:instanceID>
            <stRef:documentID>446d50bb-063d-11e9-0000-469bfc15c447</stRef:documentID>
            <stRef:originalDocumentID>446d50bb-063d-11e9-0000-469bfc15c447</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2994A7ADF009E911B6F39A24F3C73226</stEvt:instanceID>
                  <stEvt:when>2018-12-27T13:02:09-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">C:\Users\GUILLE~1\AppData\Local\Temp\tpc82c4d92_fac1_4821_9e72_fd48fd9ed23d.ps</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>174.911115</stDim:w>
            <stDim:h>136.665215</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SymbolMT</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -387.397 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 387.397 li
495.811 387.397 li
495.811 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.500001 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.5601 357.251 mo
34.5601 .25 li
495.061 .25 li
495.061 357.251 li
34.5601 357.251 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
@
.333334 lw
[.5 4 ] 0 dsh
63.0601 357.251 mo
63.0601 .25 li
0 0 0 1 cmyk
@
63.0601 .25 mo
63.0601 .25 li
@
120.81 357.251 mo
120.81 .25 li
@
120.81 .25 mo
120.81 .25 li
@
177.81 357.251 mo
177.81 .25 li
@
177.81 .25 mo
177.81 .25 li
@
235.561 357.251 mo
235.561 .25 li
@
235.561 .25 mo
235.561 .25 li
@
293.311 357.251 mo
293.311 .25 li
@
293.311 .25 mo
293.311 .25 li
@
351.061 357.251 mo
351.061 .25 li
@
351.061 .25 mo
351.061 .25 li
@
408.061 357.251 mo
408.061 .25 li
@
408.061 .25 mo
408.061 .25 li
@
465.811 357.251 mo
465.811 .25 li
@
465.811 .25 mo
465.811 .25 li
@
34.5601 327.251 mo
495.061 327.251 li
@
495.061 327.251 mo
495.061 327.251 li
@
34.5601 268.001 mo
495.061 268.001 li
@
495.061 268.001 mo
495.061 268.001 li
@
34.5601 208.001 mo
495.061 208.001 li
@
495.061 208.001 mo
495.061 208.001 li
@
34.5601 148.75 mo
495.061 148.75 li
@
495.061 148.75 mo
495.061 148.75 li
@
34.5601 89.5 mo
495.061 89.5 li
@
495.061 89.5 mo
495.061 89.5 li
@
34.5601 29.5 mo
495.061 29.5 li
@
495.061 29.5 mo
495.061 29.5 li
@
.500001 lw
[] 0 dsh
34.5601 .25 mo
495.061 .25 li
@
34.5601 357.251 mo
495.061 357.251 li
@
495.061 357.251 mo
495.061 .25 li
@
34.5601 357.251 mo
34.5601 .25 li
@
34.5601 357.251 mo
495.061 357.251 li
@
34.5601 357.251 mo
34.5601 .25 li
@
63.0601 357.251 mo
63.0601 352.001 li
@
63.0601 .25 mo
63.0601 4.75 li
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRY+ArialMT /ArialMT findfont ct_VMDictPut
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
60.0601 370.001 mo
(0)sh
120.81 357.251 mo
120.81 352.001 li
@
120.81 .25 mo
120.81 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one 206{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
114.81 370.001 mo
(10)
[6.67383 0 ]xsh
177.81 357.251 mo
177.81 352.001 li
@
177.81 .25 mo
177.81 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two 205{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
171.81 370.001 mo
(20)
[6.67383 0 ]xsh
235.561 357.251 mo
235.561 352.001 li
@
235.561 .25 mo
235.561 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
229.561 370.001 mo
(30)
[6.67383 0 ]xsh
293.311 357.251 mo
293.311 352.001 li
@
293.311 .25 mo
293.311 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four 203{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
287.311 370.001 mo
(40)
[6.67383 0 ]xsh
351.061 357.251 mo
351.061 352.001 li
@
351.061 .25 mo
351.061 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001B
CD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB
63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF20
0B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC4
9372EF96DD9EB13A793559C13CFDFE477> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
345.061 370.001 mo
(50)
[6.67383 0 ]xsh
408.061 357.251 mo
408.061 352.001 li
@
408.061 .25 mo
408.061 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
201{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
402.061 370.001 mo
(60)
[6.67383 0 ]xsh
465.811 357.251 mo
465.811 352.001 li
@
465.811 .25 mo
465.811 4.75 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031
CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0
F55546101EE3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven 200{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
459.811 370.001 mo
(70)
[6.67383 0 ]xsh
34.5601 327.251 mo
39.0605 327.251 li
@
495.061 327.251 mo
489.811 327.251 li
@
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
25.5601 331.001 mo
(7)sh
34.5601 268.001 mo
39.0605 268.001 li
@
495.061 268.001 mo
489.811 268.001 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 199{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
25.5601 271.751 mo
(8)sh
34.5601 208.001 mo
39.0605 208.001 li
@
495.061 208.001 mo
489.811 208.001 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6
DEBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435
C3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D
5BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807
E169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD3
072425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA
27D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E
17188994F16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine 198{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
25.5601 211.751 mo
(9)sh
34.5601 148.75 mo
39.0605 148.75 li
@
495.061 148.75 mo
489.811 148.75 li
@
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
18.8101 152.5 mo
(10)
[6.67383 0 ]xsh
34.5601 89.5 mo
39.0605 89.5 li
@
495.061 89.5 mo
489.811 89.5 li
@
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
18.8101 93.25 mo
(11)
[6.67383 0 ]xsh
34.5601 29.5 mo
39.0605 29.5 li
@
495.061 29.5 mo
489.811 29.5 li
@
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
18.8101 33.25 mo
(12)
[6.67383 0 ]xsh
34.5601 .25 mo
495.061 .25 li
@
34.5601 357.251 mo
495.061 357.251 li
@
495.061 357.251 mo
495.061 .25 li
@
34.5601 357.251 mo
34.5601 .25 li
@
gsave
34.5601 .25 mo
34.5601 358.001 li
495.811 358.001 li
495.811 .25 li
34.5601 .25 li
cp
clp
63.0601 13.75 mo
63.0601 61 li
@
58.5601 13.75 mo
66.8101 13.75 li
@
58.5601 61 mo
66.8101 61 li
@
70.5601 49 mo
70.5601 96.25 li
@
66.8101 49 mo
74.3101 49 li
@
66.8101 96.25 mo
74.3101 96.25 li
@
78.0601 23.5 mo
78.0601 70.75 li
@
74.3101 23.5 mo
82.5601 23.5 li
@
74.3101 70.75 mo
82.5601 70.75 li
@
85.5601 36.25 mo
85.5601 83.5 li
@
81.8101 36.25 mo
90.0601 36.25 li
@
81.8101 83.5 mo
90.0601 83.5 li
@
93.8101 10 mo
93.8101 56.5 li
@
89.3101 10 mo
97.5601 10 li
@
89.3101 56.5 mo
97.5601 56.5 li
@
101.31 7 mo
101.31 53.5 li
@
96.8101 7 mo
105.06 7 li
@
96.8101 53.5 mo
105.06 53.5 li
@
108.81 22 mo
108.81 68.5 li
@
104.31 22 mo
112.56 22 li
@
104.31 68.5 mo
112.56 68.5 li
@
116.31 43 mo
116.31 89.5 li
@
112.56 43 mo
120.06 43 li
@
112.56 89.5 mo
120.06 89.5 li
@
123.81 42.25 mo
123.81 88.75 li
@
120.06 42.25 mo
128.31 42.25 li
@
120.06 88.75 mo
128.31 88.75 li
@
131.31 63.25 mo
131.31 109.75 li
@
127.56 63.25 mo
135.81 63.25 li
@
127.56 109.75 mo
135.81 109.75 li
@
139.56 41.5 mo
139.56 87.25 li
@
135.06 41.5 mo
143.31 41.5 li
@
135.06 87.25 mo
143.31 87.25 li
@
147.06 37.75 mo
147.06 83.5 li
@
142.56 37.75 mo
150.81 37.75 li
@
142.56 83.5 mo
150.81 83.5 li
@
154.56 37.75 mo
154.56 83.5 li
@
150.06 37.75 mo
158.31 37.75 li
@
150.06 83.5 mo
158.31 83.5 li
@
162.06 37 mo
162.06 82.75 li
@
158.31 37 mo
165.81 37 li
@
158.31 82.75 mo
165.81 82.75 li
@
169.56 33.25 mo
169.56 79 li
@
165.81 33.25 mo
174.06 33.25 li
@
165.81 79 mo
174.06 79 li
@
177.06 60.25 mo
177.06 106 li
@
173.31 60.25 mo
181.56 60.25 li
@
173.31 106 mo
181.56 106 li
@
185.31 67 mo
185.31 112.75 li
@
180.81 67 mo
189.06 67 li
@
180.81 112.75 mo
189.06 112.75 li
@
192.81 66.25 mo
192.81 112 li
@
188.31 66.25 mo
196.561 66.25 li
@
188.31 112 mo
196.561 112 li
@
200.311 80.5 mo
200.311 125.5 li
@
195.811 80.5 mo
204.061 80.5 li
@
195.811 125.5 mo
204.061 125.5 li
@
222.811 73.75 mo
222.811 118.75 li
@
219.061 73.75 mo
227.311 73.75 li
@
219.061 118.75 mo
227.311 118.75 li
@
231.061 94 mo
231.061 139 li
@
226.561 94 mo
234.811 94 li
@
226.561 139 mo
234.811 139 li
@
238.561 80.5 mo
238.561 125.5 li
@
234.061 80.5 mo
242.311 80.5 li
@
234.061 125.5 mo
242.311 125.5 li
@
246.061 86.5 mo
246.061 130.75 li
@
241.561 86.5 mo
249.811 86.5 li
@
241.561 130.75 mo
249.811 130.75 li
@
253.561 66.25 mo
253.561 111.25 li
@
249.811 66.25 mo
257.311 66.25 li
@
249.811 111.25 mo
257.311 111.25 li
@
261.061 94 mo
261.061 139 li
@
257.311 94 mo
265.561 94 li
@
257.311 139 mo
265.561 139 li
@
268.561 88 mo
268.561 133 li
@
264.811 88 mo
273.061 88 li
@
264.811 133 mo
273.061 133 li
@
276.811 93.25 mo
276.811 137.5 li
@
272.311 93.25 mo
280.561 93.25 li
@
272.311 137.5 mo
280.561 137.5 li
@
284.311 106.75 mo
284.311 151 li
@
279.811 106.75 mo
288.061 106.75 li
@
279.811 151 mo
288.061 151 li
@
291.811 120.25 mo
291.811 164.5 li
@
287.311 120.25 mo
295.561 120.25 li
@
287.311 164.5 mo
295.561 164.5 li
@
299.311 103.75 mo
299.311 148 li
@
295.561 103.75 mo
303.061 103.75 li
@
295.561 148 mo
303.061 148 li
@
306.811 92.5 mo
306.811 136.75 li
@
303.061 92.5 mo
311.311 92.5 li
@
303.061 136.75 mo
311.311 136.75 li
@
314.311 86.5 mo
314.311 130 li
@
310.561 86.5 mo
318.811 86.5 li
@
310.561 130 mo
318.811 130 li
@
322.561 84.25 mo
322.561 128.5 li
@
318.061 84.25 mo
326.311 84.25 li
@
318.061 128.5 mo
326.311 128.5 li
@
330.061 116.5 mo
330.061 160 li
@
325.561 116.5 mo
333.811 116.5 li
@
325.561 160 mo
333.811 160 li
@
337.561 147.25 mo
337.561 190.75 li
@
333.061 147.25 mo
341.311 147.25 li
@
333.061 190.75 mo
341.311 190.75 li
@
345.061 173.5 mo
345.061 217.001 li
@
341.311 173.5 mo
348.811 173.5 li
@
341.311 217.001 mo
348.811 217.001 li
@
352.561 226.001 mo
352.561 270.251 li
@
348.811 226.001 mo
357.061 226.001 li
@
348.811 270.251 mo
357.061 270.251 li
@
360.061 232.751 mo
360.061 276.251 li
@
356.311 232.751 mo
364.561 232.751 li
@
356.311 276.251 mo
364.561 276.251 li
@
368.311 235.001 mo
368.311 278.501 li
@
363.811 235.001 mo
372.061 235.001 li
@
363.811 278.501 mo
372.061 278.501 li
@
375.811 235.751 mo
375.811 280.001 li
@
371.311 235.751 mo
379.561 235.751 li
@
371.311 280.001 mo
379.561 280.001 li
@
383.311 239.501 mo
383.311 283.001 li
@
378.811 239.501 mo
387.061 239.501 li
@
378.811 283.001 mo
387.061 283.001 li
@
390.811 203.5 mo
390.811 247.001 li
@
387.061 203.5 mo
394.561 203.5 li
@
387.061 247.001 mo
394.561 247.001 li
@
398.311 221.501 mo
398.311 265.001 li
@
394.561 221.501 mo
402.811 221.501 li
@
394.561 265.001 mo
402.811 265.001 li
@
405.811 217.001 mo
405.811 260.501 li
@
402.061 217.001 mo
410.311 217.001 li
@
402.061 260.501 mo
410.311 260.501 li
@
414.061 223.001 mo
414.061 266.501 li
@
409.561 223.001 mo
417.811 223.001 li
@
409.561 266.501 mo
417.811 266.501 li
@
421.561 224.501 mo
421.561 268.001 li
@
417.061 224.501 mo
425.311 224.501 li
@
417.061 268.001 mo
425.311 268.001 li
@
429.061 261.251 mo
429.061 304.751 li
@
424.561 261.251 mo
432.811 261.251 li
@
424.561 304.751 mo
432.811 304.751 li
@
436.561 250.751 mo
436.561 294.251 li
@
432.811 250.751 mo
440.311 250.751 li
@
432.811 294.251 mo
440.311 294.251 li
@
444.061 252.251 mo
444.061 297.251 li
@
440.311 252.251 mo
448.561 252.251 li
@
440.311 297.251 mo
448.561 297.251 li
@
451.561 259.001 mo
451.561 304.001 li
@
447.811 259.001 mo
456.061 259.001 li
@
447.811 304.001 mo
456.061 304.001 li
@
459.811 249.251 mo
459.811 295.001 li
@
455.311 249.251 mo
463.561 249.251 li
@
455.311 295.001 mo
463.561 295.001 li
@
467.311 273.251 mo
467.311 320.501 li
@
462.811 273.251 mo
471.061 273.251 li
@
462.811 320.501 mo
471.061 320.501 li
@
grestore
65.3101 37.75 mo
65.3101 38.9922 64.3032 40 63.0601 40 cv
61.8179 40 60.8101 38.9922 60.8101 37.75 cv
60.8101 36.5068 61.8179 35.5 63.0601 35.5 cv
64.3032 35.5 65.3101 36.5068 65.3101 37.75 cv
f
72.8101 72.25 mo
72.8101 73.4932 71.8032 74.5 70.5601 74.5 cv
69.3179 74.5 68.3101 73.4932 68.3101 72.25 cv
68.3101 71.0078 69.3179 70 70.5601 70 cv
71.8032 70 72.8101 71.0078 72.8101 72.25 cv
f
80.3101 46.75 mo
80.3101 47.9932 79.3032 49 78.0601 49 cv
76.8179 49 75.8101 47.9932 75.8101 46.75 cv
75.8101 45.5078 76.8179 44.5 78.0601 44.5 cv
79.3032 44.5 80.3101 45.5078 80.3101 46.75 cv
f
87.8101 60.25 mo
87.8101 61.4932 86.8032 62.5 85.5601 62.5 cv
84.3179 62.5 83.3101 61.4932 83.3101 60.25 cv
83.3101 59.0078 84.3179 58 85.5601 58 cv
86.8032 58 87.8101 59.0078 87.8101 60.25 cv
f
96.0601 33.25 mo
96.0601 34.4922 95.0532 35.5 93.8101 35.5 cv
92.5679 35.5 91.5601 34.4922 91.5601 33.25 cv
91.5601 32.0068 92.5679 31 93.8101 31 cv
95.0532 31 96.0601 32.0068 96.0601 33.25 cv
f
103.56 30.25 mo
103.56 31.4922 102.553 32.5 101.31 32.5 cv
100.068 32.5 99.0601 31.4922 99.0601 30.25 cv
99.0601 29.0068 100.068 28 101.31 28 cv
102.553 28 103.56 29.0068 103.56 30.25 cv
f
111.06 45.25 mo
111.06 46.4922 110.053 47.5 108.81 47.5 cv
107.568 47.5 106.56 46.4922 106.56 45.25 cv
106.56 44.0068 107.568 43 108.81 43 cv
110.053 43 111.06 44.0068 111.06 45.25 cv
f
118.56 66.25 mo
118.56 67.4932 117.553 68.5 116.31 68.5 cv
115.068 68.5 114.06 67.4932 114.06 66.25 cv
114.06 65.0078 115.068 64 116.31 64 cv
117.553 64 118.56 65.0078 118.56 66.25 cv
f
126.06 65.5 mo
126.06 66.7432 125.053 67.75 123.81 67.75 cv
122.568 67.75 121.56 66.7432 121.56 65.5 cv
121.56 64.2578 122.568 63.25 123.81 63.25 cv
125.053 63.25 126.06 64.2578 126.06 65.5 cv
f
133.56 86.5 mo
133.56 87.7432 132.553 88.75 131.31 88.75 cv
130.068 88.75 129.06 87.7432 129.06 86.5 cv
129.06 85.2578 130.068 84.25 131.31 84.25 cv
132.553 84.25 133.56 85.2578 133.56 86.5 cv
f
141.81 64.75 mo
141.81 65.9932 140.803 67 139.56 67 cv
138.318 67 137.31 65.9932 137.31 64.75 cv
137.31 63.5078 138.318 62.5 139.56 62.5 cv
140.803 62.5 141.81 63.5078 141.81 64.75 cv
f
149.31 60.25 mo
149.31 61.4932 148.303 62.5 147.06 62.5 cv
145.818 62.5 144.81 61.4932 144.81 60.25 cv
144.81 59.0078 145.818 58 147.06 58 cv
148.303 58 149.31 59.0078 149.31 60.25 cv
f
156.81 61 mo
156.81 62.2432 155.803 63.25 154.56 63.25 cv
153.318 63.25 152.31 62.2432 152.31 61 cv
152.31 59.7578 153.318 58.75 154.56 58.75 cv
155.803 58.75 156.81 59.7578 156.81 61 cv
f
164.31 59.5 mo
164.31 60.7432 163.303 61.75 162.06 61.75 cv
160.818 61.75 159.81 60.7432 159.81 59.5 cv
159.81 58.2578 160.818 57.25 162.06 57.25 cv
163.303 57.25 164.31 58.2578 164.31 59.5 cv
f
171.81 56.5 mo
171.81 57.7432 170.803 58.75 169.56 58.75 cv
168.318 58.75 167.31 57.7432 167.31 56.5 cv
167.31 55.2578 168.318 54.25 169.56 54.25 cv
170.803 54.25 171.81 55.2578 171.81 56.5 cv
f
179.31 83.5 mo
179.31 84.7432 178.303 85.75 177.06 85.75 cv
175.818 85.75 174.81 84.7432 174.81 83.5 cv
174.81 82.2578 175.818 81.25 177.06 81.25 cv
178.303 81.25 179.31 82.2578 179.31 83.5 cv
f
187.56 90.25 mo
187.56 91.4932 186.553 92.5 185.31 92.5 cv
184.068 92.5 183.06 91.4932 183.06 90.25 cv
183.06 89.0078 184.068 88 185.31 88 cv
186.553 88 187.56 89.0078 187.56 90.25 cv
f
195.061 89.5 mo
195.061 90.7432 194.053 91.75 192.81 91.75 cv
191.568 91.75 190.56 90.7432 190.56 89.5 cv
190.56 88.2578 191.568 87.25 192.81 87.25 cv
194.053 87.25 195.061 88.2578 195.061 89.5 cv
f
202.561 103 mo
202.561 104.243 201.553 105.25 200.311 105.25 cv
199.068 105.25 198.061 104.243 198.061 103 cv
198.061 101.758 199.068 100.75 200.311 100.75 cv
201.553 100.75 202.561 101.758 202.561 103 cv
f
225.061 96.25 mo
225.061 97.4932 224.053 98.5 222.811 98.5 cv
221.568 98.5 220.561 97.4932 220.561 96.25 cv
220.561 95.0078 221.568 94 222.811 94 cv
224.053 94 225.061 95.0078 225.061 96.25 cv
f
233.311 116.5 mo
233.311 117.743 232.303 118.75 231.061 118.75 cv
229.818 118.75 228.811 117.743 228.811 116.5 cv
228.811 115.258 229.818 114.25 231.061 114.25 cv
232.303 114.25 233.311 115.258 233.311 116.5 cv
f
240.811 103 mo
240.811 104.243 239.803 105.25 238.561 105.25 cv
237.318 105.25 236.311 104.243 236.311 103 cv
236.311 101.758 237.318 100.75 238.561 100.75 cv
239.803 100.75 240.811 101.758 240.811 103 cv
f
248.311 108.25 mo
248.311 109.493 247.303 110.5 246.061 110.5 cv
244.818 110.5 243.811 109.493 243.811 108.25 cv
243.811 107.008 244.818 106 246.061 106 cv
247.303 106 248.311 107.008 248.311 108.25 cv
f
255.811 88.75 mo
255.811 89.9932 254.803 91 253.561 91 cv
252.318 91 251.311 89.9932 251.311 88.75 cv
251.311 87.5078 252.318 86.5 253.561 86.5 cv
254.803 86.5 255.811 87.5078 255.811 88.75 cv
f
263.311 116.5 mo
263.311 117.743 262.303 118.75 261.061 118.75 cv
259.818 118.75 258.811 117.743 258.811 116.5 cv
258.811 115.258 259.818 114.25 261.061 114.25 cv
262.303 114.25 263.311 115.258 263.311 116.5 cv
f
270.811 110.5 mo
270.811 111.743 269.803 112.75 268.561 112.75 cv
267.318 112.75 266.311 111.743 266.311 110.5 cv
266.311 109.258 267.318 108.25 268.561 108.25 cv
269.803 108.25 270.811 109.258 270.811 110.5 cv
f
279.061 115.75 mo
279.061 116.993 278.053 118 276.811 118 cv
275.568 118 274.561 116.993 274.561 115.75 cv
274.561 114.508 275.568 113.5 276.811 113.5 cv
278.053 113.5 279.061 114.508 279.061 115.75 cv
f
286.561 129.25 mo
286.561 130.493 285.553 131.5 284.311 131.5 cv
283.068 131.5 282.061 130.493 282.061 129.25 cv
282.061 128.008 283.068 127 284.311 127 cv
285.553 127 286.561 128.008 286.561 129.25 cv
f
294.061 142.75 mo
294.061 143.993 293.053 145 291.811 145 cv
290.568 145 289.561 143.993 289.561 142.75 cv
289.561 141.508 290.568 140.5 291.811 140.5 cv
293.053 140.5 294.061 141.508 294.061 142.75 cv
f
301.561 126.25 mo
301.561 127.493 300.553 128.5 299.311 128.5 cv
298.068 128.5 297.061 127.493 297.061 126.25 cv
297.061 125.008 298.068 124 299.311 124 cv
300.553 124 301.561 125.008 301.561 126.25 cv
f
309.061 115 mo
309.061 116.243 308.053 117.25 306.811 117.25 cv
305.568 117.25 304.561 116.243 304.561 115 cv
304.561 113.758 305.568 112.75 306.811 112.75 cv
308.053 112.75 309.061 113.758 309.061 115 cv
f
316.561 108.25 mo
316.561 109.493 315.553 110.5 314.311 110.5 cv
313.068 110.5 312.061 109.493 312.061 108.25 cv
312.061 107.008 313.068 106 314.311 106 cv
315.553 106 316.561 107.008 316.561 108.25 cv
f
324.811 106.75 mo
324.811 107.993 323.803 109 322.561 109 cv
321.318 109 320.311 107.993 320.311 106.75 cv
320.311 105.508 321.318 104.5 322.561 104.5 cv
323.803 104.5 324.811 105.508 324.811 106.75 cv
f
332.311 138.25 mo
332.311 139.493 331.303 140.5 330.061 140.5 cv
328.818 140.5 327.811 139.493 327.811 138.25 cv
327.811 137.008 328.818 136 330.061 136 cv
331.303 136 332.311 137.008 332.311 138.25 cv
f
339.811 169 mo
339.811 170.243 338.803 171.25 337.561 171.25 cv
336.318 171.25 335.311 170.243 335.311 169 cv
335.311 167.758 336.318 166.75 337.561 166.75 cv
338.803 166.75 339.811 167.758 339.811 169 cv
f
347.311 195.25 mo
347.311 196.493 346.303 197.5 345.061 197.5 cv
343.818 197.5 342.811 196.493 342.811 195.25 cv
342.811 194.008 343.818 193 345.061 193 cv
346.303 193 347.311 194.008 347.311 195.25 cv
f
354.811 247.751 mo
354.811 248.993 353.804 250.001 352.561 250.001 cv
351.319 250.001 350.311 248.993 350.311 247.751 cv
350.311 246.508 351.319 245.501 352.561 245.501 cv
353.804 245.501 354.811 246.508 354.811 247.751 cv
f
362.311 254.501 mo
362.311 255.743 361.304 256.751 360.061 256.751 cv
358.819 256.751 357.811 255.743 357.811 254.501 cv
357.811 253.258 358.819 252.251 360.061 252.251 cv
361.304 252.251 362.311 253.258 362.311 254.501 cv
f
370.561 256.751 mo
370.561 257.993 369.554 259.001 368.311 259.001 cv
367.069 259.001 366.061 257.993 366.061 256.751 cv
366.061 255.508 367.069 254.501 368.311 254.501 cv
369.554 254.501 370.561 255.508 370.561 256.751 cv
f
378.061 258.251 mo
378.061 259.493 377.054 260.501 375.811 260.501 cv
374.569 260.501 373.561 259.493 373.561 258.251 cv
373.561 257.008 374.569 256.001 375.811 256.001 cv
377.054 256.001 378.061 257.008 378.061 258.251 cv
f
385.561 261.251 mo
385.561 262.493 384.554 263.501 383.311 263.501 cv
382.069 263.501 381.061 262.493 381.061 261.251 cv
381.061 260.008 382.069 259.001 383.311 259.001 cv
384.554 259.001 385.561 260.008 385.561 261.251 cv
f
393.061 225.251 mo
393.061 226.493 392.054 227.501 390.811 227.501 cv
389.569 227.501 388.561 226.493 388.561 225.251 cv
388.561 224.008 389.569 223.001 390.811 223.001 cv
392.054 223.001 393.061 224.008 393.061 225.251 cv
f
400.561 243.251 mo
400.561 244.493 399.554 245.501 398.311 245.501 cv
397.069 245.501 396.061 244.493 396.061 243.251 cv
396.061 242.008 397.069 241.001 398.311 241.001 cv
399.554 241.001 400.561 242.008 400.561 243.251 cv
f
408.061 238.751 mo
408.061 239.993 407.054 241.001 405.811 241.001 cv
404.569 241.001 403.561 239.993 403.561 238.751 cv
403.561 237.508 404.569 236.501 405.811 236.501 cv
407.054 236.501 408.061 237.508 408.061 238.751 cv
f
416.311 244.751 mo
416.311 245.993 415.304 247.001 414.061 247.001 cv
412.819 247.001 411.811 245.993 411.811 244.751 cv
411.811 243.508 412.819 242.501 414.061 242.501 cv
415.304 242.501 416.311 243.508 416.311 244.751 cv
f
423.811 246.251 mo
423.811 247.493 422.804 248.501 421.561 248.501 cv
420.319 248.501 419.311 247.493 419.311 246.251 cv
419.311 245.008 420.319 244.001 421.561 244.001 cv
422.804 244.001 423.811 245.008 423.811 246.251 cv
f
431.311 283.001 mo
431.311 284.243 430.304 285.251 429.061 285.251 cv
427.819 285.251 426.811 284.243 426.811 283.001 cv
426.811 281.758 427.819 280.751 429.061 280.751 cv
430.304 280.751 431.311 281.758 431.311 283.001 cv
f
438.811 272.501 mo
438.811 273.743 437.804 274.751 436.561 274.751 cv
435.319 274.751 434.311 273.743 434.311 272.501 cv
434.311 271.258 435.319 270.251 436.561 270.251 cv
437.804 270.251 438.811 271.258 438.811 272.501 cv
f
446.311 274.751 mo
446.311 275.993 445.304 277.001 444.061 277.001 cv
442.819 277.001 441.811 275.993 441.811 274.751 cv
441.811 273.508 442.819 272.501 444.061 272.501 cv
445.304 272.501 446.311 273.508 446.311 274.751 cv
f
453.811 281.501 mo
453.811 282.743 452.804 283.751 451.561 283.751 cv
450.319 283.751 449.311 282.743 449.311 281.501 cv
449.311 280.258 450.319 279.251 451.561 279.251 cv
452.804 279.251 453.811 280.258 453.811 281.501 cv
f
462.061 272.501 mo
462.061 273.743 461.054 274.751 459.811 274.751 cv
458.569 274.751 457.561 273.743 457.561 272.501 cv
457.561 271.258 458.569 270.251 459.811 270.251 cv
461.054 270.251 462.061 271.258 462.061 272.501 cv
f
469.561 296.501 mo
469.561 297.743 468.554 298.751 467.311 298.751 cv
466.069 298.751 465.061 297.743 465.061 296.501 cv
465.061 295.258 466.069 294.251 467.311 294.251 cv
468.554 294.251 469.561 295.258 469.561 296.501 cv
f
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRY+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368
260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A
577DC235F833AFCC30669C812FBF097879E1> |-
/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A
2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D47
14AF52ABD0227B6CDD854C568D5A6F3817645C5> |-
/K <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B4538
2285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-
/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117
C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47
CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EF
BF59B4862165C7DEA15B42BE3811C2CAA25C54> |-
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRY+ArialMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 75 /K put
dup 80 /P put
dup 84 /T put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/IOXMRY+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six /seven /eight /nine 
17{/.notdef}rp /K 4{/.notdef}rp /P 3{/.notdef}rp /T 20{/.notdef}rp /i 
3{/.notdef}rp /m /n /o 3{/.notdef}rp /s /t 139{/.notdef}rp]
IOXMRY+ArialMT nf
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
231.061 383.501 mo
(Position \()sh
%ADOBeginSubsetFont: SymbolMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SymbolMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /Delta put
dup 109 /mu put
def
/FontBBox {0 -220 1113 1005} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235
BDD70699E096A6312D> |-
/Delta <1C60D8A8C9B7D7E8D37714888B3A9969C9B649A6AE211DE5892AE2A8
71F281F62C724D805D2A> |-
/mu <1C60D8A8C9B7FBE1CEF90ADFEE69DD2DD9D352B10CB42426EE82DC52C52
D4F8699E0A310464D7FB1FA805D8CC4DAB824E1C70115C99A4D0C4724CCCD002
46EE5727B763DCCC1EF93F4F836F440B68CBB4BA9924DABB089DDC3F318794A0
4D0CC8D5CBFA71E33ABDD1062939BBB2EF2A57DB0B26627DF9F16DB477D13BA9
B64308D9B28E9254BFC154A0BCA92D3CE9FAF30F5A21030ED7A722CD4D7FF3F8
0EC6836885BE3B1F2C1291EADA749447A3397B77736C040716B308AF7942AB81
3E31A36FB9E2F49D3817C6B7D80057676EF942208B0DC64D84FF73D34BE1D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRZ+SymbolMT /SymbolMT findfont ct_VMDictPut
/IOXMRZ+SymbolMT*1 
[68{/.notdef}rp /Delta 40{/.notdef}rp /mu 146{/.notdef}rp]
IOXMRZ+SymbolMT nf
IOXMRZ+SymbolMT*1 [12 0 0 -12 0 0 ]msf
279.811 383.501 mo
(m)sh
IOXMRY+ArialMT*1 [12 0 0 -12 0 0 ]msf
286.561 383.501 mo
(m\))
[9.99609 0 ]xsh
IOXMRZ+SymbolMT*1 [0 -12 -12 0 0 0 ]msf
10.5601 195.25 mo
(D)sh
IOXMRY+ArialMT*1 [0 -12 -12 0 0 0 ]msf
10.5601 188.5 mo
(T \(K\))
[-7.33008 -3.33398 -3.99609 -8.00391 0 ]ysh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IOXMRZ+SymbolMT*1 uf
/IOXMRZ+SymbolMT uf
/SymbolMT uf
/IOXMRY+ArialMT*1 uf
/IOXMRY+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Guillermo) ()
%%Title: (fig4.eps)
%%CreationDate: 12/27/2018 1:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6flAQ(ZS:%`?NfftSsZ4OR.86+2R`-l4>W4=Q8.;!p>5+?oK.3f?/M4iCSb"1;U*1b:@J4Dp56ggP#=n`VD;)<de7j(4<O5$
%UQ=F0T=d,%H21^^Rn@;*W@[N6ch;O1E%+P)AR^$FQ\0mp6n4<cV:./Zj&$7<Q:^%=j`,5</WOEpC"sB"e'`J#QDSqGES0N(Z-TK2
%d1#t[O9V97kqtR0H`qmJGK985>4-,hR1'=0hk>FkOa=,>L159VI<T:0Sr[md='g,'c3M8dg&/H48pP>!Qc$Qc??+;/VO\5Pn&:p\
%h]&?IE8DC8W5E)ZnVs,9nWV0Irc0=1AdBKW.sSS#e+O)0<:mNp0CX38ILN)0C&AsH+JnVh]-D_u?(hmG>`7L'@:poroI%.J/;6QD
%?e*K0-lP6$(?Ns-GqS4?3A-WC#WZgXbJ]'=1?VAE'!Yt68BY#_\J"o\Lk"U$XV*qCFe`-*O]miY=+gN>39$,nN[(auUW`I0P\rsC
%R>d(k,=ec+Nr.fimhO>!Wl#=>N5P[?oi3Vah2sn>)'ZQ[E'>5"7sT#RJV%L:g%d3l%$:(;34^0gi\!`b#`IBC!'!bq=`9<j+0l_M
%15k?=XT7J5=1N$Y#?mhgB4+25BTg]<_8frJO7ERmhIoYTa:qI7#(;a:14hGX?LV'+=lt3org16U&29T1,<?#sQDINf-($(u`:YLP
%e59k/nAbo>QpYd-\lD/:1b*]]*J>C(kH0[BG`0=LQoI+uQUno-3Xr:'*5%S0o[cJ4h@g3?RRk6C7"RP?dnHg=dnhTdL2Z<5'MG?t
%=?9`idRJ:<.$Mh?R9U4X'7>=>\Ju<9:[e_18gPld.RDT_$(dAR:o7EMVq#NCNN6-]:nUu<Pt7fEQV!5D9_&mtdcUq((3kI@0J7U(
%@PBDq>4N(+"g:`,"pM2TlkCJ915lTIi>W14?D/g"/CH?`$=<8Ti</udirZ.^VkaPo%#+ti:o7EMhrlWMc4`kb>S:#P/#c-1:Bj(q
%:O5Ohj3H,QU.*-F'SA-W.l9[AP)PnnP:$i(5VX*#SS<Zo;AmI[YODu*8E^%[jj(b>n-[-BN:9FdPE6/<0'NDPUpPY6:FV,q*U+ca
%4VT-^UUVJB-Nh/T-X@sY8_\@@8.k\'ARL%Q7U^hW3Z0r'$tFrl-q7kj`^oSc.`3d$JH;M1PfbF&&bHYPK[M;0;kft-LHA:&L(FN"
%&j!K)qkS]EpB36;*pu.](cjk/I4.SDPNGF=j>m%"4&6]Y:c=_gJfrK0(&nkD<k4jP6.IFYWdI9uV=FY\FNO\8-0"2>2,VY#B:Ima
%SIOcr7457@U4d]VG*tZD%?meScf%*5QUN2Rrs8aPUqW$W=Q877I4'NCH7D@4;W#T'-:>MJn)Q-k-/Z%3"aX5K.hp&Lopu!qMr_MH
%:B")_Egcj$^6?<(KmZtZaWIGYa`8Hb&73KVP4/#^H&"*]a\jlo/T]T[[?/XtX(=I`hRTri?2mZlBCQ,`T6R;>/Z4fnSMZ'cQ,tEO
%1o3Bi>0tBMr"F@rs5=Lg7c2DMS_(PBos=akr(FW<5#D;6J8j]1VhEis5WbTimM3#V!KXNoBKAG[b=1As9#-/5!U/C66$89nrYpdT
%#&+[]k00kFhQ?e;Z.i?fCJ'=6P<k(d:7ZA.+(_#g"%sriq*<JM7>t#-M@'GE8`>moi+b)[n2XX9InM:*a38j%q,FW<!:#?:3poLm
%<ma1QhoM%EW?ij(FZkD`:t1Vig:N<t+<d5]r5a382$d--WBaPbX)uB=V9liI+`7A;^mllkl[&]^=I$-V30&/P)1iW(>.cP]ai*/<
%8X?Cjb.R!V[`n_'UCPq>E#a/T6:gY/'<C/;/uadj8Xb_IR8@+F;BF#mGjL9o=][&\#mTH<7K*!U-;H0C=.rM_kr`N2L>NkH22V[M
%lUlp]:XFqs=G3RTCEQS?V/;C0/,X;5rKO:k:kt6tX380#?rkGj$:bYVY>X*7Otu=0ckP24efKP)))2UF*3XAQpuor^#BH%!?nu:;
%p%<r8`i]nRap_4oVii`d(J2.\3q$\0`DW%oOVK!,ej3s-T:SJ#-3uPt1n\;a,B%Dp@QNuS8&kQY_6W,)<(E;6U&guN5u,dL>cc(N
%*LE)r5olb[H-4qO=].,m^qtIggJ`jh.3Y_i&2L-8@-34*GKVV^1/?qb*1]PCW#7mt;ES6#<@T]:bDI1b@arfrA]N2bg!1Pt%FoLW
%)iFgkSZZt0itbViK(UT[\1/[/gL/7K3)@Y:[4G;M>o%HaS5\idLmJ%Y.UMVB?0.KOZDqqS5ui6.eWR8oH-O[BD2N[o\(Ld*5R!$j
%4iLXpSQ;@^WD55f(eQ!G,o)-jn2hpBRHCQm&kG(%@Q^?L["eT1b:%+]^+VTK:FI!99#'"IMWlajI9C9G-P)EJ/EPDNN*.J?$G!/W
%`q7<5$ru&EB#uR_6G"Mi.F]7?.09FQ@+;HfW$r)lF]fiFJqgLe/-a`aN`N%bTRg70F<5JVH-^/DD1GU:JKRa6[I]9U`C`6%`1f:L
%;NBIN.J*?MFGc2'2^r9Z/;%=aMSG7ImAiC$k*(\$'GOc76(P7eZ?4No1VlX_Q$#*pZ9k,kZRUj5$oqJ<@32(Md^4PDkL;tGH!OBd
%=?8<sRKi0&Z;5*lX&qX;Q%s'7?DIjJg?IU<C7,Lq/RVrIG;EB3Ya;I.BZ$TsWg&o6;e6N:3]_e]<>G3hm8HWMP#b$W5nd6dbi`0M
%E<UV*dYupI4=_h^OC$jjkB.GJR.7IC1fYi$TX.R-jDq@[_`#j4"rl./G=<6%MaU$>n:EYgXZaelb`W[D;2sYU6>;pj-?<)o!#@%=
%[H_:V`74^=JZ3.W;cRE[C]@>7"(/"DMA`$pSp;N*(lB``mu.FP.V:`0$WalK>F5sWM`QS='NeKoPS'Si6c?DAgDs4Yc*9X25!-1D
%=qY9CbMkn0W`l]:X/OjnOG"%6"%p*"IT77Obqj,SQ1@sRL,NIK!^"%n:t@6Pr@![%%H)o-37dJi'h\%]V4"21KI7Jk"X+C$iE-F;
%W'XNeV9P7e?/[li&2[pWkFLiQGsiBd9M4k:X&IVJ3L+E<=st:RSO%L3(s+1Ae5dcN:MBT)eIR;X]@(k+@2e]D2&.rRQc1>P:*Hj#
%W)/eRlY2Wp;^ul0@]ZGbVr(D[F=fSS9Tr'&2[PL!NFJdLA;0EH>"7%-bb^<"Fe-84f(Xd@\o(nX@s&RaPj2pXW90YE96cou>psc.
%oN5ZU=('RlDrG*2a$6GHo;Y9i"qb>)0f,"QL1c"=]$BqR*4iR<eSW*,Oki9u3p-2]1$SA'\[9L7Qs@g&[,B8Piok\_'I6,.0@FJ:
%=a;4QkVoRYaqeG`D$H2AOrAaZ9a=^-.h^D6L+O#i=bVnXA6&E#.,>gD!3l$VVi'MgFHAI%knn!$*B-kBc=`u?U]D@EG(eA=8B8m`
%Y9<R4Z!k$i5mGLR1).%>6<EEm$-qKg/5jUtk/j"K*uQRC+EiAup'djs#":\Jb67&dGRZ?$D-'2T#\fDcQH%enN<BhF,i#4BNJHO)
%q5O2o5J%P@o82WpO.Q@sEq,dtGU?/jUQ;,4c)'GB;Wf\F_Iqkn\MX$N$'$I^m7bLoqf"(q7c`0MQi&0?LP*]jJAB5&SW=:YP2FXX
%G]+_tk25VpnXoSEP\-QJq6VsCa00e0Bfq9&bQgMjp/$./`Qp&@5+*U3_[i\/r)jqcI*NFf\1%;B*d-Z0f3)>uofLXK\G2'@AqON!
%N6e:p?\Hc\eC[_*PZ/]^nc!bk'W9E2QVZ`&mJ]A8d"nUVpiOsK+`sNDn_RN6`)5t^qN?k_V=Bm3l?4H!J,"+D:<U\)j2l5M9r\.F
%ILeo#&ZVE7iX#R:?=u59cf1S3-_KBH0&[@#<3[PFme!/V#d%d'ifi>KMJCG7n_)g[ko:j`0UC_):Iu7cDk5a4-H<g`?9Xj7j59\r
%2#k(nT%G+nLPR_Fj,mLIFm-FnmELEr8(fFUr0_aS<!PU9G)#GgLA^)]bNFP'!Rh-cW^%[BR+X#%r"bOE(LR7567#s$]+D1(lL>4a
%N*<27eLO8*"tA(F+<!qAL/Om(qi%.UJ>elW;W4-F3+j_2P<PNfotKV,fjHT5*C$/+JL59uJ8Rp>)lE1c;QEM5?@Rt]6nP/*N@;4s
%SAmVnE/0IO_pn)cclJsF%RrrYN;"_]6rI;9Xc$q*e<Ho])j!r";JO!t(arr`KT6WF3$uVbZqk2/_H8FbeE[YE)Scjd)08\u:*@e=
%rL#0YIZqf.N/ZZdB?u(1.ioZ<Qo]]0T$G*i]_;gHP)$tG@R3p1ou7ODS+jY>_5D#Zl=6@`(8oJL[,L\1#If6E(9R&=QKI3"mtnOS
%5T8S'7(OS(oLiG7lkUuMn;8?sd(IXXX.E&TZg;IC3(FKpdWdriN8DUHrr`]-EEDd5LE/tYP,CTa!.RH+n*hCa$mn8qqIT2F/:FQ.
%O:U3^kS6U;NJDuab>7(I/rg9<7Xp94nO3!nK([uCUkp$=X^PklOhCI?$D`AF3L;e`!Jm"9D`7Bk_a8)JcoTS>TVnqX+Fu9[Tb3.l
%"e9''k)gTZf;Q#0IHTEnW"Q+;l3r"F*Fn`H0gr;^/I8\f'GLKY*IHV1I<pf=[&Qf"]N"(C!=2^.1.X\i>pR?IR!tg1=&4ZP$GMNX
%/Lj1o@2AuUV:#*pFBFu-5J>\/nPD$04`L`-^6)+aCWqA[82F08?Ns+Oli76UX+*&>7"I^elBBO[cOLF_&5]X07$<$AoJDB1BYbFg
%p$e2+N3>H24=3c-:Pj1&U`i,nom\,]R#(LQW/mr`bm-%<!bX<6HfOS:>b'(rU'jRpRF5j).9HRP)'=i!9)iJfjN',J&=ED;66LUP
%A2O:4KYMg(JB#tR$2jR$k?IRJd,V1CpLG[%cT1GS]R7L&0<\gY^Z!p%qXb0op:$CO]VjW,B?o9+TSJl0k^=O1L;gTFfCL)&*3Cpa
%5nEt"23nfrhN7p]5<JUlr;2),Qh3B.4^"_-]QNZs`XnFRHoWFceNjrOBLDj6eKk4ffd5"M.?'Tf3,/'4s.TifBkahTD5%4DW&,!=
%'O-`^G`Fm3b69`qJ'd(MA,9Q7+NPS$3A%OBq&6.q^eDYt5n>_E3mqsBL\oQ_fsi\=4Po`8rqT#!:LB&)DO(K4Ud_##1kH)O,cUB"
%g<?"Y0]dVQ8@_2JTj14Z`Z#1`b%#[a+n\]]*7u-'?iTC^dp9me=#7&iZt9:&%-L5kGVHNR3't8+Q]lbPeUII(*`Yc)M/KOS*;@1c
%^+2%fU60rE!4r?')9BE-,bg\WEH[(,j'nZtnT>J`l:Bn$Ol?icK2-V=]&F,W1]@>6+Y55[npe1d$W-QS61?SR*\tFKhu<cJpI@e3
%5OEuU"D]FF6hciA5J]:W6iXUor9qVIe+^WW"n_c.J0^`s#JL.c`-<JqM'[21PW+%?G(qomrY/d^^t$BPUAkSrS]mp>=e9gWhqs(c
%m*jMSjHBP#dEr%"S4<764-'9+N(Q)O_.d#d>n-,o^L^O(G]>jS)c(Z?6[D4#I%QP-#[@hb=Qs1f;IEXQ24dH(&K`Imn'EN1;YRBY
%a1"%ooT?GeL<ej\m`]9Mp6`@a3MnX4r^`(>kRIOgruQI#`VuM4^:0TZTSMg\p'M6SL_\5EhTPZ97q@F=[j?l0ETUj!5E7KmTonqA
%3YPJ+3r#;A)M>;D)PBVkRWZXkWUK5jGpJX*omE?%;n4[Jo_Wr2hjs"uSmSCZnP!;m1E95/b##h@:BiO'R,sr::F$ZlKnd&jT8gON
%*S<Otr0JTFdYVd,)$n2XWAFCO1VH\EEH2XN;5PImSH@YN1/jt?@h,#d;s[&H8Y'b^f@\7cB88dc1@iGl+QKg[^3A_WRC3YmA#jQ?
%0p,,)ab#c=\9(D0M_?O/)@o:n9SidtIZ-`od:&:Fe&eicqm7Tq)5,%1BGUg,fVLR?*ab(R8AhS"F9$s5Ns4>@.3GeS^&d*+H5%#0
%ca7s@.:b"Zcms>e`H1'A[&\4W3e[fS<L.!jliLJfO@4)!A3Rr>Pi'/]UN,a<4J/=QG`S&M6AhPV!::t>qc%5K1TOS?ji>+2!@lZg
%M.hD`p+oQ'Q.#^mT?ej_$P"9^AuLOR8(1%b`5-glK0GGDs5b/Q/7*Qqa0F!SrXuori]f5;V*C>i\qAsL7L=`L4(4A%c-GN_hY@_r
%Xmnfq-0L8bk\(jB@CD?X4JGnF^)cuH*KJ1gD.b\mINimm$9GUNe-,.Y2U9:r_/qqgHSt-5oMS.c%msNp*bZlYeHCeFfBVo1o4-8E
%V*a+E8)f33X'TH&e7CVrMQUcC.`TFeAl\aY1og0+ONur>C]f\fkc"l"F5D+PI7$\\,FDlBk"ARj/8%NhPDrFHr22T;VR0.@XMPGC
%C2gBll6R(>Zd,MIRL*$VnYDaP3^&a=h=g&)m#=M`7gN3OeH"MZ&2^)n2#^.4-Etf`Od$D4l&6WCf,+]dATM#2L0TV9lqCP,&kZ4(
%RAhZr9j-6T9jq8_@le!V0K_3d=WoBd8Xj_)3(To_qc`CZ_udkO3YmL*oq`[bl2?#[;ESLcSD_X=PKn!D8u3`?B37`k9P$"\,KDLk
%TkBPq">[fk(B@SNLI9>aATB5dN@<6"d"_G&K/fZQLKhVlKjH*Y()[8!)%Q;hFK*&]c/`,O<>k5tGbSmqST3<hN-3TU=N_7\7k7!_
%@oqp#Og*W%>GW(j^_<$)#(k2On$^EV$n2aPe#b?%+!Z2H4K>_?2Cj(,)\+2SN+=@9j+WlVZ/UgU2'15?12AA[W@A>2]S*\rk[+lA
%+F1Si+g^+rQ3%5o;B!jrr9ZhehH9'$I1ptP)a>:f[*RFQ$=77?S]_;Od]]_6`NE3'X1"d.7)//'Q./Flb+TQ\N4p1-+]/B_<C]d]
%f=2belK:uDP^&*a(fY--F=9'G)GI_UNi6fk.PukaO\1M\jU]%jUb=*PBV899"sUVE,LrkEAcbFX<*tnk@=,A^B\sA>F$/kW0U3HY
%D"'rV!%l/7_71]YPhW_jGh2gI)QRV0G;-m]"nnZ^@FB0&\?@0!hkc))1+=7&&ORmo93A0l@jT.e+iS40KPI7d+B4XD>C,$o@ka$K
%9qY^$`8XtQ>VXaf%J4No$=dLc:389.UqZ5,B[B#e]>+N,C/W.`f358<nh/;O`8?HiM5BU]a7iXDT*mc1IuhjoeGaMd=CQruMrMZ@
%m(PS-WS"HSA0T"6L:@]A6_Q\`):?ttQ\ls2bR?N^bAO=jPC+oo=]2T<'I\n.K@->Vp.itF,'sGihQYH6kF\;MJTaL$5GJfk:Z!bi
%;OT5+Ta[:)/dV2l:YS*DP=$emNN1`V:?om>dRVN1"EGY(E5?U]`MR$(/$1fIr6)8?\C>'Aqe\\gUektd[Da^I1`Hj'?]ce^!eF,j
%B$mSSG:8>sVa<O<@99da^Q3!3r_P[<VM1o=XtmG=)6bQ!`kOpRV&^<8%RBU;om%GpM'!bX=_pqB(^LANfbGFrYkE3O7[^5+3;r49
%+lc&\0@gj?NH-:>%>uH8m%6jCVdPr0!gVB7pSc#TdMk95R+bsKQfua)MjrPBLT\>nCEm*i@:_Xf\J#agG\8j2p*e-B4'^!,DYLkJ
%WT!mq'qRtVpVB\pbL71m.[-f79VtdjYT>>\o;Ph5pPSH?mj9irfgL-.CG^3U_Ysc.dT#7V2CjTj%NR\Z3"%3t,_PrXZ7,QX-u)Tj
%0d'@LB/?<*@:#&j&tN]-*'qYDhi83Rc,oh6FD=Spe5=iprr$C1Rjg@hI4@.,+[Y(H_N4pH@bjYWQQ'=,B1&\;?klt$Ae+n,aV>Yq
%FAlo%#=]Skh"PU4GMbMk<4*(Za'e5Q>U:<('c!h(L.Z+&'g8D#Wc4i@aV^AO0?n7%f`W,O*Eq'nS2TZ_Qus1u-s6=dVFG0)S.7_P
%*KqKd;ff;r7jQ`qM+b,ucF.+ng)\DO4*F7.PU2#gaTPH3.'HFd[UK`(.OJmHDI0"eWaMY^N?p9N3_k)g-/[+eqDjl@MpdPQZ&-,I
%lDSZrIL\FQ(Rh=.cq]qGMhb?Q3H,g4i\69F;sU:nR_IH_VG]cT86Hj1M!r/"f%CVsh$9Rq@.\?7Rc&33oj2[-1,;,I^$Kp<W?%/0
%/$IOrF"4<7&/U$HXc;C@>U)PArgj1n_g6\E=.R1<r]0ti53SKH@8lHGChrO$3(-d(7AWF#X$6#tgO\bNM7T-AKE[R<]@>i+1.@5X
%D08eEGlbsf!tTo8WE$+8Oq%37Ggse#hWQ1(%c.Gj+4*t#JiSM<pq!-hq!Se$3&_6im8UQjWcKP?&Yn!gY')Pg0Y?t/@"C5Bmc"VJ
%$Jk5ZG3ckh=1jIFju^WWSZYPThfaFVSKMc\F6B9/jjWa5h#!>UhkEgY8R(u:`8V'3K[.q8dT':gqD-THBP"L:=[f_+dd6G-o[Qo0
%l!bBcXQ6],.a4&%8M:;>P4be+CspaDAcF>ulXBfF,M"EY"R^nf/.fWg,P7AY5R0qCJ8U@%KALYD\@2)!:q3f-!UX]\pMUpo$OK]u
%f3JBC9B1rr%++C_L5%5oHIB=XR?;:3(9#8)E"MJkL0!S58CZ*RFOQ>W5A$\+BOl&/6&2.fZ,bdKCo;aJ8G/DX$Zf/QDM`/]CM>9,
%YYb_CN7XL0E6B00pW\8p5o6IBrH.=q,&VoE2EJSaf#=UXh*?ekR!5?T8+OqqhN$+_PY\Dhjp79DYnCHB*mNV30OrrYE1Q\jYD?Ua
%(t4%[Jh2Oga,?!nOh;^<#bc*u<u`\t`"<A(!gQ5a&(t?s%M##pFeg052'6tRSI#AH+X2U[T-4.-s"u-OCQ-EgEq><bNR!%R59nft
%l[^l.!T8>dp:_&,*B8:PkkuPr^W/'QgkFJL8V;kPZ:lY(;Z)(0EZj<dDHM'X\WP=EKQh%&ElFZA%B#:8&r(U>(S\HF'0`b\R/)nF
%NWSD25SKu-d1qU-`$1D%>Jl=a4;&&CSSl'0Ep9<Z2cC=[gU5Ko!(Fc42#(\Gg.p\X/[LC&i&iBif5_2uXZodu90'#gE;:jp@H+(5
%QmtKVk<qLEi\rZ_p)O9d])Gi+LdNkTh&:Mql\pqpF'q?u7;>jq.goZZ.<h5:)d<L@C>K,2@Q^)b!^*sCM<XXlP8L@3+ZgS?:6_rF
%@U5uSYcs3ZXN-3%a&ehH`)C[ZSQO6mD=!^Y_ouO:]$iX3]B#=hfKQ2DiFG.EJGfeum(uc%dE&3-,#BP&3IHp7bCgCE]5]GE5)k4+
%5A(;t,UE+:nd4EoL%5O7fM*>lc\giY>j\T+H+Df]^N8cEjf&gJ^J'.RJqILR(V+sF@juhgcX3$Q@&!?89/L_(n3P=.PFNu./hk*%
%iVD4/=+<:qK^NBg#O0TI=d4g89),c==$C?nY3=@*="HO0ePjBR,ZK.Q]dT,:)]Z>r*WL\;'_tQK5>M#H_$dgD`B0Whn,&i!s!?sj
%f:HnbjA2H;=7EVTqi6fI5M9AJqj!fE6T%jse5Q21nmV=bZ1rJh>\-Zj%O:1Q01tBhp`%b"PqX$lf/`(F*Z#XJb&TVrQ:gVR-XYj1
%jnbjc=%WCcUM`gQ8XReN&YXO9$hn,n^>RjNa;99)*2u;W\I"k8a-Ldf0F@/AE)5P'FtS]A!L"]*TMJW&6]kHT1sK&kE1O?IaL/Le
%rXM/%"p-cNSu*T4"?JW25mu.?g2=?b\D,he7pg%!<4?.F#IcdCOIgZ#k?L,p'u6A/?s(3%r[E-mfo2:bIJtYG/YT%q?ZD\Qe1LeI
%]u7g4.UX%W=Y[F31Dr*qTM@FQdR>[bon/1HkZ3BE,esCT#4KIA^%50$W#O9RUa9!C>!+gNJ=>=_@(&O&E8Q&Qan?*DI6Y>!LKa<:
%mI80"f;;A[Fl?MX$?Mt2ZLDgPrJ%!i^?nt.8A::Zjp+V2)Dkj3(2,':LO9Y!9oa?m@;_[+*(=nkn(0j"V7p:a<`!/"kKhP`"k9;B
%3`Fko0iS9F:J`^"DjOL$lW]4]mZTZ\4l>jQo2E:YK8RH<ZPTIr_9^\VdqlPQh-p;u!c!%&o4S&a0o)365B>;<]bZ?[.8<T7hmr.8
%=o#oC.T[W$N\-smS=YWr1T2ud#dDD#/iFfqOaM>mD1BNCY7T4-7*e!pg1s$0g5ZAZ:fBSc=-jaR/-M69YGu3E%gQ@GO\5](OC>6`
%YFeLoGaL=?au-rk75LkJ$jN4bXh8btE/d\$\F\\TPr[>-s2.DZ2O7%1?C`Du(b/htN5KM`Os`g/W/jO<\oAIlJ3'<.2/A6j*E3#k
%!T.q(JL-J_`O#?;("<G3qr0goLYBuJDZd_[6NkDN\9H?T*D<>TKu!,R("<9Y&D;Q\5m8qFn6&-Vjm.U%VGNns)lJuu^[ablYm&XT
%6gj'4!4O;D&,/3!0aT#c1kkdl\.;\.h.XQVi]="TN%?K,P#Q:H!S"?)H-V,=n4%T)LS3dZo\sT1O)AO-?b)7.lHa8.>9YOeD(,/i
%!d3nQdgG9YZO/sW(g6Pn^3r1)]gP\XVY[Puc6f%iF`nVA:^ItA/oG`7YCq1Sk?7dd/"nT*9')oW:h)Pbdemt:k8+5g2M,,'l\4>I
%4F.8!M#e^h-W-EkhRGb`-F+h8GggJD1oAsI-^84+JBAbLHCK0UF^Nu5+fNFF$l,'c(!2V<$.C3(or[PG:WPEMXe-qdNMtr;U32KO
%Q3E?mhN9@]Eg==eKKd()XOPLiqP,NVC:=Cmhn6UNV:A;3p>:2I:JZDV&)C.nd^[ce<m8/Oq>BQFp!]tr>gDmhnBKKrV.a05qJpt$
%q,EeO"M2b+g'0IL]ug1+8:/d+*-_9WRa^QAVfu@I/Xr[&Vh"37(28!cca%]dLX]hdqW[TQi8!lP+RLJ:]XP'Co'mo-5"/-D_1D:.
%jDD86LGXHEp3pLW]pMG>Xe21*,fY!uj3N5G]9_"=4-T38j\t&3\<N^`?R6rFHs<KR?aN("0*lt-=8oXU)Vu-rAXfU0QW46(UqfAQ
%$B_T_N*u>K;R(Ij1re;7aOYU:mpDErpeihqHro/=O09*3A:n2oB;<233Vl]j*Q;[j;YC$gg..(=7N'fGD/B&C49V/D_1">!k[:0;
%(5Ke#N=_@5"TNp$8s)$f]PY-Fi>ue^r7KXIp/&KqfN(Fbr%pM+F7K5+3AuU'7c*m`TVBCKcg,]S(,/hO6DkSqe!jR0bM]]1eFo(P
%<#EkLFcrsK/m$eT\?U_PDffJ2'P_L+6J_5:<N*4GZ,IotPnFq4rLKKR($a;@fhn_+Tn/[/$jI1`LLsA>WZHP"LT?-?;=2:QTjlKf
%!c!#pm#!_k(XNXNfm^>[>2)YR6Nt*=$n>-)Og]i5P`@bePO2"YW7eM@>AL11UhGGk!k\[?,0Hg^XFu<$j'!)".$l?%QK>oMU-a>;
%jU3]0`!W"a2peMX8]I0oiF"l-UCM>;X^@G'%W\uSP2JRc)M"<1hE,rnWC3,?;D_?N>QV2a%fLRMEYZH,.MsduVe6@bd$HM4$7Zn(
%:.ui+2_FZE#C(M8U(E-$Xn26lJ1`[P7BVZL[AM)3mPqVfXhGcK!rZn;):pnA:gql(UE<B%j%mTV0#g,pni"-s@dIbZ!kE5kb\.EG
%A\PM4Y:DSCZ%$^hfp5thVdoTf&RT0nC>5jb5'"P2i8p*om:]d^)!cs.b)%"e0aXe7a"O"\Z>-t?NA.WFHd[!S+hT4E-p(@$VU</P
%Rms_E"@g(79dZ&9Jkc`LEB0$PF3'3Q`*5ka`TrKa?ZrPG^[;l8H0e<_OStQM4AT`Cdha42h&$>e%/,sks!l]s*eA<jrV'4VECh#K
%l]"XN<Ls[e=:coEWp$:@14H]1L`#K/o6*OM:pAA^XV;CPYoTR?):;LdK=t^E*L/cpkC+]A:Ep5C!Z(!HW<giAieb2W2e>e(f4edA
%G'%6e_&_Yk:?d(7KC65,%d#'qSjXn4VqI'1G-[m+J-jn1T$#G<bSRQ#Fi$W,7uab+JX9$QWT)e1NOCtj&n0gR)nUg9(m$1Zs"mK+
%::s(4"?d?S&%U_3>LRS!B;65C\I[g,IAsBnJ9#kF_VArc1",9=`Wr"/#_%n)U=n*Ccph[.Fi/Js\&jk45;[A1)ec$^&;b4=8";QN
%M&SM,9a%S?J^297?qIitcZ+3eW1DU8$W/$(6Es!r:L!51[1qoXpe^K^eSLYj@%=VrAs0p71OCFaCkgKj;hI`mrKm=`Pc>Xfg=3jA
%_H2P!M_,2Foh!rClI-@5%Zl4qDHZ4MW))TC$M0_3Tk4ZC:SX,VkB[VZgZfbV#I02$[(t:1e-/9kb2KM2f])P"2Pi,jTXFPEX_F9a
%equ;5X[j,VMR:;OXiW*$''',DO%ii91doM/Fft3%<*%S?L#RMf00r\R=)Vf?o>BqAkM#F1AC$=JG26Ms4_KOSNg+-0Vt%d2.=u/L
%lnIefYX-X]iX!t@LD)bQ2tdlQ<A[B,7PpQ8#DU5OQuD=Qj5(-Mlj5<q\#Z2kVfeI#KXau%3oe#]HK29:0rsOS/6O!pA"WK>VL)G.
%)eVO9!bD[XqI<*l5RGccO4b]gXP=o4)O:ReVDL)#@`9bAdiZbUhmuU`[AN3>RR@2)*k'o#"l+ock?22*6,.q-iY.*Vf;J&u\#)sT
%p#^Prl%Z)RijDVS)gGRa*MI:=/PB:&]Dq'NKoBE85gh2'&uMor>L4$tS3q$\!PX_4_j>r'm8d!b^3%TE+&@%'T%M1[k%9@7/8Q*l
%"F_G.RGHT]TF+:sW"n_t5-SU6=Ltn#N`G2t_3s<"Oo'R.<UNQd7uTcXI)`uK""QE!^5min@'Olq$.q:*&2DD:AuC)KWe@f&;XPo@
%Bl(D#'$6A]N453V`XV[6%m8Kk#PIKtK6p*WOH"2!9IOur6&d1me[4A:VG6qL3ROk[NY&.XD8J5e2rW!rd5O)5\]1#(gP)!6r.X#;
%=ifm$rR-K+QX?"r-79(XG#`W/To;.fk3^1mm-3^L4jgBcM[tXU1nl,K1:VucaC"_Lb?r+a:NOBIg;TSOWO^^g@MqJc`QoMiY1-_/
%n%oY[3eE*YQX`;:cp8_.og[mQhXV;JWhd<BA<oFe`bG[1f((G4aEVFDF:hYB6YlS*'tNi59&8L2QdGGDI$hJ+ej'l]cl&<Gm'o;2
%>!CG<":I-K\BgkW@_!G3)mWQR(L%1,c!pW@j$Kk^*U9k=*7/Don68S)YT#RCXTK);j"-Zt,d^4f$sF%lll);[']snHkN6O?$Ce,+
%C+\7TPc?Y&m=P8E-L!GeME9%B$gD8ZdP+9PpWe,!X_DO_\<(T_o`eT8q,Wbu2`g33X;!oU[to.4VDMt"Fm4Wa!U6Iees:/d*P8hk
%+g#k8Cu&>E1__[r&"(Fb12h>229cW,\Vk@"aaFSP9tfid\*MbjXgKN;A(s[WGLY8Q<is?:RDbBb4jA[5C<_(^FWlU"f,Oa)L*bgD
%b0uQ^=X<mn>VPk'?3Z`1%sejj:%>-`ZmWFcb[!T]%4u7:S%;R=6V_&a2Yt#!WU=lEpbZ4Bs67S6325;<EKig)='Hc/9T-*j-nHO0
%Ec8^e3B4cU&h#=QULE8@KVl<h)mMq<LtqDL[K"432)KS/Hb`0&BQ7:*=[NWY>N'Ic2/$Y(mGFu[RS'mVqT)@!K-,F0oeC4RL#(XU
%/WPeR>\JP5Q#)u<Cg:"o%90c(_*'dPl5%jc@T2A^Rk;8c!o1382;L=(TrCid!b]4Y\D_MYg6]MIh&+sbK/>O2mV%+`JprtiEP1*c
%/9"#$dcX=kX^&jFWC1@=Xl`;H4gu1W<Hi1_WOgQtbrCW;/hfAhh3W"Gj0TiEd<6:s6Sgp4V3gm:6[M[G]%AXu]cZ(ckZ["BRd4pi
%@&1@(6YeRqXCa8+)<kqF_eu/l5_+Ho*M=P`6_B<A&\)$tahfY]<osjYM.XcUnBe!!A_nNd1ZaDWmF>']<btg4Qi0uk3hLgQ+'iec
%:?St0jTC*@90/\n/fu.Z3n!ijF892e=A(]II4cU]VQ:r3cT[]AK2WT<ONqKlb3&8?N2_`YV=WC'np/;*,HIa6.J%;C:^:CZP0R^4
%bNC%jI]KC<g#qqjS12XZo4bLZ%+4&qj]3/tD4QWm5B4,jFclFLa[kf4c,*(TW)"_]a^F#UaF!5X`Mn:T%#qf?PGFjq&3HW/`^*k\
%CB.#&l=r\!8M?('Z$,XrM.8Uf@uH;7\9:GX=/3`2A^ZfZhinR6Y2r/e(-nh\he35Y35R'?`)V5X/DUi8>E/`;DYrM]kd!M),0>1t
%0i0Le[dqqP9[R;(5I*r43fV<s+3e)=M2.T'j]deX)%E`cl7"NB_)^ST/K%oi$+PYq]C;h\mu!O&GmO^1UtmU@?fEf^`GJ*l2AUkU
%h$QE++ihL6TjlH=)cN.!"jC3"#'bi\RRO.>A@fC<crEa!GTk7t=ONc*id%`iU9H0GQnbrtTbm;$+FMjYN#NaR$IWa<NCfo6s!oVQ
%lPL"GHD,?7>AkLM3<h(!d:AYWYE$0>.C9Fq<rE*fo?eQKDh*EA\iuO"'D6.pO@md7\QGG5DUU6/?CaB+$!LN9Vf</h+-oaPHT`15
%6]WCg;"+'^JKiTr)V"FlQ.G;#FAPoS>'&;a6SSOl897>U=_*oB2Tf3bk&=LV,LU]5in;///riOPhS2#iKS&kg-Ci+KqjnhPh6O^_
%",B'geBehF3#m5W+11H]C_WUf#<jfts4HqR_aXs55h4]FKB=Xeh,7(RmV\p\oO/%ak(@!>;DM:CZh>AOl!S7u_lbkSbh3)]m@9u&
%2**j7HCSb4Di&9n\rj1%nuVI$(m5QQL[;\==q/qkg[nRb.8s;`MHU[8@mOJK!f;4-_aA4g>,Gk22V4k)4jUQB"I-FK,fRe@/ER>G
%cM.eE/c4U+P5X1/W]Y@g$Z^90l-o8E>nV<`Fc,o_+b<)';q!*q>g9?/2VhQ\HXe'/DjmB_)HBu09k#XI("[bMN]kB\7[EZ&,e!7_
%etG@3_r/7i=7P-\^$:E+G1P]e6%e282Hi!ul2,]Kmu>9r464:>KN(!ZDiRg5<0=V"5+F_'%FG@GEWoP;h>h"_mXiOIoAD'LCpJ[q
%Jp*IcT5W!HWNh4;gC>r!ZE!?R`^X_"jsh&g$_*@QG^r>VT8EG8k>c`j!CDDH/2T=EaF[.\=sPfKW[BuQ%@#J6,ua_H#9IC<]lf4)
%+\$ZQ%YjmFABV+oU'S8KOhbGhldR+,ZN;'r,bTem##+`$Y?#!*W-tF6c<F$h>A**'HN^Lhp(kuuo2qWW[a*+0eUq:9A`gN0L0[/Y
%*`8R=aa*3tbk!BS]!u!WT%V*jDJd(TH.\s.9[6jdAfg!C?!?oBOdW*VK6)pq><4Q9Fa*.=3g\%6Ze.N$=DK5#J]u=!X_DncO%J2s
%qp<M*\"T-fla/a!"'TaXHKcsaDT=8?s+<E@]+)8lCrlVN%<n;\UnNLg>qt`,<l<P.5V:?ENHK(Hr?RV>acDPHBC.s*c=<NkW43p7
%-St<<qJA6Ae1i0S[;m!1iKTX>VsA]NM.:H!nTOG!B^764BPg1e`!BG4EHtP)QM$%[5;$p)0lCYrIakcW8RPPI`8.]+\5cttfT</X
%FUP<Y.r90?ef2,ZX_GK%IeC?`O"P@Ql#6i]X6?hBe'E?'AGH[i,@;3YP3"W-=dLb)AGM5Gb,,V7\7hH+j4ZSN'?/Oc,^["d,h]eP
%-->#G.nTH[rB]%1*j?8@jk=U!eO;<ZNZUt*\qZ0J)guDgZM`pNPc&DI]?1pn2CZu-"1@iu4=?r,.4NSsYB(^UH)A%5qNLKoFFcZ<
%PXiW:gng&bQ^!8McL[ZF(J:I]OQ8i+^Xk'cV:]O\heS"HC(HVVRbO2]B[&R*:sj)!64Zq/0$\!LX4`_HX11!/\TEe6`#,?9mc7ft
%L9t(cokT8,,c%SI0$1tBXjH@[E0["D<Qju!mTfe]77S/t^<#\7`>:*O?@:/\>Qq970>XPEgqJ4H01Tt5qlqeP^'$5!hXBA0p+9iV
%GBBCA5A=$CUaa('?:Us=P"KTtq4&cK<g/ELZ"',D(Q5Sn9*7&a-[]0$5fHf^_e%ni<bZagG%l08m#q>(c`XY06s@BF)0sO8C>UWg
%XE_]LeRjJ[i1@e];3d7><&D+U>8aJ*mB1:4'k)@E2VF.lk.!2TW9MR/bAZ@Y.dbM1fl*=d*%k<N]\QaXKhHVSXV)R_p;qd6VV`#d
%1qbp==[Md%4\)\5o.&nd*Wc3`:I_S\d/Q!SW\=*%ruO1d95jgB<:8'i!LFQj;kGi<abqSn5!9X&.Ot,T"MP<QCiqA`D&0a>n'rns
%-<j0)A]"g.b9ukfr)F+PQ"J(SeK&<u\!G_?M7%9EH3JTYPVpA7HH(cDQ*8dqo0pcBZi'KBm\UM!"AVhK/lB"qZF%]s@gA@6=jP$'
%(UCJ4ST!)#5JjAZRJ3jSkSU6=dd9W\FN\e8X')&3pOi(6HL=Y,^I:VmF]sON/s=k"iuhZ@@\8;!AmL7AAm'OOUog0>B/Va#0<h=l
%5#"i6X?Pfqc\3&0b_G1u9#OuPSp3<u(;[QqqoijiO*VDl\e=nqLL%*Jf]TV4Y:6a&/?@+Fh7\2FT353e8%tI+NJW'1[]CWeBFTfH
%AmTd0.q3p`I:e''N9FMJ@\9'Y-,O8rM1&ua!YSUV@\8>U[I1ssZT0jd&?h>NB9q)GEt,5rZ-TMN`AWW[-2*`aAZBmUQIoi9e[I`<
%fpn,5"O`eRqs9HR[_tA9>o;BaY`?XcZNcYEbOm1TR:Z'U(4pZSp*k]`X?M\f^?;eYI:`qU$_*CoqolABk^'T!9\UidR:Z&Z8qGM*
%qolAB4:]Eo/:.hu0!!=P,$6n2c_O?kX9a$VUpUegk@llP[1O?=)j,B<QH\S4q:s+6U2jB!oJs3?3sF3e^Tgu*RVqZ%o@^56(-g9,
%0U(m(e1L]H:o/'X\r^V9FR\O>0.uN'4#b>ii9/`?79)k6>)9HNqIJ(_%'$mC<2CAqPI7WGDDdVR$d2?55q)UdCbKLF!D)TuMJ[Co
%atm<%[oB<Vig9ZW@H2J0ha12$AqNHY>jXDPGkmuuZZ4.P>P73$4?&;ps/g\ET2p%pjZ>)Cq&dMG2Y[6^abA*IL$nLr97h=%>NP_P
%5L0sTgR[OK$qm/=Kp:.Gh7f+5]ZKqSAZr\laA6&o)g`R2M9t14X2[`&GiW\8eT:S'o:"1"6K`.]<erT0X!a_7V,kTqARqRVqBf>q
%B-AN`/t15Ld2^`9cYDaXq@+lJSQ?&R0O+@sj#X@ZB0`dkY'#J&U"7d3C=W/eAbf:&!XRs!Ojre30nZ>P`u=])bD&?AGK42a_;asD
%:[8j!6uBmqE6PkdW7t]<a1sECboui-520-TD>+eS)V;k'lZF7eLg"#Ll3A=c$9%JuEcs1D`+FKhE4@C=ls<rO/.1EOduY92\)/Gf
%)!mPcgUH4NjHm,AZ`KT^3rQ?",E!K,d$h">bFGAYmUYLW'/;?OL,M#*_1paC:fuJD\=o1K0u0nRrO<2kGAbLuShUinX)8S2B2O<h
%]:>^c^<C2oh]uA-Y+[B!j3Y4*hK\_NEqs;C%<o/"'USa-aM!'EVn9[pF75_+-Xte7rT??Vdn\lr/9HI$dO@nLM/.S5hbrJi=PW&^
%RWCh(hYUq1Ci5dSe8fu9O,%%pB#reiYPq`dgD<GH9E"DJ9.$Z!.R+u`B;r`gHcmp(Ra>BO[FMU3T71nP;bMB@@K/:O2VZjON%Wo4
%)R=db'bJ@N,/&(cc9YE_TUd!)./VlF"/^C;n1B7XaM+R/<3MJ-N!pQqo31o$NU'Gk$k=f:guMA<fZXS*hj)20[l0Xg.u-Z1OLD;J
%geh!2l[D]<V\X"2[Fq-b6>p.6Z<$OX>[+m,/sULM9Z_mt+-t![/`*t3qRg$\\;0<g;ss3o]@2Hd_fT(XgZuBYPNljqUgNh=PP`!s
%I2n'>'@Kn;D=N);@Vp=efsK@P)(*$OAds$pE(Q\p)Q6<LG0[_e:)CYRdl[h,<TkTl[lH;H.-lPJ.ch&/m.*,?&5iq?I$*%[[4cW-
%8Ah?kS7d(uK.OP-rDuHpMtY1uC^6pm8t3X3Yg1J9[c/9b;OX!Y,XAN0gDWl?`D:P4?(efPq.4^ETC"L`02\9)9pZJp9V5NS9lFp/
%'"b>Jq1(,1:d+U#3IE]T04d%H3Cg5![2#Y:I)+"!o_cf\7uh-BZ.h[87)Y!.p4c"QNa-gQG[m!LR/.43h1[1:W0d_KiE@TQ+s_YW
%Q;G-WF58>?0tk-r'u0,k3j_'_Z"!mD`oSeG9%/j]9c[3=HIA%nVp4jn'p9eb@r:SrjqW+tMW*Sk$417hk'd-$Ek1d9d7q02o6m6K
%O2.Kg1k5I5>qIaFK/uUb(tFTKFGm,5?R^At&PeZ>/"k_+$a#t<h0+t,iT_,LAq0'u`'/(WbaDq2JonBPV.Wj!!iT=`Z1[O*^+9^-
%AN.d)/lui/+ct6u$#F#a,#ksTa10esT7:@!l#D`M^FYHf(L@YQR\hpu6"hjU*b*L8J@Pq_Zl*;rD4b?kh6't*_;T;/6q!r4IsF=Z
%=i>iQ9s=.-o*[HuU8o:Pks^q3h_\j&>1%d\,-C.@X^H`e;b#80`R74VKoK:m\K0L.HuOgWU<;a+>sm>:c4.4H57J7egfW0'B6RG.
%iK8kB6u"oQ0%00-j"bP4-"ng0#$TK1JM$"[;k/qA.^*mR*Ld&=N[l/9fQ9%>/IrItaHE]0qN*kOUQ/XHTgS7?F]=sC_gm]ce7VUc
%4o=,rO&'o5aEh%B(m31K3Spgs2PD]a[0uJ21ndY0iAA5&`dM0fe+"!-A9ohLWJXEBAr"F<%8#.6m&6q"qkOi(VFcUcRT]!EQajFq
%DQ-*V6JW_D>l*c8%ZTu[/%+MY%J1uoI[Y=n:)=5iGDp\$f*n_(9#Gb59sd0$%Qg<k,0f@ETuE*?=pb[*(:1F&BZrslT%g)?&m<ek
%b=AAe4A2Os]$5?7;IK<b7(ntrb"#^V&&#nMK*JH!Z'7Z*:71)e)WCo991a4e9020Xd?I&Z\mV+ja95WsPEP,f+&TW]/=_l:1F14?
%XU@eU/g\n7?,>?jj3fncrnM(=#(lh1QPI)OgTBG?6IfrI7kZCbcqE['lt(n%)j5!MXO,br>l/)dg42h_jD!tEP@X1HXq(=rQPHe=
%HF:p'Fa_^'eN+!gpW+Lfg$HSn[@M&DJ)T>f$"[m5e]Qs]6Y!pnOr#/l)qqp^Kni\8J8T;sEI$N:rK'/8VcpXGnB`McMEd\Zeo7W(
%^@9M+]uDP2.p[C5*uKhNl#g6UBWoZ2_+C\6GUOr(=ZCsqbjF%5?$L$)/*5/(PVM7(k_4ehK2^:i'muS+$P2X(e73Rqa[-dbg>@(`
%H8)FJiLrC>Hed\/]".=W?6/_n)3QLUGfV)aGhXAbkVZUiW$L&a-DPi%:QI<HnBg#(@BQL[ET*ViD22m4]=r<j(#qu%/h]>/Gu(,N
%@^,aq"YJ:j^%6^;$P2W/d:]O3IGplFT;\;r000oZnBh0C6Q2f4Cj(bXiM!sSTXoYP[[Q61L\A1tlK;dD$P+gU]]IlXojF*"n5.1&
%\ptRB$L)O<lnQ[k<kn.NI]lFO#Ze_00Pl*jTl01Cq$R]L^8Gr3PRGl`gYm1P,bjhG6i0oc;G"eq00HV*DRZ9]XuGIZr3et/Xf[:!
%D,65d/<V'`I*@@9T<tulKnlNG1EHh3$pV$6*\OXr06H0HI4I9:BcS!2g1R1\_Igap%p^52@D))KYq$0(IF=[$]4bZ4jb8Hu#FX@j
%BX=sQS*4:jn8LCU[d]!+2Q=Oj7RA3q@$;VtPT"@^gEBRi<ke(MI4jq[(ER<p0fZoV,d?WhL\@j;`c<VOiLr[jo#<Z42u7?=f;\Uc
%iLt\"^(SVol@k#eB!:':^\!58p9u%\QF19W4>asQHJ9U4I'M+RLT\q2>Q)E+(V\1;>^0p?RjJAS/s1CT\aXS"&4LdZ*nkCgg?mE*
%/j-Mm)!.=*eLs$qZ"^l<:h+aOEoE_jNXmp)X'Ks`++<KQ;gqf[n5,$"]g'tT2eqjj&+.'*f"4ce??g/@-PDrVL'nN[[DI1(1'[>4
%rQs_tX.:T\K[\&E6-^;sEW;uKK2%&Z6bL/lM6a/QJ<a6'fA$!q]3.h73@/4(LhR_;5mB7QWRb0?WQn\$/A-9elJ%_.mYZ3Po\7na
%<RkHqOsKE&`IjZCG/1RMas;E74BM30``Es?+b+VQhAta:iIcRC."$+,l/sO/P6=t3<K=S(nYF%P,4eI1R41=?c,YS\G8cpi\>rnb
%MS"0t/93\a\pXR"lQ:Oq[nZjW]:Bp[EHd2o1A?1qFi$;f@e\Yn,<Fi@6C6H^gYPS"P0TeNBj,aV9@NE+6^m1NO42?FnNE1OB'437
%l,U;VOS8QHDi3:9-ID:@YU@,0qf$tf23QtL*?k6)k't"cB/cuSHdV>*[H0W_fFu_B,qmYQ(S<2)9QTA5R[.n-'(DVZC%*,"4s-;$
%@Um2AQDgKX\0&Q'0]rfSP8BYq1?#ghA?[*2gPb2gnV,AA#/%jeSH^^j`eqR1_[Z).P,LEcGed=_n#BW0F52qUft0GnD,o"aYJ^8-
%.))^&K4IMR._jukoP(rG^MW8CGt$gk3U'q$_Q;EYa,n!AboF?nUK&GYN'(0s^1]G$ien)mVD%L#Gk?\3!_9u,EY\p!npc^K3T'TP
%mN-6@U@FcjOs1m*qetG-fbaM<Pdku$-S'BGBD:d!@F-a;peZh)/Iaa\Sr6ZW?]TB"4p_mO[3D,Q0id8DcB""go]>cO)]i8^CEnS7
%-an'Q1QDj]iqP#P&-;UU0+mUeWWu*J1,:a2$G@LH^ZGV05?3ce?^o0IX?^WBml1&FV>'YHj5R$B=83gqVhL>H]4]'9Z^fh$K1o*i
%^lIA]5Kl7RCmF_YK2NCJ5[a(;AGP(%dV"QL=p_;s*sMN!S6$cE?qJ5SC\o:J2\pM;'N#s6*HhU4XV$3(bn-&l:LVc"Ae5:"?ZYkt
%Op<(5OKTa4-4iX!6K)rqHX702)\'OY&WX\G&WA$M\!>(YF,2(dQ@/b1(Z"8J<#e[ch`GYi]Nt#IV2H;J/gT!8D$&oT,bboV$c-Kh
%k2AA$65>*-8%Sb52fX(*].=G%+-;1XB_C5OjcbGf8sOtMd<m8-#+(bJ<"srWlCP.a?),pC>d3%Bk.]8]0f<``M7)N%lpp#L^,;iO
%oNSQt>k?psm<p#;jp`tZo9U\IDV?`M9'k/$"qTh59TSb^*?eCUHr5KjNpkuGbCDdM`k0Q9jPq76lR/Yn]JtqnB^QN.$[bR02Cc>r
%+>=nu-=;+"R%T3oXo?*bT6R4pDo0\JG3:$B5(M%nQ+sb<QMLBBU8*!)':H]@\$DMX]\9MVEl"*;?1)lo[4[a18]d(D(KkUe<&Rbe
%;U7'4E+12>%]FeF0C:jRomPtf:BFbgoHO[W,u(sl;16&nQce9'YZe0!hI^m;Pg+ML1]U"LW=kP#0SJ,>06$\,#P!'+Mk&X2K'7#Z
%dFjFap`_pe;im9*+=dtYJ2NUaqP+eb42=Ji3`W(&U'\ic`=QH0s8H#SCp._Gi4ded*17<Dh^K&EOZ:"SFK2O\`tOQ'^ut@j&^Eog
%7,ViO(68;^>UW)a_akj:8*K#ckX8;KrDnf<NKs*^Ab(GY?(S(9brrp7Y_!L2+o?D]Eu.E\A,qX*6..4oaAXOT&)jdFYc5;-+*"4S
%82C[Kj+NLK=s<V"jl=$/LWW\.X>nIQ%?&,`;3d2[2*NGmT*=a9&I#>ggka&sX<!"+Fmp*r`sgB?NmJnaeL6QKrr("^oX,S";V`"J
%6>$FjHp-:b)lJUsAl[D6a_]H<KUhG]_V.\1-8tM`DKq(^o>Jr2agklih'cbe5JI:%S$:XbG.EOBIio#8HT@N;^>D\[;BP(JrLQjl
%KHQW6mX7T25W+5g*[<3!]-+a4E_V@fb:a2`P2L-Rq*'"#%V8Z8E`dp_Jb,!G+(Sc$C5^!M;F$&9d-.B=>o-b`Y9+e9\DnKWA-q-=
%Q@hIhE-EC<4/F.hM==^K<PkJd>kDiAjD!hSGD>];&j(qB9*smY#<SFoXB&pDlrR7:f0?L'.#i>Brde:PGTjSD])Yr1UgZti_HZ6j
%7/"U0R.K8(Se1\,$mg(ELDTJHlLKTi^@0qD\kS<!g@O7!mh"Gn7n==\d??t,0-Rir01<"mP"IA59O^N'5$`hP"V;liP[;Y<PZ/E6
%poGPUO_k#/=(Rd'i<ORN&c>30H@hBm<kbAi?Ze^'\$+jMK;`9^r*lRm["D>R8VQUrVBH2O([$.3B]AP`;fA-0ognP@<f-#5/!VNq
%*B'.N-$hNGnMf9@PZ1WiJ(d0IHr<WPF2:M>dZ507RpFOZ`@3,U?$lru68nQYN0d*2;Lio^N0l0;TW>r`H44/5^?BR>NRm%?)43<.
%?SGH<&5*72Ig<^Oki.FMdP25tiBq&]Z6C8A_h+MN+sW^YF#nmV2TdEdh"4W0\in_b<*s:i^<0[Vr3Q5<WG`Qt5PCP"lZ."RJLS?@
%9J<[$54q)9b?TOD<(?TY_kqmoh*WcTMW_+:kA!#BH7N7hrdr\,giuL7,IKA4EO9plN@B=0+7'3J*ejCPp..N.hGnSfd'+&e^":WY
%maL?73Hk3FQ/;7*?/:mM#7O<6jkfg,Q;Mg]K3W6[LOk2b],Miu"3q]O42NI,d]9E1da>2sro[s"QeDgu:)"s\fs%RBTj*)^.)54E
%2Y2c'\Qe=2oj0B4?!n[GBS-#Wh"#O#1o25T0B=pJ)"%T<1O0_.V]!H>V/4,TMCA612Ths3Db(O8Db_hA_8BpEqY!\<'lt#+fq@=#
%4u5Frb@[U"n]-_+[.0!@;WI/4DS)HW1PCC6?303o2m8n^3$%"YS'u3;GU%]hd4[=uQ/("D]K\r)i.9=8?4`!2^7f5>D0E+.6(,k=
%CM%UBAL\Id(E9t/;9s[iaitS`3sS?g"nM?om%FN+l%;i4pB;ilif!Tgr%Pul\!W7Ycdg_*Scl;4YaL7kK`0'FdHDtWL>ZFIh3&o?
%q/KqZ@C,<NM'[!MFUNbD0js9?Oid!6$Y!j'B4)ALA''&E^EdLKW"BliJV.?GfsBKiPd[[3E?X=u!k$t/^A,":gQ5[p!i)MN*!Z-B
%<#HWI>7B<q%2aZ$+1!E,/IWPZ[cgDSn5nRq<D$IqMo/5c`'Ako+;F9+1NWGUT^O+hIr:h>$MAN;#efR>Mf36tBD?8FP+;uge==:R
%g_I#]8+G9k8YMaH8YtV1neD4)X9`qseVdD&Qi,%p6Z[?G)rBF9Ti-s,;1(G#`7kUB;24bQ9g?.g_Upc/%s=tfL=OPU6nt1PVDn+k
%bG0GR)uuA05iAA7D[lK:T0g1eDL;tleaeeTdN,(QJBl()N9o7<mN1`Y7Vr[)DFhps-`'`2b<L;&a"mXnCE6o3r*6O_$<j@XR!2?7
%b"q,&D>t!gFQ-pVW&h=Qh>1GaV/u_V</q[r]\Bh'J[&9*(Rf&2KHi1OBTmpFJQdG("due7V8?Q6:]i?MU`p9!g>_[HXTj.N+CBFW
%VT.BijXN)?Ro'Q&?O,J6e5Ya=AX,Qc1+e7:I^Zt[>-(L*R+i]?50>EoU/[(k!a8+JB8+E[4"BkTcDp!DE9aqE);fDpH0=c//NRf_
%8+5&nh2:j[4l8E`DmSQMrk),m$roQi<Ncohm6@o5W1j8Cl(u>%K2&D1]iZ(QeY[HnXnZ^K,lcF2>%iDWJ/&Y4Q<p-u=DDFI`W+kB
%A$Xf?$JK405\\H0Og'\&U=nM:*B0#E%?g:G/JITp@RJaGg7;'#`V/_]If7J4m2ga_Y",hhOK2V%>B1OXF:W_Uih)u+:"7OQ/FJ,P
%5dOUHc^#P)Q>+MJQIRC#&](aQPIZfimUt7:a`,&WZ6I:OP9DVTI$T^r6HfOEYn9FOQhCU/*cg0F4G&nD\GXXnf3kN_U[^dF.TbP!
%Ck>IP"J3S[Oj@B9n?qNhm[`Iu^'SZlB;*Qk_)bj]C0]rU4;r]cO2+oQEnDU=`gg>jP$V>0<kR_@kaLq!*06W-^.,$&)>l@:DVYl<
%Kg3gMh-S4E_$bh;]p][$/,lpK=rMn?F),XMl2>=')b^%VdYV?g<dHsTStiLX/Y+&;^oYY%G'FmN.U:m/H84H%ZK%WiG5S?9l@[aP
%/m3D'5tA;Q"j+GSIJk'N(gOI&m/1n_^;QX7kdYR2@B@EBE@t9u&%T_J]D24)V1J(ikZ6G8j1M/BiOt:?Qko-TIG-M"[iEHc`EDF]
%o.7K6Zle'1HiaK:hD^I%6_m.WcJ;T)hV6>iREG%)Afjg^h)<Z,B&?SR>lX0NWQ,r.IrtDSeB;hiIrP,OKOZJ#7qWo>4fgSlG4tIU
%PL]8#cG%KpB%>ST;iaG$B4"^;"X_>`RoP/]djh='>oKMm8*h)^d9=bZ%C6rlr=ESi_se?W:)X[W6e^9q8Cg`;Qb%-Wi^PE#3<9?a
%]U_/8?dS0i.ElrM\$:.%`O+$;MT""&E12o*RE8LXNTP+;=f)MS9h'QcGn>uR'Tb_S]lUT@$XF_8\%/AeqG*Rj4&9032jE:BjR>Ir
%9Rsb&+YLAJL/0Pc\%(uJLH\ue7[XE*'!T[c@LkNN+r@n/n+ki0ojBJBq:iWVO9`L+mg76CZA'Fi1!NDP@"->C6+D:P)1ad!BlEbC
%;ISrNa^!9N18gR<3'dhr9egl*VQ!kokLdeX)pFlZC(+Rd>@ZHZ@,UNoa:K'"+<DaZOZEH)'<-XFO86sD?Q^3Bm@Bk9\GQQu&T^$@
%Lr%!(Pj$9AUqPl8'a__)6iVia+VrTN+o0$s[,;=M#N=]0_8?A5#Ljc[8+;B)p.4E6SIlKrnW7u8nlZ\<,bpNR.OUHDX)c2q#r.G,
%#pQ'0n/rJ#O7%h_BMRf=mSf8+926RQ'I;J78:]*$DB0G4O^o/g:K@U@DamR1JZFp9!JL[3[t0Ur>-J[O+:E3hcn_+W)o-[")`e"p
%EBb"^7J&@f<8!J2YHK\mEG!l1bVsDDo!oTOko(ZSih::U2NXTC*SE5/;/U7H][\(,-7E%nPEghrlh/<2!=`0C5I;^l\rq+R%sAD<
%KW`D]BfRE3/Z+NFda)%E`ht\.l)%Ec#k\)jR]e&X>%=1^#oRH8njlF-TP_'NeHWP[BtL9?V4P[VdZSIE^Y5/VU$1g\R7chcea@1<
%[A@ik(+lIQ6`N1>dnsoXF1N:I[_HD_dZtloB^V2L1b+9X%;A63e=LS\;OUhHJ(WOul@^j>dO`g1s6\tagIA[<K!al*d1q.QSY/N[
%m"_hZT5I1mf*U7Wh>NeF7c3%LbRBtk1tP'qqm3'uP+s*AO)oI]#5]u`Od.tEq)1j!%484,:lZ"^B$WcAPopHq(je4eT9t&4;5-4g
%iqCF`r!M!0_Ig9I=K.l):n8,.0*aKc!6uO?J>EpUWR"@=m"dnq@Rrq(T>qep_p*YE<4LW7*RS]`WsMg;;o<L&Vu0A>#cO::UEO7J
%V-3(<.XK@EL37lb\ei*6Q-omrag4=r\K?nh_&oh-EZ0&s;,D:0h\(^R'C^.eq5iDLR],,+]AL;\iCmOe1bqTcFZ)u>0_C$eG\+g4
%h6/P:E)7WJd8^h/fjda`[Q;OT.e_%8k48J+_mV<<GO27Ir`soc!k"hpnl&*bY9r1o:eu6X]+C>fBQp\aj>ICa(tCdb"J%.Q>We8^
%a%rmf&q"d_GC^8?6SD6_`/Z[e<3EgJLKA>3@Q0]L'R.RKEi*(<N_:(^k=aKBrfF'75lf6gYK)UVNb&0Re7ZUIfK?s5-Mq7/2)E#F
%o`K96ZN2_lq'o)ZBFO#W<9)hBNlXM5M65UVYm,XLe+fTjYJ:GZ.IO^3aWq4+`D]/?m8RPA5!@hN8),PmH['m\@TF9N>-;2f6iGY!
%6aY?;l`.i/);k(VMe#Y>>QjOUX<<kYA\BV'PnG.cS;BT[Sk0bUaWfD02PP'm&7#Q`1<<&fKpEE<`1LY'60f:OYhkbgTQLVbXJZqI
%crpQK84s"21<>FTU;tWj&O=JS*gK#W(3=GI^lC'F_0O(K4dN%F\*]U*'Ns(%V46s4Xq;;VT,O;T:'tqI6BGdK<'A*;2t;RLgfEi&
%'g<8ec5q0!TaZ=.^MaD>IPHU6X?=_k4QJ%+d[GIb'Qr\pPs[+jM'$&&X_J=<4]'sei1s[hmn>D65QL<ds(<a"GSA)P$9jXNBD%L>
%noq#U"Ol7>8>T)Oh<$"u(P.:9k2Z7"Qp614?/?.j=+!k1Y4hf:"J[W^OK+le![$<B5/Q3tdBo^q;#+X)W!#2/Hp-LS6AXu0j`B!N
%HpB\e+p\LsE:@SL"p];si5D3hI*hlC"BZcMT[Q2ZLp<1-ncOfPd=(PBX6d7tFj#C!YWM(uA=5E8cuYI[HUKm\5s:ZtT!4G<92\f\
%.I>G[YkN/;'kX;.Ho+HG%tA0g5aG7kMVo`j+HRGn%mZ9tLupaqP7\'/()-M)OoM;i=%SE`c$=?9"2QnIi*W)?]YF)D%f*19MSj%$
%Z`t6-c<fS;[H`l]]Z,NFrI(<^EUA*Z3R:0&ch3_#^Qe>+,4%TSomQ<ehSnP3DB9]Y).pF'/mo/eO.J0uEf)jjW3]?ZaCjnqF.<"H
%"=A[=T::OY2'=8QS&!h5BWI>j&KO1@d;@)<8j^>XX:.0"L^#?@:kD`qJ3;!Md#L^0UB+Ad%`/Tf5TXsaKLQ9J4TtT7kLKrC35q9?
%9?d)@Z\A?a=u@_5'+39$+hiqb.h"&qpbW!s91lfuQ?gQ^*-jpdJ\31(T8<CX]9`alq%\QM).!Y`kjSC<q1VKgH7[MYD!(Pu&;>f<
%bL(Pa'2kYc5+P0jS6a2W_r8ZT'+C%iHop<HMrp6aj&lRU)1aZB'L%t?DA#-*$DXKZ%5rO@%#Gu5=*,ss8R20(VH._HOLgKCG$ATL
%fs'Q=C`piV)79d_9O^jP-41Qc7srStRaD#E,TZ5qbD5&WlZ0!(oW34flmuo^hU8%'`Fc3]3G_?0dT.a;kWR.0DVan4;0bK^bQrX1
%M3El5(hr`9"0,+3%R2Zj)75PP[GQZm+"BE;^c=goWlQr1U+ps%eg*p!a'^m@eRg-q,<@;BjhdLZlkpf#O$NIt+h54.$=&`]K\n5a
%#A3&<0"$`6MjLnc7e=i'C;E@R*2097WUg-#YLH\95`7MVP9l!IZ3'>!NcBp]=Ab_iZj-+_[$FY"GNB^Qs6>]B6OrTE(oN_J4U\3t
%W,IgsP#.`7VA4O=/PO$LC6,iK+$`#nC)1K8a@INjjoZ)LTguY,N3`3,:_b%A=W1jBP3ngUi@fmQ0ciL+M)3X&f0CV3`$bGt%_Gc3
%?$#t[AQq?dC\m/EC7QN-ep.miPn-A^jH5MJ;>8Vc&nC_"lNDuea48_UKuh%?ptA@l9#8:G75Q=k3Q9bKe23rX#qn]("G:b("(_Go
%/g-d(7dRCg,dZhg5`[^RR[WgN'p6oB<?,U0nTqeRd^VZ)?&Nf&0s0h7+teDQE9$!rI5NpVID_J?I;bt.bfQZ">o;B0h5U/dHGNN0
%"FKmc3I:7AJ)IY9m)Zrq`K"^,RU[0`.<N:K3)-ahr\SF21.'3pkYURT%P?,urd"?,gcCNE6`UE]FUn.W0IB:.h<tZdXd=q5'J(HU
%:!G8#MODPa;k<DE@.:L-]fh.glO-"u!.pF"fS(7`f(,e1Wp!'l!Y`od"eFN#-C-K'9pOC^b5`l9Gqf=Wdnhh8[=Xi6*GZX(K1bO*
%LE(,R%nM<iUiMXT_#-"mg&Ao[9':ubENNA&(g2^N0cIr>"#T2BhT-o2*V;<K$^o")RP0"S`J=*0ir(F?ZDU5rem)EpQCaiJ%WCS\
%@\\[Z^""W[MH$@tc<IufV[2j3SA!H'H]$mpEU[#4lmX,?KfUJ4j!d;&;4qgk.:V+VB&;gO_,HSs++njI-SNa4gdNP>#8U6RFr,Gb
%4'$GEUNO2,Yc;U5(tlEWRc0XZ?)0\kOgV_DH+r%G#CfodkO'O0ju1(3%I$Gg7uG$\Q"_UInNeXsLU6X%p5UB18DEs#f&Ja\W9:2\
%gmRtuf&J_f^$6BIU\-U,'[=Y?GI/F3&N)[%I7NUC*7</9qMs.e3)X7ZnFim0GN?V\"K1!D1l`fu0r*Z#=l1!`V>#e%c?3ut=aH.m
%^?:)PBF`lDEN8UO@:?KdGfn0Pf'LP0KDGj:(ggCVOSIP1Y@Jg*iYc9%IiMl'h.jm`\rrBO,?aB8=h0^`QLlED"RXp.[%nec6Ol"q
%m7LR1O$l*,mTiCWqN8kURX8,aP("YhH10=LPb0Sm8&@</TIae_8^E4G:WeR*_75YooHP53]c:9K9DXd8SO/[GUa>t1=@*s38In9l
%;LDPe,d>;NlForL8At=nQ@:)'dk9QHj]T_oVIblbe3jiXJ!E`=RVP,#fnsb;8oil\&g#?i\Nd@.L+gaGs7b+Dm,"08aij%Q*V(T*
%jnI=k(Pt/EKPiB!&=>>$[4OfZ;4n]uC;V>HMhiQl'PaG+a9e,.jd^J-0\Xq;N0Q^\qN=0*k%e?L$VlPn5t9H)6"4L$&cC"'mGh^6
%i&e6IrdKFfPrqb,PWQMR\lP<t=Jl$G)bi6;%Q;*UY_jCS_M:j'O(3RiXKQ[O2mup42Gi*7DJZdGD!Fo(dZ*YFLJ?>=9/j9pa[S4t
%ZO],m4]"e^Yp!h<]c!Jo(<PkLgjcZR7m=J`,.`X.g<);6m(m#LIB@DJ0C$C)\?EdpHhXp<c!IgO@-?R&g3j.#7`n+.HIR2Bg$9oF
%a@\D$j7X)!BaFo8@_9BTip.I7,s17Vf!(@Z]K4P2N655rL#@/$CTK$*@if[Df';sr]eRP%Tntq`?7!2:1:15sKstf=[ACX,OMJH%
%X"F;#N68D[k\<b?2.k1B79<^iX)SuH'&8;%\Fbs`+fO_iX=e&"TtU#f/BaJk/sIG<Jp8S?b_>V?G<D0F`U&k^Ytq:qOB<!o^dNG+
%[=KT`M>kC_ns=X!21tIpX/f*HTJ"f3eBTTVgpiI:j'hA8Z3kL9?EWXfpAARVi5UJP0@2bH1Vad3^-(re9oBru$X$iBB![-k[ZH+[
%05L9tNO>h7dXahH@p6@(O-H<R6QO&034.`n)XOjs.nUrq3IphL3.t6[,g3PZit,+R%mg=c'=p(]K[_NT6Koh[4k2p0HSg^=bX%H(
%]4YiR07T>`?7&k+,^Lk?C[o0\`L@`P;0\[L*scdKs,dl`?!QCQ-,`W>Je5R'#qLcEBiU1Ih*BcMh'D."%eJmZ*-5PG/JCn?+W6Fn
%R:7f80Fp2C@jP'tKcL@p6`ZYbG'973@5Xcp),nb_30P<p4VSo?S*4::ZaRFjc=OG>l6-'.g\:!i4W*O8D#7OmWWXe5Cu>+S_`2a0
%ftLP,GoU^iX)l=`r"6?XHt>=m,8;UN&_FtQ\cnkN#KA0e([YcHKol=j'>JEEU(]!/*XI1j*+(qa4%85eWOPc\=KhRI*C<:?icfj_
%aY8(R_AYB#bnM@ci1rTrO]Da6I@KqB$5!?GmS/$aKo#Rdf=5Ou*l"F!7#\P9<[VWX$sk+"6&<V\'dV7S-TZqe8)F9F?u&ac13F/3
%/(iQ,$ZG9;lYE$b@BL1;64fIu`d7hXSLDJO[Q91oo+P&nkdZ%j`('mZ?)'`n"/1d8Z;)R;X61BgXN_G'c(6cCM=SupEk3GXO05Ln
%Xc;Z;6a_=_cDBqVIjcO+TVPboDR.AMIEV&H\J7m]p*-k.B<iuSLK.&,(i[JM(Bd][=*s_YaRZUf_$JSbfiZ;ASgGL*;oI:t^Fc#q
%X(k714`/HCYm-t"V_!B\1(mhD2udY)![$u!@Oo40l$PDAJb8U]-$Fq\Uh&B_+Dqd7GD*H]rZ2]4/M&4r=>sh)B=/N\,GB4R7R@Hd
%>mVDEI&-S/JDL.0pn2e:d7-GdJnr!"B(!J%`AJP?RBFImh_Rdn*$1eojo4,Y^EO;r=H!*f>rFU+AEdV:q5@11e'=_YRBg;-LqRLm
%U5%6\/7NPOaW;jClYa+92B'tS+.R0eR2pr'`3:R$dVsaq[Ku@Cg4(4X;@#HUCJ6!a4!Kn2e#*0hW"g<a@e3H[2o8`7OIsZQgdFJD
%:D-ea&s>SP%?a9#?5E4,_6cjOcPlqT6CUN-MZVCYU"CDao5;*;]RR^enr4jAqX+_N3!l_I7n"\MMJ4CC1;Z6sYkQ`+SQ(`1I)cnb
%!#KlK."<&>Ec;Xp?m:T1n2bALLWtGoP=MRZ;Nu"/KteNr(nfVX2qHf%)[&1EqEc:P`KKct7mF*,gLMXl4SVIB[<e=djH2rZ-,lKK
%?3=WBAoEm$4S"U"GMRM5a<`:YaWkW(l%?;e#t2)DOt)VqQ:H8Uo+)jZ6t85X:@0uubXP#*9h5QK9baNn@=&2Z<E(30O;>_Z`$1nn
%pG,r`;j0`(5RJ*L+[W/_KUj_N)_4b\RpFu)O_^Da=Xc<?r.se^*Ti>BQM\a>9PJ99nk[9kAlbHd6ueW&!#Lat3fCd/(dL8_I+dR<
%fSs&l(r/Qc!.\30(r/QcJ?!`E*t5qQ!k^IUqo_Jr6M6]u(kD&q:90b#\Dn?s2tK,!8:b@N:']rPgdtm8!hQ,Gii6T.QMS,:rIZ-/
%O&<t>GQLZ^`%S/h`F%.QL-stN;ZiCRr=L1OY\'aVnb'fC[-"U#k6iiZOa12G`!>*7#k7EP-OPL<)L#*Ue\EFQ7!QH#D!h\IraA8.
%7&]>(>ogt;EUPQE_aNJOmMb"N+B%3P475:u9^8)6_<p5F!j(?hQ]okh22>X.0^N'"3]ad]^8e?1,2)3N7h>m6`r(9Yr<Q'[[H7-e
%l:7igpnK/T-3;^Jda</.PE"CUn>"O?FL%^"A.k:>#nE.;loW,MM9,[mS1*_MKKkg97]a#*T)Y`E")*3>AT!f6O]mAcc)*Ek?5meY
%@/3*ah4=F^E0<[ndR^;\)^S>9H)pPmO2lYg-%Jso];@;T^q;:+#^44cTLBk,ca,l+=+02j+>'ZPI?Hf<]Y[T5Z&jSFZNjHIi@?SW
%4aA&4(IrMd&:k+jomT;h\Ma%D,IMV<7Pkn?1a]dA5JlHt?ZEXrVCMLDVYS_=P^InNMHBt4go/0BhVK1`h!Zmd+-_7NfWI]Rd@9\L
%`',SdGEiCFp;%3q=!#::AeZ?_fRHtoEQj(!<o]B-3$V0p^=M*'.)1J(_FR]X_WEDL3G!lI:%FD%Fr$Ft,B_"gA[n=L-=B<[#`$,S
%(N1=J'F!b:qi&m?<K*CY:!Y>>_+cn.m6iag<2jpFcV<^f%Lkj7C"u$^Dg5MY:@W*_-4kTR,sXe+7:R#"Io?f_)-->i9buYSZlJQ$
%mGJuf(sQA5q+Hi>!Q/dUo+Kj+D'#@QN_3pNl5DMf*4'F)a\<(&2aVKY\k2SKAPrr!!,_qeVahd]B'@^%E0+i@B]clH*"joSkpLHi
%nk=O=i[1F6$M&uf^@($%orglGIX9t<mW;INL`Z1%b_$^=i`1h/GrtuXQ:LQ>SS!PXp_%s-IAX(.nfk1ga>bqX=ch/M^$B-N%t(,P
%m`EC'Hf:&HG8*<73^!Aj<t0hSbj;ZC8OI]"ZeK4CGd*[JNGb7ehbLY%C^te][rX0sA\T8$;@!kL!=Q.Djf5A<>Qb?_Wk]k^<-rn]
%.=QV.^?l(W"M_loR"RuF,rkAmT<PDU\&U4+<ZV"-AU.747E@gj4PrM`m/7@UdI+pXOaJ!]STm.<SPWYRXGCZ)>j.9.GFfA5N.e:j
%9Me%/ZV5'<qdJ4CP6_ac8<Uf&:67$Kgt#,:?\L[I->sAWb%]H49o_kh:I(a=iE6Ier(3YDs#:5a'N.C;,`;bmA7>P6h`;\cUuTrC
%U^/O"8A3ap6"C=0O&k4CShmfpV"5sEh5Tmn+tG(*c)/2-<&Wcr?d=G$F=n"d"sYd)8<=`20/RqQB%.o(,uM;js-].m^%o,sRX+M]
%Gi>[PBOk%QYrD*/??qn)9dPOMgf9bo'3<kg6p!!8kA"Asc--&\q42:CkYJes-L1JI.5%]sE"VN0Dd29ue9c2W@IS"3MF$FG@OJNc
%(8^$'&jC0hiFHYn7=Zr\aq(f%Z#*=9Vt/U(_sli!na0#[b+'Fl7aTan1b?Zn0hNkU4mO\7iecL]"V/<-E+/2m>hFs)ZW5;ZI&P^+
%?he)?(C`,RLJR\Gi%oWS!5lI)97JHgkm5;?Xlh])GPq5?U!4Breq"Z!>Mi4EpA"C:.9hjfZMX_*b+A`'!$R%I,b&@Q+M@:b&U@SZ
%^3gI]*]?;n9$Om2@q'it#K_M=7`YoFjQV;ELuC!VgGq5;?4/c;jd?jk#M#2FM*9N'0q%lgKjW#5PpaY)XrW3roE!AWkd@G%pq@jj
%hB5ZlCXUb+G0U]uJ?7e=)Z`SoG&]k0JldD(A@*7PB$YE;Ot!?[N"Q#=lmoOt3Ol2K7k];cH;E6`/2JJ_!sl`F=AW>cg5Q@u+93jR
%]C]W(fdioo45;GB>2cFMNF0[W(G'k/CZ-TVZmDt]Kf(4kl?NM*3P'*bi]tD6cmLM]j<^LZf+IpPT&8s+MJ*13D>//dK6Smfc!8h\
%+"3%R'JWp.T.0saJPc\\2,MUnq"dP0-0-5GN2DN_OD<TS*V4&g0i5U*Moh);HRr%>*okm<5WpcRa<rZTa=!kJZ]>7gNHui%m\Cr=
%lbi;jp@S2pn*iN?M8>PO5O@M7kGB`:>ioga97PFFJK_a[\+k+r29QN,mmd?kR;b[T>l*r(YhL8F.sJt]j$N4oXbhMM4Wla;hNp1u
%o1J8XnMUY/.3Gk!ePGfN3b^l0Z<Cb+X7*g?ABth1b*OP;P%1`Dg*(RR"_(DF)3P)<U9ZM($n?)0W<O+4ndgPX<9,4&EQ_d)kolri
%*2.P*@X.IZ:jF2SP?QDhb^geu!N-psZ(ntY\1FF6l)cUA6A+Y_OZSOJ.^gs@eaK.C<tpf7CNrQG>krV_bb66DWil4cAk?#op-WqT
%B4:(+_9N)@*Q,l4Z-4Qj\85]tMNK;[\(W.W37bj4E$B+U1KRcF&(B!QRWW./HtV`EN0T:&b"KnFR`T7X?Sgr?([gY^Z7!k>#6)k+
%$Rg3O9j<?1P+`f.TUfDg3=`<o$+WqiHA\-B,@A89"ENm_k#Tb!VJj)V7B`3<n*LtG.)ngtjJ^MlI>qlkY)(a-J"+'uk,OFeqje#k
%LDSc#N;uOoWOq*n)e0Z<?lRR>_#q''Bc2P6(A2qMn#*2VSBS)3T(\ge\g+F/n#96R<EX[_Hf_`=p\/^h_"C4,ZCe$0nb(Zn./WEa
%AO!o`HMR6jA_ZD2KlPLm%f$a`RX@EdYV-(>aW[(*DeR:K*.PZoanM.1q)-@.L-FO2QDo@JgT:1Cjj>/j>dm<er%!eQ!O_JcNqF:)
%n+:@B_b0^"?,LkZh02=c%q3ZH+_gSkIEaMV4%E8ea&cX8YnAZpOC*@EHJ$SjE*kOe_5C#2*UD0LLH38m=23EQjekguR4#`[7:#'E
%Ofi`'6U$R"2OP?l,fn0F@rT)1[=/l;nf%@CD_IZXB;B,7jhm?cbFbq#b`I<[]m/X4[2F/i)u3h*/;Bs)^8$rqo,i<bicoQflRZDf
%9ui`'-HK]Nl+XfWj_qn?[!mIK-c\V/n)nCK?U$0`C4^1"dMW:Z[!K6p;Mg%]+r7La)>>aj3Kh91Yse)[hO$/LB@#7DJ1i#:%H.**
%e)<9h2,cimd)rV7D<ia$,d4:MeO1tNf[Jcuq9NjP9)Du`h#3HWrEn%JRGU'\SPS.G"*aXOg/V>Vf6$KW:Ck/5QV0hpg0o0\H$%FC
%5c(A![r132EOD,QjJoJP\[UGK$$/Ts=hfrSe[_$NHQLq']B;E33dJIl4mh[WmHRB"h!OR\#C5$Cqu5E4^MT!-ina:0=paVOrQRi^
%0.,r[kGK,VG-/ZHpj)&njTCdp8bsPm_""9cR;:'38B!\U5AZjhmm#^>[X!+7k"5Er60rlHo2GfghN)mR`>fW6mTFFfq,<Sp5<e0U
%o)>4dHJ*Sejm1g:hE3>uo@Z=Rf-PN/p=AJFQ>'9Pj03F2,WCg*T\Wn;MoP\Gc'Z/Sa_\GqoQn=1!QGH>R=!DuQg=Y(['+\)?i%CM
%3"bC\i0PD^_:.@s51h?o_E5K!fsuMl)u[odFN/l.006l=(S,PVdYlDS2Y1N/%2>'I8]:%gh!us53n(5lTA*`A*dI8.'iOuo^l:_R
%aK*rn>e)L@/PT!+gu?/9gg`PJq"%I+%r10Mn0jL/pjE9_)q3,1E4ECiP4ST]_uE!C8!SK!l0HTb9/jS1ri^[T"*NF>gM983i%Sa<
%SYLCIs8A1HX8)8Mi9=TY>&F65[+/s5K*,-+2QHp[IX[H'Qf$CW<;Jdc$N-LpCA"bQ"LgSKm:5]A@Y::9c`R4LcJcak*`jV5m!LG)
%>Nm<pj46Him+$Af0`KYfa^X`!c!EWIE9kZRr\VYCc=/!fP?Wbdg->2E`$auKW;WpmY>`+uWD[D$3cB7@lX/b%DLP)W&r.2?4h1I:
%ms_qFg#[5Pp?c)Y^N6*%G.EVTYXk=4Z&@T"p9XGY\[#ZD@U4FH%b,]@P6YqO6]spOm*OcP>k#^p8^?`Vh730U(muH-[u-_PH_\(D
%29G9MNHEXaSouWFA)I1O*A7nX^WWl^gk,G,-1i:)nFVqET%@qA",XqKQ47=BTFaW!b;+lNkpI<%YM\,sUV%uCIt!Z$!6[[0Z>7P7
%/P'XGqtV:7@dln`9j\gM7_OPp&/.R99ak-L:l6bB*":^"]#nZamJ2fdDNI!<K&g^QpZ\h8"nnc3`Fl[RIdsn(;1'OE*kp;,pR;TU
%SpgHEkN1R6m6=srJ[Sn+s/Yqpo^=Icl=O9X>o+/[P2?(]mG,[MgMaM:p%mZS3oYIoFlV<WB.onG^\iLuqq[m&X',/6rHjShs(l[t
%Oho?fpnPgIW)<4=U>qI1I#[qQl1o/_>d_)(rqYN6[<)@CIsd_b\Wd"*?/hVD;sK:.rbYMLG#eHI^%c)7=,Zs6T:T#??e-DJAfJYM
%cn1]`h<Yoh9Qjpg;D7I?Sa/VOflZm:O^u%)El@%V<,tlKZVCH-Z.P[Xk!`D5EpL;rfr[f@>lbJ&KEoAKg(=eeMT;;t$.,Kf@fDTo
%IdHX/!/t2?h<@2@C7+0f$#Dtu;p%VHC7+$c%1H8(RVLFWX'q%W!+7b2p`NZJo6`'>?/9F"hHgOi_]7QK+?ZnR)a1Sbf.:J<J:si&
%S+IeXJYZg;!X>f9#rJaC3ZKJOTl%+&%Rj7:FsIWHPI.`Q5r@U`$AdZ9>Co^Onf8$Y,F8gBjnQ3pEdW2C1o`-e=:aT#j"`3GO2id;
%(b>n#MfHtGk!+)i*.$5:3Ar5/@VK_Z(0`4U-ABU<.3p:MG@,a3pWJKpL#Cqhn*g6T6*o39H#N':^YF;:Er5gY]cG&H,k,_l7epOG
%cS3,8Sa.(.f,$Z!O!uK<qW3C:[PU=;#-A`8:N&l(@80mn/.,<Vbn[-8V>7p(*&MT!-64jYS_gaI_jYc,'O$lIfF3(Pe&$ktmD.Df
%0^Z*dr:Hk/+5!rQ()E`\LTE"$Dd*0L9fm<R;j_a\''Jna%3O0.flCku@T-7^;9Q(6XEU<Nfei[UCpGo=NB2+E-Y=*t'A58A8*h.[
%loJl!$G2&Ag/WX\'un[jR$Jb&9e<`<^loZ1J_(l7$Zn8okQO#+.tB!'mK9XZQ?EWmmMNP>0s1YNbd\1r%f-.7;gFTs)(>L82@oc%
%*^N@\j]*?;kuF=Q$J;#n&qc.]PWV[*0l=$0ObB[6hZsZ;-9bC[6't4e1R;XsQ?34WL6B.=H4.>P[>d0-i#E+QjE.>`X6m2HQsq6G
%;aJtm"X^g$A%<#c>_\[:KFjISQ.Al+7Ql/c;psAeL9)LC"U[71WoT$X/`gf69*@tgd83.jfpfFa\:eS?113_GDMelW)Ga&HC"3<]
%eI9m$eOEo1TTIWr9!5nSr\YNo&sU9\F#qenbm$`?F/(Es1U\Gb<BJp;2ai1gJs>&!`_@*\-tZK/N,-WH<=_]e"_"?f!i=.)Wn1d4
%@7FX:4Q@^[1hd,L,YY><)Ptt)/3R'#JRVYKc+%elM#F5O[6ue9/X*Q7_4!31+B`)Wa(t5Kl?SgJ/FeDT:>St#9WP&5/Q`\m<)K<q
%@)8-,2.qX75n^'"+CbG0l8@fLbQc.IV3Vl*l3W\SIKUF(_rSX#,n<l<5Yb"pdn&d^mbgK:D[6Lt]8&c8q*65I`LM[OEQ(4(\[p<i
%(50E#L:/]XPKY%9D+4qT).pl%g6bM<qijbS:Qer,6[Cb$WVqJm0P5I3)-\K]d:L?2+@Mph]MA^t/Nlo7I#:N=ZTI*(EG31eb63\h
%mg#YcT2:OM%T%LS!G$?YS2$$Z\q[KAlCfU?hDV%T4KoJ>+drF!]`]l(8#^rENtBR9B.RgW!TS.Z)lj,<$3tOi3;$DF#6R<Bq/o7b
%M8g%X<nn[JJe>dn(HMmS(u)&BI!!t.+Z>e$W'^1ZLper6>K]<U#FmO"95Uf*U1H0n#BiQ-c[aTt$7m'11i/a1!/)a/"V@irJ5(sA
%C/tAQYQQKpRfQiq6`u;5l^G%pi$o5h<j:9gc3cs_%kJT&Br<eDdO?SZr:3$_YNA)1S>0a%Cim"V^lgE/E!ge[$W5^r3mq"J&5Cdn
%(T.B[]*FX\@=m#j8?&O>RZQ2CYX9'6IPau2CJI0'ak3l#8(E`r:t-_r4()Ejq+#?3J\bNE^lkrm_n(t^U<[Zqg:g`/;IVRj*`<^)
%kq5AT-0*@&Z.C=uW+u`0\;COb:qQI=9jjk<!!S[I@tf3JN1m1!Fehen@"=.N<YO,QeHD1sirH"(2(h>b</e=3?,_=-R]uJ.@02kQ
%!G@?)Nf5GnHrAJfXe#-!0cl)cXSahRMild)=7Co9>.*`!?n/.V9e-r]*D-ZkA-U4[4j%bu=rO^V@tl[?"bTe6(^cB/@nP#H3Ko5C
%Q?i[,8#7Z6nq*DdE<QS_)JId6MBYabH<A#7oOJUDP#^VBR[T*?AqG;$!6O=W"V4k?%5h.;UmVEo**U=tcn$@i@E@bB-!R<f!j)s2
%U=MCAbO@JJdbl-GJLqmBE<T]7gN=13TVV;+`4Q<?>57OHN$YRV7OP9Fl[%H"G+GG.*#f)9#K&Z*p,0]4YD3j/(qe9R6T.L#i!Y63
%37nL0I<uPQGs/6:)euVMKMga4:dWKGDm0`=dX)Y[ms/oHY_$_Z!1V>p+c$MTKs76V);.cKolP^^2@"4Q=CT:XNW:?XN4j4m(Q\qT
%'9a_-1-%nAK'B^\7Y4%TN3*2eeJ0@q<Y:Q=all!]M7`MjWDV!+aHfE.d,GPd6dL&rL:e!sYjn*gD/8"$iXTsM?)OaMi.c!o#5.*u
%KU`NPEoH(0mgTCGJu3bj-=s:d<)[:W*]E1(jE.>PM\cdpf*4@gV\aQ.\&WOr1VI+7q#B[6\aS.qmB)q+i3!'#kigX_T:L)$hJJS!
%BFq!5)TP8e4)^MWfsRnhGZTFVo9:IOcA0e5C/87#D&HUA6gl?3jpRMSQ68dPac+jB#nd-#_Wu\mmG.)NDVrIi[2l"(A/Zk*8Tej'
%.J(C;GWgUg/i'R(P?*@dq63=;OH]fe"qecS0WsXVQG5n;TSV=%9XR\flNj$[Yc+\p3N4Xl.7haGXdW'Z\1lmD#ElX=!HkN+h@oNR
%T>;ro.pUTOS?+K->Er@eJ3Z=s'`-:Ud3%c;A3HWD,7WpN"J8r)+IS,2]?sm,K]L$;U[VoO3J.TP<3kY)A0&f:ON]_`KgJ7)@/@d8
%cu6MUcs8"js%/b)TL..te+J^lp42k@kAoKp"@s&<(+!tMc5jbMA3uS+-8iqFi,e+\"GIREXip$gY-[hR,YZQ9/ij3q7=3*U;6Ui%
%.VTei"?Bdg$D]b!1J2EGVA(%S6ji1[bu>-@5]`bM/:i(p/KW`IH'AHqQ:C8cgU8eSd_Bk6"0,Y!kGcZ2R-rH`8pY6L'E_=,o^@Gl
%(%@_SP+]16VW!E`Xr]$+d8T$K8u`:YA@NRG.[Sqag(bcdqF6$X:u`tgcs)I'L[n>6Ds"#;6pOPE-nKpp6dKfFm]EB>H.8i!3]s;#
%Hk0<5N&7cVkjt8)J=rb\X:IpL)>+u'F;cUFqP^C/kKm'4$7fN<Qp&t?[]$!UAg<h:GCR-`6Rn?`U;JBgOR!7M?ojZpOEAjo-tG-X
%6@(N8e0"g=.RdbPbaYE-p%ki5<A)`t>a/^qQXq(R(m3$rNZA'*)/uDr'M.pu'a&>AAP09+(l_XN%9TJ2+B.;+SGom/.^,lqcm^EH
%HUGn&f3l>6*cnGM$A*:fS,@Z23B:5ngs'J8^-\]+8hBTNS!qLZ3HgfYbr'K@NV^IH)7QF(q+]DFQ3h7`4&=7sL7fao%;Obj2r_S'
%U/;^c/JKsb!n/5,eH&/2q?2CBlE?'DKN>rU"YO8H9L[Mi>D\Ha'3%Sr_,XMfF'?in-R^*-1?2NO6:=&7nG:&"VX^o2P!fh!=;>"(
%\Cl")aQ>0ImOLn\A2'K@cqu+6ha:rhTjrc)!g'K.$(V"%B\G#@a<Bb]'mr"N19rVQ3,I!B#$?Kl"@f$"E^L=Z2!5!Q5sC]">!=+Y
%AjPDKLJ=n(;G?LB>9kFSGa#&r`/9b+>Z-VD5W!aLO]57IhD.(u8P_B@W!(r3-u^\j67*^$9FXEUF/:99JU,GdLaHTgaSWD^+F6eo
%)BZ(ojje0*O3]>B"G2N"YXU$Ls%j%*N8u00lX-ZD5,XRd:`9E,Yb2DWhV+Bra)KV'Jp7^#fC2.?jeJXd'6meP()?&ecU9"t2.[XC
%=H/K*:75'#`DBpIb\Vm-"73L!3tl&Af*pAp%?>=FlTa[?Yo0o'M;b#$Z;@2%7h]=ak?)\lVBtK\d:krVoi7=+-<N=;\3[L,;ah](
%7^rVs%lDA#[fLT(HR`XC?&>kc^]mXNE>15FN0.;,NME?[1"99-8t05Q<9'Fu]N7Po]@c;P>Gu0iVSROr^/"CY45t;*==>ll<>#1)
%=m28)aa(()6]C;'QC1ISF@9PsHEW3@pg"l+V%s<H("*X#Uf7)7f#X-iK=a6UTqKfu;,I_91DZK$CIpgma0["EqC5-PP??O>#h#tS
%5SI/GC!oEbC6:G:LtEPec'9oIcl0j\o$:Dd:mX+<.p^J'GW*g0Ci<b9.#.RJ95,%jXdAm`M9s/gM1<oK2*f+VBj8p[Bj8jYW<o*C
%Z[V1AE'7;Voi%at0sc<i[gA?YoP"aO;Gk.oc^(kLkR@oG&(8"9p+XIY%iPg;V7O<rC?hb2]n$n<&K7uT7h&kU"L?6fU8<h?lI:/\
%eAC\&8Rk#Taoqo7,'mOrZqZ>O5qrDJTe$oAg<`5Nr6AD`V5,F%)UW7dbbXV9QI7*^g*3W"X#VAl#b1.g`C(FBm]%+@K6/TX`O'=r
%R9(C:"gp7LMQfZ2QAub-N:kQB[:uBQlDlJ49s?GsMQPG(8/(Z0NI\/Q=p^PBi#\[mq#LSY@TjY;N(!p4ng^*T)Ti[0$@n:k\\)[P
%)!\.QV+n2$A'ga"\>]`KgnmmaWC:.c,F59DXSe3_6-OlQ,)ZeMNFX4iP@ME4Um@fl,c;)*W\7Le2UPFoBh#M/#\W@<V`b-U!XrB"
%Fktksg;A_T+&j$AVlI,sdlb]2(;#6cP0=M3)e,n@Ju,g\QM,_]\F"SSk5;Z#cbNqcO]$'6mFfAkK0Es"'\G+>,0]kC"]s0dL#fLb
%9H.H>YHjBN_9r>rLb<@:76&J,,6c)0>lHK4CX>_NG,RDc&B"I,Z;dh\RqJrgOn:>;_/8^Mq^U0rBgW=%<L2&[=?84qdFqPgClK#?
%Q&Ym("*<M@J8%q:_hbRN/1Rk^<=rHQ=O:AXP-q9'6]B!#$HpX?=Gf)A:g62cMCS8&&PM:`anVNkBU,0*Zm-@WL67b8A"g[X5t)6/
%R'JE;M'^^7#c\=gW\7Le2UTsH:i+aAE44.h3*Nf43(1<:H=t]%38le)DYB'D!o3jE#\PECKctgp8N/n0)e,bLZBR8(V4eNoNcVX^
%\M;2XEKti=aPeB>&;2c\P'enN!9gG&1^)i5P_+Kfn4[jmD$9FA*%`?^Eu%aW#\p=QAd.P$\Q%)J*gL]Z<2XUFnoAWA_0b_@>[ltf
%j!`5'#+[HG$@:6a&oP(8+TK5Dku0'CYeoK^Q"0ekIi*kVc_T'n:LY^\ktj2>%>N7Y5tU3Je%D:&!eSfU9$nIJTLk)nNZ]ia7;,\g
%&qWq38`?bD?)).c+@->goS%BL.\uXYVPXW*9?$&dG#f"WX=K:)e_3>"$8Ca*$MieK((s_tV?RU];^o@*Y`:5-%K'*)f2U.YV93O5
%"_K`i,ZDO)NLa#n!WbSV6,<]i-tp+=;[P?E$Sgg@22HdS7c>qMFU78.b9d?J;SYZX3/L2&F`L1"+A5;gJgXM[&1sWtPX5NoXeUF0
%a@7<Xa'-PLlV%a1W$a#$94/cLa`DjE6qpS+gJ1<i%:^&]3GnBqlnUu%:Dj<>"0>G;8C`qkIeBXn9PU,u+UHV^'SRj?DWIrhCh&X?
%RZ?f2;KN0p[UYXI!e&3>-tib0,WA.aO>fI+KHtUS.R=3F<!or5G4@trPpf7!#-R;S%)*@@X&5jZ9SMWXRVWcONQsM0'MtKZN+[18
%D$gPh.$GB#dOnH"#\p=QAd.P<_DCYY--DGR?-,$q.HQnd>W#/0'q<gpj/<7]$Habr&E&NtE#THejS0?<UhB@g)F.+p\!o'E@,34M
%I2B>o&h`k:@Q)h@3qQ+Q#dU!\/EGp^39p)9kISm@!Z`"T_Nc;og8`R&dbbATiq"s+N]Bc2BbWnbX-)]ZPp#9BrI.?gX6TA(+oRs)
%lql7.R;C2S:(#LM<.]'L,KN)S;#6^))-Aki;`W*0kRXF8rb+UoQR:BG-G"A#KOl9oMOiB_Lu<!H;G\M/TZP$Qej(@k7uP`o0I;85
%[ItL\99P/D]=KK-)&RC4P#86lX5M[9Q1ZNFl0mdAN.-o;H>C]o-C@b"FKDLZI67i,dC7Os.Mom<L$/@WLZU8^LJ`3SCM)0k(j;<B
%QNK?HK;,4)]DM^?G[QD**K$@:@'uJW!Ll]C4\Y,)JQ=b%;`WtnoqtZ-&gonY'r*0kBb\DnS'f39N/a'YBLd?&f:Z5@$9/9YUn^g[
%d(?b081J9!_L!)Jipmo^MbtjKc--LO#rd4EbfS!giChnM<7VB5RWbR6:A>a61R3+"f8Inrno*0kpF4r9I;A;<r4_BSNV#9rDmjjr
%r8ZW,bLbt^dQ?p,s6%@1HZ/BIrU'P"DrRP2cFXn]UB3(amsk<7O!I;b1rG"T\%[kdpj[uI!g*~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -75 1939 a Fc(Figure)25 b(4.)f(T)-6 b(emp)r(erature)24
b(as)h(a)f(function)g(of)g(heigh)n(t)g(from)h(the)e(cen)n(ter)h(\(left)
g(side\))h(to)f(the)f(glass)j(\015o)r(or)e(of)h(the)e(c)n(hannel)h
(\(righ)n(t)g(side\))g(with)-75 2031 y(dimensions)i(150)h
Fb(\026)p Fc(m)f(x)f(500)i Fb(\026)p Fc(m)f(x)f(20)h(mm)g(\(heigh)n(t)f
(x)g(base)i(x)e(lengh)n(t\).)769 3923 y @beginspecial
0 @llx 0 @lly 513 @urx 400 @ury 2834 @rwi @setspecial
%%BeginDocument: figs/fig5.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig5.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Guillermo
%%CreationDate: 12/27/2018
%%BoundingBox: 0 0 513 400
%%HiResBoundingBox: 0 0 512.0870 399.2002
%%CropBox: 0 0 512.0870 399.2002
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 100 8
%%BeginData: 7908 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FFA87DFD7EFF7D52FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD09FF7D52A87DFD25A87DFD13A87DFD39A87DFD
%08FFA8FF7DFD74FFA8A8FD09FFA8A8FD73FFA8FD0AFF7DFD74FFA8A8FD09
%FFA8A8FD29FFA8FD49FFA8FD0AFF7DFD2AFF7D7DFD48FFA8A8FD09FFA8FD
%2AFFAFA8A8FD47FFA8FD08FFA8FF7DFD2AFF9CA8A8FD47FFA8A8FD07FF7D
%7DA8A8FD29FFCAFD49FFA8FD08FF7D7D7DA8A8FD29FFC4A87DFD46FFA8A8
%FD07FF7D7DA8A8FD2AFFA2FFA87DFD45FFA8FD0AFF7DFD2DFFA87DFD45FF
%A8A8FD09FFA8A8FD2BFFCAFFFFA8FD44FFA8FD0AFF7DFD2BFFCAC9FFFF52
%7DFD43FFA8A8FD09FFA8FD2CFF85FFFFFFA87DA8FD41FFA8FD0AFF7DFD2B
%FFA9A9FD04FFA8527DFD40FFA8A8FD09FFA8A8FD2BFFCACAFD05FFA852A8
%FD3EFFA8FD0AFF7DFD2DFFCAFD05FFA8FF7D7DA8FD3CFFA8A8FD07FF7D7D
%A8A8FD35FFA87DFD3CFFA8FD08FF7D7DA8A8FD2BFFA977CFFD08FFA85252
%7D52A8FFFFA8FD34FFA8A8FD08FFA8A8A8FD39FFA8FFA87DA8A8A8FD33FF
%A8FD0AFF7DFD2EFFC3CAFD0CFF7D7D52A87D5252A8A8527D7DFD04A8FFFF
%FFA8FD24FFA8A8FD09FFA8FD2EFFCAFD13FFA87D7DA8FD047D52A852FFA8
%7DA8FFA8FFA8A8A8FD06FFA8FD16FFA8FD0AFF7DFD29FFA8FFFFFF7FA9FD
%14FFA8FD05FFA8FF7DFF7D7DA87DA87D52FD057D527D52A87D7D52FD05FF
%A8FFFFFFA8FFFFFFA8FD06FFA8A8FD09FFA8A8FD28FFA8A8FD23FFA8FD05
%FFA8FFA8A87DFFA8A87DFFA8A87DA8A8FD067DA8A8FFA8527DFD05FF7DFD
%0AFF7DFD2EFFCBC3FD31FF7D7D7DFD04A87DA8A8527DA87D5252527D527D
%A8FD09FFA8A8FD28FFCACAFFFFFF7FCBCAFD3BFFA8FD05FFA8FFA8FD08FF
%A8FF7DFD29FF54A9FD04FFCACAFD43FFA8A8FD07FF7D52A8FD06FFA8FD21
%FF7777FD4AFFA8FD08FF527D7DA85252A87DA876A8A24C84A87D52765276
%76A87D767DA776A87C7D7D7D764C4B77524C4B524B774B4B7DFD06FFCACA
%FD41FFA8A8A8FFFF7D7DA8FFFF7D7DA84B4D774C767DA24B4CA16F7652A1
%9B94704C454D7770454C4C70694C707076A276A1A1A8A19B717EAEFD05FF
%A9A9CAFD43FFA8FFFFA8A87DA8FD04FF7DA2A9FF78FFCAFF7EFFCB9B71A9
%A9FFA9FFFFFFA9FFA2A3A9CB7FA2A9FFCBFD11FFA9FFCACAFD41FFA8A8FF
%FF5252A8FD04FFA8AEFD2FFFA9CFFD42FFA8FFFF7D2752FD05FF7DFD2FFF
%A9A9FD43FFA8A8FFFF527DFD05FFA8A8FD31FFC3FD41FFA8FFFFA8527DFD
%05FF7DFD33FFC3FD40FFA8A8FFFF527DA8FD04FFA8A8FD33FFCAFD3FFFA8
%FFFFA85252FD05FF7DFD30FFA97FFFCACAFD3FFFA8A8FFFF52A8FFFFFFA8
%52A8FD74FFA8FFFFA87D7DFFA8FD047DA8FD30FF7FA9FFCACAFD3DFFA8A8
%A8FFA87DA87DFFFFFFA8A8A8FD34FFCACAFD3DFFA8FFFFA8A87DA8FD04FF
%7DFD35FFCAFD3EFFA8A8FFFF7DA8FD05FFA8A8FD31FFA9FFFFFFC3FD3DFF
%A8FFFFFF7D277DFD04FF7DFD32FFA9FFFFFFCAC3FD3CFFA8A8FFA8277DA8
%FD04FFA8A8FD32FFA9FD40FFA8FFFF7D5252FD05FF7DFD33FFA9FFFFFFC3
%CAFD3BFFA8A8FFFF527DA8FD04FFA8FD34FFA9FFFFFFCAFD3BFFA8FFFFFF
%5252FD05FF7DFD33FFA9A9FFFFFFCAC3CAFD39FFA8A8FFFF527DA8FFA8A8
%527DFD39FFCAC3FD39FFA8FFFF7D5227FFA8FD047DA8A8FD32FFA9A9FD05
%FFBCFD38FFA8A8FFFF527DA8FFFFA852A8A8FD33FF7FA9FD05FFCACAFD37
%FFA8FFFFA85227FD05FF7DFD35FF7FFD06FFC3CAFD36FFA8A8FFA87DA8FD
%05FFA8A8FD3BFFCAC3CAFD35FFA8FFFFA85227FD05FF7DFD36FFA9A9FD05
%FFCABCC3FD34FFA8A8FFA8A8FD06FFA8FD36FF7FFD07FFCACABCCAFD32FF
%A8FD0AFF7DFD41FFC3CAFD31FFA8A8FD09FFA8A8FD35FFA9A9FD0AFFBCC3
%C3C3CAFFFFCACAFD29FFA8FD08FFA87D7DFD37FF7FA9FD0AFFCAFFC3CABC
%BCC3CAC3BCCAFFCAFD24FFA8A8FD06FF7DA8527DA8FD37FFA9FD0DFFCAFF
%FFFFC3C3CAFFC3C3C3FD04FFCAFFFFCAFD1BFFA8FD06FFA8A87D5252A8FD
%37FFA9A9FD13FFC3C3CAC3C3CABCFFC3C3FFCAC3FD1AFFA8A8FD08FFA8A8
%FD38FF7FFD18FFCABCCAC3FFC3CAFFC3BCCAFFCACAFD15FFA8FD0AFF7DFD
%39FF7FA9FD19FFCACAFFBCCAFFFFBCCAC3BCC3FFC3CAFD11FFA8A8FD09FF
%A8FD39FFA97FFD21FFC3FFFFCAC3C3C3FFFFCAFD0EFFA8FD0AFF7DFD3AFF
%A97FFD24FFCAFFFFBCC3C3FD04CAFFCAFFCAFD06FFA8A8FD09FFA8A8FD3A
%FF7FA9FD27FFCAFFC3C3BCC3CAC3CACAC3FD05FFA1FD0AFF7DFD69FFCAC3
%CAC3CACAC3C3CAC3BCA1A8FD09FFA8A8FD3BFF7FFD2FFFCACAFFCACAC3CA
%FFA8FD09FFA87DFD3DFF7FA9FD32FFCAFFFFA8A8FD06FF7DA8277DA8FD3C
%FF7F7FFD35FFA8FD06FFA8A87D2752A8FD3DFFA97FFD33FFA8A8A8FD09FF
%A8FD3FFFA97FFD33FFA8FD0AFF7DFD40FF7F55A9FD31FFA8A8FD09FFA8A8
%FD41FFA9FD31FFA8FD0AFF7DFFFFFFFD2AA8FD15FFA97F7F55A9FFFF7FFD
%2AFFA8A8FD09FFA8A8FFFFA8A8FD07FFA8FD05FFA8FD19FFA8FD16FFA9A9
%FF7F7FA9A955A97FFD27FFA8FD0AFF7DFFFFFF7DFD04FFA97FFFFFFFA8A8
%7DA8527DA87D52FD047DA87D7DA8A87D7D52FD047DFD05FFA8A8FD1AFFA9
%7FFFFF7F7F7FA97FFD24FFA8A8FD09FFA8A8FFFFA8A8FFFFFFA9FD04FFFD
%057D527D522752275227272752A827275252F8277D7DFD06FFA8FD20FFA9
%557F55A9A97FFFA9A9FFA9FD1BFFA8FD08FFA87D7DFFFFFF7DFD09FFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD05A8FD05FFA8A8FD23FFA9
%7FA9FD047FFFA9A9FD1AFFA8A8FD06FF7D7D527DA8FFFFA8FD0EFFA8A87D
%FD17FFA8FD25FF7FFFA9FFFFA9A9FF7FFD19FFA8FD06FFA8A87D5252A8FF
%FF7DFD04FFCAC3FFFFFF7D7D277D7D52F827527D27277DFD11FFA8A8FD29
%FFA97FFF7F7F7FA97F7FA9FD13FFA8A8A8FD08FFA8A8A8FFFFA8A8FD08FF
%FD04A8FFA87D7DA8527D7DA8FD12FFA8FD2EFFA97F7FA97F55FFA9FD11FF
%A8FD0AFF7DFFFFFF7DFD27FFA8A8FD32FFA9FF7F7FA9FD10FFA8A8FD09FF
%A8A8FFFFA8A8FFFFFFA8A8FD07FFA87D7D7DFFFFFFA8FFFFFFA8A8FD06FF
%A8FFFFA8A8FFA8FFA8FD34FFA9A97F557F7FFFA9FD0BFFA8FD0AFF7DFFFF
%FF7DFD04FFA87DFFFFFF7D7D277D7D522727527D27277DFF27522752FD04
%27F87D2727F85227277DA8FD36FF7FFD04A97F7FFF7FA9FD07FFA8A8FD09
%FFA8A8FFFFA8FD09FFA8A8FFFFA87DA87DA8527D7DFFFF7D7DA87DA87DA8
%7D7DA8A87D7D277D7DA8A8FD3CFFA955A97F7F7FFD05FFA8FD0AFF7DFFFF
%FF7DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA8A8A87DA87DA8A8A87D
%FD07A87D7D7DA87DA8FD3AFF7FFFFFA9FFFFFD047FA9A97FA8A8FD09FFA8
%A8FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FD44FF7FA9FF7FA97EFD08FFA87D7DFD71FF7F
%FFFFA8A8FD06FF7D52277DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFCFFF7DFD06FFA8A85252527D7DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A8FD057DA87DA87DA87DA87DA87DA87DA87DA8FD057DA87DA87DA87DA87D
%A87DA87DA87DA87D7DA8FD08FFA87D7DFD11FF7D52FD11FFA8A87D7DFD0F
%FFA8A87D52FD10FF7D7D52A8FD10FF7D7D52FD10FFA8527D52FD08FF527D
%FD11FFA827A8FD10FF7D7D527DFD10FF7DA827A8FD0FFF7D527D7DFD0FFF
%A87D5252A8FD0FFFA827527DFD08FF7DA8FD11FFA87DFD12FFA87DA8FD10
%FFA8A87DFD10FF52A852A8FD0FFFA852A87DFD10FFA87D7D7DFD3EFFA8A8
%A8FD7DFFA827FD047DA852FFA87D7DA8A8FD73FF7D7D2752522727A8A852
%277DA8FD73FFA8FF7DA8A8A87DFFA87D7DA8A8FD7EFFA8FD34FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Artifex Ghostscript 8.54</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2018-12-27T13:01:56-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-27T13:01:56-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:MetadataDate>2018-12-27T13:01:56-03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwv8AM2z803Vrpf8A&#xA;hxbw3cV2kjG0mEMdFZTS4rNb1jZQwqfUUd4n2oqm+naz5hv1nmh021W2jubm2iaS8kEjC1uJLcuy&#xA;C2YLy9LlTkeuKov6x5l/5YLP/pMl/wCyXFXfWPMv/LBZ/wDSZL/2S4q76x5l/wCWCz/6TJf+yXFX&#xA;fWPMv/LBZ/8ASZL/ANkuKrIbvzO8SO2nWcbMoZkN5LVSRWh/0Xtiq/6x5l/5YLP/AKTJf+yXFXfW&#xA;PMv/ACwWf/SZL/2S4q76x5l/5YLP/pMl/wCyXFVk135nSJ3XTrORlUsqC8lqxArQf6L3xVf9Y8y/&#xA;8sFn/wBJkv8A2S4q76x5l/5YLP8A6TJf+yXFXfWPMv8AywWf/SZL/wBkuKu+seZf+WCz/wCkyX/s&#xA;lxVZLd+Z0UFdOs3JZVoLyXozAE/7y9ga4qv+seZf+WCz/wCkyX/slxV31jzL/wAsFn/0mS/9kuKu&#xA;+seZf+WCz/6TJf8AslxV31jzL/ywWf8A0mS/9kuKrHu/M6tGBp1mwduLEXkvwjiTU/6L4imKr/rH&#xA;mX/lgs/+kyX/ALJcVd9Y8y/8sFn/ANJkv/ZLirvrHmX/AJYLP/pMl/7JcVd9Y8y/8sFn/wBJkv8A&#xA;2S4qsN35nEqp+jrMqysxf65LQEEAD/eXvX8MVX/WPMv/ACwWf/SZL/2S4q76x5l/5YLP/pMl/wCy&#xA;XFXfWPMv/LBZ/wDSZL/2S4q76x5l/wCWCz/6TJf+yXFVmmanqs2qXlhqFnDbfVoYJ4pYLh5w4neZ&#xA;CGDwwcSvoV79fbFU1xV2KpP5T/45c/8A20NT/wC6hPiqcYq7FXYq7FXYq7FXYq7FXYqhtT1G303T&#xA;ri/uFlaC1jaWRYIpJ5Sqip4RRK7ufZRiqpaXlreW0d1aTJPbyjlHNGwZWHsRiqrirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdiqW2//KS3/wDzB2f/ACdusVTLFWPec/M995etLW5ttPXUFnuE&#xA;gkjNwIJDzIVUt04StNM1fhj+EbEs6gYqreUZ4W0+5iWRWkj1DUuaAgstdQnpUdsVTvFXYq7FXYq7&#xA;FXYq7FXYq7FUFrdtqVzpF3b6Xdix1GWJltbwosgjkI+FuLBlNPcZKMuE3Ql5G6Pvog/IhsxcHEOO&#xA;+HrXOvK7CW6E+j2V+2nWV806XsP1yxs4o0FpBbwiOCQW7wxrGA0jBirOTVjTbIAg7hE4GJIIIPcU&#xA;/wALB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKbOeCXzNqKxyK7R2lmsgUglW9W62NOh&#xA;xVNsVS3WfLPl/W2tW1fT4L5rKQy2hnQOYpCKFkr0NMVUfKf/ABy5/wDtoan/AN1CfFU4xV2KuxV2&#xA;KuxV2KuxV2KuxV2KsauvLekXmmHRdME+jNo0ofTri2jMawTvExEkIkBhmHGdgQwZanxGGWQzkSeb&#xA;dlhKhORvi87POt+o+KYeXvMmn67aPPbLJBNC/o3dlcKEngmCJIYpVBYBlWRa0J64GlNcVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdiqW2/8Aykt//wAwdn/ydusVTLFXYqk/lP8A45c//bQ1P/uo&#xA;T4qnGKuxV2KuxV2KuxV2KuxV2KuxVL7e3NtrFyUiuHjvl+sTXMk3OCOSMJEsUcTOTHyUcjxXidyT&#xA;XJzzGQjGhURzod979T8ejYMceAy4vVf073y591fG0D5i8qx6ncQanYzDTvMFmpSz1QIzkRtXlDMi&#xA;PD60JJ5emzceQVu2Qa0sg87X2jcYfOVt+j4EaO1TXuIW0urkq7OyxRvctbREJ8DTuORPHrtirMcV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVS23/5SW//AOYOz/5O3WKplirH/OPl241qLSfq8hSX&#xA;TdUsr8gyyRo0dvMGkVlT4ZPgrxVxTlQ7HfFVXyiJv0fclmUxnUNS4KFIYf7kJ61bka/cMVTvFXYq&#xA;7FXYq7FXYq7FXYq7FXYqlOrtf213BqTarBY6Laox1GC4iBDg9HE5kT0+PToRkpTiIcqN3xX0o7V7&#xA;638m/T4+ORiImcpCogfzu/kb2vb7U2yLQtkjSRGjkUMjCjKdwQcVYfbeTvNelkQaH5jW20m1VE0v&#xA;Sp7KKaKGMHiYpHRopZI0iAEVHVgd3Z+mKqX+Lr7yyBaeZLl9Ve3VbjWtWtrOW3gs47huMFIkWbnF&#xA;ySTm/qH01Wr9Riqq/wCanlixlli1y4j00orTrMGaa3+qsx+qSvOqKiPdIOUcVeR3AqRiqc3/AJ18&#xA;n6cyJqGt2NnJIqOkdxcxROVkpwbi7K1GqMVTGDUdPnXnBdRSrzEfJHVhzIqFqD1oemKogEEkA1I2&#xA;PseuKuxV2KuxV2KuxV2KuxV2KuxVKbMTjzNqPqOrKbSz9MKpUhfVutjVmqffbFU2xV2KpP5T/wCO&#xA;XP8A9tDU/wDuoT4qnGKuxV2KuxV2KuxV2KuxV2KoW/k1NGtfqMEMytOq3hmkaIpblW5PHxSTm4bj&#xA;RTxB/mGKuv7S5uDb+lcmCKOXndRemkgni4MpibmDxBZg1V32p3yyEogESjxWNvI9/n3fFQSCCDS+&#xA;xvYL2zhu4OYhnUOnqI8T0PijhWX6RlUZWLDZmxHHMxlVjuIP2jZXwtbsVdiq1445AA6hwCGAYA0Z&#xA;TUHfuDiqUWvkzyrbRuiaVbyeoJVlknQTyOs8hkkR5JebsrMx+EmnboBiqW3n5V/l9d1V9Dt4omEv&#xA;KG3DW0ZeYKGm4QmNfWAQBZftqKhSK4qhz+X91ZxyTaNqj2ut359PV9adFMssRWnqpbpwtBcqEjVZ&#xA;WiPwrQ1xVFWHkm80mK5g0XX721tZRGLSynWC5gteDoX9LnGsp9REK/HIaFi3XFUGvkjzTF++i833&#xA;7XNo0a6ejiIwvBGpql4rJJ60snN+cq8f2CFBXdVebH8253V31XR7LgImEcFrPOjFxxnST1JEYiP7&#xA;UTqV5H7S0xVptH/M+X03l1nTku7ID6tNFBOLe49SVll+t2pkr8MAQxlJtpC1RSmKtnzT5j8vRtD5&#xA;m0641Srkw6nolpLMjqzg8XtUaaWL0/UCA8m58S22KrV86+Z2c3Y8q6gNPgEq3Npwi+uMSDLbzQBp&#xA;UjaNokIkSvqLIyrx2airT/mBfRsTqOkz6DFZNJcarcakjtb/AFCMACS3uLYSxNMzSxfu2II+Mfs4&#xA;qum/MYyStJpmkXF9p9kzprsteF1ZMteMZsAr3TyOCrqOCqUblyxVUP5vflmJliPmKzq5QJJzJjPq&#xA;RCZP3lOFDGQa8vbriqK8r+YtL8warf6hpbvLZNa2iw3DRvGkqiS5YSRFwvqRsG+F1+E9sVZLirE/&#xA;Pfnp/K31LhYC+9dZri55Tej6dra8PWdP3cvqSfvV4R/Dy3+IYqoWXnbyj5f01k1rV7Wwkm1S/iji&#xA;mlUOWl1OZF+D7QXk4q1KDqSBhAtIiTyCbX/nby5ZxXkv1oXCac0A1M29JfqsdyokSecg0SERH1Gc&#xA;7BN8C0W7zzv5TstRg0+81S3t57m0N/A8rhIWtg6p6gmakZqzinxYsvDPDxbVdcxfy5/Hkhda/Mry&#xA;Pot7JZanq0NvcRWb6iy/E9beNuLFCgbm/wDkLVqb0phra1jjkRYHl+Arab+YPkXU7v6np3mDT7u7&#xA;py9CG5id6UDdA3WhrTAxpUh89+SJ7iW2h8wabLcQIsk0SXcDMiMQqswD7AlgPpHjhpeE1a1/P/kW&#xA;OKGZ/MOmiG4l+rwSfW4OLzVp6anlQt7YEIa//M/8u7BJXu/MmnRiHh6lLiNz+9ZlSgUsTUo3TwxT&#xA;RukM/wCcP5XJZLenzRpzQNF644Tq78OSpvGtZA3JwOJXlXtscNbWz8KXcVO3/On8qbh0SLzRYEvF&#xA;JPvLxCpCQH5lgAjb7I1GO5ANDgKnFK6pLLXzxa+c/PMGj+X5I7nR9EYX15q8cbXNvJKqx+nDFPFI&#xA;saMVnf7dTVDQGhy+Pg8HqBnM8qNcJ8/T6vgffu31PFEni4TLatjcevu5DpvzDPtS02x1Own0+/hE&#xA;9ncoY54WrRlPUbUOQw5pY5icDUhycMi2rZIbe5nhN2009wxuVgldS0aUVKRqACIwR77k75SNjzcj&#xA;ITKIPDQj6bA5nc7+f6Aisk0OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVoKoJIABY1YjuaUqfoGKu&#xA;CIECBQEAAC02AHQUxVKrKa3fzLqKQujelZ2aOqEHiRLdDiQOmKvMIdXn1b81J9H0ptWvIbS7dL/X&#xA;INVnNvADD6qqtpH/ALj+McweBkkjL7AmtRVV6tqug6Jq/wBW/SljBffU5VuLX141k9OVejpyBocV&#xA;YRpX5W+TtYvtU1/VLQ3d9fPqWnPzaipAb67R+HHieTLL1YmlAVocuhm4RQjHmDuLuuXOwPOqv+K2&#xA;0Z5gAA1Xdsd+8jc/HkjdA/JzyZo4t2WBriSBb+FnlavrQag3xwz1r6qxxgRoGNAMGXIJHYcMe7p5&#xA;8+/9jZ+an1O92D1HXbus7lBxfkV5Mt9AvNKtRLDLe3JvJryocmUM5iUwuGh9NA4UoqKG4iu+RkYn&#xA;pt7zfz+67HkWcNbKM+IiMvIi4+fz7xR7iEV5a/J7yzosKV/f3IvzqcsiRQ28ckvovbqrRRoF4elJ&#xA;QjuanoSMlKcKoR6dSb9+1A9w2qul7sJaqRkTERjfQDly5XZB253fS62ak/Iv8rJo0S50Nbjg3qB5&#xA;JrgsX3HJiJBU0NPlgOTYgCI3vYD+2vLk2S7Rzy+qV+8Aj5EVfnzUb/8AIf8ALa60/T7CLTFs4NPm&#xA;+sBrdY/VmbgUpNLIkkj0B23rkxnHEZGETfSqiP8ANjQ+Yao6vIOvzon4E8vh0Q6f84+/l5BNbyWU&#xA;VzZJAqo0cM394i+oQpdw8iisp+wy+HjhnmjIG8cL6EXGv9KQDfWwSb36NsO0c0eoN98Yn7xyHMDk&#xA;DyTHT/yS/LOwS1Fvo4WSzaN4pRNOhMkRJWRhG6IWJJJ+GhyuWS/4Y/6UfpBPxu+8rHtHOAQJEA3y&#xA;2+rny5fDl0TmL8vvIsU0k6eX9P8ArE0hmlnNtEZWdpfWJMhUtT1N6VpkCb/H4/t3aRqcoNiUrquf&#xA;Sqr5Lr7yF5LvihutEs3KTC4qsKJykFd5OAX1AeRqrVB7jCJkGwaKx1OQAxvYit9+fv5e8bptp+m6&#xA;dp1stpp9rDZ2qlmWC3jWKMM7FnIVABVmJJ8TgJtoRBFRTAqRaXbxxiGDTVcDSpTY3d1qUc73EkCx&#xA;iQ+jPKQ8gLsnx1ZTQ9xl2rEjMTPBc9/TWw32qP08uTbhyR4JRlxV0324u89+1+ae5S1OxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLbf/lJb/wD5g7P/AJO3WKvKoba0b/nIO9nmsDdXKXMYttQS&#xA;2jnFsv6JiBie5YmSA1LN6Y2o4anxVKr2fFUn8p/8cuf/ALaGp/8AdQnxVOMVdirsVdirsVdirsVd&#xA;irsVdirsVS/UG0q+nfQryMzNcQGd4XidojGrhd5OPp15EfDyr3pTJywGWMyNcN1zHv5c/jybMOeW&#xA;OYlA1ILtHmme1MNxJLNc2jfV57mWE2/quqgmRFpxKty2K7ZTA7b9G3VQAlcQBGW4AlxUO4nv9+6O&#xA;ybjOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpbb/8AKS3/APzB2f8AydusVeeCxurX8zLzXV03&#xA;U5Z7m5DfUjYFl4pbJZq8d+LtbRY2WMSUcchUgiuKsl82+TNZ1rTtRt/0xPPHcSQy2Vi/C3hhaKZZ&#xA;KGS3RJZFopHGQsD3GKpr5RE36PuSzKYzqGpcFCkMP9yE9atyNfuGKp3irsVdirsVdirsVdirsVdi&#xA;rsVdiqGu4b+SW1a1uUgjil53aNF6hmi4Mvpq3JfTPMq3LfpSm+WY5QAPELJG29Ub5+e21eaCpTDU&#xA;YtTikj53FnOFikh/dIlvxEjmepAkfmeCcQduvjlBu/L7nKj4ZxkGozjve/q5Dh7hW5v4I7JuM7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlNmJx5m1H1HVlNpZ+mFUqQvq3WxqzVPvtiryZvMeuap+&#xA;clzpljqx0RjOYoraC9s5xcQw24JuLi0lmud2kQoEigifju0lcVe34qk/lP8A45c//bQ1P/uoT4qn&#xA;GKuxV2KuxV2KuxV2KuxV2KuxV2KobU7SS8sJraK5ms5JFotzbFBMhBrVDIrpXtuMtw5BCYkQJV0P&#xA;L7N0EKASHW9FT67ZSQJdxq72V2B6kbVDqsgjdhVWArRshqMIEjCxIDqOR93JtwZ5Y5CcdiF+j3TT&#xA;2fCWcXN1at9XvJlieFWnjAEhVHrsT0oSPfKoGx5hs1WPhnYHDGXqiLB9J5bj9iNybjuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVLbf8A5SW//wCYOz/5O3WKvIBrOk3X5/R29vcrOGvy31FAGBuIdLaF&#xA;7760Ijw9PgbY2pmFSPU477qvQ/NH5hW+lWd++nWpvbzTWH1uG69exhC7j4LhoJVld2okaRBi7sBs&#xA;KkKo/wAk3cdxpEv+65vr2oPLbMV9SMvfzni4UmhxVP8AFXYq7FXYq7FXYq7FXYq7FXYq7FXYqhbK&#xA;0Ns9yGu5rlp5jOFmKH0lcBRHGFVKRjgacqmtd8tyT4gPSI0K26+Z80AILU4tZt7s3+mhLhXjVLm2&#xA;uZpURVjYkNCiJKA5Dty23oozFmJA2HP08sU4cGS477GMRe/84kjbYV3WUxsry3vbSG7tyWhnRZIy&#xA;ysjcWFRVXCsp9iK5ZGQIsOLlxSxyMZcwa7/tCtha3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FUps54J&#xA;fM2orHIrtHaWayBSCVb1brY06HFXl0CRTfn16t7qV1a3rMZINKhCXcTpBbPAnK4gmZraBl5SmOe3&#xA;SshNHOKvVtd8u6Fr9olnrVjDqFrHIs0cNwgdVlQEK4B6MAx3xVDeT444tHkijUJGl/qSog2AUahO&#xA;AAMVTrFXYq7FXYq7FXYq7FXYq7FXYq7FXYqlV/p1rFqUWtLPFYSpxj1C4aOLlcWyiQRwPK45Iqyz&#xA;cxxPXbvmVizSMDioyH8Is+mW1yoc9hTEje01zFZJBdTf4fvJLsxwx6DdNzu2jjZXguHf4p5Cgfms&#xA;pcc2biEC1JNcpJ4Df8J/F/jk7PHH81ARsnNH6bP1RA2iLquGtgLMrqk6trq1uohNbTJPEagSRsHU&#xA;kdd1JGWgg8nX5McoGpAg+arhYOxV2KuxV2KuxV2KuxV2KuxV2KuxVLbf/lJb/wD5g7P/AJO3WKoq&#xA;y03TrFZFsrWG1WaRpphDGsYeSQlnduIFWZjUk7nFVmqaxpOk2v1vVb230+05LH9YupUhj5uaKvOQ&#xA;qtWOwGKoLyn/AMcuf/toan/3UJ8VTjFXYq7FXYq7FXYq7FXYq7FXYq7FXYqo3tra3VrJBdW6XcDA&#xA;FreRVdXKnko4v8P2gKV75PHOUZAxPCe9BCho2rQapYR3UamKQ0W5tXaNpbeYAF4ZvSaRVkStGXlt&#xA;lmowHFMxO/cd6kO8XWx6KDaMZVdSjgMrAhlIqCD1BGUMgSDYSG+8vLYzvq/l+0hTVKUlt+bwQ3CF&#xA;ubK6xkR+oatwdlNCxJymWOjxRG/3uyw63xIjFnkTj6GhIxPIVe/DyuIIsB0fmDWvXjWfRXt4JTUy&#xA;vKlIo434TvOwBRaCjxgMea1+yRTAMkr3j+PxyWWiw8J4colIdKO5IuIj1PdLYcJ724vOekXNwlvZ&#xA;ercTeoyzI0b2/pxx8fVmP1gRckj9Ra8a9du+EZ4k0Px80S7KywiZTqIrbcSsm6j6b3NHnXJMLTXN&#xA;HvL64sLa8ilvbX/ei3VgXUUU1p4fGNxtk45Ik0DuHGyaTLCAnKJEJcj06/qR3XcZNxnYq7FXYq7F&#xA;XYq7FXYq7FUtt/8AlJb/AP5g7P8A5O3WKplirC/Of5cnXtPv4LbUZopdRYiZbya6uLdI3VkcQRRz&#xA;25hPF/8AdbCoqjVRmBVTPyNaSW2ivE07TBL3UIxVY1HwX06kgIq05dadPDFWQ4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYqliXK2eryWsos7W2u1EtnSULcT3ALG4JiKqCFX0zyDE9a02zJMOPGJDilKOx&#xA;29IH8O/z7mPVM8xmTsVU7m2t7m3kt7mJZreZSksMihkdWFCrKdiCMBAIos8eSUJCUTUhyIW3FlZ3&#xA;No9ncQRy2kiGKS3dQ0bIRTiVO1KdsTEEUeSYZZwkJxJEgbvraAvPLtrLp8dhYyyaTboSD9Q4QP6Z&#xA;5VjVgpKAs3KqUNe+QliFUPT7nJxa6QyGcwMkv6dy323577bb2EAugX2iSCbQK3ELMI20y5naK3hg&#xA;p0tkRCisH+IlwSdxXpkPDMPp+X6nJOthqBWf0nnxxjcjL+kSbqttqA22a4eaHYRXMg/SGnlbiG7t&#xA;0kFncxOPTkjkh9RSZdnKry4qeDV6jB6+vMfI/j9Sb0w3iPRPYxJHHE8wRLh+nlZqz6hTf6a1SV11&#xA;LTLG6vYG4W95pcxjtZLdwObOgmVfUekoVqS8fh+Gpw+JI7gE+XKvx70flMcR4eSUIHcxmLkJDlR4&#xA;T6RtY9N770rv5y0iGwgvbhZ4YZWaKY+hJILeSNhHIk7Rh0Tg5oWrx2JBpvh8eIFlrHZeWUzCPCSN&#xA;x6gOIHcGINE2OnPytMP03o/1SG8+uwfVbh1igm9ReDvI4RVU13YuaU8cn4kau9nF/KZeIw4ZcURZ&#xA;FcgBd/JG5Nx3Yq7FXYqlNnG6eZtRLStIGtLMqGC0UerdbDiq7fOuKptirsVSfyn/AMcuf/toan/3&#xA;UJ8VTjFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUFq2jabqtsYL60gugN4hcxLMiuCGU8TToyg7EdM&#xA;vwaieKVxkY+40ggFZoUutPYBdZhjjvomMTyREenME29dE5OY1k6hGYle5w6mOIT/AHZJid9+Y8vO&#xA;u/qsb6phmOl2KuxV2KuxV2KuxVQSwtEvZb1YgLqeNIppd6skRYop7bGRsjwi76tpzTMBC/SCSB5m&#xA;r+4JefKeh+tPOtv6cswkCOjFTAZRSV7en9y7n4mZKEtud8h4Mef4+Hc5P8pZqESbAr/OrkJfzgOQ&#xA;B5DbkghpPmy1P1iK+gv7iAPFawzevBGYGHICXjJMHlDKiiQrXjy6k5DgmN7v5/j4uQdTpZ+kwlCJ&#xA;okjhkeLy2jUas8N867nPrvmixJudW0mIaarOJJLCaS6mjVQCsjRGKIspoa8KtuNuuHxJjeQ28t1G&#xA;j02T04sh8Tb64iIPlfEaPvoc9+SIbXNXjtnP6NN3dWk5iv4LcutIyhkR7dpkiWc8SgYAgAk77YfE&#xA;lXKyOf7O9rGkxGQ9fDGUbiZVzuiJcJPD1rn023RcvmLRITeCe8jh+oMqXZlrGELBCpq4FQfUX4ht&#xA;U065I5Yi7PJx46HNLh4Yk8f01vfPu9x25oLQ9VtdU1zULq05NbfVbRYpiKJKoluSJIm6PG1fhYbH&#xA;DCYkLDDUaaWGXDL6uo7vI9xHUJ9k2h59+Zn5n6l5T8tazqFp5fvZbqwVhZzzRB7OVwrOXZoJHlWJ&#xA;URmLOqjoKgnFWR+TbmKbS5+Acf6fqLVeN0FGv5yPtAfSO3fFU+xV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2Kse1221azvTqmkQoxkjU6tK7TTymC0b1EhtbQMsZklDyLy5LQ0ry6DYaaeOcfDyHkfTyA&#xA;uW1ylzoUDW/wYSvmE9t5hPBHMFZBIobg4o61H2WHZh0IzBnHhJDNUyKuxV2KuxV2KuxV2KuxV2Ku&#xA;xVQawsmvRfNCpuxEbcTEfF6TMGKfLkK5HhF31bRmmIcF+m7rz5WhIvLWhRNYtFZRxtpqhLJkqpRA&#xA;rIEqCOS0c/C1RXfrkRiiK25N0tfmlx3InxPq8zzvyO3Me7kpWDwnzHqEcSFFhs7NApRkUUluh8NQ&#xA;AR8tsscUkk2U3xQ4gMCrCoOxB6EYqk/lP/jlz/8AbQ1P/uoT4qiJPMfl6OR4pNUtEkjYpIjTxBlZ&#xA;TRlILbEEUOKrf8TeW/8Aq7Wf/SRF/wA1Yq7/ABN5b/6u1n/0kRf81Yq7/E3lv/q7Wf8A0kRf81Yq&#xA;7/E3lv8A6u1n/wBJEX/NWKu/xN5b/wCrtZ/9JEX/ADVirv8AE3lv/q7Wf/SRF/zVirv8TeW/+rtZ&#xA;/wDSRF/zVirv8TeW/wDq7Wf/AEkRf81Yq7/E3lv/AKu1n/0kRf8ANWKouzv7G9jaWyuYrmNW4M8L&#xA;rIoYAHiSpO9CMVV8VdirsVdirFr3RtU0a6udT0i/S10erXmo6QtiLh5HEnrXDW5haOX1Z1Lg8hJ8&#xA;VKDsdpj1EM0RDJHiyfTGXHw1tUeK7FR25cO12wII3CPk86eU4tSh0ufVrWDVJ/T9OwlkWO4JlKqi&#xA;+kxDhmLgcSK5QOztQYHIISMBfqAsbc9+SeMXVpjLqmnQ38Wny3MaXs8Uk8NuzAO0URVZHA8FMi1+&#xA;eY8cMzAzAPCCBfmbr7im0TlSXYq7FXYq7FXYq7FXYq7FXYqltv8A8pLf/wDMHZ/8nbrFUyxVBavr&#xA;ei6LZG+1i/ttNslYI11eTRwRBm2UF5Cq1PbfFUH5SIbSpmU1B1DUiCOhH6QnxVvyn/xy5/8Atoan&#xA;/wB1CfFUeyaj+ko3WWIaaIXEkJRvWMxZeDCTlxCBeQK8a1pvlgMOA7Hjvv2r3Vz5dUITXZvMEbaa&#xA;mjRQv617GmoyTqXEVnwdpHVRJD8ZZVRTU05V4nplaWF3t1+drR6cZLWygm/TCpOumMssbabVPiuT&#xA;d/EoI9Tn6Px1C8e+KpZeeYPz3k1q3i03SIf0fFqFx9clnij4m1R7pI4wTcQuQyCBlZErX4ixUmMK&#xA;qFn5r/5yQkhspJ/KumxvLHO93F3jeKSsSV+vEVmi278W336Yqj9H8wfnw+nXd5qnl+zhv2uLWO2s&#xA;IXSWNYDNcCdxylhbnxEKktJxA/eKDumKpZL5n/5yVk063nHlvToLtYGmmtYgJOc4uXRIS73a8UaH&#xA;gzEVI3IP7OKss8kav+Zl3qtunmuxgtIprB5bmG2iKxwXCm3EaiUyzeoZS9xUVHEIu29WVZ1iqW6T&#xA;/vfrX/MYn/UHb4qmWKuxV2KuxV2Kpb/hrQf0VNpK2MUenTrMktvGvBStwzPKAVoRyZyTQ9cyfzmX&#xA;xBk4jxit/dy+SOEVSXL5B8vvp0+l6hG2q6S8xmtrG/pcJb8k4ssbuDKQxZm+N2pWgoNsyD2pmExk&#xA;geDJVGUduL39O7kBy33Y8A5IVdI856Oks+m3cOs3N3/fW14z2sEcvHis0ZX6yY41WNE9FFAJLPWu&#xA;2WnUabNQmDjEeRjUiR3H6bO5PET3BFEckRpvmXW476LTdc0a4gmZvSGq2ypJYSPwMlQRI8sSmnEG&#xA;VVq23fK82jxGJniyRI58J2mN67qJ6+knZIkeRDUXnzThBA99ZXtlO1wtpdwPbySG2mdVK+q0QdfT&#xA;ZnVFkQlC21djRl2ZOzwyhIVxA8QHEPK63HMxNGunJeNPU1CB9Rl08LL68MSTuxikEXCRmVQJSvpl&#xA;qxmqhqjME4iICe1E1zF7V059ebK0TlaXYq7FXYq7FXYqltv/AMpLf/8AMHZ/8nbrFUyxVhHnL8tV&#xA;12GR7XUZ4rxrgXEf1ya7uLaFjHJFzggjuIPTdBKWQq2xAxVN/JFtLb6NIj3MlwVvdQTlJwqSt/OC&#xA;1VUGrdTU4qiPKf8Axy5/+2hqf/dQnxVMWt5zfJcC5cQLE0bWlE4M7MpEhbjzqoBFOVN+mCt7tsEx&#xA;wGPCLu+Le/d3fZaC121125bTV0q8+pJHexyam4EZZ7REcvEnqRyirycAaAHjWjA4Wti8vlf8zJNJ&#xA;EN15nS51FNTNzDcQQiyRbL0mRbeRYw5k4u3LtXvirDvLvk389/L1pNcNqw1XUJYoLeKO6v57uNOW&#xA;oxM78Z0VV4WnrB5Dzc1Tj9kgqsy8gaZ+bVrqdxcectWtr6xmjk9GzgWL9zJzjMfFo7e3Zl4mQHkx&#xA;/ZxVneKuxV2KuxVLdJ/3v1r/AJjE/wCoO3xVMsVdirsVdirsVdirsVdiqHv9PsNQtXtL+3jurVyp&#xA;eCZQ6EowdSVao+FlBHvlmLLPHLigTGXeEEWtk020a5mvI40h1GaEW5v0RDMI1LMi8mDVCs5YKdq9&#xA;sIzS4REm4A3w9LWkkl8mO1hDZpqc9DKLrUZnLtJc3SInpzcldPS4zRJIY46IaceNCczY9oVMy4By&#xA;qPdGNmxyN7Eiz6ut2x4EPw/NQokMcujxqoWJ7qYXEsrcJGVp/Tj9KOskXFxHUBWqOTDLL0F2Rl76&#xA;HCBy+mzZ2O19R0CPV5Ii280XtjaSSeZLJtPWKRLeK4BWVp/j9N7loYTL6EPRyWchUPxEUyueijOQ&#xA;GGXHYuuVdRGzXFLpsNzyTxVzZJHIkiLJGweNwGR1NQQdwQR2zXEEGizbwK7FXYqlNnG6eZtRLStI&#xA;GtLMqGC0UerdbDiq7fOuKptirsVSfyn/AMcuf/toan/3UJ8VS7QvMnl3T7W5tL/VLS0uk1DUS9vP&#xA;PFHIoe+mdSUdgRyVgw9jiqs3mXyi2qR3/wDie1VY4XgNkL23+rsXZW9Rkry9ReFFPLoTtiqF13zT&#xA;ply2mrpXmnTrJI72OTU3FzalntERy8SeoJRV5OANADxrRgcVYZqd35kl023gk89aXqN8NWW5W8t7&#xA;6PShBYqBSJkgMguTUEMsnw0NaEgYqxrQ2/Mby/bvMnnTTdSuTDFbW8NzrP1xQJL+2LNMbn4S8Vsl&#xA;yWmVOTeoFC0jXFWX+Rdf83W1/dz+bvOui3lrPFL9WtYrizpBMWjMNDHFbuyhTIG5MegxVitjffmu&#xA;sdvcf440eOeCzuYTBcajayK80tuojZ19CRax3C8lbkxJ5dIyIwqiE1P841Ct/wArE8us4tIKq8tk&#xA;UN4BwmqFt1b0j9sUYHl4LtiqqNQ/NSHQLRLb8wfLx11rx5tSuZ5YXieA2cUcaLGeQjpOjswjoCxq&#xA;KKSuKpNpOu/nBHfT6fdebrA6baXkM0t1LfabKbuxl9SS4gt5FSKdZxyCcz6aggcOC4q9j/Lu4u7j&#xA;RXlvbuG+v62y315bOskMlylhbJOyMnwkeqrdMVZTirsVdirsVdirsVdirsVdirsVdirsVQ11pem3&#xA;csc13aQ3EsSSRxPLGrsqTALKqlgaB1ADDv3y2GacARGRANcj3cvl0QQGOH8ttGMj3C3upR37mUi9&#xA;hvJYWX1NkAii4W5EKALGGjIAArXNh/LGSq4YGO2xiDy57m5eo7y9XPuY+GFhk1+P/nYdOlvdUtUL&#xA;wHQ7iNbWUQRARu0UciwmSdpoOSNKyjg7U/ZyVYj+5mIQlseMHiFncWQTUeE0REE8QHmjfmvfzV5k&#xA;0qZoNb0OW7Uuzpe6Mj3MS24GzSpIEkEnL4eEfMn7XTANFhyi8WQR8slRN+RFivM8PcvERzCcf4m0&#xA;X69cWn1la2kYlurj/j3i5EUSSf8Au1kIdW4FuXEg0ocw/wAnl4RKvqNAdT5gc68+V7MuIKOj6hZa&#xA;jq9xfWM6XNnc6fYywTxkMjo8lyysCPEHKcuKWORhMVIbEJBtOsrS86/Mv8zNc8s2BbT9Fljk+ti3&#xA;/SWofVxY+mIZZ2df9KgLcvQ4KHZPiYfaNEZVNPKnmaCHSnjvrLUILlru+maNdOv5F4z3k0sZWRYO&#xA;LBkcHbFU5/xZpf8AvjUP+4ZqH/VDFXf4s0v/AHxqH/cM1D/qhirv8WaX/vjUP+4ZqH/VDFXf4s0v&#xA;/fGof9wzUP8AqhiqnB5u094I3ktdRjkZQXj/AEbqB4sRuK+h2xVU/wAWaX/vjUP+4ZqH/VDFXf4s&#xA;0v8A3xqH/cM1D/qhirv8WaX/AL41D/uGah/1QxVTn83aekEjx2uoySKpKR/o3UByYDYV9Dviqp/i&#xA;zS/98ah/3DNQ/wCqGKu/xZpf++NQ/wC4ZqH/AFQxV3+LNL/3xqH/AHDNQ/6oYq7/ABZpf++NQ/7h&#xA;mof9UMVU5vN2nogMdrqLsWQEfo3UB8LMAx/uP2QScVVP8WaX/vjUP+4ZqH/VDFXf4s0v/fGof9wz&#xA;UP8Aqhirv8WaX/vjUP8AuGah/wBUMVd/izS/98ah/wBwzUP+qGKqcnm7T1eIJa6iyuxEh/RuofCv&#xA;FjX+48QB9OKqn+LNL/3xqH/cM1D/AKoYq7/Fml/741D/ALhmof8AVDFXf4s0v/fGof8AcM1D/qhi&#xA;rv8AFml/741D/uGah/1QxVTPm7TxOiC11ExlWLSfo3UNmBXiKeh3qfuxVU/xZpf++NQ/7hmof9UM&#xA;Vd/izS/98ah/3DNQ/wCqGKtHzVpRBBg1Ag7EHTNQ/wCqGKpMy+UVtbSxtLG8s9MtpFeXTodHuhb3&#xA;CpF6aJMjWjVVKKy0oaqu+2Zo1+UylORMpkfUSbjvZI367/MseEIvyx+jD5g1mTTNPmsrWaK1kmkl&#xA;s7izEty0tyZWAnji5tTgWK16jMbJmnkriJNCh7h0SBTJ8rS08aSKVdQ6mlVYVGxqNjirCPyp8kaj&#xA;5T0u6tr63sLSSY249LTXd4pXgto4ZLqQvDbkTXDoWcUbt8bHFWcYq7FXYqgPMGnPqegalpqMVe9t&#xA;Z7dWV/SYGWNkBEhSbgfi+16bU68T0xVKfy68uX/lzypbaRepaxSwPKUislhWJEeQuorBbafEzb1Z&#xA;lt0qe1dyqyXFXYq7FUj8zeXpNWm0eaJ+MmmX8N2Q0kioUSvP4EqrtT7PIbeIxVI/yp8kaj5T0u6t&#xA;r63sLSSY249LTXd4pXgto4ZLqQvDbkTXDoWcUbt8bHFWcYq7FXYqxPzn5Nn127guYJCjR2V/ZyD1&#xA;5IjS8t2iQx/BPEjcm3kMZIHZqccVV/y68uX/AJc8qW2kXqWsUsDylIrJYViRHkLqKwW2nxM29WZb&#xA;dKntXcqslxV2KuxV5b5z/LnXdc82XWqR6D5eurEpbov1qV4p75I5YJZItQAsbjmo9DjF8bBQN1PL&#xA;4VWeeUNIuNF8qaNpFy6PcadZW9rM0RJjLwxKh4Fgp41Xao6Yqm2KuxV2KvG/M/5R+Yta1PVb5dK0&#xA;S0knv47mzMEyCKdYluEWfUba40q7jnnP1nk2/WnF0K8mVeyCtByNT3I2FfxxV2KuxV2KvGNV/J3z&#xA;Bea/qOoRadokdnfXDyQ2rSn/AEeZ5I2/SUXpWEK/WQsWysperNW4IoFVez4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqx3z/5QsvNnle70i5tLS7lcc7P67GskcU4BVZRyWTiwVmHJRXc4qwO8/KD&#xA;zX+ltTfSdYbSNHl4LpWnadfXtjDCqxXikGC2EcSnm9nSlfhjI6bMqmGmeRPzBtbLzp+kNbuNQu9b&#xA;huF0pXv3lgjL+p6aRW7W0H1PirKhZJnr9qgNMVXaD5L86WfmOW7uZq6VLqyX2mwveSXMllaejcLJ&#xA;B6bCOGFCJY4lhgDKoFS7cQcVemYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2894A7ADF009E911B6F39A24F3C73226</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2894A7ADF009E911B6F39A24F3C73226</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>b7c292b9-063c-11e9-0000-760fd45a0db2</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:57bcd321-0552-486a-9512-b7faaed668cd</stRef:instanceID>
            <stRef:documentID>b7c292b9-063c-11e9-0000-760fd45a0db2</stRef:documentID>
            <stRef:originalDocumentID>b7c292b9-063c-11e9-0000-760fd45a0db2</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2894A7ADF009E911B6F39A24F3C73226</stEvt:instanceID>
                  <stEvt:when>2018-12-27T13:01:56-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">C:\Users\GUILLE~1\AppData\Local\Temp\tp79a8a69f_7864_4452_a78b_c0f96d663492.ps</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>180.652884</stDim:w>
            <stDim:h>140.828958</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.06</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SymbolMT</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -399.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 399.2 li
512.087 399.2 li
512.087 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.500001 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.7637 365.157 mo
35.7637 8.15625 li
503.765 8.15625 li
503.765 365.157 li
35.7637 365.157 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
@
35.7637 8.15625 mo
503.765 8.15625 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
@
35.7637 365.157 mo
503.765 365.157 li
@
503.765 365.157 mo
503.765 8.15625 li
@
35.7637 365.157 mo
35.7637 8.15625 li
@
35.7637 365.157 mo
503.765 365.157 li
@
35.7637 365.157 mo
35.7637 8.15625 li
@
35.7637 365.157 mo
35.7637 359.907 li
@
35.7637 8.15625 mo
35.7637 12.6563 li
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRW+ArialMT /ArialMT findfont ct_VMDictPut
/IOXMRW+ArialMT*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
31.5137 378.407 mo
(0)sh
113.764 365.157 mo
113.764 359.907 li
@
113.764 8.15625 mo
113.764 12.6563 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001B
CD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB
63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF20
0B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC4
9372EF96DD9EB13A793559C13CFDFE477> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[48{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
109.514 378.407 mo
(5)sh
191.764 365.157 mo
191.764 359.907 li
@
191.764 8.15625 mo
191.764 12.6563 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
183.514 378.407 mo
(10)
[7.78613 0 ]xsh
269.765 365.157 mo
269.765 359.907 li
@
269.765 8.15625 mo
269.765 12.6563 li
@
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
261.515 378.407 mo
(15)
[7.78613 0 ]xsh
347.765 365.157 mo
347.765 359.907 li
@
347.765 8.15625 mo
347.765 12.6563 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
339.515 378.407 mo
(20)
[7.78613 0 ]xsh
425.765 365.157 mo
425.765 359.907 li
@
425.765 8.15625 mo
425.765 12.6563 li
@
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
417.515 378.407 mo
(25)
[7.78613 0 ]xsh
503.765 365.157 mo
503.765 359.907 li
@
503.765 8.15625 mo
503.765 12.6563 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /.notdef /five 202{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
496.515 378.407 mo
(30)
[7.78613 0 ]xsh
35.7637 365.157 mo
40.2642 365.157 li
@
503.765 365.157 mo
498.515 365.157 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B7F374869C4D14FD697FCCAF1C53E703093C> |-
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 32 /minus put
dup 54 /six put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one /two /three /.notdef 
/five /six 201{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 368.157 mo
( 6)
[7.5918 0 ]xsh
35.7637 325.407 mo
40.2642 325.407 li
@
503.765 325.407 mo
498.515 325.407 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 328.407 mo
( 5)
[7.5918 0 ]xsh
35.7637 285.657 mo
40.2642 285.657 li
@
503.765 285.657 mo
498.515 285.657 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one /two /three /four 
/five /six 201{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 288.657 mo
( 4)
[7.5918 0 ]xsh
35.7637 245.907 mo
40.2642 245.907 li
@
503.765 245.907 mo
498.515 245.907 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 248.907 mo
( 3)
[7.5918 0 ]xsh
35.7637 206.156 mo
40.2642 206.156 li
@
503.765 206.156 mo
498.515 206.156 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 209.156 mo
( 2)
[7.5918 0 ]xsh
35.7637 166.406 mo
40.2642 166.406 li
@
503.765 166.406 mo
498.515 166.406 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
18.5137 169.406 mo
( 1)
[7.5918 0 ]xsh
35.7637 126.656 mo
40.2642 126.656 li
@
503.765 126.656 mo
498.515 126.656 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
24.5137 129.656 mo
(0)sh
35.7637 86.9063 mo
40.2642 86.9063 li
@
503.765 86.9063 mo
498.515 86.9063 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
24.5137 89.9063 mo
(1)sh
35.7637 47.1563 mo
40.2642 47.1563 li
@
503.765 47.1563 mo
498.515 47.1563 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
24.5137 50.1563 mo
(2)sh
35.7637 8.15625 mo
40.2642 8.15625 li
@
503.765 8.15625 mo
498.515 8.15625 li
@
IOXMRW+ArialMT*1 [13 0 0 -13 0 0 ]msf
24.5137 11.1563 mo
(3)sh
35.7637 8.15625 mo
503.765 8.15625 li
@
35.7637 365.157 mo
503.765 365.157 li
@
503.765 365.157 mo
503.765 8.15625 li
@
35.7637 365.157 mo
35.7637 8.15625 li
@
40.2642 132.656 mo
40.2642 133.484 39.5923 134.156 38.7642 134.156 cv
37.936 134.156 37.2642 133.484 37.2642 132.656 cv
37.2642 131.828 37.936 131.156 38.7642 131.156 cv
39.5923 131.156 40.2642 131.828 40.2642 132.656 cv
.955352 .928405 3.0518e-5 3.0518e-5 cmyk
f
43.2642 130.406 mo
43.2642 131.234 42.5923 131.906 41.7642 131.906 cv
40.936 131.906 40.2642 131.234 40.2642 130.406 cv
40.2642 129.578 40.936 128.906 41.7642 128.906 cv
42.5923 128.906 43.2642 129.578 43.2642 130.406 cv
f
46.2642 125.906 mo
46.2642 126.734 45.5923 127.406 44.7642 127.406 cv
43.936 127.406 43.2642 126.734 43.2642 125.906 cv
43.2642 125.078 43.936 124.406 44.7642 124.406 cv
45.5923 124.406 46.2642 125.078 46.2642 125.906 cv
f
49.2642 131.156 mo
49.2642 131.984 48.5923 132.656 47.7642 132.656 cv
46.936 132.656 46.2642 131.984 46.2642 131.156 cv
46.2642 130.328 46.936 129.656 47.7642 129.656 cv
48.5923 129.656 49.2642 130.328 49.2642 131.156 cv
f
52.2642 133.406 mo
52.2642 134.234 51.5923 134.906 50.7642 134.906 cv
49.936 134.906 49.2642 134.234 49.2642 133.406 cv
49.2642 132.578 49.936 131.906 50.7642 131.906 cv
51.5923 131.906 52.2642 132.578 52.2642 133.406 cv
f
55.2637 128.906 mo
55.2637 129.734 54.5928 130.406 53.7637 130.406 cv
52.936 130.406 52.2642 129.734 52.2642 128.906 cv
52.2642 128.078 52.936 127.406 53.7637 127.406 cv
54.5928 127.406 55.2637 128.078 55.2637 128.906 cv
f
59.0137 131.156 mo
59.0137 131.984 58.3428 132.656 57.5137 132.656 cv
56.6855 132.656 56.0137 131.984 56.0137 131.156 cv
56.0137 130.328 56.6855 129.656 57.5137 129.656 cv
58.3428 129.656 59.0137 130.328 59.0137 131.156 cv
f
65.0137 128.906 mo
65.0137 129.734 64.3428 130.406 63.5137 130.406 cv
62.6855 130.406 62.0137 129.734 62.0137 128.906 cv
62.0137 128.078 62.6855 127.406 63.5137 127.406 cv
64.3428 127.406 65.0137 128.078 65.0137 128.906 cv
f
68.0137 133.406 mo
68.0137 134.234 67.3428 134.906 66.5137 134.906 cv
65.6855 134.906 65.0137 134.234 65.0137 133.406 cv
65.0137 132.578 65.6855 131.906 66.5137 131.906 cv
67.3428 131.906 68.0137 132.578 68.0137 133.406 cv
f
71.0137 130.406 mo
71.0137 131.234 70.3428 131.906 69.5137 131.906 cv
68.6855 131.906 68.0137 131.234 68.0137 130.406 cv
68.0137 129.578 68.6855 128.906 69.5137 128.906 cv
70.3428 128.906 71.0137 129.578 71.0137 130.406 cv
f
74.0137 125.156 mo
74.0137 125.984 73.3428 126.656 72.5137 126.656 cv
71.6855 126.656 71.0137 125.984 71.0137 125.156 cv
71.0137 124.328 71.6855 123.656 72.5137 123.656 cv
73.3428 123.656 74.0137 124.328 74.0137 125.156 cv
f
77.7637 131.906 mo
77.7637 132.734 77.0928 133.406 76.2637 133.406 cv
75.4355 133.406 74.7637 132.734 74.7637 131.906 cv
74.7637 131.078 75.4355 130.406 76.2637 130.406 cv
77.0928 130.406 77.7637 131.078 77.7637 131.906 cv
f
80.7637 133.406 mo
80.7637 134.234 80.0928 134.906 79.2637 134.906 cv
78.4355 134.906 77.7637 134.234 77.7637 133.406 cv
77.7637 132.578 78.4355 131.906 79.2637 131.906 cv
80.0928 131.906 80.7637 132.578 80.7637 133.406 cv
f
83.7637 134.156 mo
83.7637 134.984 83.0928 135.656 82.2637 135.656 cv
81.4355 135.656 80.7637 134.984 80.7637 134.156 cv
80.7637 133.328 81.4355 132.656 82.2637 132.656 cv
83.0928 132.656 83.7637 133.328 83.7637 134.156 cv
f
86.7637 131.906 mo
86.7637 132.734 86.0928 133.406 85.2637 133.406 cv
84.4355 133.406 83.7637 132.734 83.7637 131.906 cv
83.7637 131.078 84.4355 130.406 85.2637 130.406 cv
86.0928 130.406 86.7637 131.078 86.7637 131.906 cv
f
89.7637 125.156 mo
89.7637 125.984 89.0928 126.656 88.2637 126.656 cv
87.4355 126.656 86.7637 125.984 86.7637 125.156 cv
86.7637 124.328 87.4355 123.656 88.2637 123.656 cv
89.0928 123.656 89.7637 124.328 89.7637 125.156 cv
f
92.7637 131.906 mo
92.7637 132.734 92.0928 133.406 91.2637 133.406 cv
90.4355 133.406 89.7637 132.734 89.7637 131.906 cv
89.7637 131.078 90.4355 130.406 91.2637 130.406 cv
92.0928 130.406 92.7637 131.078 92.7637 131.906 cv
f
96.5137 126.656 mo
96.5137 127.484 95.8428 128.156 95.0137 128.156 cv
94.1855 128.156 93.5137 127.484 93.5137 126.656 cv
93.5137 125.828 94.1855 125.156 95.0137 125.156 cv
95.8428 125.156 96.5137 125.828 96.5137 126.656 cv
f
99.5137 131.156 mo
99.5137 131.984 98.8428 132.656 98.0137 132.656 cv
97.1855 132.656 96.5137 131.984 96.5137 131.156 cv
96.5137 130.328 97.1855 129.656 98.0137 129.656 cv
98.8428 129.656 99.5137 130.328 99.5137 131.156 cv
f
102.514 128.906 mo
102.514 129.734 101.843 130.406 101.014 130.406 cv
100.186 130.406 99.5137 129.734 99.5137 128.906 cv
99.5137 128.078 100.186 127.406 101.014 127.406 cv
101.843 127.406 102.514 128.078 102.514 128.906 cv
f
105.514 130.406 mo
105.514 131.234 104.843 131.906 104.014 131.906 cv
103.186 131.906 102.514 131.234 102.514 130.406 cv
102.514 129.578 103.186 128.906 104.014 128.906 cv
104.843 128.906 105.514 129.578 105.514 130.406 cv
f
108.514 130.406 mo
108.514 131.234 107.843 131.906 107.014 131.906 cv
106.186 131.906 105.514 131.234 105.514 130.406 cv
105.514 129.578 106.186 128.906 107.014 128.906 cv
107.843 128.906 108.514 129.578 108.514 130.406 cv
f
111.514 130.406 mo
111.514 131.234 110.843 131.906 110.014 131.906 cv
109.186 131.906 108.514 131.234 108.514 130.406 cv
108.514 129.578 109.186 128.906 110.014 128.906 cv
110.843 128.906 111.514 129.578 111.514 130.406 cv
f
115.264 131.156 mo
115.264 131.984 114.593 132.656 113.764 132.656 cv
112.936 132.656 112.264 131.984 112.264 131.156 cv
112.264 130.328 112.936 129.656 113.764 129.656 cv
114.593 129.656 115.264 130.328 115.264 131.156 cv
f
118.264 128.156 mo
118.264 128.984 117.593 129.656 116.764 129.656 cv
115.936 129.656 115.264 128.984 115.264 128.156 cv
115.264 127.328 115.936 126.656 116.764 126.656 cv
117.593 126.656 118.264 127.328 118.264 128.156 cv
f
121.264 127.406 mo
121.264 128.234 120.593 128.906 119.764 128.906 cv
118.936 128.906 118.264 128.234 118.264 127.406 cv
118.264 126.578 118.936 125.906 119.764 125.906 cv
120.593 125.906 121.264 126.578 121.264 127.406 cv
f
124.264 132.656 mo
124.264 133.484 123.593 134.156 122.764 134.156 cv
121.936 134.156 121.264 133.484 121.264 132.656 cv
121.264 131.828 121.936 131.156 122.764 131.156 cv
123.593 131.156 124.264 131.828 124.264 132.656 cv
f
127.264 131.906 mo
127.264 132.734 126.593 133.406 125.764 133.406 cv
124.936 133.406 124.264 132.734 124.264 131.906 cv
124.264 131.078 124.936 130.406 125.764 130.406 cv
126.593 130.406 127.264 131.078 127.264 131.906 cv
f
130.264 131.156 mo
130.264 131.984 129.593 132.656 128.764 132.656 cv
127.936 132.656 127.264 131.984 127.264 131.156 cv
127.264 130.328 127.936 129.656 128.764 129.656 cv
129.593 129.656 130.264 130.328 130.264 131.156 cv
f
133.264 131.156 mo
133.264 131.984 132.593 132.656 131.764 132.656 cv
130.936 132.656 130.264 131.984 130.264 131.156 cv
130.264 130.328 130.936 129.656 131.764 129.656 cv
132.593 129.656 133.264 130.328 133.264 131.156 cv
f
137.014 131.906 mo
137.014 132.734 136.343 133.406 135.514 133.406 cv
134.686 133.406 134.014 132.734 134.014 131.906 cv
134.014 131.078 134.686 130.406 135.514 130.406 cv
136.343 130.406 137.014 131.078 137.014 131.906 cv
f
140.014 132.656 mo
140.014 133.484 139.343 134.156 138.514 134.156 cv
137.686 134.156 137.014 133.484 137.014 132.656 cv
137.014 131.828 137.686 131.156 138.514 131.156 cv
139.343 131.156 140.014 131.828 140.014 132.656 cv
f
143.014 131.156 mo
143.014 131.984 142.343 132.656 141.514 132.656 cv
140.686 132.656 140.014 131.984 140.014 131.156 cv
140.014 130.328 140.686 129.656 141.514 129.656 cv
142.343 129.656 143.014 130.328 143.014 131.156 cv
f
146.014 131.906 mo
146.014 132.734 145.343 133.406 144.514 133.406 cv
143.686 133.406 143.014 132.734 143.014 131.906 cv
143.014 131.078 143.686 130.406 144.514 130.406 cv
145.343 130.406 146.014 131.078 146.014 131.906 cv
f
149.014 129.656 mo
149.014 130.484 148.343 131.156 147.514 131.156 cv
146.686 131.156 146.014 130.484 146.014 129.656 cv
146.014 128.828 146.686 128.156 147.514 128.156 cv
148.343 128.156 149.014 128.828 149.014 129.656 cv
f
152.014 130.406 mo
152.014 131.234 151.343 131.906 150.514 131.906 cv
149.686 131.906 149.014 131.234 149.014 130.406 cv
149.014 129.578 149.686 128.906 150.514 128.906 cv
151.343 128.906 152.014 129.578 152.014 130.406 cv
f
155.764 130.406 mo
155.764 131.234 155.093 131.906 154.264 131.906 cv
153.436 131.906 152.764 131.234 152.764 130.406 cv
152.764 129.578 153.436 128.906 154.264 128.906 cv
155.093 128.906 155.764 129.578 155.764 130.406 cv
f
158.764 130.406 mo
158.764 131.234 158.093 131.906 157.264 131.906 cv
156.436 131.906 155.764 131.234 155.764 130.406 cv
155.764 129.578 156.436 128.906 157.264 128.906 cv
158.093 128.906 158.764 129.578 158.764 130.406 cv
f
161.764 126.656 mo
161.764 127.484 161.093 128.156 160.264 128.156 cv
159.436 128.156 158.764 127.484 158.764 126.656 cv
158.764 125.828 159.436 125.156 160.264 125.156 cv
161.093 125.156 161.764 125.828 161.764 126.656 cv
f
164.764 129.656 mo
164.764 130.484 164.093 131.156 163.264 131.156 cv
162.436 131.156 161.764 130.484 161.764 129.656 cv
161.764 128.828 162.436 128.156 163.264 128.156 cv
164.093 128.156 164.764 128.828 164.764 129.656 cv
f
167.764 128.156 mo
167.764 128.984 167.093 129.656 166.264 129.656 cv
165.436 129.656 164.764 128.984 164.764 128.156 cv
164.764 127.328 165.436 126.656 166.264 126.656 cv
167.093 126.656 167.764 127.328 167.764 128.156 cv
f
170.764 126.656 mo
170.764 127.484 170.093 128.156 169.264 128.156 cv
168.436 128.156 167.764 127.484 167.764 126.656 cv
167.764 125.828 168.436 125.156 169.264 125.156 cv
170.093 125.156 170.764 125.828 170.764 126.656 cv
f
174.514 128.906 mo
174.514 129.734 173.843 130.406 173.014 130.406 cv
172.186 130.406 171.514 129.734 171.514 128.906 cv
171.514 128.078 172.186 127.406 173.014 127.406 cv
173.843 127.406 174.514 128.078 174.514 128.906 cv
f
177.514 127.406 mo
177.514 128.234 176.843 128.906 176.014 128.906 cv
175.186 128.906 174.514 128.234 174.514 127.406 cv
174.514 126.578 175.186 125.906 176.014 125.906 cv
176.843 125.906 177.514 126.578 177.514 127.406 cv
f
180.514 127.406 mo
180.514 128.234 179.843 128.906 179.014 128.906 cv
178.186 128.906 177.514 128.234 177.514 127.406 cv
177.514 126.578 178.186 125.906 179.014 125.906 cv
179.843 125.906 180.514 126.578 180.514 127.406 cv
f
183.514 127.406 mo
183.514 128.234 182.843 128.906 182.014 128.906 cv
181.186 128.906 180.514 128.234 180.514 127.406 cv
180.514 126.578 181.186 125.906 182.014 125.906 cv
182.843 125.906 183.514 126.578 183.514 127.406 cv
f
186.514 127.406 mo
186.514 128.234 185.843 128.906 185.014 128.906 cv
184.186 128.906 183.514 128.234 183.514 127.406 cv
183.514 126.578 184.186 125.906 185.014 125.906 cv
185.843 125.906 186.514 126.578 186.514 127.406 cv
f
189.514 129.656 mo
189.514 130.484 188.843 131.156 188.014 131.156 cv
187.186 131.156 186.514 130.484 186.514 129.656 cv
186.514 128.828 187.186 128.156 188.014 128.156 cv
188.843 128.156 189.514 128.828 189.514 129.656 cv
f
193.264 128.156 mo
193.264 128.984 192.593 129.656 191.764 129.656 cv
190.936 129.656 190.264 128.984 190.264 128.156 cv
190.264 127.328 190.936 126.656 191.764 126.656 cv
192.593 126.656 193.264 127.328 193.264 128.156 cv
f
196.265 127.406 mo
196.265 128.234 195.593 128.906 194.765 128.906 cv
193.937 128.906 193.264 128.234 193.264 127.406 cv
193.264 126.578 193.937 125.906 194.765 125.906 cv
195.593 125.906 196.265 126.578 196.265 127.406 cv
f
199.265 122.906 mo
199.265 123.734 198.593 124.406 197.765 124.406 cv
196.937 124.406 196.265 123.734 196.265 122.906 cv
196.265 122.078 196.937 121.406 197.765 121.406 cv
198.593 121.406 199.265 122.078 199.265 122.906 cv
f
202.265 119.906 mo
202.265 120.734 201.593 121.406 200.765 121.406 cv
199.937 121.406 199.265 120.734 199.265 119.906 cv
199.265 119.078 199.937 118.406 200.765 118.406 cv
201.593 118.406 202.265 119.078 202.265 119.906 cv
f
205.265 118.406 mo
205.265 119.234 204.593 119.906 203.765 119.906 cv
202.937 119.906 202.265 119.234 202.265 118.406 cv
202.265 117.578 202.937 116.906 203.765 116.906 cv
204.593 116.906 205.265 117.578 205.265 118.406 cv
f
208.265 37.4063 mo
208.265 38.2344 207.593 38.9063 206.765 38.9063 cv
205.937 38.9063 205.265 38.2344 205.265 37.4063 cv
205.265 36.5781 205.937 35.9063 206.765 35.9063 cv
207.593 35.9063 208.265 36.5781 208.265 37.4063 cv
f
211.265 49.4063 mo
211.265 50.2344 210.593 50.9063 209.765 50.9063 cv
208.937 50.9063 208.265 50.2344 208.265 49.4063 cv
208.265 48.5781 208.937 47.9063 209.765 47.9063 cv
210.593 47.9063 211.265 48.5781 211.265 49.4063 cv
f
215.015 67.4063 mo
215.015 68.2344 214.343 68.9063 213.515 68.9063 cv
212.687 68.9063 212.015 68.2344 212.015 67.4063 cv
212.015 66.5781 212.687 65.9063 213.515 65.9063 cv
214.343 65.9063 215.015 66.5781 215.015 67.4063 cv
f
218.015 86.1563 mo
218.015 86.9844 217.343 87.6563 216.515 87.6563 cv
215.687 87.6563 215.015 86.9844 215.015 86.1563 cv
215.015 85.3281 215.687 84.6563 216.515 84.6563 cv
217.343 84.6563 218.015 85.3281 218.015 86.1563 cv
f
221.015 101.906 mo
221.015 102.734 220.343 103.406 219.515 103.406 cv
218.687 103.406 218.015 102.734 218.015 101.906 cv
218.015 101.078 218.687 100.406 219.515 100.406 cv
220.343 100.406 221.015 101.078 221.015 101.906 cv
f
224.015 113.906 mo
224.015 114.734 223.343 115.406 222.515 115.406 cv
221.687 115.406 221.015 114.734 221.015 113.906 cv
221.015 113.078 221.687 112.406 222.515 112.406 cv
223.343 112.406 224.015 113.078 224.015 113.906 cv
f
227.015 131.156 mo
227.015 131.984 226.343 132.656 225.515 132.656 cv
224.687 132.656 224.015 131.984 224.015 131.156 cv
224.015 130.328 224.687 129.656 225.515 129.656 cv
226.343 129.656 227.015 130.328 227.015 131.156 cv
f
230.015 140.906 mo
230.015 141.734 229.343 142.406 228.515 142.406 cv
227.687 142.406 227.015 141.734 227.015 140.906 cv
227.015 140.078 227.687 139.406 228.515 139.406 cv
229.343 139.406 230.015 140.078 230.015 140.906 cv
f
233.765 157.406 mo
233.765 158.234 233.093 158.906 232.265 158.906 cv
231.437 158.906 230.765 158.234 230.765 157.406 cv
230.765 156.578 231.437 155.906 232.265 155.906 cv
233.093 155.906 233.765 156.578 233.765 157.406 cv
f
236.765 166.406 mo
236.765 167.234 236.093 167.906 235.265 167.906 cv
234.437 167.906 233.765 167.234 233.765 166.406 cv
233.765 165.578 234.437 164.906 235.265 164.906 cv
236.093 164.906 236.765 165.578 236.765 166.406 cv
f
239.765 180.656 mo
239.765 181.484 239.093 182.156 238.265 182.156 cv
237.437 182.156 236.765 181.484 236.765 180.656 cv
236.765 179.828 237.437 179.156 238.265 179.156 cv
239.093 179.156 239.765 179.828 239.765 180.656 cv
f
242.765 187.406 mo
242.765 188.234 242.093 188.906 241.265 188.906 cv
240.437 188.906 239.765 188.234 239.765 187.406 cv
239.765 186.578 240.437 185.906 241.265 185.906 cv
242.093 185.906 242.765 186.578 242.765 187.406 cv
f
245.765 196.406 mo
245.765 197.234 245.093 197.906 244.265 197.906 cv
243.437 197.906 242.765 197.234 242.765 196.406 cv
242.765 195.578 243.437 194.906 244.265 194.906 cv
245.093 194.906 245.765 195.578 245.765 196.406 cv
f
248.765 209.156 mo
248.765 209.984 248.093 210.656 247.265 210.656 cv
246.437 210.656 245.765 209.984 245.765 209.156 cv
245.765 208.328 246.437 207.656 247.265 207.656 cv
248.093 207.656 248.765 208.328 248.765 209.156 cv
f
252.515 213.657 mo
252.515 214.485 251.843 215.157 251.015 215.157 cv
250.187 215.157 249.515 214.485 249.515 213.657 cv
249.515 212.828 250.187 212.157 251.015 212.157 cv
251.843 212.157 252.515 212.828 252.515 213.657 cv
f
255.515 224.157 mo
255.515 224.985 254.843 225.657 254.015 225.657 cv
253.187 225.657 252.515 224.985 252.515 224.157 cv
252.515 223.328 253.187 222.657 254.015 222.657 cv
254.843 222.657 255.515 223.328 255.515 224.157 cv
f
258.515 235.407 mo
258.515 236.235 257.843 236.907 257.015 236.907 cv
256.187 236.907 255.515 236.235 255.515 235.407 cv
255.515 234.578 256.187 233.907 257.015 233.907 cv
257.843 233.907 258.515 234.578 258.515 235.407 cv
f
261.515 239.907 mo
261.515 240.735 260.843 241.407 260.015 241.407 cv
259.187 241.407 258.515 240.735 258.515 239.907 cv
258.515 239.078 259.187 238.407 260.015 238.407 cv
260.843 238.407 261.515 239.078 261.515 239.907 cv
f
264.515 248.907 mo
264.515 249.735 263.843 250.407 263.015 250.407 cv
262.187 250.407 261.515 249.735 261.515 248.907 cv
261.515 248.078 262.187 247.407 263.015 247.407 cv
263.843 247.407 264.515 248.078 264.515 248.907 cv
f
267.515 255.657 mo
267.515 256.485 266.843 257.157 266.015 257.157 cv
265.187 257.157 264.515 256.485 264.515 255.657 cv
264.515 254.828 265.187 254.157 266.015 254.157 cv
266.843 254.157 267.515 254.828 267.515 255.657 cv
f
271.265 257.157 mo
271.265 257.985 270.593 258.657 269.765 258.657 cv
268.937 258.657 268.265 257.985 268.265 257.157 cv
268.265 256.328 268.937 255.657 269.765 255.657 cv
270.593 255.657 271.265 256.328 271.265 257.157 cv
f
274.265 263.157 mo
274.265 263.985 273.593 264.657 272.765 264.657 cv
271.937 264.657 271.265 263.985 271.265 263.157 cv
271.265 262.328 271.937 261.657 272.765 261.657 cv
273.593 261.657 274.265 262.328 274.265 263.157 cv
f
277.265 266.157 mo
277.265 266.985 276.593 267.657 275.765 267.657 cv
274.937 267.657 274.265 266.985 274.265 266.157 cv
274.265 265.328 274.937 264.657 275.765 264.657 cv
276.593 264.657 277.265 265.328 277.265 266.157 cv
f
280.265 274.407 mo
280.265 275.235 279.593 275.907 278.765 275.907 cv
277.937 275.907 277.265 275.235 277.265 274.407 cv
277.265 273.578 277.937 272.907 278.765 272.907 cv
279.593 272.907 280.265 273.578 280.265 274.407 cv
f
283.265 281.157 mo
283.265 281.985 282.593 282.657 281.765 282.657 cv
280.937 282.657 280.265 281.985 280.265 281.157 cv
280.265 280.328 280.937 279.657 281.765 279.657 cv
282.593 279.657 283.265 280.328 283.265 281.157 cv
f
286.265 278.907 mo
286.265 279.735 285.593 280.407 284.765 280.407 cv
283.937 280.407 283.265 279.735 283.265 278.907 cv
283.265 278.078 283.937 277.407 284.765 277.407 cv
285.593 277.407 286.265 278.078 286.265 278.907 cv
f
289.265 284.157 mo
289.265 284.985 288.593 285.657 287.765 285.657 cv
286.937 285.657 286.265 284.985 286.265 284.157 cv
286.265 283.328 286.937 282.657 287.765 282.657 cv
288.593 282.657 289.265 283.328 289.265 284.157 cv
f
293.015 289.407 mo
293.015 290.235 292.343 290.907 291.515 290.907 cv
290.687 290.907 290.015 290.235 290.015 289.407 cv
290.015 288.578 290.687 287.907 291.515 287.907 cv
292.343 287.907 293.015 288.578 293.015 289.407 cv
f
296.015 293.157 mo
296.015 293.985 295.343 294.657 294.515 294.657 cv
293.687 294.657 293.015 293.985 293.015 293.157 cv
293.015 292.328 293.687 291.657 294.515 291.657 cv
295.343 291.657 296.015 292.328 296.015 293.157 cv
f
299.015 294.657 mo
299.015 295.485 298.343 296.157 297.515 296.157 cv
296.687 296.157 296.015 295.485 296.015 294.657 cv
296.015 293.828 296.687 293.157 297.515 293.157 cv
298.343 293.157 299.015 293.828 299.015 294.657 cv
f
302.015 294.657 mo
302.015 295.485 301.343 296.157 300.515 296.157 cv
299.687 296.157 299.015 295.485 299.015 294.657 cv
299.015 293.828 299.687 293.157 300.515 293.157 cv
301.343 293.157 302.015 293.828 302.015 294.657 cv
f
305.015 300.657 mo
305.015 301.485 304.343 302.157 303.515 302.157 cv
302.687 302.157 302.015 301.485 302.015 300.657 cv
302.015 299.828 302.687 299.157 303.515 299.157 cv
304.343 299.157 305.015 299.828 305.015 300.657 cv
f
308.015 305.157 mo
308.015 305.985 307.343 306.657 306.515 306.657 cv
305.687 306.657 305.015 305.985 305.015 305.157 cv
305.015 304.328 305.687 303.657 306.515 303.657 cv
307.343 303.657 308.015 304.328 308.015 305.157 cv
f
311.765 302.907 mo
311.765 303.735 311.093 304.407 310.265 304.407 cv
309.437 304.407 308.765 303.735 308.765 302.907 cv
308.765 302.078 309.437 301.407 310.265 301.407 cv
311.093 301.407 311.765 302.078 311.765 302.907 cv
f
314.765 302.907 mo
314.765 303.735 314.093 304.407 313.265 304.407 cv
312.437 304.407 311.765 303.735 311.765 302.907 cv
311.765 302.078 312.437 301.407 313.265 301.407 cv
314.093 301.407 314.765 302.078 314.765 302.907 cv
f
317.765 302.907 mo
317.765 303.735 317.093 304.407 316.265 304.407 cv
315.437 304.407 314.765 303.735 314.765 302.907 cv
314.765 302.078 315.437 301.407 316.265 301.407 cv
317.093 301.407 317.765 302.078 317.765 302.907 cv
f
320.765 305.907 mo
320.765 306.735 320.093 307.407 319.265 307.407 cv
318.437 307.407 317.765 306.735 317.765 305.907 cv
317.765 305.078 318.437 304.407 319.265 304.407 cv
320.093 304.407 320.765 305.078 320.765 305.907 cv
f
323.765 306.657 mo
323.765 307.485 323.093 308.157 322.265 308.157 cv
321.437 308.157 320.765 307.485 320.765 306.657 cv
320.765 305.828 321.437 305.157 322.265 305.157 cv
323.093 305.157 323.765 305.828 323.765 306.657 cv
f
326.765 308.907 mo
326.765 309.735 326.093 310.407 325.265 310.407 cv
324.437 310.407 323.765 309.735 323.765 308.907 cv
323.765 308.078 324.437 307.407 325.265 307.407 cv
326.093 307.407 326.765 308.078 326.765 308.907 cv
f
330.515 302.907 mo
330.515 303.735 329.843 304.407 329.015 304.407 cv
328.187 304.407 327.515 303.735 327.515 302.907 cv
327.515 302.078 328.187 301.407 329.015 301.407 cv
329.843 301.407 330.515 302.078 330.515 302.907 cv
f
333.515 305.157 mo
333.515 305.985 332.843 306.657 332.015 306.657 cv
331.187 306.657 330.515 305.985 330.515 305.157 cv
330.515 304.328 331.187 303.657 332.015 303.657 cv
332.843 303.657 333.515 304.328 333.515 305.157 cv
f
336.515 305.157 mo
336.515 305.985 335.843 306.657 335.015 306.657 cv
334.187 306.657 333.515 305.985 333.515 305.157 cv
333.515 304.328 334.187 303.657 335.015 303.657 cv
335.843 303.657 336.515 304.328 336.515 305.157 cv
f
339.515 310.407 mo
339.515 311.235 338.843 311.907 338.015 311.907 cv
337.187 311.907 336.515 311.235 336.515 310.407 cv
336.515 309.578 337.187 308.907 338.015 308.907 cv
338.843 308.907 339.515 309.578 339.515 310.407 cv
f
342.515 307.407 mo
342.515 308.235 341.843 308.907 341.015 308.907 cv
340.187 308.907 339.515 308.235 339.515 307.407 cv
339.515 306.578 340.187 305.907 341.015 305.907 cv
341.843 305.907 342.515 306.578 342.515 307.407 cv
f
345.515 310.407 mo
345.515 311.235 344.843 311.907 344.015 311.907 cv
343.187 311.907 342.515 311.235 342.515 310.407 cv
342.515 309.578 343.187 308.907 344.015 308.907 cv
344.843 308.907 345.515 309.578 345.515 310.407 cv
f
349.265 313.407 mo
349.265 314.235 348.593 314.907 347.765 314.907 cv
346.937 314.907 346.265 314.235 346.265 313.407 cv
346.265 312.578 346.937 311.907 347.765 311.907 cv
348.593 311.907 349.265 312.578 349.265 313.407 cv
f
352.265 312.657 mo
352.265 313.485 351.593 314.157 350.765 314.157 cv
349.937 314.157 349.265 313.485 349.265 312.657 cv
349.265 311.828 349.937 311.157 350.765 311.157 cv
351.593 311.157 352.265 311.828 352.265 312.657 cv
f
355.265 311.907 mo
355.265 312.735 354.593 313.407 353.765 313.407 cv
352.937 313.407 352.265 312.735 352.265 311.907 cv
352.265 311.078 352.937 310.407 353.765 310.407 cv
354.593 310.407 355.265 311.078 355.265 311.907 cv
f
358.265 314.907 mo
358.265 315.735 357.593 316.407 356.765 316.407 cv
355.937 316.407 355.265 315.735 355.265 314.907 cv
355.265 314.078 355.937 313.407 356.765 313.407 cv
357.593 313.407 358.265 314.078 358.265 314.907 cv
f
361.265 314.907 mo
361.265 315.735 360.593 316.407 359.765 316.407 cv
358.937 316.407 358.265 315.735 358.265 314.907 cv
358.265 314.078 358.937 313.407 359.765 313.407 cv
360.593 313.407 361.265 314.078 361.265 314.907 cv
f
364.265 316.407 mo
364.265 317.235 363.593 317.907 362.765 317.907 cv
361.937 317.907 361.265 317.235 361.265 316.407 cv
361.265 315.578 361.937 314.907 362.765 314.907 cv
363.593 314.907 364.265 315.578 364.265 316.407 cv
f
367.265 320.907 mo
367.265 321.735 366.593 322.407 365.765 322.407 cv
364.937 322.407 364.265 321.735 364.265 320.907 cv
364.265 320.078 364.937 319.407 365.765 319.407 cv
366.593 319.407 367.265 320.078 367.265 320.907 cv
f
371.015 314.907 mo
371.015 315.735 370.343 316.407 369.515 316.407 cv
368.687 316.407 368.015 315.735 368.015 314.907 cv
368.015 314.078 368.687 313.407 369.515 313.407 cv
370.343 313.407 371.015 314.078 371.015 314.907 cv
f
374.015 317.157 mo
374.015 317.985 373.343 318.657 372.515 318.657 cv
371.687 318.657 371.015 317.985 371.015 317.157 cv
371.015 316.328 371.687 315.657 372.515 315.657 cv
373.343 315.657 374.015 316.328 374.015 317.157 cv
f
377.015 320.907 mo
377.015 321.735 376.343 322.407 375.515 322.407 cv
374.687 322.407 374.015 321.735 374.015 320.907 cv
374.015 320.078 374.687 319.407 375.515 319.407 cv
376.343 319.407 377.015 320.078 377.015 320.907 cv
f
380.015 316.407 mo
380.015 317.235 379.343 317.907 378.515 317.907 cv
377.687 317.907 377.015 317.235 377.015 316.407 cv
377.015 315.578 377.687 314.907 378.515 314.907 cv
379.343 314.907 380.015 315.578 380.015 316.407 cv
f
383.015 317.907 mo
383.015 318.735 382.343 319.407 381.515 319.407 cv
380.687 319.407 380.015 318.735 380.015 317.907 cv
380.015 317.078 380.687 316.407 381.515 316.407 cv
382.343 316.407 383.015 317.078 383.015 317.907 cv
f
386.015 325.407 mo
386.015 326.235 385.343 326.907 384.515 326.907 cv
383.687 326.907 383.015 326.235 383.015 325.407 cv
383.015 324.578 383.687 323.907 384.515 323.907 cv
385.343 323.907 386.015 324.578 386.015 325.407 cv
f
389.765 322.407 mo
389.765 323.235 389.093 323.907 388.265 323.907 cv
387.437 323.907 386.765 323.235 386.765 322.407 cv
386.765 321.578 387.437 320.907 388.265 320.907 cv
389.093 320.907 389.765 321.578 389.765 322.407 cv
f
392.765 317.157 mo
392.765 317.985 392.093 318.657 391.265 318.657 cv
390.437 318.657 389.765 317.985 389.765 317.157 cv
389.765 316.328 390.437 315.657 391.265 315.657 cv
392.093 315.657 392.765 316.328 392.765 317.157 cv
f
395.765 326.157 mo
395.765 326.985 395.093 327.657 394.265 327.657 cv
393.437 327.657 392.765 326.985 392.765 326.157 cv
392.765 325.328 393.437 324.657 394.265 324.657 cv
395.093 324.657 395.765 325.328 395.765 326.157 cv
f
398.765 322.407 mo
398.765 323.235 398.093 323.907 397.265 323.907 cv
396.437 323.907 395.765 323.235 395.765 322.407 cv
395.765 321.578 396.437 320.907 397.265 320.907 cv
398.093 320.907 398.765 321.578 398.765 322.407 cv
f
401.765 326.157 mo
401.765 326.985 401.093 327.657 400.265 327.657 cv
399.437 327.657 398.765 326.985 398.765 326.157 cv
398.765 325.328 399.437 324.657 400.265 324.657 cv
401.093 324.657 401.765 325.328 401.765 326.157 cv
f
404.765 329.157 mo
404.765 329.985 404.093 330.657 403.265 330.657 cv
402.437 330.657 401.765 329.985 401.765 329.157 cv
401.765 328.328 402.437 327.657 403.265 327.657 cv
404.093 327.657 404.765 328.328 404.765 329.157 cv
f
408.515 327.657 mo
408.515 328.485 407.843 329.157 407.015 329.157 cv
406.187 329.157 405.515 328.485 405.515 327.657 cv
405.515 326.828 406.187 326.157 407.015 326.157 cv
407.843 326.157 408.515 326.828 408.515 327.657 cv
f
411.515 328.407 mo
411.515 329.235 410.843 329.907 410.015 329.907 cv
409.187 329.907 408.515 329.235 408.515 328.407 cv
408.515 327.578 409.187 326.907 410.015 326.907 cv
410.843 326.907 411.515 327.578 411.515 328.407 cv
f
414.515 327.657 mo
414.515 328.485 413.843 329.157 413.015 329.157 cv
412.187 329.157 411.515 328.485 411.515 327.657 cv
411.515 326.828 412.187 326.157 413.015 326.157 cv
413.843 326.157 414.515 326.828 414.515 327.657 cv
f
417.515 326.907 mo
417.515 327.735 416.843 328.407 416.015 328.407 cv
415.187 328.407 414.515 327.735 414.515 326.907 cv
414.515 326.078 415.187 325.407 416.015 325.407 cv
416.843 325.407 417.515 326.078 417.515 326.907 cv
f
420.515 330.657 mo
420.515 331.485 419.843 332.157 419.015 332.157 cv
418.187 332.157 417.515 331.485 417.515 330.657 cv
417.515 329.828 418.187 329.157 419.015 329.157 cv
419.843 329.157 420.515 329.828 420.515 330.657 cv
f
423.515 329.907 mo
423.515 330.735 422.843 331.407 422.015 331.407 cv
421.187 331.407 420.515 330.735 420.515 329.907 cv
420.515 329.078 421.187 328.407 422.015 328.407 cv
422.843 328.407 423.515 329.078 423.515 329.907 cv
f
427.265 336.657 mo
427.265 337.485 426.593 338.157 425.765 338.157 cv
424.937 338.157 424.265 337.485 424.265 336.657 cv
424.265 335.828 424.937 335.157 425.765 335.157 cv
426.593 335.157 427.265 335.828 427.265 336.657 cv
f
430.265 332.907 mo
430.265 333.735 429.593 334.407 428.765 334.407 cv
427.937 334.407 427.265 333.735 427.265 332.907 cv
427.265 332.078 427.937 331.407 428.765 331.407 cv
429.593 331.407 430.265 332.078 430.265 332.907 cv
f
433.265 335.907 mo
433.265 336.735 432.593 337.407 431.765 337.407 cv
430.937 337.407 430.265 336.735 430.265 335.907 cv
430.265 335.078 430.937 334.407 431.765 334.407 cv
432.593 334.407 433.265 335.078 433.265 335.907 cv
f
436.265 340.407 mo
436.265 341.235 435.593 341.907 434.765 341.907 cv
433.937 341.907 433.265 341.235 433.265 340.407 cv
433.265 339.578 433.937 338.907 434.765 338.907 cv
435.593 338.907 436.265 339.578 436.265 340.407 cv
f
439.265 338.157 mo
439.265 338.985 438.593 339.657 437.765 339.657 cv
436.937 339.657 436.265 338.985 436.265 338.157 cv
436.265 337.328 436.937 336.657 437.765 336.657 cv
438.593 336.657 439.265 337.328 439.265 338.157 cv
f
442.265 338.907 mo
442.265 339.735 441.593 340.407 440.765 340.407 cv
439.937 340.407 439.265 339.735 439.265 338.907 cv
439.265 338.078 439.937 337.407 440.765 337.407 cv
441.593 337.407 442.265 338.078 442.265 338.907 cv
f
445.265 338.907 mo
445.265 339.735 444.593 340.407 443.765 340.407 cv
442.937 340.407 442.265 339.735 442.265 338.907 cv
442.265 338.078 442.937 337.407 443.765 337.407 cv
444.593 337.407 445.265 338.078 445.265 338.907 cv
f
449.015 340.407 mo
449.015 341.235 448.343 341.907 447.515 341.907 cv
446.687 341.907 446.015 341.235 446.015 340.407 cv
446.015 339.578 446.687 338.907 447.515 338.907 cv
448.343 338.907 449.015 339.578 449.015 340.407 cv
f
452.015 348.657 mo
452.015 349.485 451.343 350.157 450.515 350.157 cv
449.687 350.157 449.015 349.485 449.015 348.657 cv
449.015 347.828 449.687 347.157 450.515 347.157 cv
451.343 347.157 452.015 347.828 452.015 348.657 cv
f
455.015 341.907 mo
455.015 342.735 454.343 343.407 453.515 343.407 cv
452.687 343.407 452.015 342.735 452.015 341.907 cv
452.015 341.078 452.687 340.407 453.515 340.407 cv
454.343 340.407 455.015 341.078 455.015 341.907 cv
f
458.015 340.407 mo
458.015 341.235 457.343 341.907 456.515 341.907 cv
455.687 341.907 455.015 341.235 455.015 340.407 cv
455.015 339.578 455.687 338.907 456.515 338.907 cv
457.343 338.907 458.015 339.578 458.015 340.407 cv
f
461.015 344.157 mo
461.015 344.985 460.343 345.657 459.515 345.657 cv
458.687 345.657 458.015 344.985 458.015 344.157 cv
458.015 343.328 458.687 342.657 459.515 342.657 cv
460.343 342.657 461.015 343.328 461.015 344.157 cv
f
464.015 347.157 mo
464.015 347.985 463.343 348.657 462.515 348.657 cv
461.687 348.657 461.015 347.985 461.015 347.157 cv
461.015 346.328 461.687 345.657 462.515 345.657 cv
463.343 345.657 464.015 346.328 464.015 347.157 cv
f
467.765 344.157 mo
467.765 344.985 467.093 345.657 466.265 345.657 cv
465.437 345.657 464.765 344.985 464.765 344.157 cv
464.765 343.328 465.437 342.657 466.265 342.657 cv
467.093 342.657 467.765 343.328 467.765 344.157 cv
f
470.765 344.907 mo
470.765 345.735 470.093 346.407 469.265 346.407 cv
468.437 346.407 467.765 345.735 467.765 344.907 cv
467.765 344.078 468.437 343.407 469.265 343.407 cv
470.093 343.407 470.765 344.078 470.765 344.907 cv
f
473.765 347.907 mo
473.765 348.735 473.093 349.407 472.265 349.407 cv
471.437 349.407 470.765 348.735 470.765 347.907 cv
470.765 347.078 471.437 346.407 472.265 346.407 cv
473.093 346.407 473.765 347.078 473.765 347.907 cv
f
476.765 347.157 mo
476.765 347.985 476.093 348.657 475.265 348.657 cv
474.437 348.657 473.765 347.985 473.765 347.157 cv
473.765 346.328 474.437 345.657 475.265 345.657 cv
476.093 345.657 476.765 346.328 476.765 347.157 cv
f
479.765 348.657 mo
479.765 349.485 479.093 350.157 478.265 350.157 cv
477.437 350.157 476.765 349.485 476.765 348.657 cv
476.765 347.828 477.437 347.157 478.265 347.157 cv
479.093 347.157 479.765 347.828 479.765 348.657 cv
f
482.765 353.157 mo
482.765 353.985 482.093 354.657 481.265 354.657 cv
480.437 354.657 479.765 353.985 479.765 353.157 cv
479.765 352.328 480.437 351.657 481.265 351.657 cv
482.093 351.657 482.765 352.328 482.765 353.157 cv
f
486.515 351.657 mo
486.515 352.485 485.843 353.157 485.015 353.157 cv
484.187 353.157 483.515 352.485 483.515 351.657 cv
483.515 350.828 484.187 350.157 485.015 350.157 cv
485.843 350.157 486.515 350.828 486.515 351.657 cv
f
489.515 348.657 mo
489.515 349.485 488.843 350.157 488.015 350.157 cv
487.187 350.157 486.515 349.485 486.515 348.657 cv
486.515 347.828 487.187 347.157 488.015 347.157 cv
488.843 347.157 489.515 347.828 489.515 348.657 cv
f
492.515 356.907 mo
492.515 357.735 491.843 358.407 491.015 358.407 cv
490.187 358.407 489.515 357.735 489.515 356.907 cv
489.515 356.078 490.187 355.407 491.015 355.407 cv
491.843 355.407 492.515 356.078 492.515 356.907 cv
f
495.515 352.407 mo
495.515 353.235 494.843 353.907 494.015 353.907 cv
493.187 353.907 492.515 353.235 492.515 352.407 cv
492.515 351.578 493.187 350.907 494.015 350.907 cv
494.843 350.907 495.515 351.578 495.515 352.407 cv
f
498.515 350.907 mo
498.515 351.735 497.843 352.407 497.015 352.407 cv
496.187 352.407 495.515 351.735 495.515 350.907 cv
495.515 350.078 496.187 349.407 497.015 349.407 cv
497.843 349.407 498.515 350.078 498.515 350.907 cv
f
501.515 353.157 mo
501.515 353.985 500.843 354.657 500.015 354.657 cv
499.187 354.657 498.515 353.985 498.515 353.157 cv
498.515 352.328 499.187 351.657 500.015 351.657 cv
500.843 351.657 501.515 352.328 501.515 353.157 cv
f
40.2642 131.156 mo
40.2642 131.984 39.5923 132.656 38.7642 132.656 cv
37.936 132.656 37.2642 131.984 37.2642 131.156 cv
37.2642 130.328 37.936 129.656 38.7642 129.656 cv
39.5923 129.656 40.2642 130.328 40.2642 131.156 cv
.0131228 .959808 .914061 .00106813 cmyk
f
43.2642 128.156 mo
43.2642 128.984 42.5923 129.656 41.7642 129.656 cv
40.936 129.656 40.2642 128.984 40.2642 128.156 cv
40.2642 127.328 40.936 126.656 41.7642 126.656 cv
42.5923 126.656 43.2642 127.328 43.2642 128.156 cv
f
46.2642 127.406 mo
46.2642 128.234 45.5923 128.906 44.7642 128.906 cv
43.936 128.906 43.2642 128.234 43.2642 127.406 cv
43.2642 126.578 43.936 125.906 44.7642 125.906 cv
45.5923 125.906 46.2642 126.578 46.2642 127.406 cv
f
49.2642 128.906 mo
49.2642 129.734 48.5923 130.406 47.7642 130.406 cv
46.936 130.406 46.2642 129.734 46.2642 128.906 cv
46.2642 128.078 46.936 127.406 47.7642 127.406 cv
48.5923 127.406 49.2642 128.078 49.2642 128.906 cv
f
52.2642 131.156 mo
52.2642 131.984 51.5923 132.656 50.7642 132.656 cv
49.936 132.656 49.2642 131.984 49.2642 131.156 cv
49.2642 130.328 49.936 129.656 50.7642 129.656 cv
51.5923 129.656 52.2642 130.328 52.2642 131.156 cv
f
55.2637 128.156 mo
55.2637 128.984 54.5928 129.656 53.7637 129.656 cv
52.936 129.656 52.2642 128.984 52.2642 128.156 cv
52.2642 127.328 52.936 126.656 53.7637 126.656 cv
54.5928 126.656 55.2637 127.328 55.2637 128.156 cv
f
59.0137 131.906 mo
59.0137 132.734 58.3428 133.406 57.5137 133.406 cv
56.6855 133.406 56.0137 132.734 56.0137 131.906 cv
56.0137 131.078 56.6855 130.406 57.5137 130.406 cv
58.3428 130.406 59.0137 131.078 59.0137 131.906 cv
f
65.0137 128.906 mo
65.0137 129.734 64.3428 130.406 63.5137 130.406 cv
62.6855 130.406 62.0137 129.734 62.0137 128.906 cv
62.0137 128.078 62.6855 127.406 63.5137 127.406 cv
64.3428 127.406 65.0137 128.078 65.0137 128.906 cv
f
68.0137 131.906 mo
68.0137 132.734 67.3428 133.406 66.5137 133.406 cv
65.6855 133.406 65.0137 132.734 65.0137 131.906 cv
65.0137 131.078 65.6855 130.406 66.5137 130.406 cv
67.3428 130.406 68.0137 131.078 68.0137 131.906 cv
f
71.0137 129.656 mo
71.0137 130.484 70.3428 131.156 69.5137 131.156 cv
68.6855 131.156 68.0137 130.484 68.0137 129.656 cv
68.0137 128.828 68.6855 128.156 69.5137 128.156 cv
70.3428 128.156 71.0137 128.828 71.0137 129.656 cv
f
74.0137 125.156 mo
74.0137 125.984 73.3428 126.656 72.5137 126.656 cv
71.6855 126.656 71.0137 125.984 71.0137 125.156 cv
71.0137 124.328 71.6855 123.656 72.5137 123.656 cv
73.3428 123.656 74.0137 124.328 74.0137 125.156 cv
f
77.7637 131.156 mo
77.7637 131.984 77.0928 132.656 76.2637 132.656 cv
75.4355 132.656 74.7637 131.984 74.7637 131.156 cv
74.7637 130.328 75.4355 129.656 76.2637 129.656 cv
77.0928 129.656 77.7637 130.328 77.7637 131.156 cv
f
80.7637 132.656 mo
80.7637 133.484 80.0928 134.156 79.2637 134.156 cv
78.4355 134.156 77.7637 133.484 77.7637 132.656 cv
77.7637 131.828 78.4355 131.156 79.2637 131.156 cv
80.0928 131.156 80.7637 131.828 80.7637 132.656 cv
f
83.7637 132.656 mo
83.7637 133.484 83.0928 134.156 82.2637 134.156 cv
81.4355 134.156 80.7637 133.484 80.7637 132.656 cv
80.7637 131.828 81.4355 131.156 82.2637 131.156 cv
83.0928 131.156 83.7637 131.828 83.7637 132.656 cv
f
86.7637 129.656 mo
86.7637 130.484 86.0928 131.156 85.2637 131.156 cv
84.4355 131.156 83.7637 130.484 83.7637 129.656 cv
83.7637 128.828 84.4355 128.156 85.2637 128.156 cv
86.0928 128.156 86.7637 128.828 86.7637 129.656 cv
f
89.7637 125.906 mo
89.7637 126.734 89.0928 127.406 88.2637 127.406 cv
87.4355 127.406 86.7637 126.734 86.7637 125.906 cv
86.7637 125.078 87.4355 124.406 88.2637 124.406 cv
89.0928 124.406 89.7637 125.078 89.7637 125.906 cv
f
92.7637 130.406 mo
92.7637 131.234 92.0928 131.906 91.2637 131.906 cv
90.4355 131.906 89.7637 131.234 89.7637 130.406 cv
89.7637 129.578 90.4355 128.906 91.2637 128.906 cv
92.0928 128.906 92.7637 129.578 92.7637 130.406 cv
f
96.5137 127.406 mo
96.5137 128.234 95.8428 128.906 95.0137 128.906 cv
94.1855 128.906 93.5137 128.234 93.5137 127.406 cv
93.5137 126.578 94.1855 125.906 95.0137 125.906 cv
95.8428 125.906 96.5137 126.578 96.5137 127.406 cv
f
99.5137 129.656 mo
99.5137 130.484 98.8428 131.156 98.0137 131.156 cv
97.1855 131.156 96.5137 130.484 96.5137 129.656 cv
96.5137 128.828 97.1855 128.156 98.0137 128.156 cv
98.8428 128.156 99.5137 128.828 99.5137 129.656 cv
f
102.514 129.656 mo
102.514 130.484 101.843 131.156 101.014 131.156 cv
100.186 131.156 99.5137 130.484 99.5137 129.656 cv
99.5137 128.828 100.186 128.156 101.014 128.156 cv
101.843 128.156 102.514 128.828 102.514 129.656 cv
f
105.514 128.156 mo
105.514 128.984 104.843 129.656 104.014 129.656 cv
103.186 129.656 102.514 128.984 102.514 128.156 cv
102.514 127.328 103.186 126.656 104.014 126.656 cv
104.843 126.656 105.514 127.328 105.514 128.156 cv
f
108.514 129.656 mo
108.514 130.484 107.843 131.156 107.014 131.156 cv
106.186 131.156 105.514 130.484 105.514 129.656 cv
105.514 128.828 106.186 128.156 107.014 128.156 cv
107.843 128.156 108.514 128.828 108.514 129.656 cv
f
111.514 130.406 mo
111.514 131.234 110.843 131.906 110.014 131.906 cv
109.186 131.906 108.514 131.234 108.514 130.406 cv
108.514 129.578 109.186 128.906 110.014 128.906 cv
110.843 128.906 111.514 129.578 111.514 130.406 cv
f
115.264 128.906 mo
115.264 129.734 114.593 130.406 113.764 130.406 cv
112.936 130.406 112.264 129.734 112.264 128.906 cv
112.264 128.078 112.936 127.406 113.764 127.406 cv
114.593 127.406 115.264 128.078 115.264 128.906 cv
f
118.264 128.906 mo
118.264 129.734 117.593 130.406 116.764 130.406 cv
115.936 130.406 115.264 129.734 115.264 128.906 cv
115.264 128.078 115.936 127.406 116.764 127.406 cv
117.593 127.406 118.264 128.078 118.264 128.906 cv
f
121.264 127.406 mo
121.264 128.234 120.593 128.906 119.764 128.906 cv
118.936 128.906 118.264 128.234 118.264 127.406 cv
118.264 126.578 118.936 125.906 119.764 125.906 cv
120.593 125.906 121.264 126.578 121.264 127.406 cv
f
124.264 131.156 mo
124.264 131.984 123.593 132.656 122.764 132.656 cv
121.936 132.656 121.264 131.984 121.264 131.156 cv
121.264 130.328 121.936 129.656 122.764 129.656 cv
123.593 129.656 124.264 130.328 124.264 131.156 cv
f
127.264 129.656 mo
127.264 130.484 126.593 131.156 125.764 131.156 cv
124.936 131.156 124.264 130.484 124.264 129.656 cv
124.264 128.828 124.936 128.156 125.764 128.156 cv
126.593 128.156 127.264 128.828 127.264 129.656 cv
f
130.264 129.656 mo
130.264 130.484 129.593 131.156 128.764 131.156 cv
127.936 131.156 127.264 130.484 127.264 129.656 cv
127.264 128.828 127.936 128.156 128.764 128.156 cv
129.593 128.156 130.264 128.828 130.264 129.656 cv
f
133.264 128.906 mo
133.264 129.734 132.593 130.406 131.764 130.406 cv
130.936 130.406 130.264 129.734 130.264 128.906 cv
130.264 128.078 130.936 127.406 131.764 127.406 cv
132.593 127.406 133.264 128.078 133.264 128.906 cv
f
137.014 130.406 mo
137.014 131.234 136.343 131.906 135.514 131.906 cv
134.686 131.906 134.014 131.234 134.014 130.406 cv
134.014 129.578 134.686 128.906 135.514 128.906 cv
136.343 128.906 137.014 129.578 137.014 130.406 cv
f
140.014 129.656 mo
140.014 130.484 139.343 131.156 138.514 131.156 cv
137.686 131.156 137.014 130.484 137.014 129.656 cv
137.014 128.828 137.686 128.156 138.514 128.156 cv
139.343 128.156 140.014 128.828 140.014 129.656 cv
f
143.014 131.156 mo
143.014 131.984 142.343 132.656 141.514 132.656 cv
140.686 132.656 140.014 131.984 140.014 131.156 cv
140.014 130.328 140.686 129.656 141.514 129.656 cv
142.343 129.656 143.014 130.328 143.014 131.156 cv
f
146.014 130.406 mo
146.014 131.234 145.343 131.906 144.514 131.906 cv
143.686 131.906 143.014 131.234 143.014 130.406 cv
143.014 129.578 143.686 128.906 144.514 128.906 cv
145.343 128.906 146.014 129.578 146.014 130.406 cv
f
149.014 128.906 mo
149.014 129.734 148.343 130.406 147.514 130.406 cv
146.686 130.406 146.014 129.734 146.014 128.906 cv
146.014 128.078 146.686 127.406 147.514 127.406 cv
148.343 127.406 149.014 128.078 149.014 128.906 cv
f
152.014 129.656 mo
152.014 130.484 151.343 131.156 150.514 131.156 cv
149.686 131.156 149.014 130.484 149.014 129.656 cv
149.014 128.828 149.686 128.156 150.514 128.156 cv
151.343 128.156 152.014 128.828 152.014 129.656 cv
f
155.764 129.656 mo
155.764 130.484 155.093 131.156 154.264 131.156 cv
153.436 131.156 152.764 130.484 152.764 129.656 cv
152.764 128.828 153.436 128.156 154.264 128.156 cv
155.093 128.156 155.764 128.828 155.764 129.656 cv
f
158.764 129.656 mo
158.764 130.484 158.093 131.156 157.264 131.156 cv
156.436 131.156 155.764 130.484 155.764 129.656 cv
155.764 128.828 156.436 128.156 157.264 128.156 cv
158.093 128.156 158.764 128.828 158.764 129.656 cv
f
161.764 126.656 mo
161.764 127.484 161.093 128.156 160.264 128.156 cv
159.436 128.156 158.764 127.484 158.764 126.656 cv
158.764 125.828 159.436 125.156 160.264 125.156 cv
161.093 125.156 161.764 125.828 161.764 126.656 cv
f
164.764 128.906 mo
164.764 129.734 164.093 130.406 163.264 130.406 cv
162.436 130.406 161.764 129.734 161.764 128.906 cv
161.764 128.078 162.436 127.406 163.264 127.406 cv
164.093 127.406 164.764 128.078 164.764 128.906 cv
f
167.764 128.156 mo
167.764 128.984 167.093 129.656 166.264 129.656 cv
165.436 129.656 164.764 128.984 164.764 128.156 cv
164.764 127.328 165.436 126.656 166.264 126.656 cv
167.093 126.656 167.764 127.328 167.764 128.156 cv
f
170.764 127.406 mo
170.764 128.234 170.093 128.906 169.264 128.906 cv
168.436 128.906 167.764 128.234 167.764 127.406 cv
167.764 126.578 168.436 125.906 169.264 125.906 cv
170.093 125.906 170.764 126.578 170.764 127.406 cv
f
174.514 128.906 mo
174.514 129.734 173.843 130.406 173.014 130.406 cv
172.186 130.406 171.514 129.734 171.514 128.906 cv
171.514 128.078 172.186 127.406 173.014 127.406 cv
173.843 127.406 174.514 128.078 174.514 128.906 cv
f
177.514 127.406 mo
177.514 128.234 176.843 128.906 176.014 128.906 cv
175.186 128.906 174.514 128.234 174.514 127.406 cv
174.514 126.578 175.186 125.906 176.014 125.906 cv
176.843 125.906 177.514 126.578 177.514 127.406 cv
f
180.514 126.656 mo
180.514 127.484 179.843 128.156 179.014 128.156 cv
178.186 128.156 177.514 127.484 177.514 126.656 cv
177.514 125.828 178.186 125.156 179.014 125.156 cv
179.843 125.156 180.514 125.828 180.514 126.656 cv
f
183.514 128.156 mo
183.514 128.984 182.843 129.656 182.014 129.656 cv
181.186 129.656 180.514 128.984 180.514 128.156 cv
180.514 127.328 181.186 126.656 182.014 126.656 cv
182.843 126.656 183.514 127.328 183.514 128.156 cv
f
186.514 127.406 mo
186.514 128.234 185.843 128.906 185.014 128.906 cv
184.186 128.906 183.514 128.234 183.514 127.406 cv
183.514 126.578 184.186 125.906 185.014 125.906 cv
185.843 125.906 186.514 126.578 186.514 127.406 cv
f
189.514 130.406 mo
189.514 131.234 188.843 131.906 188.014 131.906 cv
187.186 131.906 186.514 131.234 186.514 130.406 cv
186.514 129.578 187.186 128.906 188.014 128.906 cv
188.843 128.906 189.514 129.578 189.514 130.406 cv
f
193.264 126.656 mo
193.264 127.484 192.593 128.156 191.764 128.156 cv
190.936 128.156 190.264 127.484 190.264 126.656 cv
190.264 125.828 190.936 125.156 191.764 125.156 cv
192.593 125.156 193.264 125.828 193.264 126.656 cv
f
196.265 127.406 mo
196.265 128.234 195.593 128.906 194.765 128.906 cv
193.937 128.906 193.264 128.234 193.264 127.406 cv
193.264 126.578 193.937 125.906 194.765 125.906 cv
195.593 125.906 196.265 126.578 196.265 127.406 cv
f
199.265 125.156 mo
199.265 125.984 198.593 126.656 197.765 126.656 cv
196.937 126.656 196.265 125.984 196.265 125.156 cv
196.265 124.328 196.937 123.656 197.765 123.656 cv
198.593 123.656 199.265 124.328 199.265 125.156 cv
f
202.265 122.156 mo
202.265 122.984 201.593 123.656 200.765 123.656 cv
199.937 123.656 199.265 122.984 199.265 122.156 cv
199.265 121.328 199.937 120.656 200.765 120.656 cv
201.593 120.656 202.265 121.328 202.265 122.156 cv
f
205.265 113.906 mo
205.265 114.734 204.593 115.406 203.765 115.406 cv
202.937 115.406 202.265 114.734 202.265 113.906 cv
202.265 113.078 202.937 112.406 203.765 112.406 cv
204.593 112.406 205.265 113.078 205.265 113.906 cv
f
208.265 39.6563 mo
208.265 40.4844 207.593 41.1563 206.765 41.1563 cv
205.937 41.1563 205.265 40.4844 205.265 39.6563 cv
205.265 38.8281 205.937 38.1563 206.765 38.1563 cv
207.593 38.1563 208.265 38.8281 208.265 39.6563 cv
f
211.265 47.9063 mo
211.265 48.7344 210.593 49.4063 209.765 49.4063 cv
208.937 49.4063 208.265 48.7344 208.265 47.9063 cv
208.265 47.0781 208.937 46.4063 209.765 46.4063 cv
210.593 46.4063 211.265 47.0781 211.265 47.9063 cv
f
215.015 60.6563 mo
215.015 61.4844 214.343 62.1563 213.515 62.1563 cv
212.687 62.1563 212.015 61.4844 212.015 60.6563 cv
212.015 59.8281 212.687 59.1563 213.515 59.1563 cv
214.343 59.1563 215.015 59.8281 215.015 60.6563 cv
f
218.015 74.9063 mo
218.015 75.7344 217.343 76.4063 216.515 76.4063 cv
215.687 76.4063 215.015 75.7344 215.015 74.9063 cv
215.015 74.0781 215.687 73.4063 216.515 73.4063 cv
217.343 73.4063 218.015 74.0781 218.015 74.9063 cv
f
221.015 86.9063 mo
221.015 87.7344 220.343 88.4063 219.515 88.4063 cv
218.687 88.4063 218.015 87.7344 218.015 86.9063 cv
218.015 86.0781 218.687 85.4063 219.515 85.4063 cv
220.343 85.4063 221.015 86.0781 221.015 86.9063 cv
f
224.015 95.1563 mo
224.015 95.9844 223.343 96.6563 222.515 96.6563 cv
221.687 96.6563 221.015 95.9844 221.015 95.1563 cv
221.015 94.3281 221.687 93.6563 222.515 93.6563 cv
223.343 93.6563 224.015 94.3281 224.015 95.1563 cv
f
227.015 109.406 mo
227.015 110.234 226.343 110.906 225.515 110.906 cv
224.687 110.906 224.015 110.234 224.015 109.406 cv
224.015 108.578 224.687 107.906 225.515 107.906 cv
226.343 107.906 227.015 108.578 227.015 109.406 cv
f
230.015 116.156 mo
230.015 116.984 229.343 117.656 228.515 117.656 cv
227.687 117.656 227.015 116.984 227.015 116.156 cv
227.015 115.328 227.687 114.656 228.515 114.656 cv
229.343 114.656 230.015 115.328 230.015 116.156 cv
f
233.765 128.156 mo
233.765 128.984 233.093 129.656 232.265 129.656 cv
231.437 129.656 230.765 128.984 230.765 128.156 cv
230.765 127.328 231.437 126.656 232.265 126.656 cv
233.093 126.656 233.765 127.328 233.765 128.156 cv
f
236.765 135.656 mo
236.765 136.484 236.093 137.156 235.265 137.156 cv
234.437 137.156 233.765 136.484 233.765 135.656 cv
233.765 134.828 234.437 134.156 235.265 134.156 cv
236.093 134.156 236.765 134.828 236.765 135.656 cv
f
239.765 145.406 mo
239.765 146.234 239.093 146.906 238.265 146.906 cv
237.437 146.906 236.765 146.234 236.765 145.406 cv
236.765 144.578 237.437 143.906 238.265 143.906 cv
239.093 143.906 239.765 144.578 239.765 145.406 cv
f
242.765 149.906 mo
242.765 150.734 242.093 151.406 241.265 151.406 cv
240.437 151.406 239.765 150.734 239.765 149.906 cv
239.765 149.078 240.437 148.406 241.265 148.406 cv
242.093 148.406 242.765 149.078 242.765 149.906 cv
f
245.765 156.656 mo
245.765 157.484 245.093 158.156 244.265 158.156 cv
243.437 158.156 242.765 157.484 242.765 156.656 cv
242.765 155.828 243.437 155.156 244.265 155.156 cv
245.093 155.156 245.765 155.828 245.765 156.656 cv
f
248.765 165.656 mo
248.765 166.484 248.093 167.156 247.265 167.156 cv
246.437 167.156 245.765 166.484 245.765 165.656 cv
245.765 164.828 246.437 164.156 247.265 164.156 cv
248.093 164.156 248.765 164.828 248.765 165.656 cv
f
252.515 170.156 mo
252.515 170.984 251.843 171.656 251.015 171.656 cv
250.187 171.656 249.515 170.984 249.515 170.156 cv
249.515 169.328 250.187 168.656 251.015 168.656 cv
251.843 168.656 252.515 169.328 252.515 170.156 cv
f
255.515 177.656 mo
255.515 178.484 254.843 179.156 254.015 179.156 cv
253.187 179.156 252.515 178.484 252.515 177.656 cv
252.515 176.828 253.187 176.156 254.015 176.156 cv
254.843 176.156 255.515 176.828 255.515 177.656 cv
f
258.515 182.906 mo
258.515 183.734 257.843 184.406 257.015 184.406 cv
256.187 184.406 255.515 183.734 255.515 182.906 cv
255.515 182.078 256.187 181.406 257.015 181.406 cv
257.843 181.406 258.515 182.078 258.515 182.906 cv
f
261.515 189.656 mo
261.515 190.484 260.843 191.156 260.015 191.156 cv
259.187 191.156 258.515 190.484 258.515 189.656 cv
258.515 188.828 259.187 188.156 260.015 188.156 cv
260.843 188.156 261.515 188.828 261.515 189.656 cv
f
264.515 195.656 mo
264.515 196.484 263.843 197.156 263.015 197.156 cv
262.187 197.156 261.515 196.484 261.515 195.656 cv
261.515 194.828 262.187 194.156 263.015 194.156 cv
263.843 194.156 264.515 194.828 264.515 195.656 cv
f
267.515 200.156 mo
267.515 200.984 266.843 201.656 266.015 201.656 cv
265.187 201.656 264.515 200.984 264.515 200.156 cv
264.515 199.328 265.187 198.656 266.015 198.656 cv
266.843 198.656 267.515 199.328 267.515 200.156 cv
f
271.265 200.906 mo
271.265 201.734 270.593 202.406 269.765 202.406 cv
268.937 202.406 268.265 201.734 268.265 200.906 cv
268.265 200.078 268.937 199.406 269.765 199.406 cv
270.593 199.406 271.265 200.078 271.265 200.906 cv
f
274.265 205.406 mo
274.265 206.234 273.593 206.906 272.765 206.906 cv
271.937 206.906 271.265 206.234 271.265 205.406 cv
271.265 204.578 271.937 203.906 272.765 203.906 cv
273.593 203.906 274.265 204.578 274.265 205.406 cv
f
277.265 209.156 mo
277.265 209.984 276.593 210.656 275.765 210.656 cv
274.937 210.656 274.265 209.984 274.265 209.156 cv
274.265 208.328 274.937 207.656 275.765 207.656 cv
276.593 207.656 277.265 208.328 277.265 209.156 cv
f
280.265 214.407 mo
280.265 215.235 279.593 215.907 278.765 215.907 cv
277.937 215.907 277.265 215.235 277.265 214.407 cv
277.265 213.578 277.937 212.907 278.765 212.907 cv
279.593 212.907 280.265 213.578 280.265 214.407 cv
f
283.265 217.407 mo
283.265 218.235 282.593 218.907 281.765 218.907 cv
280.937 218.907 280.265 218.235 280.265 217.407 cv
280.265 216.578 280.937 215.907 281.765 215.907 cv
282.593 215.907 283.265 216.578 283.265 217.407 cv
f
286.265 221.157 mo
286.265 221.985 285.593 222.657 284.765 222.657 cv
283.937 222.657 283.265 221.985 283.265 221.157 cv
283.265 220.328 283.937 219.657 284.765 219.657 cv
285.593 219.657 286.265 220.328 286.265 221.157 cv
f
289.265 223.407 mo
289.265 224.235 288.593 224.907 287.765 224.907 cv
286.937 224.907 286.265 224.235 286.265 223.407 cv
286.265 222.578 286.937 221.907 287.765 221.907 cv
288.593 221.907 289.265 222.578 289.265 223.407 cv
f
293.015 224.157 mo
293.015 224.985 292.343 225.657 291.515 225.657 cv
290.687 225.657 290.015 224.985 290.015 224.157 cv
290.015 223.328 290.687 222.657 291.515 222.657 cv
292.343 222.657 293.015 223.328 293.015 224.157 cv
f
296.015 225.657 mo
296.015 226.485 295.343 227.157 294.515 227.157 cv
293.687 227.157 293.015 226.485 293.015 225.657 cv
293.015 224.828 293.687 224.157 294.515 224.157 cv
295.343 224.157 296.015 224.828 296.015 225.657 cv
f
299.015 227.157 mo
299.015 227.985 298.343 228.657 297.515 228.657 cv
296.687 228.657 296.015 227.985 296.015 227.157 cv
296.015 226.328 296.687 225.657 297.515 225.657 cv
298.343 225.657 299.015 226.328 299.015 227.157 cv
f
302.015 231.657 mo
302.015 232.485 301.343 233.157 300.515 233.157 cv
299.687 233.157 299.015 232.485 299.015 231.657 cv
299.015 230.828 299.687 230.157 300.515 230.157 cv
301.343 230.157 302.015 230.828 302.015 231.657 cv
f
305.015 233.907 mo
305.015 234.735 304.343 235.407 303.515 235.407 cv
302.687 235.407 302.015 234.735 302.015 233.907 cv
302.015 233.078 302.687 232.407 303.515 232.407 cv
304.343 232.407 305.015 233.078 305.015 233.907 cv
f
308.015 235.407 mo
308.015 236.235 307.343 236.907 306.515 236.907 cv
305.687 236.907 305.015 236.235 305.015 235.407 cv
305.015 234.578 305.687 233.907 306.515 233.907 cv
307.343 233.907 308.015 234.578 308.015 235.407 cv
f
311.765 233.157 mo
311.765 233.985 311.093 234.657 310.265 234.657 cv
309.437 234.657 308.765 233.985 308.765 233.157 cv
308.765 232.328 309.437 231.657 310.265 231.657 cv
311.093 231.657 311.765 232.328 311.765 233.157 cv
f
314.765 236.157 mo
314.765 236.985 314.093 237.657 313.265 237.657 cv
312.437 237.657 311.765 236.985 311.765 236.157 cv
311.765 235.328 312.437 234.657 313.265 234.657 cv
314.093 234.657 314.765 235.328 314.765 236.157 cv
f
317.765 233.907 mo
317.765 234.735 317.093 235.407 316.265 235.407 cv
315.437 235.407 314.765 234.735 314.765 233.907 cv
314.765 233.078 315.437 232.407 316.265 232.407 cv
317.093 232.407 317.765 233.078 317.765 233.907 cv
f
320.765 240.657 mo
320.765 241.485 320.093 242.157 319.265 242.157 cv
318.437 242.157 317.765 241.485 317.765 240.657 cv
317.765 239.828 318.437 239.157 319.265 239.157 cv
320.093 239.157 320.765 239.828 320.765 240.657 cv
f
323.765 237.657 mo
323.765 238.485 323.093 239.157 322.265 239.157 cv
321.437 239.157 320.765 238.485 320.765 237.657 cv
320.765 236.828 321.437 236.157 322.265 236.157 cv
323.093 236.157 323.765 236.828 323.765 237.657 cv
f
326.765 237.657 mo
326.765 238.485 326.093 239.157 325.265 239.157 cv
324.437 239.157 323.765 238.485 323.765 237.657 cv
323.765 236.828 324.437 236.157 325.265 236.157 cv
326.093 236.157 326.765 236.828 326.765 237.657 cv
f
330.515 238.407 mo
330.515 239.235 329.843 239.907 329.015 239.907 cv
328.187 239.907 327.515 239.235 327.515 238.407 cv
327.515 237.578 328.187 236.907 329.015 236.907 cv
329.843 236.907 330.515 237.578 330.515 238.407 cv
f
333.515 234.657 mo
333.515 235.485 332.843 236.157 332.015 236.157 cv
331.187 236.157 330.515 235.485 330.515 234.657 cv
330.515 233.828 331.187 233.157 332.015 233.157 cv
332.843 233.157 333.515 233.828 333.515 234.657 cv
f
336.515 240.657 mo
336.515 241.485 335.843 242.157 335.015 242.157 cv
334.187 242.157 333.515 241.485 333.515 240.657 cv
333.515 239.828 334.187 239.157 335.015 239.157 cv
335.843 239.157 336.515 239.828 336.515 240.657 cv
f
339.515 240.657 mo
339.515 241.485 338.843 242.157 338.015 242.157 cv
337.187 242.157 336.515 241.485 336.515 240.657 cv
336.515 239.828 337.187 239.157 338.015 239.157 cv
338.843 239.157 339.515 239.828 339.515 240.657 cv
f
342.515 238.407 mo
342.515 239.235 341.843 239.907 341.015 239.907 cv
340.187 239.907 339.515 239.235 339.515 238.407 cv
339.515 237.578 340.187 236.907 341.015 236.907 cv
341.843 236.907 342.515 237.578 342.515 238.407 cv
f
345.515 239.157 mo
345.515 239.985 344.843 240.657 344.015 240.657 cv
343.187 240.657 342.515 239.985 342.515 239.157 cv
342.515 238.328 343.187 237.657 344.015 237.657 cv
344.843 237.657 345.515 238.328 345.515 239.157 cv
f
349.265 245.157 mo
349.265 245.985 348.593 246.657 347.765 246.657 cv
346.937 246.657 346.265 245.985 346.265 245.157 cv
346.265 244.328 346.937 243.657 347.765 243.657 cv
348.593 243.657 349.265 244.328 349.265 245.157 cv
f
352.265 243.657 mo
352.265 244.485 351.593 245.157 350.765 245.157 cv
349.937 245.157 349.265 244.485 349.265 243.657 cv
349.265 242.828 349.937 242.157 350.765 242.157 cv
351.593 242.157 352.265 242.828 352.265 243.657 cv
f
355.265 241.407 mo
355.265 242.235 354.593 242.907 353.765 242.907 cv
352.937 242.907 352.265 242.235 352.265 241.407 cv
352.265 240.578 352.937 239.907 353.765 239.907 cv
354.593 239.907 355.265 240.578 355.265 241.407 cv
f
358.265 244.407 mo
358.265 245.235 357.593 245.907 356.765 245.907 cv
355.937 245.907 355.265 245.235 355.265 244.407 cv
355.265 243.578 355.937 242.907 356.765 242.907 cv
357.593 242.907 358.265 243.578 358.265 244.407 cv
f
361.265 243.657 mo
361.265 244.485 360.593 245.157 359.765 245.157 cv
358.937 245.157 358.265 244.485 358.265 243.657 cv
358.265 242.828 358.937 242.157 359.765 242.157 cv
360.593 242.157 361.265 242.828 361.265 243.657 cv
f
364.265 248.157 mo
364.265 248.985 363.593 249.657 362.765 249.657 cv
361.937 249.657 361.265 248.985 361.265 248.157 cv
361.265 247.328 361.937 246.657 362.765 246.657 cv
363.593 246.657 364.265 247.328 364.265 248.157 cv
f
367.265 249.657 mo
367.265 250.485 366.593 251.157 365.765 251.157 cv
364.937 251.157 364.265 250.485 364.265 249.657 cv
364.265 248.828 364.937 248.157 365.765 248.157 cv
366.593 248.157 367.265 248.828 367.265 249.657 cv
f
371.015 246.657 mo
371.015 247.485 370.343 248.157 369.515 248.157 cv
368.687 248.157 368.015 247.485 368.015 246.657 cv
368.015 245.828 368.687 245.157 369.515 245.157 cv
370.343 245.157 371.015 245.828 371.015 246.657 cv
f
374.015 248.157 mo
374.015 248.985 373.343 249.657 372.515 249.657 cv
371.687 249.657 371.015 248.985 371.015 248.157 cv
371.015 247.328 371.687 246.657 372.515 246.657 cv
373.343 246.657 374.015 247.328 374.015 248.157 cv
f
377.015 251.907 mo
377.015 252.735 376.343 253.407 375.515 253.407 cv
374.687 253.407 374.015 252.735 374.015 251.907 cv
374.015 251.078 374.687 250.407 375.515 250.407 cv
376.343 250.407 377.015 251.078 377.015 251.907 cv
f
380.015 243.657 mo
380.015 244.485 379.343 245.157 378.515 245.157 cv
377.687 245.157 377.015 244.485 377.015 243.657 cv
377.015 242.828 377.687 242.157 378.515 242.157 cv
379.343 242.157 380.015 242.828 380.015 243.657 cv
f
383.015 247.407 mo
383.015 248.235 382.343 248.907 381.515 248.907 cv
380.687 248.907 380.015 248.235 380.015 247.407 cv
380.015 246.578 380.687 245.907 381.515 245.907 cv
382.343 245.907 383.015 246.578 383.015 247.407 cv
f
386.015 251.907 mo
386.015 252.735 385.343 253.407 384.515 253.407 cv
383.687 253.407 383.015 252.735 383.015 251.907 cv
383.015 251.078 383.687 250.407 384.515 250.407 cv
385.343 250.407 386.015 251.078 386.015 251.907 cv
f
389.765 253.407 mo
389.765 254.235 389.093 254.907 388.265 254.907 cv
387.437 254.907 386.765 254.235 386.765 253.407 cv
386.765 252.578 387.437 251.907 388.265 251.907 cv
389.093 251.907 389.765 252.578 389.765 253.407 cv
f
392.765 245.157 mo
392.765 245.985 392.093 246.657 391.265 246.657 cv
390.437 246.657 389.765 245.985 389.765 245.157 cv
389.765 244.328 390.437 243.657 391.265 243.657 cv
392.093 243.657 392.765 244.328 392.765 245.157 cv
f
395.765 249.657 mo
395.765 250.485 395.093 251.157 394.265 251.157 cv
393.437 251.157 392.765 250.485 392.765 249.657 cv
392.765 248.828 393.437 248.157 394.265 248.157 cv
395.093 248.157 395.765 248.828 395.765 249.657 cv
f
398.765 250.407 mo
398.765 251.235 398.093 251.907 397.265 251.907 cv
396.437 251.907 395.765 251.235 395.765 250.407 cv
395.765 249.578 396.437 248.907 397.265 248.907 cv
398.093 248.907 398.765 249.578 398.765 250.407 cv
f
401.765 251.157 mo
401.765 251.985 401.093 252.657 400.265 252.657 cv
399.437 252.657 398.765 251.985 398.765 251.157 cv
398.765 250.328 399.437 249.657 400.265 249.657 cv
401.093 249.657 401.765 250.328 401.765 251.157 cv
f
404.765 254.157 mo
404.765 254.985 404.093 255.657 403.265 255.657 cv
402.437 255.657 401.765 254.985 401.765 254.157 cv
401.765 253.328 402.437 252.657 403.265 252.657 cv
404.093 252.657 404.765 253.328 404.765 254.157 cv
f
408.515 257.907 mo
408.515 258.735 407.843 259.407 407.015 259.407 cv
406.187 259.407 405.515 258.735 405.515 257.907 cv
405.515 257.078 406.187 256.407 407.015 256.407 cv
407.843 256.407 408.515 257.078 408.515 257.907 cv
f
411.515 252.657 mo
411.515 253.485 410.843 254.157 410.015 254.157 cv
409.187 254.157 408.515 253.485 408.515 252.657 cv
408.515 251.828 409.187 251.157 410.015 251.157 cv
410.843 251.157 411.515 251.828 411.515 252.657 cv
f
414.515 253.407 mo
414.515 254.235 413.843 254.907 413.015 254.907 cv
412.187 254.907 411.515 254.235 411.515 253.407 cv
411.515 252.578 412.187 251.907 413.015 251.907 cv
413.843 251.907 414.515 252.578 414.515 253.407 cv
f
417.515 254.907 mo
417.515 255.735 416.843 256.407 416.015 256.407 cv
415.187 256.407 414.515 255.735 414.515 254.907 cv
414.515 254.078 415.187 253.407 416.015 253.407 cv
416.843 253.407 417.515 254.078 417.515 254.907 cv
f
420.515 256.407 mo
420.515 257.235 419.843 257.907 419.015 257.907 cv
418.187 257.907 417.515 257.235 417.515 256.407 cv
417.515 255.578 418.187 254.907 419.015 254.907 cv
419.843 254.907 420.515 255.578 420.515 256.407 cv
f
423.515 259.407 mo
423.515 260.235 422.843 260.907 422.015 260.907 cv
421.187 260.907 420.515 260.235 420.515 259.407 cv
420.515 258.578 421.187 257.907 422.015 257.907 cv
422.843 257.907 423.515 258.578 423.515 259.407 cv
f
427.265 257.157 mo
427.265 257.985 426.593 258.657 425.765 258.657 cv
424.937 258.657 424.265 257.985 424.265 257.157 cv
424.265 256.328 424.937 255.657 425.765 255.657 cv
426.593 255.657 427.265 256.328 427.265 257.157 cv
f
430.265 254.907 mo
430.265 255.735 429.593 256.407 428.765 256.407 cv
427.937 256.407 427.265 255.735 427.265 254.907 cv
427.265 254.078 427.937 253.407 428.765 253.407 cv
429.593 253.407 430.265 254.078 430.265 254.907 cv
f
433.265 259.407 mo
433.265 260.235 432.593 260.907 431.765 260.907 cv
430.937 260.907 430.265 260.235 430.265 259.407 cv
430.265 258.578 430.937 257.907 431.765 257.907 cv
432.593 257.907 433.265 258.578 433.265 259.407 cv
f
436.265 262.407 mo
436.265 263.235 435.593 263.907 434.765 263.907 cv
433.937 263.907 433.265 263.235 433.265 262.407 cv
433.265 261.578 433.937 260.907 434.765 260.907 cv
435.593 260.907 436.265 261.578 436.265 262.407 cv
f
439.265 263.157 mo
439.265 263.985 438.593 264.657 437.765 264.657 cv
436.937 264.657 436.265 263.985 436.265 263.157 cv
436.265 262.328 436.937 261.657 437.765 261.657 cv
438.593 261.657 439.265 262.328 439.265 263.157 cv
f
442.265 259.407 mo
442.265 260.235 441.593 260.907 440.765 260.907 cv
439.937 260.907 439.265 260.235 439.265 259.407 cv
439.265 258.578 439.937 257.907 440.765 257.907 cv
441.593 257.907 442.265 258.578 442.265 259.407 cv
f
445.265 263.907 mo
445.265 264.735 444.593 265.407 443.765 265.407 cv
442.937 265.407 442.265 264.735 442.265 263.907 cv
442.265 263.078 442.937 262.407 443.765 262.407 cv
444.593 262.407 445.265 263.078 445.265 263.907 cv
f
449.015 264.657 mo
449.015 265.485 448.343 266.157 447.515 266.157 cv
446.687 266.157 446.015 265.485 446.015 264.657 cv
446.015 263.828 446.687 263.157 447.515 263.157 cv
448.343 263.157 449.015 263.828 449.015 264.657 cv
f
452.015 265.407 mo
452.015 266.235 451.343 266.907 450.515 266.907 cv
449.687 266.907 449.015 266.235 449.015 265.407 cv
449.015 264.578 449.687 263.907 450.515 263.907 cv
451.343 263.907 452.015 264.578 452.015 265.407 cv
f
455.015 264.657 mo
455.015 265.485 454.343 266.157 453.515 266.157 cv
452.687 266.157 452.015 265.485 452.015 264.657 cv
452.015 263.828 452.687 263.157 453.515 263.157 cv
454.343 263.157 455.015 263.828 455.015 264.657 cv
f
458.015 264.657 mo
458.015 265.485 457.343 266.157 456.515 266.157 cv
455.687 266.157 455.015 265.485 455.015 264.657 cv
455.015 263.828 455.687 263.157 456.515 263.157 cv
457.343 263.157 458.015 263.828 458.015 264.657 cv
f
461.015 266.907 mo
461.015 267.735 460.343 268.407 459.515 268.407 cv
458.687 268.407 458.015 267.735 458.015 266.907 cv
458.015 266.078 458.687 265.407 459.515 265.407 cv
460.343 265.407 461.015 266.078 461.015 266.907 cv
f
464.015 269.157 mo
464.015 269.985 463.343 270.657 462.515 270.657 cv
461.687 270.657 461.015 269.985 461.015 269.157 cv
461.015 268.328 461.687 267.657 462.515 267.657 cv
463.343 267.657 464.015 268.328 464.015 269.157 cv
f
467.765 264.657 mo
467.765 265.485 467.093 266.157 466.265 266.157 cv
465.437 266.157 464.765 265.485 464.765 264.657 cv
464.765 263.828 465.437 263.157 466.265 263.157 cv
467.093 263.157 467.765 263.828 467.765 264.657 cv
f
470.765 269.157 mo
470.765 269.985 470.093 270.657 469.265 270.657 cv
468.437 270.657 467.765 269.985 467.765 269.157 cv
467.765 268.328 468.437 267.657 469.265 267.657 cv
470.093 267.657 470.765 268.328 470.765 269.157 cv
f
473.765 273.657 mo
473.765 274.485 473.093 275.157 472.265 275.157 cv
471.437 275.157 470.765 274.485 470.765 273.657 cv
470.765 272.828 471.437 272.157 472.265 272.157 cv
473.093 272.157 473.765 272.828 473.765 273.657 cv
f
476.765 265.407 mo
476.765 266.235 476.093 266.907 475.265 266.907 cv
474.437 266.907 473.765 266.235 473.765 265.407 cv
473.765 264.578 474.437 263.907 475.265 263.907 cv
476.093 263.907 476.765 264.578 476.765 265.407 cv
f
479.765 267.657 mo
479.765 268.485 479.093 269.157 478.265 269.157 cv
477.437 269.157 476.765 268.485 476.765 267.657 cv
476.765 266.828 477.437 266.157 478.265 266.157 cv
479.093 266.157 479.765 266.828 479.765 267.657 cv
f
482.765 273.657 mo
482.765 274.485 482.093 275.157 481.265 275.157 cv
480.437 275.157 479.765 274.485 479.765 273.657 cv
479.765 272.828 480.437 272.157 481.265 272.157 cv
482.093 272.157 482.765 272.828 482.765 273.657 cv
f
486.515 269.907 mo
486.515 270.735 485.843 271.407 485.015 271.407 cv
484.187 271.407 483.515 270.735 483.515 269.907 cv
483.515 269.078 484.187 268.407 485.015 268.407 cv
485.843 268.407 486.515 269.078 486.515 269.907 cv
f
489.515 272.157 mo
489.515 272.985 488.843 273.657 488.015 273.657 cv
487.187 273.657 486.515 272.985 486.515 272.157 cv
486.515 271.328 487.187 270.657 488.015 270.657 cv
488.843 270.657 489.515 271.328 489.515 272.157 cv
f
492.515 274.407 mo
492.515 275.235 491.843 275.907 491.015 275.907 cv
490.187 275.907 489.515 275.235 489.515 274.407 cv
489.515 273.578 490.187 272.907 491.015 272.907 cv
491.843 272.907 492.515 273.578 492.515 274.407 cv
f
495.515 270.657 mo
495.515 271.485 494.843 272.157 494.015 272.157 cv
493.187 272.157 492.515 271.485 492.515 270.657 cv
492.515 269.828 493.187 269.157 494.015 269.157 cv
494.843 269.157 495.515 269.828 495.515 270.657 cv
f
498.515 271.407 mo
498.515 272.235 497.843 272.907 497.015 272.907 cv
496.187 272.907 495.515 272.235 495.515 271.407 cv
495.515 270.578 496.187 269.907 497.015 269.907 cv
497.843 269.907 498.515 270.578 498.515 271.407 cv
f
501.515 268.407 mo
501.515 269.235 500.843 269.907 500.015 269.907 cv
499.187 269.907 498.515 269.235 498.515 268.407 cv
498.515 267.578 499.187 266.907 500.015 266.907 cv
500.843 266.907 501.515 267.578 501.515 268.407 cv
f
40.2642 128.906 mo
40.2642 129.734 39.5923 130.406 38.7642 130.406 cv
37.936 130.406 37.2642 129.734 37.2642 128.906 cv
37.2642 128.078 37.936 127.406 38.7642 127.406 cv
39.5923 127.406 40.2642 128.078 40.2642 128.906 cv
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
f
43.2642 128.156 mo
43.2642 128.984 42.5923 129.656 41.7642 129.656 cv
40.936 129.656 40.2642 128.984 40.2642 128.156 cv
40.2642 127.328 40.936 126.656 41.7642 126.656 cv
42.5923 126.656 43.2642 127.328 43.2642 128.156 cv
f
46.2642 126.656 mo
46.2642 127.484 45.5923 128.156 44.7642 128.156 cv
43.936 128.156 43.2642 127.484 43.2642 126.656 cv
43.2642 125.828 43.936 125.156 44.7642 125.156 cv
45.5923 125.156 46.2642 125.828 46.2642 126.656 cv
f
49.2642 128.156 mo
49.2642 128.984 48.5923 129.656 47.7642 129.656 cv
46.936 129.656 46.2642 128.984 46.2642 128.156 cv
46.2642 127.328 46.936 126.656 47.7642 126.656 cv
48.5923 126.656 49.2642 127.328 49.2642 128.156 cv
f
52.2642 130.406 mo
52.2642 131.234 51.5923 131.906 50.7642 131.906 cv
49.936 131.906 49.2642 131.234 49.2642 130.406 cv
49.2642 129.578 49.936 128.906 50.7642 128.906 cv
51.5923 128.906 52.2642 129.578 52.2642 130.406 cv
f
55.2637 126.656 mo
55.2637 127.484 54.5928 128.156 53.7637 128.156 cv
52.936 128.156 52.2642 127.484 52.2642 126.656 cv
52.2642 125.828 52.936 125.156 53.7637 125.156 cv
54.5928 125.156 55.2637 125.828 55.2637 126.656 cv
f
59.0137 129.656 mo
59.0137 130.484 58.3428 131.156 57.5137 131.156 cv
56.6855 131.156 56.0137 130.484 56.0137 129.656 cv
56.0137 128.828 56.6855 128.156 57.5137 128.156 cv
58.3428 128.156 59.0137 128.828 59.0137 129.656 cv
f
62.0137 124.406 mo
62.0137 125.234 61.3428 125.906 60.5137 125.906 cv
59.6855 125.906 59.0137 125.234 59.0137 124.406 cv
59.0137 123.578 59.6855 122.906 60.5137 122.906 cv
61.3428 122.906 62.0137 123.578 62.0137 124.406 cv
f
65.0137 127.406 mo
65.0137 128.234 64.3428 128.906 63.5137 128.906 cv
62.6855 128.906 62.0137 128.234 62.0137 127.406 cv
62.0137 126.578 62.6855 125.906 63.5137 125.906 cv
64.3428 125.906 65.0137 126.578 65.0137 127.406 cv
f
68.0137 129.656 mo
68.0137 130.484 67.3428 131.156 66.5137 131.156 cv
65.6855 131.156 65.0137 130.484 65.0137 129.656 cv
65.0137 128.828 65.6855 128.156 66.5137 128.156 cv
67.3428 128.156 68.0137 128.828 68.0137 129.656 cv
f
71.0137 130.406 mo
71.0137 131.234 70.3428 131.906 69.5137 131.906 cv
68.6855 131.906 68.0137 131.234 68.0137 130.406 cv
68.0137 129.578 68.6855 128.906 69.5137 128.906 cv
70.3428 128.906 71.0137 129.578 71.0137 130.406 cv
f
74.0137 127.406 mo
74.0137 128.234 73.3428 128.906 72.5137 128.906 cv
71.6855 128.906 71.0137 128.234 71.0137 127.406 cv
71.0137 126.578 71.6855 125.906 72.5137 125.906 cv
73.3428 125.906 74.0137 126.578 74.0137 127.406 cv
f
77.7637 128.156 mo
77.7637 128.984 77.0928 129.656 76.2637 129.656 cv
75.4355 129.656 74.7637 128.984 74.7637 128.156 cv
74.7637 127.328 75.4355 126.656 76.2637 126.656 cv
77.0928 126.656 77.7637 127.328 77.7637 128.156 cv
f
80.7637 128.156 mo
80.7637 128.984 80.0928 129.656 79.2637 129.656 cv
78.4355 129.656 77.7637 128.984 77.7637 128.156 cv
77.7637 127.328 78.4355 126.656 79.2637 126.656 cv
80.0928 126.656 80.7637 127.328 80.7637 128.156 cv
f
83.7637 128.906 mo
83.7637 129.734 83.0928 130.406 82.2637 130.406 cv
81.4355 130.406 80.7637 129.734 80.7637 128.906 cv
80.7637 128.078 81.4355 127.406 82.2637 127.406 cv
83.0928 127.406 83.7637 128.078 83.7637 128.906 cv
f
86.7637 128.906 mo
86.7637 129.734 86.0928 130.406 85.2637 130.406 cv
84.4355 130.406 83.7637 129.734 83.7637 128.906 cv
83.7637 128.078 84.4355 127.406 85.2637 127.406 cv
86.0928 127.406 86.7637 128.078 86.7637 128.906 cv
f
89.7637 126.656 mo
89.7637 127.484 89.0928 128.156 88.2637 128.156 cv
87.4355 128.156 86.7637 127.484 86.7637 126.656 cv
86.7637 125.828 87.4355 125.156 88.2637 125.156 cv
89.0928 125.156 89.7637 125.828 89.7637 126.656 cv
f
92.7637 128.156 mo
92.7637 128.984 92.0928 129.656 91.2637 129.656 cv
90.4355 129.656 89.7637 128.984 89.7637 128.156 cv
89.7637 127.328 90.4355 126.656 91.2637 126.656 cv
92.0928 126.656 92.7637 127.328 92.7637 128.156 cv
f
96.5137 125.906 mo
96.5137 126.734 95.8428 127.406 95.0137 127.406 cv
94.1855 127.406 93.5137 126.734 93.5137 125.906 cv
93.5137 125.078 94.1855 124.406 95.0137 124.406 cv
95.8428 124.406 96.5137 125.078 96.5137 125.906 cv
f
99.5137 127.406 mo
99.5137 128.234 98.8428 128.906 98.0137 128.906 cv
97.1855 128.906 96.5137 128.234 96.5137 127.406 cv
96.5137 126.578 97.1855 125.906 98.0137 125.906 cv
98.8428 125.906 99.5137 126.578 99.5137 127.406 cv
f
102.514 127.406 mo
102.514 128.234 101.843 128.906 101.014 128.906 cv
100.186 128.906 99.5137 128.234 99.5137 127.406 cv
99.5137 126.578 100.186 125.906 101.014 125.906 cv
101.843 125.906 102.514 126.578 102.514 127.406 cv
f
105.514 126.656 mo
105.514 127.484 104.843 128.156 104.014 128.156 cv
103.186 128.156 102.514 127.484 102.514 126.656 cv
102.514 125.828 103.186 125.156 104.014 125.156 cv
104.843 125.156 105.514 125.828 105.514 126.656 cv
f
108.514 128.156 mo
108.514 128.984 107.843 129.656 107.014 129.656 cv
106.186 129.656 105.514 128.984 105.514 128.156 cv
105.514 127.328 106.186 126.656 107.014 126.656 cv
107.843 126.656 108.514 127.328 108.514 128.156 cv
f
111.514 128.906 mo
111.514 129.734 110.843 130.406 110.014 130.406 cv
109.186 130.406 108.514 129.734 108.514 128.906 cv
108.514 128.078 109.186 127.406 110.014 127.406 cv
110.843 127.406 111.514 128.078 111.514 128.906 cv
f
115.264 128.156 mo
115.264 128.984 114.593 129.656 113.764 129.656 cv
112.936 129.656 112.264 128.984 112.264 128.156 cv
112.264 127.328 112.936 126.656 113.764 126.656 cv
114.593 126.656 115.264 127.328 115.264 128.156 cv
f
118.264 128.156 mo
118.264 128.984 117.593 129.656 116.764 129.656 cv
115.936 129.656 115.264 128.984 115.264 128.156 cv
115.264 127.328 115.936 126.656 116.764 126.656 cv
117.593 126.656 118.264 127.328 118.264 128.156 cv
f
121.264 127.406 mo
121.264 128.234 120.593 128.906 119.764 128.906 cv
118.936 128.906 118.264 128.234 118.264 127.406 cv
118.264 126.578 118.936 125.906 119.764 125.906 cv
120.593 125.906 121.264 126.578 121.264 127.406 cv
f
124.264 128.906 mo
124.264 129.734 123.593 130.406 122.764 130.406 cv
121.936 130.406 121.264 129.734 121.264 128.906 cv
121.264 128.078 121.936 127.406 122.764 127.406 cv
123.593 127.406 124.264 128.078 124.264 128.906 cv
f
127.264 128.156 mo
127.264 128.984 126.593 129.656 125.764 129.656 cv
124.936 129.656 124.264 128.984 124.264 128.156 cv
124.264 127.328 124.936 126.656 125.764 126.656 cv
126.593 126.656 127.264 127.328 127.264 128.156 cv
f
130.264 128.156 mo
130.264 128.984 129.593 129.656 128.764 129.656 cv
127.936 129.656 127.264 128.984 127.264 128.156 cv
127.264 127.328 127.936 126.656 128.764 126.656 cv
129.593 126.656 130.264 127.328 130.264 128.156 cv
f
133.264 127.406 mo
133.264 128.234 132.593 128.906 131.764 128.906 cv
130.936 128.906 130.264 128.234 130.264 127.406 cv
130.264 126.578 130.936 125.906 131.764 125.906 cv
132.593 125.906 133.264 126.578 133.264 127.406 cv
f
137.014 128.906 mo
137.014 129.734 136.343 130.406 135.514 130.406 cv
134.686 130.406 134.014 129.734 134.014 128.906 cv
134.014 128.078 134.686 127.406 135.514 127.406 cv
136.343 127.406 137.014 128.078 137.014 128.906 cv
f
140.014 127.406 mo
140.014 128.234 139.343 128.906 138.514 128.906 cv
137.686 128.906 137.014 128.234 137.014 127.406 cv
137.014 126.578 137.686 125.906 138.514 125.906 cv
139.343 125.906 140.014 126.578 140.014 127.406 cv
f
143.014 127.406 mo
143.014 128.234 142.343 128.906 141.514 128.906 cv
140.686 128.906 140.014 128.234 140.014 127.406 cv
140.014 126.578 140.686 125.906 141.514 125.906 cv
142.343 125.906 143.014 126.578 143.014 127.406 cv
f
146.014 128.156 mo
146.014 128.984 145.343 129.656 144.514 129.656 cv
143.686 129.656 143.014 128.984 143.014 128.156 cv
143.014 127.328 143.686 126.656 144.514 126.656 cv
145.343 126.656 146.014 127.328 146.014 128.156 cv
f
149.014 128.156 mo
149.014 128.984 148.343 129.656 147.514 129.656 cv
146.686 129.656 146.014 128.984 146.014 128.156 cv
146.014 127.328 146.686 126.656 147.514 126.656 cv
148.343 126.656 149.014 127.328 149.014 128.156 cv
f
152.014 126.656 mo
152.014 127.484 151.343 128.156 150.514 128.156 cv
149.686 128.156 149.014 127.484 149.014 126.656 cv
149.014 125.828 149.686 125.156 150.514 125.156 cv
151.343 125.156 152.014 125.828 152.014 126.656 cv
f
155.764 127.406 mo
155.764 128.234 155.093 128.906 154.264 128.906 cv
153.436 128.906 152.764 128.234 152.764 127.406 cv
152.764 126.578 153.436 125.906 154.264 125.906 cv
155.093 125.906 155.764 126.578 155.764 127.406 cv
f
158.764 126.656 mo
158.764 127.484 158.093 128.156 157.264 128.156 cv
156.436 128.156 155.764 127.484 155.764 126.656 cv
155.764 125.828 156.436 125.156 157.264 125.156 cv
158.093 125.156 158.764 125.828 158.764 126.656 cv
f
161.764 126.656 mo
161.764 127.484 161.093 128.156 160.264 128.156 cv
159.436 128.156 158.764 127.484 158.764 126.656 cv
158.764 125.828 159.436 125.156 160.264 125.156 cv
161.093 125.156 161.764 125.828 161.764 126.656 cv
f
164.764 127.406 mo
164.764 128.234 164.093 128.906 163.264 128.906 cv
162.436 128.906 161.764 128.234 161.764 127.406 cv
161.764 126.578 162.436 125.906 163.264 125.906 cv
164.093 125.906 164.764 126.578 164.764 127.406 cv
f
167.764 128.156 mo
167.764 128.984 167.093 129.656 166.264 129.656 cv
165.436 129.656 164.764 128.984 164.764 128.156 cv
164.764 127.328 165.436 126.656 166.264 126.656 cv
167.093 126.656 167.764 127.328 167.764 128.156 cv
f
170.764 128.156 mo
170.764 128.984 170.093 129.656 169.264 129.656 cv
168.436 129.656 167.764 128.984 167.764 128.156 cv
167.764 127.328 168.436 126.656 169.264 126.656 cv
170.093 126.656 170.764 127.328 170.764 128.156 cv
f
174.514 126.656 mo
174.514 127.484 173.843 128.156 173.014 128.156 cv
172.186 128.156 171.514 127.484 171.514 126.656 cv
171.514 125.828 172.186 125.156 173.014 125.156 cv
173.843 125.156 174.514 125.828 174.514 126.656 cv
f
177.514 125.906 mo
177.514 126.734 176.843 127.406 176.014 127.406 cv
175.186 127.406 174.514 126.734 174.514 125.906 cv
174.514 125.078 175.186 124.406 176.014 124.406 cv
176.843 124.406 177.514 125.078 177.514 125.906 cv
f
180.514 127.406 mo
180.514 128.234 179.843 128.906 179.014 128.906 cv
178.186 128.906 177.514 128.234 177.514 127.406 cv
177.514 126.578 178.186 125.906 179.014 125.906 cv
179.843 125.906 180.514 126.578 180.514 127.406 cv
f
183.514 127.406 mo
183.514 128.234 182.843 128.906 182.014 128.906 cv
181.186 128.906 180.514 128.234 180.514 127.406 cv
180.514 126.578 181.186 125.906 182.014 125.906 cv
182.843 125.906 183.514 126.578 183.514 127.406 cv
f
186.514 125.906 mo
186.514 126.734 185.843 127.406 185.014 127.406 cv
184.186 127.406 183.514 126.734 183.514 125.906 cv
183.514 125.078 184.186 124.406 185.014 124.406 cv
185.843 124.406 186.514 125.078 186.514 125.906 cv
f
189.514 127.406 mo
189.514 128.234 188.843 128.906 188.014 128.906 cv
187.186 128.906 186.514 128.234 186.514 127.406 cv
186.514 126.578 187.186 125.906 188.014 125.906 cv
188.843 125.906 189.514 126.578 189.514 127.406 cv
f
193.264 127.406 mo
193.264 128.234 192.593 128.906 191.764 128.906 cv
190.936 128.906 190.264 128.234 190.264 127.406 cv
190.264 126.578 190.936 125.906 191.764 125.906 cv
192.593 125.906 193.264 126.578 193.264 127.406 cv
f
196.265 128.156 mo
196.265 128.984 195.593 129.656 194.765 129.656 cv
193.937 129.656 193.264 128.984 193.264 128.156 cv
193.264 127.328 193.937 126.656 194.765 126.656 cv
195.593 126.656 196.265 127.328 196.265 128.156 cv
f
199.265 126.656 mo
199.265 127.484 198.593 128.156 197.765 128.156 cv
196.937 128.156 196.265 127.484 196.265 126.656 cv
196.265 125.828 196.937 125.156 197.765 125.156 cv
198.593 125.156 199.265 125.828 199.265 126.656 cv
f
202.265 124.406 mo
202.265 125.234 201.593 125.906 200.765 125.906 cv
199.937 125.906 199.265 125.234 199.265 124.406 cv
199.265 123.578 199.937 122.906 200.765 122.906 cv
201.593 122.906 202.265 123.578 202.265 124.406 cv
f
205.265 104.906 mo
205.265 105.734 204.593 106.406 203.765 106.406 cv
202.937 106.406 202.265 105.734 202.265 104.906 cv
202.265 104.078 202.937 103.406 203.765 103.406 cv
204.593 103.406 205.265 104.078 205.265 104.906 cv
f
208.265 29.1563 mo
208.265 29.9844 207.593 30.6563 206.765 30.6563 cv
205.937 30.6563 205.265 29.9844 205.265 29.1563 cv
205.265 28.3281 205.937 27.6563 206.765 27.6563 cv
207.593 27.6563 208.265 28.3281 208.265 29.1563 cv
f
211.265 32.1563 mo
211.265 32.9844 210.593 33.6563 209.765 33.6563 cv
208.937 33.6563 208.265 32.9844 208.265 32.1563 cv
208.265 31.3281 208.937 30.6563 209.765 30.6563 cv
210.593 30.6563 211.265 31.3281 211.265 32.1563 cv
f
215.015 36.6563 mo
215.015 37.4844 214.343 38.1563 213.515 38.1563 cv
212.687 38.1563 212.015 37.4844 212.015 36.6563 cv
212.015 35.8281 212.687 35.1563 213.515 35.1563 cv
214.343 35.1563 215.015 35.8281 215.015 36.6563 cv
f
218.015 45.6563 mo
218.015 46.4844 217.343 47.1563 216.515 47.1563 cv
215.687 47.1563 215.015 46.4844 215.015 45.6563 cv
215.015 44.8281 215.687 44.1563 216.515 44.1563 cv
217.343 44.1563 218.015 44.8281 218.015 45.6563 cv
f
221.015 50.1563 mo
221.015 50.9844 220.343 51.6563 219.515 51.6563 cv
218.687 51.6563 218.015 50.9844 218.015 50.1563 cv
218.015 49.3281 218.687 48.6563 219.515 48.6563 cv
220.343 48.6563 221.015 49.3281 221.015 50.1563 cv
f
224.015 53.1563 mo
224.015 53.9844 223.343 54.6563 222.515 54.6563 cv
221.687 54.6563 221.015 53.9844 221.015 53.1563 cv
221.015 52.3281 221.687 51.6563 222.515 51.6563 cv
223.343 51.6563 224.015 52.3281 224.015 53.1563 cv
f
227.015 59.9063 mo
227.015 60.7344 226.343 61.4063 225.515 61.4063 cv
224.687 61.4063 224.015 60.7344 224.015 59.9063 cv
224.015 59.0781 224.687 58.4063 225.515 58.4063 cv
226.343 58.4063 227.015 59.0781 227.015 59.9063 cv
f
230.015 62.1563 mo
230.015 62.9844 229.343 63.6563 228.515 63.6563 cv
227.687 63.6563 227.015 62.9844 227.015 62.1563 cv
227.015 61.3281 227.687 60.6563 228.515 60.6563 cv
229.343 60.6563 230.015 61.3281 230.015 62.1563 cv
f
233.765 65.1563 mo
233.765 65.9844 233.093 66.6563 232.265 66.6563 cv
231.437 66.6563 230.765 65.9844 230.765 65.1563 cv
230.765 64.3281 231.437 63.6563 232.265 63.6563 cv
233.093 63.6563 233.765 64.3281 233.765 65.1563 cv
f
236.765 67.4063 mo
236.765 68.2344 236.093 68.9063 235.265 68.9063 cv
234.437 68.9063 233.765 68.2344 233.765 67.4063 cv
233.765 66.5781 234.437 65.9063 235.265 65.9063 cv
236.093 65.9063 236.765 66.5781 236.765 67.4063 cv
f
239.765 70.4063 mo
239.765 71.2344 239.093 71.9063 238.265 71.9063 cv
237.437 71.9063 236.765 71.2344 236.765 70.4063 cv
236.765 69.5781 237.437 68.9063 238.265 68.9063 cv
239.093 68.9063 239.765 69.5781 239.765 70.4063 cv
f
242.765 71.1563 mo
242.765 71.9844 242.093 72.6563 241.265 72.6563 cv
240.437 72.6563 239.765 71.9844 239.765 71.1563 cv
239.765 70.3281 240.437 69.6563 241.265 69.6563 cv
242.093 69.6563 242.765 70.3281 242.765 71.1563 cv
f
245.765 74.9063 mo
245.765 75.7344 245.093 76.4063 244.265 76.4063 cv
243.437 76.4063 242.765 75.7344 242.765 74.9063 cv
242.765 74.0781 243.437 73.4063 244.265 73.4063 cv
245.093 73.4063 245.765 74.0781 245.765 74.9063 cv
f
248.765 74.1563 mo
248.765 74.9844 248.093 75.6563 247.265 75.6563 cv
246.437 75.6563 245.765 74.9844 245.765 74.1563 cv
245.765 73.3281 246.437 72.6563 247.265 72.6563 cv
248.093 72.6563 248.765 73.3281 248.765 74.1563 cv
f
252.515 77.1563 mo
252.515 77.9844 251.843 78.6563 251.015 78.6563 cv
250.187 78.6563 249.515 77.9844 249.515 77.1563 cv
249.515 76.3281 250.187 75.6563 251.015 75.6563 cv
251.843 75.6563 252.515 76.3281 252.515 77.1563 cv
f
255.515 78.6563 mo
255.515 79.4844 254.843 80.1563 254.015 80.1563 cv
253.187 80.1563 252.515 79.4844 252.515 78.6563 cv
252.515 77.8281 253.187 77.1563 254.015 77.1563 cv
254.843 77.1563 255.515 77.8281 255.515 78.6563 cv
f
258.515 81.6563 mo
258.515 82.4844 257.843 83.1563 257.015 83.1563 cv
256.187 83.1563 255.515 82.4844 255.515 81.6563 cv
255.515 80.8281 256.187 80.1563 257.015 80.1563 cv
257.843 80.1563 258.515 80.8281 258.515 81.6563 cv
f
261.515 85.4063 mo
261.515 86.2344 260.843 86.9063 260.015 86.9063 cv
259.187 86.9063 258.515 86.2344 258.515 85.4063 cv
258.515 84.5781 259.187 83.9063 260.015 83.9063 cv
260.843 83.9063 261.515 84.5781 261.515 85.4063 cv
f
264.515 86.9063 mo
264.515 87.7344 263.843 88.4063 263.015 88.4063 cv
262.187 88.4063 261.515 87.7344 261.515 86.9063 cv
261.515 86.0781 262.187 85.4063 263.015 85.4063 cv
263.843 85.4063 264.515 86.0781 264.515 86.9063 cv
f
267.515 85.4063 mo
267.515 86.2344 266.843 86.9063 266.015 86.9063 cv
265.187 86.9063 264.515 86.2344 264.515 85.4063 cv
264.515 84.5781 265.187 83.9063 266.015 83.9063 cv
266.843 83.9063 267.515 84.5781 267.515 85.4063 cv
f
271.265 86.9063 mo
271.265 87.7344 270.593 88.4063 269.765 88.4063 cv
268.937 88.4063 268.265 87.7344 268.265 86.9063 cv
268.265 86.0781 268.937 85.4063 269.765 85.4063 cv
270.593 85.4063 271.265 86.0781 271.265 86.9063 cv
f
274.265 86.9063 mo
274.265 87.7344 273.593 88.4063 272.765 88.4063 cv
271.937 88.4063 271.265 87.7344 271.265 86.9063 cv
271.265 86.0781 271.937 85.4063 272.765 85.4063 cv
273.593 85.4063 274.265 86.0781 274.265 86.9063 cv
f
277.265 86.1563 mo
277.265 86.9844 276.593 87.6563 275.765 87.6563 cv
274.937 87.6563 274.265 86.9844 274.265 86.1563 cv
274.265 85.3281 274.937 84.6563 275.765 84.6563 cv
276.593 84.6563 277.265 85.3281 277.265 86.1563 cv
f
280.265 93.6563 mo
280.265 94.4844 279.593 95.1563 278.765 95.1563 cv
277.937 95.1563 277.265 94.4844 277.265 93.6563 cv
277.265 92.8281 277.937 92.1563 278.765 92.1563 cv
279.593 92.1563 280.265 92.8281 280.265 93.6563 cv
f
283.265 89.9063 mo
283.265 90.7344 282.593 91.4063 281.765 91.4063 cv
280.937 91.4063 280.265 90.7344 280.265 89.9063 cv
280.265 89.0781 280.937 88.4063 281.765 88.4063 cv
282.593 88.4063 283.265 89.0781 283.265 89.9063 cv
f
286.265 92.9063 mo
286.265 93.7344 285.593 94.4063 284.765 94.4063 cv
283.937 94.4063 283.265 93.7344 283.265 92.9063 cv
283.265 92.0781 283.937 91.4063 284.765 91.4063 cv
285.593 91.4063 286.265 92.0781 286.265 92.9063 cv
f
289.265 94.4063 mo
289.265 95.2344 288.593 95.9063 287.765 95.9063 cv
286.937 95.9063 286.265 95.2344 286.265 94.4063 cv
286.265 93.5781 286.937 92.9063 287.765 92.9063 cv
288.593 92.9063 289.265 93.5781 289.265 94.4063 cv
f
293.015 89.9063 mo
293.015 90.7344 292.343 91.4063 291.515 91.4063 cv
290.687 91.4063 290.015 90.7344 290.015 89.9063 cv
290.015 89.0781 290.687 88.4063 291.515 88.4063 cv
292.343 88.4063 293.015 89.0781 293.015 89.9063 cv
f
296.015 94.4063 mo
296.015 95.2344 295.343 95.9063 294.515 95.9063 cv
293.687 95.9063 293.015 95.2344 293.015 94.4063 cv
293.015 93.5781 293.687 92.9063 294.515 92.9063 cv
295.343 92.9063 296.015 93.5781 296.015 94.4063 cv
f
299.015 92.9063 mo
299.015 93.7344 298.343 94.4063 297.515 94.4063 cv
296.687 94.4063 296.015 93.7344 296.015 92.9063 cv
296.015 92.0781 296.687 91.4063 297.515 91.4063 cv
298.343 91.4063 299.015 92.0781 299.015 92.9063 cv
f
302.015 95.1563 mo
302.015 95.9844 301.343 96.6563 300.515 96.6563 cv
299.687 96.6563 299.015 95.9844 299.015 95.1563 cv
299.015 94.3281 299.687 93.6563 300.515 93.6563 cv
301.343 93.6563 302.015 94.3281 302.015 95.1563 cv
f
305.015 94.4063 mo
305.015 95.2344 304.343 95.9063 303.515 95.9063 cv
302.687 95.9063 302.015 95.2344 302.015 94.4063 cv
302.015 93.5781 302.687 92.9063 303.515 92.9063 cv
304.343 92.9063 305.015 93.5781 305.015 94.4063 cv
f
308.015 98.1563 mo
308.015 98.9844 307.343 99.6563 306.515 99.6563 cv
305.687 99.6563 305.015 98.9844 305.015 98.1563 cv
305.015 97.3281 305.687 96.6563 306.515 96.6563 cv
307.343 96.6563 308.015 97.3281 308.015 98.1563 cv
f
311.765 95.9063 mo
311.765 96.7344 311.093 97.4063 310.265 97.4063 cv
309.437 97.4063 308.765 96.7344 308.765 95.9063 cv
308.765 95.0781 309.437 94.4063 310.265 94.4063 cv
311.093 94.4063 311.765 95.0781 311.765 95.9063 cv
f
314.765 95.9063 mo
314.765 96.7344 314.093 97.4063 313.265 97.4063 cv
312.437 97.4063 311.765 96.7344 311.765 95.9063 cv
311.765 95.0781 312.437 94.4063 313.265 94.4063 cv
314.093 94.4063 314.765 95.0781 314.765 95.9063 cv
f
317.765 95.1563 mo
317.765 95.9844 317.093 96.6563 316.265 96.6563 cv
315.437 96.6563 314.765 95.9844 314.765 95.1563 cv
314.765 94.3281 315.437 93.6563 316.265 93.6563 cv
317.093 93.6563 317.765 94.3281 317.765 95.1563 cv
f
320.765 95.9063 mo
320.765 96.7344 320.093 97.4063 319.265 97.4063 cv
318.437 97.4063 317.765 96.7344 317.765 95.9063 cv
317.765 95.0781 318.437 94.4063 319.265 94.4063 cv
320.093 94.4063 320.765 95.0781 320.765 95.9063 cv
f
323.765 96.6563 mo
323.765 97.4844 323.093 98.1563 322.265 98.1563 cv
321.437 98.1563 320.765 97.4844 320.765 96.6563 cv
320.765 95.8281 321.437 95.1563 322.265 95.1563 cv
323.093 95.1563 323.765 95.8281 323.765 96.6563 cv
f
326.765 96.6563 mo
326.765 97.4844 326.093 98.1563 325.265 98.1563 cv
324.437 98.1563 323.765 97.4844 323.765 96.6563 cv
323.765 95.8281 324.437 95.1563 325.265 95.1563 cv
326.093 95.1563 326.765 95.8281 326.765 96.6563 cv
f
330.515 98.9063 mo
330.515 99.7344 329.843 100.406 329.015 100.406 cv
328.187 100.406 327.515 99.7344 327.515 98.9063 cv
327.515 98.0781 328.187 97.4063 329.015 97.4063 cv
329.843 97.4063 330.515 98.0781 330.515 98.9063 cv
f
333.515 96.6563 mo
333.515 97.4844 332.843 98.1563 332.015 98.1563 cv
331.187 98.1563 330.515 97.4844 330.515 96.6563 cv
330.515 95.8281 331.187 95.1563 332.015 95.1563 cv
332.843 95.1563 333.515 95.8281 333.515 96.6563 cv
f
336.515 98.1563 mo
336.515 98.9844 335.843 99.6563 335.015 99.6563 cv
334.187 99.6563 333.515 98.9844 333.515 98.1563 cv
333.515 97.3281 334.187 96.6563 335.015 96.6563 cv
335.843 96.6563 336.515 97.3281 336.515 98.1563 cv
f
339.515 101.156 mo
339.515 101.984 338.843 102.656 338.015 102.656 cv
337.187 102.656 336.515 101.984 336.515 101.156 cv
336.515 100.328 337.187 99.6563 338.015 99.6563 cv
338.843 99.6563 339.515 100.328 339.515 101.156 cv
f
342.515 97.4063 mo
342.515 98.2344 341.843 98.9063 341.015 98.9063 cv
340.187 98.9063 339.515 98.2344 339.515 97.4063 cv
339.515 96.5781 340.187 95.9063 341.015 95.9063 cv
341.843 95.9063 342.515 96.5781 342.515 97.4063 cv
f
345.515 98.9063 mo
345.515 99.7344 344.843 100.406 344.015 100.406 cv
343.187 100.406 342.515 99.7344 342.515 98.9063 cv
342.515 98.0781 343.187 97.4063 344.015 97.4063 cv
344.843 97.4063 345.515 98.0781 345.515 98.9063 cv
f
349.265 103.406 mo
349.265 104.234 348.593 104.906 347.765 104.906 cv
346.937 104.906 346.265 104.234 346.265 103.406 cv
346.265 102.578 346.937 101.906 347.765 101.906 cv
348.593 101.906 349.265 102.578 349.265 103.406 cv
f
352.265 101.156 mo
352.265 101.984 351.593 102.656 350.765 102.656 cv
349.937 102.656 349.265 101.984 349.265 101.156 cv
349.265 100.328 349.937 99.6563 350.765 99.6563 cv
351.593 99.6563 352.265 100.328 352.265 101.156 cv
f
355.265 98.1563 mo
355.265 98.9844 354.593 99.6563 353.765 99.6563 cv
352.937 99.6563 352.265 98.9844 352.265 98.1563 cv
352.265 97.3281 352.937 96.6563 353.765 96.6563 cv
354.593 96.6563 355.265 97.3281 355.265 98.1563 cv
f
358.265 100.406 mo
358.265 101.234 357.593 101.906 356.765 101.906 cv
355.937 101.906 355.265 101.234 355.265 100.406 cv
355.265 99.5781 355.937 98.9063 356.765 98.9063 cv
357.593 98.9063 358.265 99.5781 358.265 100.406 cv
f
361.265 101.156 mo
361.265 101.984 360.593 102.656 359.765 102.656 cv
358.937 102.656 358.265 101.984 358.265 101.156 cv
358.265 100.328 358.937 99.6563 359.765 99.6563 cv
360.593 99.6563 361.265 100.328 361.265 101.156 cv
f
367.265 101.906 mo
367.265 102.734 366.593 103.406 365.765 103.406 cv
364.937 103.406 364.265 102.734 364.265 101.906 cv
364.265 101.078 364.937 100.406 365.765 100.406 cv
366.593 100.406 367.265 101.078 367.265 101.906 cv
f
371.015 100.406 mo
371.015 101.234 370.343 101.906 369.515 101.906 cv
368.687 101.906 368.015 101.234 368.015 100.406 cv
368.015 99.5781 368.687 98.9063 369.515 98.9063 cv
370.343 98.9063 371.015 99.5781 371.015 100.406 cv
f
374.015 102.656 mo
374.015 103.484 373.343 104.156 372.515 104.156 cv
371.687 104.156 371.015 103.484 371.015 102.656 cv
371.015 101.828 371.687 101.156 372.515 101.156 cv
373.343 101.156 374.015 101.828 374.015 102.656 cv
f
377.015 100.406 mo
377.015 101.234 376.343 101.906 375.515 101.906 cv
374.687 101.906 374.015 101.234 374.015 100.406 cv
374.015 99.5781 374.687 98.9063 375.515 98.9063 cv
376.343 98.9063 377.015 99.5781 377.015 100.406 cv
f
380.015 100.406 mo
380.015 101.234 379.343 101.906 378.515 101.906 cv
377.687 101.906 377.015 101.234 377.015 100.406 cv
377.015 99.5781 377.687 98.9063 378.515 98.9063 cv
379.343 98.9063 380.015 99.5781 380.015 100.406 cv
f
383.015 101.906 mo
383.015 102.734 382.343 103.406 381.515 103.406 cv
380.687 103.406 380.015 102.734 380.015 101.906 cv
380.015 101.078 380.687 100.406 381.515 100.406 cv
382.343 100.406 383.015 101.078 383.015 101.906 cv
f
386.015 104.156 mo
386.015 104.984 385.343 105.656 384.515 105.656 cv
383.687 105.656 383.015 104.984 383.015 104.156 cv
383.015 103.328 383.687 102.656 384.515 102.656 cv
385.343 102.656 386.015 103.328 386.015 104.156 cv
f
389.765 103.406 mo
389.765 104.234 389.093 104.906 388.265 104.906 cv
387.437 104.906 386.765 104.234 386.765 103.406 cv
386.765 102.578 387.437 101.906 388.265 101.906 cv
389.093 101.906 389.765 102.578 389.765 103.406 cv
f
392.765 104.156 mo
392.765 104.984 392.093 105.656 391.265 105.656 cv
390.437 105.656 389.765 104.984 389.765 104.156 cv
389.765 103.328 390.437 102.656 391.265 102.656 cv
392.093 102.656 392.765 103.328 392.765 104.156 cv
f
395.765 101.906 mo
395.765 102.734 395.093 103.406 394.265 103.406 cv
393.437 103.406 392.765 102.734 392.765 101.906 cv
392.765 101.078 393.437 100.406 394.265 100.406 cv
395.093 100.406 395.765 101.078 395.765 101.906 cv
f
398.765 103.406 mo
398.765 104.234 398.093 104.906 397.265 104.906 cv
396.437 104.906 395.765 104.234 395.765 103.406 cv
395.765 102.578 396.437 101.906 397.265 101.906 cv
398.093 101.906 398.765 102.578 398.765 103.406 cv
f
401.765 102.656 mo
401.765 103.484 401.093 104.156 400.265 104.156 cv
399.437 104.156 398.765 103.484 398.765 102.656 cv
398.765 101.828 399.437 101.156 400.265 101.156 cv
401.093 101.156 401.765 101.828 401.765 102.656 cv
f
404.765 103.406 mo
404.765 104.234 404.093 104.906 403.265 104.906 cv
402.437 104.906 401.765 104.234 401.765 103.406 cv
401.765 102.578 402.437 101.906 403.265 101.906 cv
404.093 101.906 404.765 102.578 404.765 103.406 cv
f
408.515 104.156 mo
408.515 104.984 407.843 105.656 407.015 105.656 cv
406.187 105.656 405.515 104.984 405.515 104.156 cv
405.515 103.328 406.187 102.656 407.015 102.656 cv
407.843 102.656 408.515 103.328 408.515 104.156 cv
f
411.515 100.406 mo
411.515 101.234 410.843 101.906 410.015 101.906 cv
409.187 101.906 408.515 101.234 408.515 100.406 cv
408.515 99.5781 409.187 98.9063 410.015 98.9063 cv
410.843 98.9063 411.515 99.5781 411.515 100.406 cv
f
414.515 103.406 mo
414.515 104.234 413.843 104.906 413.015 104.906 cv
412.187 104.906 411.515 104.234 411.515 103.406 cv
411.515 102.578 412.187 101.906 413.015 101.906 cv
413.843 101.906 414.515 102.578 414.515 103.406 cv
f
417.515 103.406 mo
417.515 104.234 416.843 104.906 416.015 104.906 cv
415.187 104.906 414.515 104.234 414.515 103.406 cv
414.515 102.578 415.187 101.906 416.015 101.906 cv
416.843 101.906 417.515 102.578 417.515 103.406 cv
f
420.515 102.656 mo
420.515 103.484 419.843 104.156 419.015 104.156 cv
418.187 104.156 417.515 103.484 417.515 102.656 cv
417.515 101.828 418.187 101.156 419.015 101.156 cv
419.843 101.156 420.515 101.828 420.515 102.656 cv
f
423.515 105.656 mo
423.515 106.484 422.843 107.156 422.015 107.156 cv
421.187 107.156 420.515 106.484 420.515 105.656 cv
420.515 104.828 421.187 104.156 422.015 104.156 cv
422.843 104.156 423.515 104.828 423.515 105.656 cv
f
427.265 107.906 mo
427.265 108.734 426.593 109.406 425.765 109.406 cv
424.937 109.406 424.265 108.734 424.265 107.906 cv
424.265 107.078 424.937 106.406 425.765 106.406 cv
426.593 106.406 427.265 107.078 427.265 107.906 cv
f
430.265 108.656 mo
430.265 109.484 429.593 110.156 428.765 110.156 cv
427.937 110.156 427.265 109.484 427.265 108.656 cv
427.265 107.828 427.937 107.156 428.765 107.156 cv
429.593 107.156 430.265 107.828 430.265 108.656 cv
f
433.265 108.656 mo
433.265 109.484 432.593 110.156 431.765 110.156 cv
430.937 110.156 430.265 109.484 430.265 108.656 cv
430.265 107.828 430.937 107.156 431.765 107.156 cv
432.593 107.156 433.265 107.828 433.265 108.656 cv
f
436.265 106.406 mo
436.265 107.234 435.593 107.906 434.765 107.906 cv
433.937 107.906 433.265 107.234 433.265 106.406 cv
433.265 105.578 433.937 104.906 434.765 104.906 cv
435.593 104.906 436.265 105.578 436.265 106.406 cv
f
439.265 107.906 mo
439.265 108.734 438.593 109.406 437.765 109.406 cv
436.937 109.406 436.265 108.734 436.265 107.906 cv
436.265 107.078 436.937 106.406 437.765 106.406 cv
438.593 106.406 439.265 107.078 439.265 107.906 cv
f
442.265 104.156 mo
442.265 104.984 441.593 105.656 440.765 105.656 cv
439.937 105.656 439.265 104.984 439.265 104.156 cv
439.265 103.328 439.937 102.656 440.765 102.656 cv
441.593 102.656 442.265 103.328 442.265 104.156 cv
f
445.265 107.156 mo
445.265 107.984 444.593 108.656 443.765 108.656 cv
442.937 108.656 442.265 107.984 442.265 107.156 cv
442.265 106.328 442.937 105.656 443.765 105.656 cv
444.593 105.656 445.265 106.328 445.265 107.156 cv
f
449.015 107.906 mo
449.015 108.734 448.343 109.406 447.515 109.406 cv
446.687 109.406 446.015 108.734 446.015 107.906 cv
446.015 107.078 446.687 106.406 447.515 106.406 cv
448.343 106.406 449.015 107.078 449.015 107.906 cv
f
452.015 106.406 mo
452.015 107.234 451.343 107.906 450.515 107.906 cv
449.687 107.906 449.015 107.234 449.015 106.406 cv
449.015 105.578 449.687 104.906 450.515 104.906 cv
451.343 104.906 452.015 105.578 452.015 106.406 cv
f
455.015 107.906 mo
455.015 108.734 454.343 109.406 453.515 109.406 cv
452.687 109.406 452.015 108.734 452.015 107.906 cv
452.015 107.078 452.687 106.406 453.515 106.406 cv
454.343 106.406 455.015 107.078 455.015 107.906 cv
f
458.015 108.656 mo
458.015 109.484 457.343 110.156 456.515 110.156 cv
455.687 110.156 455.015 109.484 455.015 108.656 cv
455.015 107.828 455.687 107.156 456.515 107.156 cv
457.343 107.156 458.015 107.828 458.015 108.656 cv
f
461.015 104.156 mo
461.015 104.984 460.343 105.656 459.515 105.656 cv
458.687 105.656 458.015 104.984 458.015 104.156 cv
458.015 103.328 458.687 102.656 459.515 102.656 cv
460.343 102.656 461.015 103.328 461.015 104.156 cv
f
464.015 110.156 mo
464.015 110.984 463.343 111.656 462.515 111.656 cv
461.687 111.656 461.015 110.984 461.015 110.156 cv
461.015 109.328 461.687 108.656 462.515 108.656 cv
463.343 108.656 464.015 109.328 464.015 110.156 cv
f
467.765 108.656 mo
467.765 109.484 467.093 110.156 466.265 110.156 cv
465.437 110.156 464.765 109.484 464.765 108.656 cv
464.765 107.828 465.437 107.156 466.265 107.156 cv
467.093 107.156 467.765 107.828 467.765 108.656 cv
f
470.765 110.906 mo
470.765 111.734 470.093 112.406 469.265 112.406 cv
468.437 112.406 467.765 111.734 467.765 110.906 cv
467.765 110.078 468.437 109.406 469.265 109.406 cv
470.093 109.406 470.765 110.078 470.765 110.906 cv
f
473.765 106.406 mo
473.765 107.234 473.093 107.906 472.265 107.906 cv
471.437 107.906 470.765 107.234 470.765 106.406 cv
470.765 105.578 471.437 104.906 472.265 104.906 cv
473.093 104.906 473.765 105.578 473.765 106.406 cv
f
476.765 105.656 mo
476.765 106.484 476.093 107.156 475.265 107.156 cv
474.437 107.156 473.765 106.484 473.765 105.656 cv
473.765 104.828 474.437 104.156 475.265 104.156 cv
476.093 104.156 476.765 104.828 476.765 105.656 cv
f
479.765 108.656 mo
479.765 109.484 479.093 110.156 478.265 110.156 cv
477.437 110.156 476.765 109.484 476.765 108.656 cv
476.765 107.828 477.437 107.156 478.265 107.156 cv
479.093 107.156 479.765 107.828 479.765 108.656 cv
f
482.765 110.906 mo
482.765 111.734 482.093 112.406 481.265 112.406 cv
480.437 112.406 479.765 111.734 479.765 110.906 cv
479.765 110.078 480.437 109.406 481.265 109.406 cv
482.093 109.406 482.765 110.078 482.765 110.906 cv
f
486.515 110.156 mo
486.515 110.984 485.843 111.656 485.015 111.656 cv
484.187 111.656 483.515 110.984 483.515 110.156 cv
483.515 109.328 484.187 108.656 485.015 108.656 cv
485.843 108.656 486.515 109.328 486.515 110.156 cv
f
489.515 110.156 mo
489.515 110.984 488.843 111.656 488.015 111.656 cv
487.187 111.656 486.515 110.984 486.515 110.156 cv
486.515 109.328 487.187 108.656 488.015 108.656 cv
488.843 108.656 489.515 109.328 489.515 110.156 cv
f
492.515 110.156 mo
492.515 110.984 491.843 111.656 491.015 111.656 cv
490.187 111.656 489.515 110.984 489.515 110.156 cv
489.515 109.328 490.187 108.656 491.015 108.656 cv
491.843 108.656 492.515 109.328 492.515 110.156 cv
f
495.515 110.906 mo
495.515 111.734 494.843 112.406 494.015 112.406 cv
493.187 112.406 492.515 111.734 492.515 110.906 cv
492.515 110.078 493.187 109.406 494.015 109.406 cv
494.843 109.406 495.515 110.078 495.515 110.906 cv
f
498.515 110.906 mo
498.515 111.734 497.843 112.406 497.015 112.406 cv
496.187 112.406 495.515 111.734 495.515 110.906 cv
495.515 110.078 496.187 109.406 497.015 109.406 cv
497.843 109.406 498.515 110.078 498.515 110.906 cv
f
501.515 108.656 mo
501.515 109.484 500.843 110.156 500.015 110.156 cv
499.187 110.156 498.515 109.484 498.515 108.656 cv
498.515 107.828 499.187 107.156 500.015 107.156 cv
500.843 107.156 501.515 107.828 501.515 108.656 cv
f
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368
260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A
577DC235F833AFCC30669C812FBF097879E1> |-
/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A
2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D47
14AF52ABD0227B6CDD854C568D5A6F3817645C5> |-
/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
/V <1C60D8A8C9B64EDFFB759009DDECF50F0319B844741E3CEB2C0ABDDB89E7
563FC0955B866D61D9CC736D3C346A5623E20C1E4D> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/y <1C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA
18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836
B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA734
8AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 33 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 84 /T put
dup 86 /V put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 
/zero /one /two /three /four /five /six 29{/.notdef}rp 
/T /.notdef /V 12{/.notdef}rp /c /.notdef /e 3{/.notdef}rp 
/i 2{/.notdef}rp /l /m /.notdef /o 3{/.notdef}rp /s 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [14 0 0 -14 0 0 ]msf
250.015 394.654 mo
(Time!\(s\))sh
IOXMRW+ArialMT*1 [0 -14 -14 0 0 0 ]msf
12.0137 226.157 mo
(Velocity!\(mm/s\))
[-9.33789 -7.78613 -3.11035 -7.78613 -7 -3.11035 -3.88965 -7 -3.88965 -4.66211 -11.6621 -11.6621 
-3.88965 -7 0 ]ysh
51.5142 350.157 mo
212.764 350.157 li
212.764 302.907 li
51.5142 302.907 li
51.5142 350.157 li
cp
9.15541e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
ef
51.5142 350.157 mo
51.5142 302.907 li
212.765 302.907 li
212.765 350.157 li
51.5142 350.157 li
@
51.5142 302.907 mo
212.765 302.907 li
3.0518e-5 3.0518e-5 3.0518e-5 1 cmyk
@
51.5142 350.157 mo
212.765 350.157 li
@
212.765 350.157 mo
212.765 302.907 li
@
51.5142 350.157 mo
51.5142 302.907 li
@
51.5142 350.157 mo
212.765 350.157 li
@
51.5142 350.157 mo
51.5142 302.907 li
@
51.5142 302.907 mo
212.765 302.907 li
@
51.5142 350.157 mo
212.765 350.157 li
@
212.765 350.157 mo
212.765 302.907 li
@
51.5142 350.157 mo
51.5142 302.907 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981
F7468DA1474C45> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E13
1450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41A
C970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DF
A8> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 61 /equal put
dup 97 /a put
dup 104 /h put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 
/zero /one /two /three /four /five /six 6{/.notdef}rp 
/equal 22{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef 
/c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp 
/y 134{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [10 0 0 -10 0 0 ]msf
90.5137 315.657 mo
(r!=!0!\(channel!center\))sh
gsave
65.7637 304.407 mo
65.7637 318.657 li
80.0137 318.657 li
80.0137 304.407 li
65.7637 304.407 li
cp
clp
74.0137 311.157 mo
74.0137 311.985 73.3428 312.657 72.5137 312.657 cv
71.6855 312.657 71.0137 311.985 71.0137 311.157 cv
71.0137 310.328 71.6855 309.657 72.5137 309.657 cv
73.3428 309.657 74.0137 310.328 74.0137 311.157 cv
.955352 .928405 3.0518e-5 3.0518e-5 cmyk
f
grestore
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 
/zero /one /two /three /four /five /six /.notdef 
/eight 4{/.notdef}rp /equal 22{/.notdef}rp /T /.notdef /V 10{/.notdef}rp 
/a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [10 0 0 -10 0 0 ]msf
90.5137 329.907 mo
(r!=!185!)sh
%ADOBeginSubsetFont: SymbolMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SymbolMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /mu put
def
/FontBBox {0 -220 1113 1005} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235
BDD70699E096A6312D> |-
/mu <1C60D8A8C9B7FBE1CEF90ADFEE69DD2DD9D352B10CB42426EE82DC52C52
D4F8699E0A310464D7FB1FA805D8CC4DAB824E1C70115C99A4D0C4724CCCD002
46EE5727B763DCCC1EF93F4F836F440B68CBB4BA9924DABB089DDC3F318794A0
4D0CC8D5CBFA71E33ABDD1062939BBB2EF2A57DB0B26627DF9F16DB477D13BA9
B64308D9B28E9254BFC154A0BCA92D3CE9FAF30F5A21030ED7A722CD4D7FF3F8
0EC6836885BE3B1F2C1291EADA749447A3397B77736C040716B308AF7942AB81
3E31A36FB9E2F49D3817C6B7D80057676EF942208B0DC64D84FF73D34BE1D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IOXMRX+SymbolMT /SymbolMT findfont ct_VMDictPut
/IOXMRX+SymbolMT*1 
[109{/.notdef}rp /mu 146{/.notdef}rp]
IOXMRX+SymbolMT nf
IOXMRX+SymbolMT*1 [10 0 0 -10 0 0 ]msf
124.264 329.907 mo
(m)sh
IOXMRW+ArialMT*1 [10 0 0 -10 0 0 ]msf
129.514 329.907 mo
(m)sh
gsave
65.7637 318.657 mo
65.7637 332.907 li
80.0137 332.907 li
80.0137 318.657 li
65.7637 318.657 li
cp
clp
74.0137 325.407 mo
74.0137 326.235 73.3428 326.907 72.5137 326.907 cv
71.6855 326.907 71.0137 326.235 71.0137 325.407 cv
71.0137 324.578 71.6855 323.907 72.5137 323.907 cv
73.3428 323.907 74.0137 324.578 74.0137 325.407 cv
.0131228 .959808 .914061 .00106813 cmyk
f
grestore
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IOXMRW+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A0
65D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D55
9B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C2
47BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC
9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD8
8F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF57
5C72F67F4BEBB98F8AFA57505EC9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IOXMRW+ArialMT /Encoding get
dup 100 /d put
dup 103 /g put
pop
%ADOEndSubsetFont
/IOXMRW+ArialMT*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 
/zero /one /two /three /four /five /six /.notdef 
/eight 4{/.notdef}rp /equal 22{/.notdef}rp /T /.notdef /V 10{/.notdef}rp 
/a /.notdef /c /d /e /.notdef /g /h 
/i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r 
/s /t 4{/.notdef}rp /y 134{/.notdef}rp]
IOXMRW+ArialMT nf
IOXMRW+ArialMT*1 [10 0 0 -10 0 0 ]msf
90.5137 345.657 mo
(r!=!250!)sh
IOXMRX+SymbolMT*1 [10 0 0 -10 0 0 ]msf
124.264 345.657 mo
(m)sh
IOXMRW+ArialMT*1 [10 0 0 -10 0 0 ]msf
129.514 345.657 mo
(m!!\(channel!edge\))sh
gsave
65.7637 333.657 mo
65.7637 347.907 li
80.0137 347.907 li
80.0137 333.657 li
65.7637 333.657 li
cp
clp
74.0137 340.407 mo
74.0137 341.235 73.3428 341.907 72.5137 341.907 cv
71.6855 341.907 71.0137 341.235 71.0137 340.407 cv
71.0137 339.578 71.6855 338.907 72.5137 338.907 cv
73.3428 338.907 74.0137 339.578 74.0137 340.407 cv
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IOXMRX+SymbolMT*1 uf
/IOXMRX+SymbolMT uf
/SymbolMT uf
/IOXMRW+ArialMT*1 uf
/IOXMRW+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Guillermo) ()
%%Title: (fig5.eps)
%%CreationDate: 12/27/2018 1:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&f6/XeZ7+AOHOTiTaPig"%s$;h#"_?.D_ZqXVGI;/mr]]>5P=6LIQ]pH)4?cO.#45"f=@>[i[QH`7Rfj8AlKfk'SOH$1RReA
%_LJkoGgaR.1Tj+IrD.'LrcN1!5.Kcg\i/MH//a(piHQQ#)Q1L;BIo&/8;ECc<"s4#$15^!T?M)Fd,nuIU+d4u=k6UN]/ak:2gaa\
%e+LS=7`)oGKi,0><8YS"P<!BI(C/44FT\cL>kPkP/OB5&gXR+hl"IkVCte&*&msF%`,gMiDU)N=)eSTCD"Od4(lUL7MfFXkZ`[CW
%K7Ar1@;6lrLeL2kI$T5rR']AA%UVR+o::do\j"#5;IB2lSY+5jO:Wil&5g)h\Pfc+FYR;/rP_lk&$3tOG0fmeZahK3pa@/W0HE*k
%iQR_:iKa[4SrT7\*qrWm8V@b50DqhtVG31HE3g,!,fB.#'6g]T1n779;Q^^s;C7Z#\<<gZ3$(`?H^&F0ru1D,cFRaZ,-Aiga%<S^
%Mt?f'^Q@[3Gar3`X*!TT1#g0-a^?aC."@@&[pKL`IRJ\'+Lk8^,g"toXR[jKBJd[L5=__&N#)#90ZgoS1)AB5e`Pc%W'YMdjX1Mr
%&X+2DUD[,GBmA.H-CM4k_]nWK0nsokWCKiUassS-BRg1]./Xd$F:IpAXZ5MR-J8rg,jYkLU+o4o.cR+rkX?ud8s:(89/s'MT:u92
%P*#b,F+-H$5h]DS<Zj+j3%:P7oT92NRKJXY'L>2D:BO`'Ue[+OF5B<01Pj@ur]dR&hfGm*=R0GcRS:S6-3LHj,5jA7KD/IVY/Xpi
%2&7E<EAuA$P"B>Q9Z"8L&t1,1cn(UG3!qL+JMro)[)lkJ(kW@G/<bWsn-NEp=g87WMFG%_=G/3D,.-;g\B8g5,efi0TE3)qRg@Dp
%A3pmE8Zoq4oQgqW"l>min--#B%/?RPP&%iI]L!QF$=5IU<#jt2i!WlM)__H!!/_&?J-Mn/(%VnWi+LsUYS*?:$D89@#-ZC.j5;lM
%9:0rJBd-1o.X38K'(-&.KR?*,_2jGN>t(6E5A16`_CL-\*D&4<f;+FZ&'t`0UchF?6Z*)Li>''-K1$7.<?`K5JlcUi4MiW59VO.-
%\:aq!8Tb%I:GmuP*?gQd*h!]";:uNK#m6Q>65m[6@+0!<:$<\+!=#N`!e^8k_E#.84MiU*,J"@I'"O*ni>(&HKBRKYj`Da[nIZa/
%e#>B,V4i3jM'jc?P_'AXg:'KHKK^T,JsclT'2L]EnjgcVAe[H1:B6LBjA-tk$ritSV!j.j#RCq?&QMk$5Ih$T:.MKCcD[t3EBl@O
%NWDQ^na22ld?1X)2O1\u)aG&O-b`ju#pkq$9JI3rjAqRXn/o;9VNR5DU/>r&Gpe(q`PJ2;:B&W-M$3WGGpe*@'`"oEPJ;4.Hr$YO
%ltP];T-otiGOef`ORL=Rq*VWX9&qA]Sc"brjLatXrYYH,ZLcFun4NPDI&GlC47F)H(ZPh)`#q)&e#<s]8sMCh<D#ZQ5sB/Y+*Wfh
%PQ,p;Q^A3?T1C2q+Ra-*]Z2eg*@*2lKS:1sch)DO.2A$Hk*Ognf\oI[6^ktMg?)91%\M`p/T?Xh0'B('j!j4n'h*();cI,E/Q-O&
%h4?)FfSb"ip,'Uc\K3+\a--W7&2->4RfPBDW^97M[&fMA=2=RXM(2]E<,e!Gik!n7eKQ'pM's\l22^XP&k.NuSKO@1fJ"^S%uNnA
%PL#mD0qLcIK4C3/:r8-d_^%cGM>(+tR6RMcPm_>.eB/e)T)9-m:m$i/MW>N-q+N8l/kXrgLe>;^),sQi7AhCW_7sT\3YQK-\!SFd
%("nD&@LNoV,e/]^""(Ma,QmG$3'g)j9IUleP'r`hJ;k/BKRY=D5UN5RLr2GMUe(QL"9=q@M,[pbr_aa.(:p'5MBU02MN%I'GgJ<m
%Vl\8&..8.`C/f^Wd\,LZnJ7rg32&)D\D),oPSr_LXB'k>RL?OQ$cNtJ&seP8,%GXLgdldC0I!KUSj]ZKP(4*/,lLh2.j(c-'(8f&
%M)a%7U>;iCPbPT^l'WrXH%u\929dXJM0]`PP^4I/^n:u[*@D8kP40Ri4c)6&`08'1MhLOu'$WUo<!pr<"n[[9`s_+=7.:;,Gf5_a
%9OoZ70DQ9mV1`_;@KZs-]U24c"PE<2I&<!^V\kfaTGdTj5bEr`-CKEdoIlV&AEI%e0:c`3KbU"+kKAb:+Ch+$M'rkA0-EZuR>4?Y
%9oN0]G;+Qhj+%\%/L+sLI#d?!#[egpOkY`sV#;jT-M</4X>JpmI&XXX_P.k]R"fjMdZc4M;cM@g7rpHUWZL:n[o!mVL4KLY+Ibtu
%;-m(&#o`MC@k'8`!E.;kfbgfGS34\ebG>acA$BP).(:p+%8n(5fK$e>BNu\h%i12Z(6"H>$j6`8Os_]t"N!m?j/CX12dbuPBpJcU
%NLQ1J,,IaI!R_It_n)YK2UF0hKM255<R(.1#!,JO=(k6>=@KCR(.n?*W(s9G2%AL;bN?U=Z_WFFVF!0]MHdS!>tm/i-*m`G8tP6B
%/0f5';%k!FWOku8&6gGiBa[B%@sT"VSVF,POf<n'aPE8I%5hjWE%,V=4""/H_Eq._4HY]#o+He0MVEe5fVFQ&@_P[W>fRTCC5WEX
%?oh2=Ct(LAA>#Ebj/bp&.g(ps!)+!@Rg4e4IZNG,jO"]Bq/t-T5sg_<QR=*fmO:E2#>fq\9G1A7eQe^l\kc<4^gJ;'qr+@@:+=!I
%0fmWW4_*^jQ)#XbRQ!dAUaS`LMuk3,Kd-=f'oL9%r>sscV28a9[+#KZ@S@CXV_Ehhd(-**4[[3*;JX.3>KAl15f"%r/bb(NEELQ'
%[\6h;)Zr-+@e;HkY&bXoH-&nCgLOaOT"s>9dS@q(].:-KR@l;!d?NF]1"r&2$3gYrZO5ij1d81TTZq0M_do^^;BV]n;Usd&p3G=C
%,`ONS,t\\]2>-=d8jr"cfKP.:J/q;HPlp/*goNmI)iL\c8!W-qD$/<2_@o<]JZ2cj7Z)C5?^>UVIjhbA%VgS<O?deR)Di#SG)='f
%[<*$kCe!ORB(?h-GPD5YZ%Q'!<6tr)9UlfJjA@EK,IOL-NfY:>\9?0<_[!ED,la"R5W-oA*U:LL8gI>,SSdR=nfRisVic1V*VVGa
%kcdS!8D"R^,#,ohR:5U[UIIR)>)F#iWC6G4bl16\,HeH'2>68@mt;Jp\([i-BgAK<4*9Zf79FD/WM?1u?BOAK_?RG8eFr0E*?h$J
%.5=_R5N46P:.p67i&bp#'RLLYZ3OKF9%QY390GDeE_r/sah,X;d\WWY<fO&r<1/rd68(nn_s/Tu\RV@SP(@p=1/44iRYJU]X\oTE
%.4!ndpM,\Clrh`(<UJ*D;H'q]8dn]FR9#=.'us-&H(qgSj>j6oE"@p%'UL-_\MS"O=Y`%=a,/I03EA_cW7!k/UGQJ>7^>qMc"WqW
%BtPr@Rh.-m*.1<!KFhY9,YWGai#2Jpi`Z4u;VHnL&G;Dur^p&:J.3h6.FK#I6UK<MU$bqDn#Go\HcPrVPb`:)CK]ujU`df\DHB:d
%FIkN:@J*u.g@bHKSZ>^:.0n+/[BdYUUio]m8i4e#XqR1H41/5j:I2./]*:>glW?)'DI\3&C91;FQBbA)ZB^\%/5@7jdUbniPGu;o
%)b9$W,s=Sl#n/VYdb]TG1=R2Y'QJd5MHdB/MMKDp"HX>6VeIPO&7C#cC.835MKj`2jPgkM1s&IJVl;'_lUm<f!B1L5il!f*dg!N-
%UZN6R"FE\h$CaXSMNeG1'O.:6;-&W8k5(`5l+ll!oW]g'@HR]nIZpVuROF,JSoe!.K!3`#q-pr,YIC'P`A3S5KeV\&K1U""]/%K!
%:Mg$L_btiW]FY5_)e2i!>0Rp,l&Gmd0Hn2S>3%Vk1`B&#",&kdC%ckc.(u>?OnM%V0?2f[s.@As([$3T0l'NFOa=Vg$Bn#!0c4?O
%,JH7#gm25^4@*Am%gX6U/.R")\Vq.[V-h<?ecPe2O78?.F4QEAA,J5,N&l>s/iGdRCc"GnAicaKAq?"bK_^Frbm#dYObp_m#/#aO
%T"-&OBsWf;Oc2fa$W5t4mD%&8A>CLY6[mHuMECiIPN`?i+)),3^Eo7VVot,+PJICXSr-"!r!2WOBHkYFrP,7YIM*7_L)>#B-SfSJ
%JLi'Ie4GeeBJDku/nU7A^P1>B$#Lf@Oa1<pH21[N]pSDRn\W8B@hJWCViCNp6Yl:a_.\KY,9fgG3tO^<k,c65@>`KI\G3[LMWc,V
%fPce]"GcX0bf+1gOZ_2""=d2$k#K*_-h>O*guj6>8A6&m8gHgIq"@5rhi+4m<O\=Vq^tF?$\IA)e`K29;kE_.2]*\>F%^D\,raVZ
%DR^uLh9,JO(Sge63r1pY3u``G4A^bRaNY6qRig_'?HC)T?P&@.nDY:!Chkkc1^W.gjeo)h]1GgXAKX\uN[>i^;fV<fG+Lt^Q(&@6
%?G:>C=q+$'JI9@]DSm]=9F*t91`%Q7K'EP+C*MQe)>l@B+,DTdjOOLN[*[1+ORN"7>b5G6r(V[tq,a?(KD,g$0#&=2`L+u_DNH(0
%OM+WGd$,np!I!%*?!l%Z2.[la>D2tkU"@B2UrM^1L4JV+^#.?O(OY93.DGpN\joN'=Uq.$?R#&PVaq,G08-TbqK7gRlHL#M97PJ]
%$ZrWt$B+/fUatg0bF@r+/`+I+RNh2E=+)\SrefREn/cHWVEULH970eP`sMh;_:@LMr8]M>oG7r3)19EJ;1nH#07G0?Go'@\f2GV<
%3l+]52(),GKeFiFC5C&efQ7S<X>J]'_-]noVWn0+'=B0ul3IPK-rV1;:iXS?C`B<*3C21\`'X4S[XQRtkl,%4e4/F/d)V%VZE7e,
%Qj[Ajrss$@F`ZD`'h2k;R4318(:+#Yeg4adL/(8bau>]IdB3*9=<[cQ"V!l1M'M9%AiapP4!=`bMcnrf&;61C1Y_g5&<)`Gpe+GY
%b):=]k<BB?gt2f?9NV71,Y/#-@+D1R6/)_WEY)'RpK3sQ%b_i;R6Y_eCi.s=2Z.\%BT.eS_0[^NRqNLUl1TTL;Wrr)@+%?Me/*`t
%JA<+u?#="4?1>22`cOL^:=WO!SU_#3D<!u,>O0&L4W/8L2A=F:*l4`(aON]RpB5teAO27g!?(gV9lnOjK'76'0V4;Lq)[QIKpNjn
%YgONbr&9#87%\qTDuY!cN9f3jp;+7"46YZeC&6UN^p)L8*UWdJ'gXVaI*eX<WsKs_=Vk4;iPUrk][&YQ[GCrps.5^!b<<PXUnu")
%IO4,YF69^B;(&?]D;T9>-420:T`XSgQ6VRC]A2rElKA0K=fSsFf@oG<5p8K_Z^Sm5&\t5\>3;&+>>n*rL0Q!&&V0_mkjJeEr`:la
%'&dqN]bIf%7Hb8T7IYHHL7Ra,nSdZIkNhDmd,@\O+1]&a)5ClF_hX>M&-jfJTqXP.L`>MGZ2)-Lba,K3g9ph!EC]Pre10a@>Tcnc
%Qf2M9>Z9mmpM_nbqPu'jNmLV)cQV`'[f*6e>0)]^_T\h7"H@K%SOC^rqt5HOW/t<HSOdH?["j%LOdKh2i'2h0ec8c-YtgZS3`G5)
%2jbNhN2i@c;^jU@$>V4-B;-5">9i"PaDfSVs1^)$l:)roQZKJ5D>tI\%t(f_==9(-!Trj3Wb?S,"Rc`\:c&ZQC[1q[EJ"PnVpY*c
%ekhr\s8<JTn,EESHo;nMs3EF[YtQJaAJiq^So9W?f^A@8nDL8*C"%QbrD'TE0U#7DC`30FTJQ$ui_O=bO'n%"2VW6G+(mt7+2Sbp
%e@+E&Db"(2rD2Cp'e'E?'gF9YNr4hchjot"BLhD@ht2tL.BoqU$Oa5aj2W;?1OKNdebp`V)"[?2#<?!m+==EL0maoiA)^&B<3=:0
%Drbm>mD4;P582Y9mgPYHf6`kng?;iM07UgD/ib_?pBe@*;LMkneO4l+cX!RGO.cY&J!"_FRo@gM2Ae*o*<SUb%FCn"c<EV6m'td=
%>Qh(mqJdQL;S+]$FujqKj5t0V+0W#M0\<dLNWsS^V<GGX9F#!@Q_g;c-))Tlr.QZ9Qj^(o-7mCPr_'[.a]LSN1I<BeCejtEcK\"X
%7VW"N[`FAS1QPV>N8,gEce`GdL6L,.Z.Wmk#VL;2G>s0\3PUsC-(1(oDK@P$CE!j?f(/Q7&t)i9k+f:6Q-#i>Z$8*")V'MWA<&Op
%Mk=LQYuHsidU4sR2?1C.MR3WL-Zs)L":XXg+#S^u!f$cY$*sXdNA!eEo-8\5LN<afdb(=h^k/Et7PTrN.d2c$6ofC"gU*dca(-A+
%9:32"=),>K#sFF6-d/7q%9kmO?,MNG*X[fcC5Wm)M(U%jWXSqEBj4qFE]dN2b2Ysm_%0AKk+"pMni5#brDZ7=i-$iI+qe]g6rg<4
%`LkAO9sVm<-Or2YPl-kX&ZXs0C'_j\9Dj]l2>I3q?00@>hJ<WjK/lpC<Ztr*pf3fIhP/]`>r?%?bE?k!&sQVN\5BA,_h1h#OSUlo
%$TA\$nZb(lbkak8p]fQa>.PC&F'+^j*s]+QTsd.'cLkd=Iil\;`dQd6=POZL\ZMRL?dM"Q_!bh<LW'lf_:@;bOWDR5S/jYuZ&(.J
%AlR7=0Rpnj7O-WRO0HVP9[HcAc":3dH%JD9#&fQS`L<LeMja:%@OEfU*WA:Y5b(]?ib<Zpk\l)$ll[d?/Y+gJD)hqYD3$dOG1pa_
%.dN=n3o:]"*Ers)1Y!UU9a!;L@nHHR(T4La6\Q54VNNAYFfqYIBHj!=ZPMh(:i'd]>`d=<r1COZj&i\-,\S*#N]e*X<fH"?;72B1
%UMS_;0=;5J#tnI4At.,aVG,b,!*J.47[^jD),K@UAi!:c3ZbaPQASZli.+:6al8/!b)CD#;pBVLNZ<dqN(pI*ZH/(rRf5rk&e9K6
%enk_JF5F_Q;SU,K@OO]!PsUZC6=u8`BJl;00WD%1"&`]R)o>PV+dm@A"I?VB($7CWhkN%QcD<%T]W>5\q,VT+a*>gmBM\u:pMMuC
%b`Mun8%Q5Vc3<:t#a9=PNm5e>[RYs!hP2jcs5S\?_1J2=<I6i_XK(D^L/D1m20]^[?_P5BH[t<p2+OYQLG^q;+I/\*OQCZh%GQKe
%iB%5ERk&M(bdH'QgdYQtUq2fo=P(m"`m#EZS<`#0C8.>EZqbAH<k!W([F'W3@u1OPU1A!_5=-lZgs;,B.'Y,$0WO8KACG?Q*)'S8
%O(`L/3&F8.O\:Sejdt=%d^Km8`9<-b7RW"g;U:e(`k*4Gl>NN.W$scj]l2P_F"+J(Vj7^d]TeL#]>*EkKIRdh]A+n9^oHu:'1$V2
%>_<>(<tI#'1a\<B0`$[Tke#H*^/RFsGU/B-4HcC;cj_:$kX1e?7+_a)!5Ld'&o?fB+&0O=m](lqU*(6/Ku91P]@\EX\):`+Z11A,
%dMLtnbKeIjJ[BVD#IUMP9ieRN8r^3%+?$k%/SCU'\ioG?LLL+:;PDhScNP6e3G9tDN5(#-,X^q24]K4!%/oEi%$MEGMa7l53[A?+
%BD5(D*/b_E7r?e7.d8o3cBu&i/2)9AI!77^F9L20FXDu9OQMOk*Q\4_fbK#nd3KWsEOGIMRCCV+A0`qc$E##:gH@-:b90;aG`6OL
%,Ym]Z"gJlPk!3ZLG?hA2BsS\1c8%62L4<?gO'>=KmCt6;LbrjBAsT_kNTPkUOt/<;=]"T*Cg+2]e/Ik)a0&9DP_Z:Oh;-18g_jgQ
%a0<s-d?8d5)'PKC_>"gb2792+XT;NF/"1,0$/]NuZGe/m?i].+CfZNb/BiOeq6J8p24X?/*@U*u-]E2m^n[FhZ_bc@h<[ATYg1'A
%D?MSq"negJ0Pq2@/S8#r^b%U*V9-tsj[47,c-Sqo%[+tDdWT4RE:`4&+tlh2HZloeXkdlUeQ0Wn1MT#eL$i?EcfOC0+d\$e+soZ/
%QA6MT5`6Le'&!NaW_\g1&$r7f'f6uDZ!rb;]/8!tT8aa5Y=#4K0ucTh6ug=s8shI&/N#D"L^"uB1?\8jkeahQaX,[*&jLq19-('Q
%89@Vt^Lf9;%AAWipA"*M"`@=5@G[>\KVe)9<Z6]:+<LD\>/,Fkf5*XFrW[Pn'l;G,i'-B0eYmS1e$K2ZAMeC%f<jQX4;k*?/M%j<
%MeUA;bQ&]XYBJYsl]eZL-b!+rc9s]7B&_CDeK/?a`e7J6kSff:_S$T3a[-@?9Ae#KaR&E&6#Y1.=91/c7pFE-"A>,lV:rjj2JgZB
%KDE#k2$H9Md`@PF!&ot!or2>5k+J[nU:/uj#We_Mc28nSK^bsT7g!MZ72'HD&H@[RN(L@T["N2[E$@>5c)Cfk<,-+.9B+&\CZB5#
%(ieR)&6!_RPFGDCbm/;Y)oC!UBg@Bl4bU_a(rDYfaLM^+>q=M0[j-%oU0X)t#%@21eJ)Xs6IsGpg<e0K[:2KC1`!JRP$N-g"juIZ
%o(3uG`^`eS/LB$G_S=D%*MYH-6<TDP%K=8+d&gS[aW]bqOG<8//-Rn[LpAoAR^CSj<@`'^%`3<_Os8W8d\Y<2h3(Fr1ko;9_#*iX
%KJhql1.;76<GCu,1M4L#i_J+j%:/N>ZGAF$$fm"pq*e?WMo)9BD9,-NFj-L?:m-`kmM.,Sgl2h3.1-$GODX>W9I0#n/LisDeR5-B
%Q5ne*[qMe-rhE=(Yo/[^:Vk/^KYOUY$0V,4#Bq+?7p?X4&Y"8Sd;7K%g7+'XQDQTJ$PT5i(POS^!?uE<+$cn[E)Z*Q*JlkheQBQp
%*@Z:j=\Il'h0F#>Da>@D(&PYtN<Q^M[:0ksa],*<_g/F\e?']<;m9.t(tK%6;HRM]9MuDHG6jTB6=l/'ATAJ$p^)J^-B&/rp#ON)
%9H$d@P#27HDh]'^<VTTMUe@LF5VBIaVfaS"[o+0V%k?HPKiW7i%XD7:51Kc@S#?m6`TED$V&Jhu!6L.:(1*-Cp(hHa,MF!4+W>rt
%:Tm^IL2*o[K=g%MX:&gq:QZEQ<+1\q6aO&QoF=QCFWdmaH-=:nS[i?G1r(n5Rb5TIC"s.CLu+jTG+,.@0l](iG$fR@L8p;Bg(ECO
%HTJ(Go`4g?2XfW[/rF-sE(s3>0l+Ai_du5;e&B4R3RPg,A2O3PN@"oi:&$URm,h$T)mA'38%@)YdW@@E#YgMM'_9$ErkJJOJ^AQp
%.H,6m,lindJ,d7s=Mej+2<Fqu@OAUrK1Q^t'es`g#ICZHFuHoCgpT20g3DP_"7Gt+FI.soa"^sNkN0WS_\CstoC;oo<e6sGT#_a4
%nL`B;k#h.R'95qA=rC2!&KYVo5+7RbAVc)^FQt\d;[FK_L8N8*?-g''5i]b@a5a:1\%"\Wck$FlF^J?uS@WE8jUg)=M;u.:,!b`1
%FmfsODD7StW7n[hk:7B16k9)^H?@-`Wnt*0&.n-j1[,I?*B$r>@"$n%+QI)j%.tO<R46D/!d[RddVRsKFF`\8(3gM0A:>'aS44l\
%h.*WtC=`muhro:DHkkc,P/ah^!KC[^p#<qZ3`4n1g[Whhg$Ra&i:uQTF4>RI?H*In6\V%4)>CJNM>NHW#JH_gTGa?g-QgXWah;NY
%TlPH"5Kd*b4kD]6d8"]Ck]Q`PNQ:c1AleaWon(D:mcZIncQ*7gZeXms)F8%W7od#h>@#M^^%8jNmPrMDMh@5BFt"F)oTjGr4"gkJ
%Wl,og;m2I3l0"fQIglSQA"bs,?e"9;^hIh-_3O$W:PGF'k6[h2Fd^F=+gh2IVOMnEH[F'tMW%'HXQju^O508eqoE>]iGkM)4BQRZ
%8uITo@!QbLaC(:E+&AlQ-oZItFpn7oZ(H>R2%o^K/@F0rDsmDEo0`R%U1_HkhPYlf*WD?W3Z%3N./gKEYD;fuKS\f'B7\E?I_:5T
%\Xg8%(AmX*UZ;8<lnD8G$%<,"7F)';j;7gEa320q;7kX(_P]\mgo^8VC6j]5;rV3b4$35MlkDnoB:b2%G[KO4ott-E^m@-om,N-p
%NugN+q+9<s%\-cG78i1?P<gZ5R<<"bZ$jFmL07O]fe-RU*g,M]*^962@li:/1"&I\b[-od6UAF?9%Cq7LR79lY'=s!pJ_W7'(E]-
%d`#F2mke#Y4p/idS[WFB[J,72Sk]b,9;bA]*d#S0ngSiC!E#C'L;%1h;UEHZQ!loNY"Oo>nKI'*]S_4d#o>c['\ihb@9U8ZEVq,%
%arO-INh=HqUjXt"r[-!d0@:0'_9Yg5oX#TsQHje(&tl.dj.joGbpVpRR:6<f[ZI.q:ohI09YuQO!p`"[LK8dBs-@U?8mb]Ua:Oo]
%PHW*#G.piM$'`#`X5@s(l.I^8>7YqGg;3AJrjGq-Q+HY)Dsm?E$dWT?`*XEi7%ga*c>366%6PEcchUeJo^h]T*;h',8)<]$O"5DP
%/<\uVG:Iam&JTo_qX=2/Ip;SQE@"uTMF`NFRLB3nJb_-M(H?bXrXtMlPNc]IW%m2S2_O9OA`e*O<Cqdc`j=m+T^$1nh%jGJB)/iU
%d#3>pT9U8]4Vu"^E;Y..Q&q%$K7SW9q:,/*<k.G?V4Bp%kH$mP?o\6HC/J8;/,?AA(@04b@!_IiH+R/:4EK;&NV`?5NsR+9M'No3
%)4pF@:4:*1npX[N<5Y6#Y@nog#h[eZb8jF/*#`,C6c@cOYLr0-B;q["_gO`A)L^'.6g]9nVuaV:.>NMWN)@&pLAVdVr/bi%G65k<
%S7YBIlH@P1?JJN1Y4@b@U;9cg1=8_lH<G[Y29o8B*H@poCG^!6q1],3.BF],g0Ljd8u)g9d-W'd4^n'^0o3*#,2Z=KiFh!b(IjTY
%+lDKJmirZN!?&\[*#*:bggMW(QG;n^4m9>8_a6+Tm7X>*=6b+WPDEP=:J>6nnbJ\YFG/W<UClO,]p!*5pYVfJ]`44G3,$XFm1/a^
%NOMd]B,!DHekMPK!0,Dl\7CU-6go-4*EQ@Hb1+2_qjV?*TXdL&\lko<.!na=T9Pa6G81hG4&>M\JUDmF62EZ^F><)*qq^+%'\LCg
%/RSOl/4ru"q=!,/Gqk8HHp8g%:d$A6YD]T3IF3j$=)h`SC$:n':2FPR8XHC]C?.2JrB!COql73I>RmBIbSAmSUR,;<\agL#jQkpN
%8Og:AJ+K5e9>C9X2>eDd;)S#1T;%rf2s@`CU)Ki:;p^&B4/HVZ3I5U"0=CEFMY,A1%KjL[TY26Q,!l)%;j%^O$NO(V7__PtTo$X=
%W\L1:Nlr9!GKQVOa!D0]8fRbU3UE!/#iJ.l.fkKX/(.DLr63:<>ksEKQI+OtKQ0[=1r7$/aq^#XKN4'J."n)!1Ne?Gm4iAKE/%]U
%:hRFeDWldM\Z:71bSU7HA4$AG*@XpmXpVrJ^nB*]Jl(F6,P<3:+_YPu8:lW#"KiqUWBJe)AtF/p-:4aF"IGiRc_go*=t*-%Jl9.N
%7`]6q?en^lM-poDUHfF(Q5`u-e:OAT6rZG&F8;7:&'FB<_o;AaSM"[\>TfZ9pf-$`B2I'9/raJCqk56?W-6lR)KHN51rDWmmb'ar
%_9/ep"uZH2j!99,M%kcKnu&+K`k\g5#hAF?f*k0#U,P\gWrQQQL;soAWERc>H."WT5\.+B;GuTFl?UuBLAlS\nS5r&4F@57"5To%
%'$92^BF=-,\aSi#W"S:Krc"Lg>M1iU"%)n+W@89t:O<Vcio'DY=)JOu&'4sPE\nF#RX*,PG";ZG7N$nCR+,"ej?"TH@I:r+Y0;9^
%TT%RI4aOc/@XiCt>.V<A/Z;f%I.@%08a.#;e3Cnf$D,8=(/4eL(YKa>oQ;/MjokY5aKFt@7B;KuE]_p0'U$:G8/5L;KiYCqqoe0T
%mm:]Dld`LMA/*]f0%t[K<lM,n]g+k77)>9'-Zi&_4NGid+X(lSs.5Q>Rh0W('<dln0\51jT\2p?@i`9kDO)I`bT)JB2.?(=:^LX[
%UTetqou"\`;"C0K0+6FW`M-6qJIda6rRpB:1^sMJ59,(o1dj,Bkb_e?q0VA+ORsY(^/j2FpZ=-a*IQ)9^W]q`fT^rceF<msrmTq.
%\9.8)C1>;9f.$HHe-5ZiH0TBKD<,UWY)qA4@B-6D/FXc+4\[:%ni3Q^7`jL+(`R=NYY6Nr>H/)BGVm_6NZeYU7\>;(b&k+XaTRX`
%2d3^kUHjRDlGjs)3+!ch!pK@70AF3*]8bqog_hQ<D>8B%Y@6356P+YdmM5WfmOY+-l\hdY7i7pc4GU*I_s7;[<bgI#4A`<p4F@p!
%d1a!06.U<.gDQ%hkc.9M31VU>a6!'"$mil@Ie^`ZkK9"-GP!"6:)!R5mRQ-^WHRs?E*(65U:uuaNC<'kjWK%s;h'J1S6gI:M+M.l
%%[kgcdAeqOBm<UFh=@:l)UK=/h_o69$NP@MR9WK$q[`5`p!XeuE5\7eI7"]NA@e2gKaRVBZuB?-0+&+,I$hI0IR'Inp6j5H?%q>I
%%7ihbL'N"RTH)14]9h]Nh\V4re+JBgTO;DaVQ5'(qsq;p^hYKFh"mQ%T'cZ8fm]SX5dOn]#HPJZ<\NPrc=,Lm/k,fLZ/3"6Vkg;^
%8'jMB2N4EQr#q^VZ_H8HN[`(BlX?lh"GSW<)$NPt('h03ZIB>s+oeJ<>L\4GO:kC+]lTsjS.=Qr>:Em<BJLmWVVO2$n"hqg?bNZa
%d[)=_2k<iZS-`(.o^8H@rer9@ch@pR84/"+1eb1ZAAWXR8S%Yc6XCDUGqDo2L$r.IZp)=]:j413o8rr"IsiBN+nC!Jgi)0#.o0T%
%=o49i:@92H@:Uuu%dK<`Ok508ZbcA4%EJ:39q4nVp5i`h:[?a1S2<q\a3&f*o="=G4I.4r4^DF**FRaqEGstLRDPjYnIHoCZ+\r_
%fu%7_@Q\lc,T`Sqq)a'8nnIps7Y%NZ<'F36+kmUZ%Leb5:*QNm\#LN4OF,acg$7V/&c(\2iI7?pg,j[2Fcj`PU\'#>FQrID2-G(D
%^$$IFO]l:=O1P5]^&ceERTAlija]SK<R5m9?dl3qBC9bh5*o,J;)e7)3'17(mL+k@32F+IEAJDLQ"(,T4QYS`me'AbRiQbAY*#n(
%b]BVIF2&<.8inT28Kr-G+hYLX[R*\0rMc:[dB0Rn&c_)7ioF>;VKXjF#DH4pfuO;cY:$i@b'<@K5eA,kfIZ:8h@.X\f6uY?S0adX
%`LGlIR8-&D"VB)[L0X$$Hdp<N?^9@oJRW$$5sg$hi^FQ6IL)^"HBh0qE51SVV,9+D364ufIdXa>h>4TW*:3)@OFG5go97W25mL$Q
%3[7&eDM@d@F5;h[q:f`].X+jZWnh]P[UX5N$tU2^Tl^%Z8*?c!c$W%(YPe;p-dp5"k\2/Hi:@-K7d/b+FXeV_;>BIh69_..lp@Nu
%V^KTROd9O4q/R^Pb1pKVndD?pmq,Y>C.Rugmr?>E7uo1_HM?V"-gX8c',fqlS)jN4\];]YP<1DA<TG:7]XOBR54Q<kH7FAP?U.A#
%.PT"BT-*eDd\U.).Bg\idm?'tN3:4RZUn0BF2+nK065+ROOYo.+O>Om']eF2pXj=6<5;:nQ]"c:^(\Y#DgmEjcQ0\UP.TMF.';B'
%_@W0_Da%>VN7!$OklT0ZdcWj0WOVc6=sE.=MphFaCfUnO\FQnCs53oljNDIMI!_;a<gpX+]G0luHn>bf=>)FUnH7ji2'Sl76U^Ge
%diGKDil19E]7NB"X.6]o3A5LY0l/NH12%`rq-\p?R4EI,@X&`@VPt/WU`bFc>VC!pq.IK2'>o9uEdGMG^E\pfl.bpllV*%[`-F!s
%:Cr&jK=,qVn].7581Xh"[3Y8OP!dI^oq`>]d1^Pd.R3`5[LbgRpt7?FHog(^%nc+-Thh588s%7JpmO<nLmR^id+'/(%+YCfDM:[\
%jJ!+$8SXTm:<MtB"JH<ZI0T95jAY_e%X#W]/MH1s?5#.dqH%Ae(gc9&0tlpr+GT%0`hD/7OJUZ,d9$hX3I/rp^Q<>,nkA\7]0iUk
%c'6s9@\T)KTDm9Y5lht=,giL395]F7+K<Nr34XFM<!`iT5p(eX.^tH`%;Ag!$-Nu2rrVQ,I5]S<(1gh&\Vf]o+&a#9VVb"9YLbV]
%<8K+6Qt)32_j3P7abBYkahu!8*j#,jq0Ser0*Q9D44Jg"/nD7Fo*n01=DmRS5>\09(:eJ^r`noCr1;eIEB&Br*?Q>skl)rd>pM50
%i#:;;EZ!tUN;Hk'1le0MJQknMam_)seaE&JNQ8)JKUN;7:eN:2@"6<>O#Wcc6.\K))\,-T$71GA`LCo1S'3L_Ze(.^>)QgT::teb
%(PlI:,(mSqZ/k4KF38oj,"Z<!PG;CJ\Q@(S/$h7;VM@/"Aa$D?5)a,EI.hN<\A%^:;4miJak@YXQtL8BCH<:-FDKT/bn/P*^>:`n
%OV9,s8)4>%l3qZ'n<Y?!46/5X`(`#_b@^%\)6\*dY(r7T^1_WTeMrC1@k7qB'!@?,4[kKsEdXF]#BQh^HN&a*%G&pIHa3I5:PZg!
%i$p'r8quK+$"&K!4.YHm_oH7JF]LUXp>7pC&;'<3NpgGLV5pZW?$YsCFW6nXd%*[3o<=`HqKP7HC$I=d7"`6kAFs5aBH$;6oCo#u
%PK"k,T5ugGo5<gX15</cY:qi>Y&l$Vm1l<d280h>e?jHul6VV*a2,al+F3hL0;C5Cs2uF(D.u,R[S!,]WHjYCg.[AaC57A(>\^a$
%G9e;'5%&Xn<UU46Q0J9\8/6_u3pfBpg@Wu(UCc1Y4MO'U:uBJ)9)al.\bU%n\F5JI+1?06E:=R1"<2>dLI8k;9Oa4X82h0-6G<EW
%bthNVR;D%C+?uW24=dEiDeS&m,/<hmJRnP-Jq1ks!aerCg/G`UOD63'b7&GV<Q+h18X&;<]qu_*:MA%B1:')aHo"bK;R*kAT&W;^
%5DZ\-K.g;[HocLl!e+<+EB)>@KP&Z1*@/1EA`R>9gA0L(F'*hW]mqB&)Og);d9OLT#3r/_,lElNjduXXS.Ptecfb90Z9=ltKD+3E
%LYK9[ak0S'G>mFiDgisrgIYbHE:*6+5QrJNGCej4p)W]-XuR$@lM]=TkU#%8`1LK^PmRp`K=uZ-2"N)EYF9)O."_/ekj+Vd+s]tr
%)?e-2En&5A:J)^]QT^VFaae@*O63+?+UeJrG$"%n3hb!@W;*00".8<.43g*:Y6sNAm56;j7%hYp.lLi:0l!H<C6TBhRFImY"_Zi-
%K/;=?RIU\XGW5eXpAeq!1YHg?q^7c'S@NFj\+_*SKAsRdl0^<o5XM"Er9Nt<iqE:6R=0Nt+`;O"nf<k0@Cq*$\R^$Es7m4\GBKKA
%RGIaZZumg[q$N@i!uWrl!^SZ/)RFJ]oGiF.31TDL*m1-iqjH<)LhJl*S::5hhrqQ45ir#,h2uL-Zisqcr)dW1H^.4NV`QOhdr*Vk
%.=[hcb>E!<>J9hKIn^EVjn$&r1*%6sV5_a#e"*lMgBPbC>juPLH4eHp72OH<)/g)qS0ksKJ[<BtKS]i7K7UB.49hFPn`.5t9YPHn
%J&3"^@V:[G!I6&XiVD@/8JC*A;u(/bE,qT;]7#</d2dW4":OH(p4)Md^0"qdN`@n'^hLc9(n\e@mkDWRg$SM_F8gT5#3;S:YK;]V
%76,<mI4AN.\Eid%Bc)lS''G*KC[*R#?f0t'*u>?,Hk?)WHdDQ[=Wu`VqX,WeWtQL85B2H&SpNlcnCW0)ZWBD=*PQQ]FtC"al+r,8
%Q[_Z3>iIkqT#_t;c3!sR_Y6d3T"<(8"jtqFM"JsR(u8=F@PkmP/Kkl#`VB/UYU)djFt<%Lr9\.W!Vs.n+3J_K-Ap4(g`;>ofBtmc
%I-^JHhtZ$$pMs#;$2VYco-0Rqc0<`%4N3OUCc:_i)MSPk^Z\UE]%#f!0@&#$"S0?*DrtW'ko?uB'dFiBnU8t],Lkt3KK;0+VJt"L
%f[J5S(O`EEd(M(Y2029o=7P=LG0<;5FY>)-m!4j.=4m9BF2&VM`;7k3S=<t^7XlV"1T[gh-%8;b:C:Pgesh80mpS8W)I]3(I3o>6
%=O0e3;NjTS/#[t*ESU:.3,7>W)e.Xb53&MB)6RqD1VoN5Bk;c<qG*"&NPBir>kb+5N4%Y/5%H=])MV?EkL#$9(&CBMjQPoDiu;Js
%j0ht=$Md8@?^t-tX)CSH(%4f^D8c8^f!qBj$@VMCAZ1]+*fgeH+u0(cRUQ.-5PgRu$.`?;RH!pCN"r&6/(Eb8pUqHqoDP'NkhR*A
%Z28%>fB;U^YTbp1oNfjgqR\tp)R15@)J)]=YU9,<IM]1:A$#3e2hnq*Y$nD6e+<u)c5ac@8p<a,),;#RRUSFm^?$k7=J9XE@\0RS
%mCaDGq<!Mo(e,S4#]"1T+$?.;=%pL-'(Y=l-@UaCH]/[dK(Af#e$/^qb#C#L0u3']iq7]oRu/$-i^R%<lF>"V@7=i`iq.BhZUNMP
%`qmg4Nc+1&=Kaij=5gA+)IfgUa&3a)Sd:Y8X]FF_E>,ElEMd_QpR,Dpbj3g%>=sYccsXeQb^<eJj9C)Il'l+p?lhNqVoDi>):,)0
%I<,VYN^iA!KcUb!Ys.9_7seiM#L$uQjAUgKck+,S(]9?+mIqN.rFkS)RpmCM8"N?eXRBfGk@Yif11PKG"1qJr)OuOa^LPSr;lmSa
%TDjWV.n1c:$F_F([38oe/.J3*BJ-NY5&MUHfjDF<>-O2\$0s;*f4"XV8rZ:!E`>M*c`-YD47gr'=^bV@XMO!AgP?j)%^,74f%`sF
%C\_Sb86G%f!K<;:OmM'.Zi<Gu:\8.g^!p5a4/Q83huIOpLK.T,+1OJH2t_d,EXTQX4@)h($r;iWN4fS_XRU2gZ9`:qm-LELeTadZ
%M*"n2[fJ"c`9Uq"rTC_5lpk/2h&%Y9CPn3BYoKE8?>Zbgb8ni4FNq#/g(tp]X2O<<7]$WV+[-T7Y;55":68ea0?r"sh"dFKCatK=
%p:bk1pnG5:>jZpJc*(Hc7m5[.NR4'YpjUlnp=mRUa8B]N0p=?*$KJ#?0,MiNDqk`0VH:`^0M5ugb0/3eIXF]bWeC)K+*#M7YIL77
%040.]YO,P!9tkss=1(AA3q&EZDgtKo"jF0!%)'-I=$^MlhY=GQm@V'fhXi:dnkW'+YJqYO9e2pB-fOKGq<`l04DoW@jtnDe$&uXs
%boW;0SirSN?`$o\LOiod?MtM'L$%7,4rr&U/\N<L8"%fXoP3;D=tNl^4hBfU66cr:E_qRDh09LCO8!\5H`.8-Xs]OOg\FF91h;Mu
%aQ6?7O2$?bcR9""2prlDi<"G-e8g\^VoV$9Eud(tm$@.3#f`IV+@E@L)4\']8.TmeBQ?)Ef,.A)2sNE&KrE@1H]Kg;'t^Aj0b4aP
%8N`4h^:bql4*$m`GaQRoo)].a80Zl",HPR!aKg,!5`M/i)#puMf&Y\:lJD8DK(\6]'J"./b=uKDlnXj>f*>6USr6XZ8$Q)aC95Hn
%T7U'`3VLuiXsKelXI[8H4U(/qP<)[M25\3Ykki#*D^-L.`)ZP[W7f^1h;t)6;lhsc0Ys45K=KoFjU5bTNPBjD@'/cCc*9T?@>'oU
%lH%^FIS/'kaRPUDF0+VqX%.64i1t%G%77]<%>+/KOQ;)j:EisW0PM=R18aF]RA+*hp1Nt,5[jsnYoAMbQaeN5U`$ui)Fg90cM)hX
%-ofINSr6Il)05haM<V@!VnmCMohl4oMfMETb/L(3mZgY'jI5QA$Gu.!()m$IJkSHJA(R+tK`@a#^)k-n?MGrRi`tfTI<XTW9kff;
%N^dfA%:h()#7&Dpl."I%8C"^tWJ;B:;KKUKM'ejN.5"$bI-CW;p98Wq&V3=hjVdUX<aqQqSo\%hC?_@^Q4KdXi3cre'?PB;1J>%I
%f\ciNKU4W?DF^0g`)8hkQEQ7CN`A=V4FV!.Q^#kQLr7mEd8e_W6[4aj:eIT%FJEJMf8W7J#Qs`k*ASLO#X0t^j00K)qiKcdpd\77
%`Uh?;]W@dNL/4l94O0iVWP-*55A$1?oa<5#;&CN'!W0mbrt;G&O3fkPI^^/C>LQ'WI%rJcjnD\<2FK;hA\AhAq0-S-8AG]jIgLuN
%%@2k%=s:Tq4s\G-ZM;QRY[860UC>JPKa4%Bl_#dmYDN$<bL)A>iQBf/)\,Y(f=="+?UDAo1O#.u];G1ZKt+mGLNkA<:_K;@,L)+L
%b132[!X<CHIP6D`csJ2)e/93N4DKi"+hZU"FqrJ;G@.HEO;JoufiUu("g=^^-eAsQ3lrG2..f?"Gg0Kr$V`SVR_+i81A[Y^ckgT[
%!@X)ZMCsj6'+9eC.-s&'iYT]^)D+[8DDZRPG3up6J936b6^%ZJP)aKS-;b4(a7/\Ua:_p`R*WtmB^T1s:%^Em(BPu-hO-gA&-l*C
%'ItI&[.MW`>G4fGobW':UM1(1Z1fSFSNKTlXdoTi*`clKN@Y\;T8Tg2<>B>XBmaD;0>Dfc2GlS)'>J<P;\"un.c?OB1LC[?FF,YO
%?GetV/E,Q*[.Er1pL32LksLm^G0l3qnp1^)cj4SNS3[OdY$VMa:#H'!,+CjHJmu/<1j5odMf)O.Yt^l_1UXm;"gfA,[T$p2Q[@mh
%a3uSXlo@QDcQ0\&;2;[X8Af[7bg5()"!?"NffRg2qs+d=q:WKaVCdMNG[]6$5]\;m(s[/(#j?5M!U6DtnBJ-ACC@7f1^lN:`6FXn
%JAs6egfP6M4:3pAKU&(^c,?@J3XmJ\.9.<rCkf#TG\lfn/%Q$[EX0p1c?ki'4eTuXX1(iL9-P;=DafWf(&aNmk,VlD97QkEQj2JN
%du5i7fg,A#rL2%/jtnO7RYImqR0)G4*&u+L3&(RYF78(FGl`!&a3G_Ff?WcmL*l;8o.fPm):L(s20&4@n?Se*TbKtuX'/3KoD@mi
%7]<CRgh8bpFCT%!@O?-+%qujanqq?[?:uO!CA(nqQYs%6QS[H*O6pSW$_tL11,c1D!lpY]_/>id:^j1<WthK[leT#Y/=jd#Q\oj&
%P>#tXa;nW&SU3`d85Q8IDje/GGJchip_#Cm->U5XJ7To-.DnIkG3W4./@79-RGXBGYjEQ),\bsY?=r%r2G?'qIC7?1lI.%PkoE2X
%(:bG1UX4no1m,/rduGiJ2PkVDV00+]0i0g`@,.88"SO_fht0O-)H6%6?$U2/hKbWiL#`_I:Q:1@m&&fT$4fSPcAG@Je1r<TX>O?=
%4DiQA=1Yq]Fd@hM,7W'qK56j+m%%?BrP_J/1csA9*V?n)S#b@2/."j/q&'R]OdcaE?$Jkq:8-Y0o`h(LFg/meI8IFC[_.F-.W0),
%<RW$Y@l=Dj[&a?IWj9!$^5-<n!SYYC_bp26=-bhI/[TX=+*qh<3RC"pFM[)X.kUfj3t=+[_2<bZf/XNnVQ3Q2ONCb;g-d>@(@)bT
%=+[;DW5FLt=6GFWDde(0^,1G3-L_!R@gYi:cjh9VJEF=C2)8Dcbl4(*9mu"lRVKmmgq(m=WnK%CGN?4b=h!'<AD9$QXP;/UNFhG<
%4F%IaWeS?J"7*BPhZ1$PHW08(TX/P%=om,oX&q<%9`mYM>;lZgXIFB:>8PXE<cKi:X``)Dh;$+5'K#Lo<'0P?^KDl51b4[-.CuLU
%p<a[1bc3llDJL]1nhS`!gIA?WXiCXZC2PAX/?ZAJBl%l'2"PkAPq4PZD`jKmQ=Ns]hqu\r+t9/H?sl4YBlHf<TN?]h*.J=WAZCAl
%S/S[<Zsq[)Qr:nRm'\cSq!36&XkAU/dk&34pYY)S&cDotUU3I0ZhY3d[)a#7_BQ97cdjn@:%CrZ!l`^aBUE?T!E;]LN7:0u8_ot3
%^&QW[2:QmjB>=ce1c]G;XW]t';7Mg(%03Ngr>S%rV'I#+O/bs]a[<6q5DGJF@F*7hPG?9BXu&@lM&+3HotIN#HD@dF#bE3MGAbh\
%C2#.Bdp`WeL_.%sI8-V2D?/5=:N4;eJWk)6TFJ$0n&r>T/VN7sYhKAT7%q@`7jHl*)&>\0fJMbc[TY]Fs/.95eS$f]A2J@C1/kSm
%b;3.6[X&d'ZD.fE:@n+SPHAh._XMG)PK]`J34%,$QYgX-7F6.']Bn-uFFBp:`a2ZSO\ESXF-MI2/1d1]B#JehYL*]hM;J=Q'[5S;
%NERm\[(I*(a`=<q<nh)[YlR!b9pl2,RaSlKpT9o7]lK2,>\%0>QGq1603pT1FY+]+D`062Z``BlL#,E^T62_-k%5RoI+G]Q0G/,t
%SBnd4O!IZ4:sN]ZbI<*s(Um5d[u=<mbI=f_]!u',T62aC%XH4<k2gu2^D[m;!Lg-To3']9m>telc-,paC\`(oPkE5q1fZb5]>\p<
%X_n6JGqmahe35Y=mCYA27X>A@9VR3*BI\m_!W/J.hOE+HcE&tNconj5MA5[h@Tu]4,`#*>%q'6OeTZ.uo\-#P[$/8@5.55-7q=Hp
%[44eL:KA-o!@TD2.4sYkf&tCn"//VBULDT:_ftF`<BX'Rkm'VBm05nT1ta7f/4?m<nXetd.#3+QI_RQgd8?`iUm.m))40/?R^;r=
%46/Cumd6g>&T]U[RBiZ+E&KRgC[Nk'Cq,/(]>1;#n$5fZH&Vq]PhiIQ^LYBX(AB+7[>5*YX]Bs[Q>/OP#:]r)S:na)0452_]>;\*
%lrc/*]?oB5L#u']j-:fu&kP$mea$P$9joRKCG_\!$b]^R!6NDn@=0NO-4A'Bf,.l?r=@AO[?%T0U)2hTfmMc*-o#C=N$d47CNn!J
%9qg6pAgK+g]H5=prWY43X/!dURAa'3DQ2,ZS?(1#B(i<LhCCbQX?]FJoj")@SSq0"kd-k]o\n(n9qac:\Ud3u%r+r'Rn]PYQfoPg
%,[,6nc"8d3MF+Wug0',(Go:0D6F1r@K<<LBq;V57YAPF^[.+!-o,nb6:TCkpR!IT\dtQ7ZDZ\k@Xku"C"q6uVSjWdjB,1`+khTj@
%(S6,Ya19G]M;!MAG9.85]4gB)L-hI![Y(:2Q=(:gkaa36@`?&rcaK08B@\s,g7ZN3GX/O)SJ<gpa,X%=k;^akUKW^2jD1YU1OfU2
%Z5`=_X/rn`__bIRrOK/5eCB;JjpHOA@P2>J6G9526Q=LCQ=Z?U[caQ:bRY\0-ulI^MB??4=t[n/i\04EV.iFPp2_FXdbJOha=bl:
%0@R7%8Q]!Cak7V9"]eJr%8DjP[;*F\+D\CONVSlb_[8QIU=*Xl@f)R%7%:m#gf]*KaElO/fRA"qHn1<=D/eOY9sQ_3X?%7cLYKr-
%+QceV0Nr[AdeIjZm#B*o44M1$CoOefhHVNt:_DEMol/3^2oHN:WYO;GHNSjk386i=>mF./A5OAC<bQ,gnCcN#?Q+:bE+$"B7rm/I
%db)XcgY5+@,\(o'SI?(/o.rr;kd'I`1I-aVmn1g'2d**&]iNf'BL[h_R00;]B$CrQ`uC(Zo%q$tDeY:#WZrAGqbSiUknZ^LNIq9J
%X'DQ'5cG3IZ)e#tG!N7IRV[E4R?,?H]&LBq9X8qTSpHC3n[?-]/+[r.T:`R:b.PtX_`FgAF0Z[,$^H"UJQaPKgNI/bcDm_!lW*'b
%/Z`>ngTA];.FmP>]PUa4WA:qu]7(5>o<d91luqQo?(%Ud]CfAhf;m+O=[6;Ner!*2A6uHW:$Z$M(t>ZJhg5+VFR(7G3j#!d!RMg&
%]sP6MO2Aoes'Ulh:,cG3!j[:QL9nj.!bg]YXr*=sp$d*NTN2&'&R@&.r?RhD3Zb!?cTHbj?cPD:URZc5T58d8U>ON@O1N.u[TY]F
%-t-2CA``7HO=-&K*KQ8^DhU)V_?4HjN^kX>AMC:UWl)1b1`_W-4R*ac>&ugkTO8MeF?F#Q/0f&Of[p7G<4Qo+okTNrL1\/MCC<k+
%c1WR345SB8X]950J`1;:=QTL*4%6IAY0A1u<[s8DG9',=%Z=lNh>#!`%2(X=?M3><4,=9`[SeCJ[$;igVem0j5&I>kp<!,_Y3duP
%7JrBcX6!=d]:j?,dGR=B:_EDohqG^1GdK!D;jP-<eI/K`P\6M;g3QVfS^=fEPij1@\W*=G_q9&-7<qA:^`OuIUYC'aQ&i+MP_[96
%cG'i/3/pQA8RD)SpUWr-(uFWDpKBHin%mLLF1PulT\8cqPW]tTXbR1NK4cr#ok]NE9i@Fk=uoZdA9jNAZR68N25J22W1PT!G=(T9
%Ei9`hF+r2#L84AL[9Di#Eoq\o*Lbc3\V#s8AToOEqfITG1M&O`]a16:i:Q[H]]A!Qp.KV6F:Vdo]Ka4Em/(h,*pSQI5&!X:`#3op
%5)rHD,o,<sAi#n#YaSIsh*\6K]5U;X\hmLka3ib7$!)GL3#kEeAla*LC/oHO@o_mI]r>e6M6r)t0_2XierEa!=J;n7WiZQ]JTD1q
%]OE&WV.ag/\'1nem-_h,/!BCYA[*>pAXFDMXNA0Sqf28WXR+68fP_NaAXBA!^E61T_P+SiZbj_dFg3#iopB2'B+LnX;loEB8#W-G
%=$B"'#j<)(1OR0ncIf(p^>7s]4L&aih#%%$5Mp36>adKDoHimg-;u=?HI(n^<1;5)NgD(pDBW18(-C1+X*&:hQC-N$92C(@^Q>AU
%iCoD6RM??'B;!qK>%U3e3kd'-*TXV$es=V4>Mdc8naUop\L=Fqej!Ke=ngm2^i%c46W"m"9d;FR]n>XBXCmX'o:*dlp*]/dk:gHD
%b^7AMg2>F6ldhj`aE"qKeVGPPqSE/-4m/QfT-C''3_d*7Y#<nbOW`Lm@@p9>Am9t;7TFl[6JK#Sc\OT(?=6E[I2Y_RW]p<&c]nn8
%N*+f=/&^5[ReTMe,(aYJp)1gr43Bj&gFDQ2^?p6A_EPS'H:rs?7TFl6l0e3Pqi%QOG,2I$[TM0p&Bc]n)VRMdT2Cn\Y):k<@@tre
%HBmaM<ahV_SL)9fX+bsk1k?!M\ZjDuJ_G9UT2?[K-\s]2lnb[,e"qf-;:oLaC:2#i7tl@\TFANZbmO?,Wqs.O1lLNAXs#Y!_EMb/
%D6:%gBGEuq&T"5HcNo'6iGs:!I7@4b\qsf6KmduO<E7q:H+iCPKmcDjN/c(OKmcEjI<<2+[APS`qi%QO%'@<WKmcEjI60?JbuscX
%5$_0\Gsnl[@@mQp92uSLH:]&#7R(LeYVnt`d)Ced"1;`8ho+p3p(3S.]Va"ufW2X"r:i4Yf=@_Vr2aosgH3C#YTh;!GnlJ'foE"q
%79TpSbsi6?[ccWoRacblrW.JV1s)m],&=$+D+2pZ=0Ubc3u(b)-(<&;%?OSL^TVH<[1>SaRH&N`lO,slQegLF-`ObT_uJ<AC:3os
%J&L!lSc?1IY"'`!&/n&Sbo7`'-fo12CAKi:oJu=Yg[kG'55\2l3pl2Qf09+.2*<J9s)V'GTcFo[_uECFg<nb,a+s]^XRU,=.t*"X
%X_2`!VfbY10?)3X;BA?YWt%8_.gOggGAO=:&9GQ[pIS]Y8C^+tfCW4s2(:&0p;clDYg\ubSl!_!fN:&/3u`Cf:QdS.(.-F/W[1A$
%RYNccX.#JaSu%UIk*M&s(sRHJq`=&D%mZmVY&/'a6I<0NeZ(OaAGVM]!_DH34/nbc@epL+N]$&+LOf<'PI%SpK#QX]T=2R;:k<)`
%EQfJ#aQ[:pgPo\Cc)13\]%U5pg[<hZ>Fl4p)r#bQ+bI-Sf+/-k2JgC&aOQKBWAH\l;4F>4N6]DMXJ/gGg,'KIAuujUQND?Z?/(FW
%<pIlXO(R(PKQK+/2^>@-li>;XWF^6R5kegP[0n]H%Yf.JdY`RFQVa'iSf#hoO"nFHhL?P_M73_#Ia/e`(98u"fiM&Go1+aRR(gjT
%Z,^7]"rp!3[$IEGjSeYsJ*YXOkni-7G,@5=O/nfJ[psX5pNFj\gVJT2(.\Bb0>t5<pifb"5]H+R-<5k;I.Z<"Hn@eB`m^A>TG>fO
%ZS4:up(,Ynr(s"+H4\e.m=o`Tho=3\aK"%]+5aeETpi+TZfC[\Wc5u7qTb.6CTdkXo4m1W?et^\[BbFhrYol]m;)BR/duD$e\2"e
%9X/o,?5o")-7Yb:G(<Vn^,O2b.2aO]MVpCmmqErqQ`(<^'cQ`9<lQBDlV7Br*48L^;G3jPB%H;CX>H2`CJgM.nJ4]Ud'iTUG6CMS
%h63:5e-[e<[Fc.8kbI0/f$#1uA#i\0V6[#@:b?AW@?%kQ_XgDk?[&R.mU>n#.;*e4Xk?=%@G4H(0AAJqPPT!Le"Lp>jLjn]^CS7>
%$0eDV[dZD'0Xj.8CgOPk(a_C#Ad`ajE(HVs*2kC.[]d;[buR%;ds)Cfim>SLhWi;bU#ZkRWKc.eFi<9S5q"Ih]7XI]L>1V,-fIuu
%W\_<)Rk0rJo.VK8745rK9d%\LBe-^+k*:5V>(fb2PZHpt$BV%Ip4]Jlo$\RQkABVD&'YUaZTO!21Si3lkt2!ba]fF[ah@XEm-)Wo
%*q7ValOJC-*'Th:SM4MSWfa?<0/?RV4lG18Eq+$J,=a6TeB:7K6H$L+qLh:SNEkCToO(]1R-=Eg:]@='.ol\-?1UBN,ig"VMO!-a
%cHU)GPC!PPaC@m)6gG*lRhf*V9\'oY39sl<l*-?(PEl?cmj0("KH.AYp#8g"Y:rF5(dJ!FX$HMndBRR=[Cb8TS[@.b4`Tf=#Y^\E
%Mm&g8eH/u/\YF6LUO.W"h.3P(=7WlK(oM_5):7[$L"bKf\"'6e\D$=GZTe"tC;"Q(.%+ONJs9L,cni$,!f/D^^%KZc^.\VCGr<b7
%.Tc#aAg=?R'%eHX7&$\AhW&4uI@f9^Q,hQ!rj"k9>[TutBg?C<K)dL5*G*Ub!HYJ6d=T9?;jsM4h23bac/DE3,,Wg5^V$;>9_O"!
%7BbGNir_2]VX#Nfd@2bD\S5'"CSpt^6#kAtD&FkrQ7AUmbGI#"@VhQhaY0@DeX9WF-7Ws5TPGsfe"sn3b,7P!S<N0jmb-FXD.KH9
%*g)0fL6Jucff6';;_,4X<!1LSgV?k5Vo_M$\Wg0EjINj^E#V;0J?`hV5+=`,BVe7g1X.*3kT4m5?k",ks3,]K)(,gu2hj<pcLTZg
%:3(_SqF0u(!m<Y<3YgCjFds5SV.WgJr)YI`dq1QK:Q0:"QY?,<LfGq<<]X4!Ju8@sV/ARsSTD5^e[75JbeIR`iXW(A[]N3Xhk[\[
%j$4dY-T6bZ3q'uJr;mp(ZT/59:]:2JHY@R-$!@q=:>T'<AsnY2FAP]=!]6A]ckV7HGGNT#6K:cL`_mPX\_FW!O%;%8CR6<HLR(q'
%,2LPNAkA`G8iLPieh9VERq]3T`-(XtCE,1@jE7V+P%[C>5s=5UIY$$A&tS`ZcFI5g,]S*90WmoFD6d9A,gg<hU37__\KoRS--]&a
%K1O^r,gjJ7_;nG,1s(tHG?Ege6N<Ik$D"![[W#?BP.(7_LDB7(6gF[;@>3hOP$:)NcoCaSqI,*3%@7RTF."@:bHRa'3p[@t<iEIR
%RiPP.UIjcQlR]D2O\Ng#d=I'WH`EA(JVP`iP\oZa<X,HB/oS7)o>&7d\+ZtLi1X9ST[VA;*$0?<c-hXF;luQ3G\BrU`Ek0?[d[6H
%I,L]@H;3e^DKOg1ou9Nb8T3Y)6YgUHhOLt;JVR,hR7S$97s-ld7L'u<n!2VS'U5THA(:Yl%@NF9nI9N0g&hkf[<0IKn<9+I4L@<>
%E:_>YdXd2),C%7#]r.%r&$=[H*E@gS7L(!7"hoB<+]7GT*-`kJfbkR#mAsV8B7/X2FX"]T:Kukp6gN22\$582mU.K`?IKl8Gj+Xe
%6Hd5RkJmt!b^oWOrRqJt>!p\=XK6j.TeT7ucF#R$.i`eIIG,k#V7LPeN-sQW[IKp(J6fROm=C&DV]G("B'f[29t#:>V]G'MXF9$#
%DX?[I[-VU**k0!)Z\2r^!tVNcb+sl%o)fL*QDYbgQG1s8n8RK1$9'TJi0R5$>d'BF?U!u+)N%ZH$,>bVLK<!n&\QEVQ<Y9!G)2p$
%Xc,cnVap3W;BE=HSrXn?dF,T2*Z>["r'8&?`hWCG_t@=.Pn#p`L4V?3D<&E!lY9D<fPGfjTu0Ao/0B,Hg(B$"RWM?5?*uB+oY<iE
%#VnC,csgG&ZI!+G^r,h]g<'XA>*K5t].s9P#E.kT]@()fdgi>Z[IJg'c>.DY3q,rJAL[G_U]Tj'G\@Q*E%f6m#9K=!OVYsej$mCX
%n$l==%Qq*NeX-#NCjP$5FkE`jhQM@cU%N,T9@MV+#9FdT;`X5A?$rp)JVT8WD7B=lLCS?qgGn]LW&G/,Uq&tRQ0,m"NOL;s47LVN
%A(3-7DK+O-[Ds\t'Q/BXTj!o.V]BLRO%g*HZsN9"p!%(R*a8"rhGHmo2`pM*.l;Z<dpt=No`G`,Z_QZ`;(E]4BMB/nS@!tP%om\i
%ncP14RZCTI?ZW@]9r86/-aWZ:jfK0ADb<(Cd+I";pX^0XEk2Z];4[:S4r@uMMhsA?DcnE!>*=M6-(E@O9i+6XMcQMYmlVV2+"k]3
%KdShUXZf`ioe4$-MC6fgl,1Q"f6o>E`SI+:_n#_4rQZG.euo0GUMM)mH6VJQ%p+/i;ne[>(bSb40jN\;bZ'1PH`!5]]J7sGf/@^;
%T7r^0OXIup^Wm21_b[<8BHB=#54_lfJ!n@AjZ`9Xeg`Br\&0`Y@ig)2^+M_ck1bB8^jI5RqF'j#j:Q&#O/+`K%PPahG5aDSRhiTo
%=>ddR8kjY!m54'I?U#57U+($0_o%r8hW&D3FFPK(\AN"Xlc/O%c_bn*QgIVB_::ZGGK5(d+P.occM@3T-riG.6/<13TE$Y+('bqD
%KA4684UqZ)Cl,IJ$IdrQN&'h:."8'S+;9diN;Ho_a2amTTtITh&As:IpU0b@Lf]7!@5i/TNhb?sZVuTo4E4&+:T0,VoMZ"H[`[^3
%NPJ+2KTGER,o)U)nkVZD]aI@"gRc][QX()4,b:N#<HC(g0r-@;25=L,d5mAb7m=GF4-U5'\q<k_l43LmDskEA2s9$NV*UfKrqFj3
%E=6&3HaMoF71MORM/Xm&H%`4E\,UYJA0T:UZpYD,mQ6@3^rP)?rC-FY3+tc`-Gk1Zjc6?Y&M$%HNaAWg<o\V!^"t47o(\+F%jj'e
%%HH2QqjHuE@D(P)rX'-g=8MR,_mr+s5#R;tJkamOINFTbB"bEul9$>?Xi;TK"1?Hs+0tKYHha(=,)H[S58L9*r709F#9&<fN'urF
%b,8K@o5K!g:gIc&(Jj7K@L-=+B^dknq*(=rCDRTE-8Yu#o(9dN.pr(iQ@t)o:Ai7QC=JMX:q8hlfOaE7M_Gi_qN9<W%j4,a5%IcF
%(?iUu$TU*eH[^,[6P?s$#>2gb"m8%`\6rOS5T"qX@O\SLrDZh_6Y%(>m/o34cj:)^,.MFAp=TWAgDqg#FSC=E6;d.?*hX!.+Y&Us
%e/+!05;Y\6eu8$gG6DT>@V:\rI:3iX5o!_?f'ZR3<u:;9@KY^qe=q,;9=K\M&G;T8a#];OnAlpaLEQ&c-Sib0@U@gP.j(tZ?G=/+
%+-^+o24/J(CnU_$Hk&=1NBEKP*:=='EkHe>W/<On.dfrBWAYb#:II@@V7Rp6i:n`fEXV(E!oEd(#<b8UP#mfk_Gd0/T47R/M56d'
%"@i3#$tf'1!r:C/TNb_Io_)?UrkthXq2Tn6-onIconCh5+-.&Yc1!)H\Tpm^9>^JtdnFj_5:?am^<bRHo=1ua.HNog#trF!jK-I9
%+Ff&!<eLZ%NZIt66*q`tjlHg"H9YO-;cFnoG'Mi$_f'MsEpgI+a-U6aOS3[!q>)hJMf1.YEAI!`baDpQ<RX?XId$KsN?_gF)t)YW
%o0!r7RQJk+h780Q^L.5\6GA#)4=+Uict_hfW":tB&`fcoFZgoI?f[OIP6'c*WV`A\&<:uU&I5<HA_m^t_hajHQ(-Qqn*LHu-&h85
%0/:Si$3]=g?S[K)DBrBm]`jK44:0H]"bVZO55MAu"t/Y<:8st3T+m84\;5,G(n"<A^$_\4/ktRS3u@Y.6X#S2np7Xlp15s'?FKdb
%H,C?VM4baeK5j?0(sNF9Oj`?r^nCC+=D^G^_bjjL45ni=r^EGon;RtQ&olYUe_RIJ@3l_?DSCiS0suY+D3mU`<k&^GQ(F3:?hC`E
%@1o[mYSB)bRd>=*WW8qqX_'1lRY^3Z]fY`-qs6m#TWPD!m2J'-qb,QdNu]9S.Q"@W[JAEIJVRtXA,OIRMmp_<k@8C]drA\$]1u\l
%Lm[&$hQ'_g!R\f0o]s-l=HBM'N;+MgcL=s[P07je>^>4%+<""\Q%s()ju-6c)U0_E'0HE>Z,XfJ#E>Zk=!4.I>Nnk'P#aU&28KKO
%-`?0,,g!Kp(I$%nc.SJiM`6%'nm_KZn9Q,c'u<q"bIjFPr^*MNg_F\[1iiQoM_%foc==F"TbRqJ`YfObo\1IfBK@mf2jgXbg2Iku
%Q1EiL]U-MY<NDF<O,`9"SheA1KB2N)<_4B8U>o8qd!5&/M&sIoZ.]M`mNm@n"q#Jm.mu_7'nt5p9fNsCHh9B8.n4plqq#VhA@3(K
%c-gV-EYFbCksSe0Zh0(_<qU,hQKZ%XO!BtgKe"Rga\+1]17V:/!6oY7LcgUk+N1]Ar"lehrNq[0dl[[0N\abUAg(2G\$)n/;K`L@
%^#c&jU>Jc6CWW*X)8otCree76DEXHZ-*MQl'N"+dfWu8R*8FNGp03\9ASL=77LHXT97H"I12'BtVCX=&hlOh\msGK<Q=1t@p*VLe
%=]07G-;35RM5;&1DV@a6`nX7haANYMl@-RjYc>%pC>2p#F'`QLc.]DuNfMLP^!35o)pI5S<LHM]=']g=ZjV\fHNf]'A2b)0Sgnj1
%rQ1IfenqBO.U%!OIn67tmVi1Ll?tLa9:8<[,<49]7V7E>YEK6/mjpk#ib>5061N4lbbRFsH=E*1#aXnRi/-@L<!U]hN8bg:ka1ds
%cQ0U@]HCQFHimN6U>+ia"A+cp2]/*s6^,-+\B9=HIn!=,C*sQSnkfpCqNUW"X6U)K09At_<7)%/HfT7/=!ng>f=^&pIj]13gfNum
%07V_<Y3$\"pjT2h2nR,`^7"l9;dqcmPEI>c]^G#A;T;>[f$oMBZ'H_jgKO#t.jYhcq8UgC[rh/+]L7=QG;j_n`eEOPj"F0"i_3mY
%IkVIsgK]dY'U5$UX@F:JJ,+.Un,9Ffq#4JKG#'G:CPHiE0(TJoUS[\OR<G5CP-m0]FqT<;G<d4q"\DoY^;</u$I61L1&'mWrlkc4
%ierC,dLXpg#1U^7FI1QGI95\T:1;s7)_74XjlUdaCK83cB2&4#cY;*9p.fr-REB&*Ot'dn`uEG3Tg^(VXbCbb)>0NfQ4P(o.%F!!
%c,tURCHp^$HkMM8N&X5<])/JaoD<:5g%9s@YFXK5*gE*Ena&O*CLr^K=u(:OE4S[WbP_"kb?p!OAOKZEd;coJlNiJKmPe!%KOuOu
%%9SZ\$SUk#*9Y&7pS\pAe[9!hCJu*pn9=^sChhmGpB]"-XkPX[fS9jD?qL+/f[_4@EXFH?8?88mIA-utL$kW2gB1,5DK4=p'Ha#'
%)YTY&*$kCO0K8feHmAR`0=V[gD]B45+h3B"6YIJ/]Wn$^;*>]ES7aX4Oh*^D_d:"Q3@*-;iV7]7@t^;\KA5[*0PiVA0aB_.9s)'\
%0aGliRp((Be%0$`;pXg2UP?MY'<[:XBl+Mb``Uf&NPL+TSMP)XDEH$Q4ra.$l1fk[d*`KKO#PKD""t.IpM637#Vr-.kN:PZBHZ=#
%V6V2NCKQJ8T-og_oQ"1bI,F;Hi3/PhH4d8)(2U\^<2`l>Onm[1r]K-TM]\:^HD)<ALF2Cr=o?Km*kbT%Vj5Zio/g^X`oJ>MBg2U@
%OICbV8.0beq?Z$K7!]n*pD!tTlgV/G3gNP/AZPR9Cmc@ZL0j=Sq7JUnF2.NA^2u(Nbdc)W/^TdEdXZMXlisZe@MLj`4k)4S*;-[@
%/.=\*pJO!4R@1Wf444e-<=3snHkb2NH??Q%H7r8J-UZD.Z/8PD)o/KF/66tp&=Q<u8uL72X:[F\c^d*s7KSoCgi[2rPj?Sk[8e1p
%e!Y=lr&Uh;BPe\`Kf*TVg8\S7!GX]+]@DH1r%qW*];39tah8np[DSrnr&L-_F<k[@QE^eL&[#)-2<')Za&T8"@DC@QYHk@[BYRQP
%&8%YM&p_%0#H&!+L@X`D)m48u86k;0_?3_?2#C'^deUW!FW8f)ZM;hY4Z['pe"sb'U0KbNQXa:\/G8S3k*pKf!SC`FWrIX;f%GGW
%+mT#S1s>m4_`1%OYk\#('7oc.ei8BRa6&kVV`M+WAB2"[_oUJ`-DC(Q3cVJN'k2&8EJ$s_FC-uW8Xd*(7/mrQKu:r,aLV:XF%;S7
%HR%+`em;kLC(noc2olQ!PrjF(9d^gWp![L_;3N]Vq)DT"O:dtj<Pr9Sdl,Q07gpo:k%pQiaYh:$X,OAB=]]=+UN,F0OMukHY\T+n
%k'K*MW7a.qFSfr^1QVpe_+Og7IQ->gcX2L>6gs+tA.bl('>/o)@<\sU;hqQHgNS%/Kl^uG-!?&5>&!P])^Gg9]fje&>><Td3I1tU
%[PJg3P:8"8c=hr_Z,Q[jOgO1XPA"g6)%@hAQ(@Z!+NRE3/BHVLQbM6+F1^.XM5@Dh:-NNc<1\\fK7)B&MGHQDRn2S#Ao>j\4AA"V
%\@[2R/K+/6_SqSZoI]pnXfW;\(_(\'P$T'sBD;E"I,j2Ke'VRDT=?O5e4d6jUl,=9ipA.Z?;=!qT)0Fdr*4^#r,H--n0_I]JsV<h
%?3PVL0XK?kn*q.umPj#1@?aY6&n9.Xh.3"$iOSD`6g%P^5;2_/+1tl772]pV(_D'55J)V?"*RjYV4'&A&"C'KJ$Sfgf@*aT5M,eB
%l`%/bF1mXHGt2.7oLF5bq(g>e]cW?YI/\*R4'sGlW;#N\Qp9C'\Ed-qi",Lp,NmXXpEdjEW_'RsX"f`EC.5Oap1T*pR&G;G:ZYNG
%p7gj0J@_frO1qG<PULn/o`m@:K#u)p13#,JDBbh5_S7,0Db>6R++*J0>fVl*$\+cur<G>5X1R'4Q@lK5o6/iJm;0u>G,TK.QhRu(
%9bIs:@P,\o5.Bt(R9eq%6B_BjO9@@j]rLP->0jull/GuWi6bg/HYt"gnXa?)1f:iVKS9h5TH>Q2f^8=kiekSp0*!W\'F)%A(GIt#
%,s8V2Ds=kajkUbO1#-W5]eFZ*(b4tXJ$WX#f)N.nZpgj'_.[n6LPGA@l?g/bQVB%o2Q\LLL-2kcliffnHuZmY\e2f"r]Ls!\N,&Y
%(Qr5;f7EAf$j3GKg;g<8-@t-EjO1U+45@Ch`Cl8e!@i)o0U0i)o[R)L$/Kp=E;\bpco_Q4$i]k@Xfo+LrdK1Yifh]g64HIuU=!4e
%o+Trr/:Q^/^1P^a2m<)d2ohVPMX!3sN:>o?HSn+**='DnF0WXTlJpLB@#'I3`"(lnn7g@tZk81>\(M%J[1NUcb\=[#9O`3-]Ni#[
%lk%Zd:HmsD(a7bS<`80+lI/kap0rd\Ba*?8X@FL_?[;9S&!\;5$8;?E(&rDMlu9'(n`2O]iScDS_*;K:6iK6O2Gm3'Q,h]6]CYeL
%KD=HYiHU#'`Zg&+Rg#)%:-AOTkE&;hd.5sS&&ohVHgs0?JH<?i;''Y)*YQP@<NjJWqlX+pO6rucH8Hk\lE;l<Ds%FZ7pc]-2VR#5
%r;H$0cK<^L*?<X:9B=[)n)G701^T5`]CC.;j0p<iF&Fa&\GFNQo-hMYpP5hR[m'cEOTA0rJ'[0@Z/8c,k<:S;'7E(T*fma`8%*R=
%;4e8nroP-k8ElU5@.riVgKHAHVX9-(dAm@/+B-`1]bt$Op0QPs]cUHOquZD[g]!sD#H]:MdiNr5F\!Y4GBQ5uX_EiF*C#JqTr't:
%ET22eY5%Orn2PURYP37K'!GX?`W8qdZ^W[U^%piQ9"b2,46Zj4aK&*$p/!>an"a<=q0>4Q"pY,*3cHJ6-Y<9(ps4l)Ie$P,E3K5\
%X^fCQQ]HpTnq;<U028Hbe*&/Y2HT)$A1tUV&Z:%6,>$e+q<O[6h*H)r6Y9S3k"W=kjaiPR?iD@Z@QrY)?[;G%90G"j`tSIO&JcRF
%,R_L$n^5SbN&p"A_u91>=-rBJ55,4V(>Sj(#-ueB=0GE'4l1EGV3R]6rLFrM0=[A5M=k=;0<d9[s4mAF_Ys&FEqAqr'Kmi6q!Kk_
%FQCi5JhOFEE#8QN[R)q4?X8j#5$jEKYO3rpli'*#lu`0kjmh[98A%I]j?hIsOgiU]o9Lo]nWH+$EM9!l_Had!qXa%g](d"YiQ7P5
%g"29<52sG(TRgH6F3[!/Yc'-DpD<;XLATNe'_s=qGP@S6Q\[:];,)t\&>=D8UTe"o=6o24r9/pD,$V.oc7WG<GJ))$gfcl0*uUFf
%<.)DV9OH(_cpC-J!;F)iF6i9f\,!(KgI8VbQG:$)E%%2_Y@!8EJ(01=&S.<HY:**Kc)HpKAg^'S<V(=RiXYCY/Y-$ls7Z4js(YXn
%R,DP3Z*Ln7iPO\VHILI6<;KH>]s$pHlB/h`GeR:LJ%=S-!k3g9f9V?&-hD40l.\9%^SroH)Ap#4CLLp-T0MFTKlS,7hRK!kId>-!
%p!.ltq.uaH/#U/>.+V_.h[OdgrLNH$^d#=64D+/n?bHf5bPg\nBWoCTR:1H-q:qD4]"5jMOZ]3mk/.]+&a-q,22DQs03BS@o43G:
%WV)=R-@9"h]Gs#"eF3/NS9iXo5<^[3UU'H(G(!EJU:IN('[L\cBCk=K]iaoJ$BK&B9s=2W)h('7e]3s$m>4Z5:O%Bd1;4,OpTdt!
%9#RR=1J_'5%]j"2H?;@jn'bUE^2L0'>J@TEj[".iWE=F$o.7PV;,$]pq4X.'5"H>gebtsoS$u1O>9@eEC>fTD/,,*04o-/R*_LqG
%Gt'H"/mq7.hOR*g"O#W&Dne;XJI:GBgCf"cgj",7HjF>H?C/?g?28UB]R@74C,`YbLh;U(8UXe4ip5ab8KRjJq(Ql4ftX+6S\=iE
%W?(uLn,'`!3WER76JaY,a"R4K3e6_"e[05kLA?U3>Q4/m:6rPIVV$:dR_OfXKY%)3QW0^j^,*M<X%^/kX'FXK7IfBWe*B@;Ed]S:
%`NVpYk2OU^Ir?W&=)]P5X^CTWk;UHV%KDAQG3.ocV<l@*qo]):8(HO,Y&:i4%rX,r6Ml,Jn>D:P.UF+,Gf;$_MWraarg*KLo=cHZ
%1J$/#-i?t.`K/>=#GZ![c"g[3mq6Opl.M9h)?6'q>WFAhcc^k%kXIWi;P?Sc4@_Qg_''1Bi&U)M:2Dj6".l8/m1:0ti#+?)R5rK)
%B7c_KFr0US]-[WOrJYo?1YQiHBBHCbd>k4.HGFUOURfchN"1(B52'073c;;\eob$b4,nD!MlCnR2tFMcYDYfU5;08:jPIt>#ERAf
%mF>as1RQ`&Id,8<Hfj1UDoW<4''j>b20e=HBCl,PagIfd]rK%i;1EX?HTcN7&NuQTj3sFGXj:[iI\E9hm<iiIST2K!PKDDCA#CE_
%k`\Lb8"V?ZY>b:7:i]N8Gf'k-JPX!Ua@kS]*ujt%n._.H@eMLSMSgB^[l*TO^Wl_+hb`qYGaH<1dHLORGl2JVlcfe%`q5PiG1UVL
%/Djc^'&MUeC?t\tn)#dgJ$jH>p?oW%eZHTYWqZM0#-rZDj+q%')dLe6;L'8^g>a:[hWX*LF>gD5I<C%%@(prSAT(n?Fn2cULkWN,
%-o"FL^?.5P:EKB_oiSb"rI-@`>s$"aXS4mGR@Z/Da:AN"I"I3q5DL<XKSd`fa$5>#r*U=bp[QRJ#=$Pj+Rm[VpD`58SEna5i?Y3>
%";r0DThO]J?cqP4T<+!sTUu2U%llcj-<[f:q&u["`k7(eT$4a]3E;E#\m1l0N@4>$RVq/&dW4'OH8U5b:gKVahjaM/%QS_):chs2
%a\Vpr[]n@4fS!L;hSUlq^@2+!QPE!p>+l9CHks0B.@=Hb5/]!gY>_[P8KW<q[bDKi><"/u*+Th.L7\t4b?.:^*]+k*p18;7o.B+Y
%@0H(=3P2j\e*apO[,ZZb<.Q8u!SVNY1j3E9V_QT5#"604lo$3%5<:,H2Uit@_/GjV1cU_;A,OCp:<N.<pLa^)GQ6d%O*c7tW)_Sf
%K24S>iL(3@kMNBUCYO!Bqoim3[*3aB7m&T&C"`<OmLQEeViul8?&/D(ld1EUR70>)N5Sp]>B^"nh$M#%M;s7n`uk,G0g"+_MRh[B
%_NWU9o86>!hVdG51!_Au46_3n`Ac+bXEAFBc<iM"4k*TcjcAErpW#uq3BNLI/'2m8\)Vc7'mp/h;";AmK__/u`f`"W38c[;S]J]n
%.Z^o1`!ad.48Zh&BCB(TSo;q^:.7D>4P#6r)%[:qgs&Z^a4Sb!CmMMIq)R/d+&>nsk@j!89g,e^r9L9;1X0`r>FY=d@*J36;6N](
%>p*:AIXa"T5Bj/idE\?7ET/D3`Z-&`pG451+,h(']T.qSG]l<X^fg'>kdBfWnAMI';:-ged/22(U+F7QbV6p+Q07#@\94=Jn%P=&
%^Tk.PI\j0rDtd')gK4.IBu?S*/>.8":gPmKUE4j='sk\KBAVEJ]DVO'0as]rk57VnTc]*jp%f>_L$%G`W+fK!r<Vl.!Y(85?d>GD
%?0cFK:0g!g3,7DEb0($RS"hIpqf+et3i9[^LU=:Dl<ckW*p;*!2/>sUm!A;PnUO]H5b7Ws5FrB!&+5_Yjko:!a3MBrUhnOD?'"0,
%dgt9cUL-4EfCF$pl/frAdSP+S15,u8`O&eu2H$/b5JJDK"Fm@jQA=a</mc.$q@QnV8>iU4cYQnF-rc$*gjCh\9Y^!RL\gjC2R5s2
%rL@pFn'@SuOj+Ooism<'U)?EY5DF1+rR[GXfu.s678XTUqXXQoOd.k/hjh@?Q]3U.cK8/q/pADbRaH#Z[@Pm-md>S<RX<A5D:%`o
%<$V]VBOE[+YCY)-7n(Ebmrr0Hf29p`N8np)J^IeJkNPP8h?QNfGiG5%N:o:^_PGOkTA/E'b\COmf25C-&&%SMkk*m3YN<(I+i;%Y
%6p?QnSmBLG/%YVa*56l,76H64HC-AA3A5/;AiR<X4gXZo7S;t"r#kL(*t&L;j]&CZa(;$\^R;5#J]I,?s6Gh0p%m=p0^"mCr$M?T
%`=LM,b@.b6Gh5UE0\SRo&d,s=0/V`!HY[,t^E(<mS'O"aXcnB]1"f'pB@46BQ(*8qTj9Gk2[kKhkgImVm+9"_]AlN2kVVQYqt3%^
%\-`-+jDOkfO/EMp;Da1i_Ys<O=,J=kfRosQYMX>rBHl6N4oBd-RJ>p[:+JaHiCTf82pS<!,0cY?.kR\Zm=ls,nqpXXElIGs76>DJ
%n%M[fm<h&"0+BF#e@mY#US5f-ZY_GqA:@N:nm=PNc0+Y5CO6p4%JnB:CHs//63s0r3;%E&QpLO08#b]3-Ha'HbG'.MqYg?R`=I%Q
%0,-(j4taD-mr,DlrT3^!IZW'47EG>uC-FS!Gptm11d:fZl)1#iqU4bH6_XI[9\tp)C,jTIMR4(`XP(<X]1>n=4f8CKLYk8D)`o5"
%>-`:*+if.Xc_`V3fc?iWn^cA]GfJYIG0b?h3hphK_sa2a^3(3G*'<S[,t?a>pM?b0Zc,;&)O_^k=HT)gd`paSAh?J!i)THFfKH"3
%Ze3@TA_oJ+m2P?mZ<T3<11(rirl50n=l2>+A:IMTIZ\;Ya$l^/'gV9D\4%U(>!1^=Gfd(0VjC?0Zq08E`Har8,Ndcf$O;3fX806_
%"g5"G?S7rL4E\JqQ.Qq4r;!&\np]t>FX=ZjkgBkm<SQjin+5pVCMrsaf!R5Xmfd?6k%!aG0cqY?\^SRO*d5fJO)29(f[<TP)g[01
%6Qr>Gs"4b[V4kiE#@8<ps6JT96iON_NB)-./M7JAXl.IM-PqQH2gm%V]`&"+6e'EMba2EMU*cIL@EI#.MY?ORC@UZ"]4SBVK'PP?
%`gK@,F.!b-NESqBLL%6AItq%hfP\Pm[@5QFg"Y&4C\b#\Na7WWWh43XgC3MoT.*t<gc@ZanmP)+pAN9^0+;a]Z@Dj`R)+/kUY//_
%:Fk$k$e0"Jhju*^i$_]S=;<;%mtK`Irl7?)Tm%Fc*Q:UE$!dDccZ!RtA"e-jE1b%AK?!Z@kAY,7-](0DhYV7?5N#,-BXDK#RSa<)
%RT]2Cp\->aE+o8]To&PP`r:][q]?41X!@r&1Y[=/jH%-Z%#R3[*6Vs<Uho_!o;aHaaimEefj.n]E8fb:AnI[=%g/A8)h)DMqN+/c
%`UbItQ=X7^]<rZcYFP#6kB$[IDu,l)D6iUi1E/8)S"Re?O(Mu^qp3I3`OJq5$1f:tO`''7(E2,HgNEDmTW?RkJbY:ChodLW(\>\U
%mq%b&X+NpKIIEXj1N&K3f<jFRhtub=G*SMK\ID9qrh\FPWH$#=@,(Ec=/h,Nia$9LMo/--h%m#7=f'uqai6$L)7r^NbkhkD9>uhT
%hp.5lN1N-K7eiVHA.N#PqAUF$eP-o"H(ut;**^bG?9cp6F,I#Ne%[g9P[AX+WR9*'fe7Sg]NRu^*-7m#p!>,T&KG\1["k@&KKKb2
%7n4Nm?69&;dEllgQ.mNGB>)40-u;?MJTKCSBLIWsO8PNU)&gIDE:i=pc-T!Uf]QiV3')qBGDT`G*i#V]b"$m-,?_%,X6RH(XZjNu
%[GS]bV.q!,hp_;48DSYSj.$#/*B),J34!B9qAUG;Zh0s&fCH%tbTCB^s&sgM[QO"!gP*HU^HTu[ApM'nMP.R:,X/j,cafZB7n%F.
%HiD^;@:5="j*0pP@\kL/>MJ+mouGP[b89UWF3@QEkp&9!4`8k&%%n*@EOLX.1E78m_B[XlG0L4G7t&=%gof<Qk4]g-;nV1us6F8Q
%hQ'>l=cON?cQ7cVMT;k1]P"ZS0,/ff%Z]`Y]audPZQjeq:V(s-2Y;d,5AlGQ6M%,#$tI/\2ck1l6L35j8+>`ag,MU`QIk;Tlr+G$
%6[PLiDWL9GL&1Ojn3WL3rS`YU]S6)-[dV0C:&$YGrm^YTGTlNlrn-qX=BIV9K5BF@nX7JUGbOc"NB!Z+Thb(7Kbf)$rbZ^`kD*_<
%nt7eF]q-;Q@ZGVD2GS#BqVKE>XP@N%eqB7?DY_,^Rpfp+Ve&L;f,$ZaqR@U?Dgnfnj`<gf"O>mZfn'lal]464Y5-Q1p!@rUSJs]?
%K,]/C,RR`fIpi010+uh8n(dHch]gJJhXT7Q,13gOEsKJ?iNnRbAK6\;DnXMNIa[Ecf8#;$nj`NT6,l9=+n'5j3QS]H03%?&Ko5+V
%a&_d1e<qgD>>$!ae]WjmDV_t0P8@s<0D&e#X;BSo3-N[kA_]+K.%X?8h.lVV]hi`mcps$DI7TdLa%ieF>OrrnS9oJ=rmQYK%_Z-.
%4g\?Ho!))QqH?(C_>W>.q/g0.a>_SlE`"qPE:D,ZeA=:"(JQ"liXVGlF,.8k5:6UPd=eD`<j);BYKM%XWTc=$n619C<SuQ;7#/==
%0Dd\@DuDfZ[JWg<n\\UQ_;FU`:SEILrV=C:il/I[97oOVA_nAT)dL3k*M-M2h[F5jc2@QEElT$kA*6m"?d,\8+4n1j3p1F./B_%A
%IrHsoej$j4D5R%/=)h5iBc(W&5.R-V\*os4[k;5BqnK-QS*,>5*K<.#[.IblmpbtSQ/t)ohVNIW)r8UtYJ$=+HMGa3ZJ3Dp+$]ee
%fZ^tr[u^A[2&b7&*r<1`mT4)^$IfYm(>4+\-&4#]H!+\PiDh_gr[s+&nIb(S*DX3=k/W#`-\Y'Wc/GH7&%9?HFRe^&5*s#jrZbLq
%m(7m?Iq:3:bmb_QQA,n1`#]q+>5V4!Y5=>p54Z/'kNNZ!o?Z#,GOb[ccq.T7qY;B2[,U>rfoCL7;!3^75I7incaLOgA7dfepD8<q
%W.!"@%rP_`a5dK7\%:RI<&OSPD[u2_p&\$00cW7kBB'ed\_Ng)g*4R\//ro17s?T]ZW5[4Z?gOT]CP4Fjh3^`$$gFR80-I]K1kW8
%H#N$*FLJmt!cMDTJ+)g3@rp+c0):3j]074mQ63$\oRC0:EW9qP@"IVOfpT<!^=9k,@E*HRO`QmuBJ=NOVp6@.L^iN.j07X+NS(IO
%pZIQ$Kb9e=Q>f74T5HglB?-ik3]jj,7BP#D+0e[J>k<^2UQ)VM.DsDGcd),"ejK6nX:)85b6G.)N*WU!Hp@!g=IDBq^,!(efm2\!
%DHs\nd@^BJ9OkP%%q]?2m.[RG6OfVM^gKm4?9EFLE&RI"III./r8?qUXbAbWYGtq\Wfoee]s8K&>.CKrSOhn`DJo0bYMtd.4aj[0
%([H,1Pg0\os71Z1q@u3h,Ml/QiYTM_V3\qpc)b?#FVq"c?LC1'G/Z&Js5o@L4<-h?YIC[_MV5CM(X4:8a?DfVcYI0Ol0YNq]`WF$
%YO?Bh]Cg`T#f?-p(W!g+i5EB*mF_`YGaMLMM(^NCm=,h*<K>m9l`V9ioU[3f)d9?S9@cVJB:(U'5IP2Ad2_+[I;31M[WpMDn!EDO
%Ffs18rnl,.h>aqCs*A^Q=f>K3_^s<.H@=pJ4u[V$/e6eto8O,d'0_h<hOYTgiR4"-'jgFJiPd890&rh=kn;YMB;)=W5Pd(#^&9In
%/rkomeOLXL?Y#bO69LH_G58b_6]gpTgFL8>YoEGSI;8fKmJ8MTm/48V`G2?TB30]t-M.C74(hpTH?Uh,T.FiIm,PMcK>@fY][#PW
%.W99e-JJAG:/l6"Yuu.XF$e\0qD0i-<4giD`0+Tg:%/+$k9/mtYM4h8V&/`9fBpJWOr(]QI>)'Ylh4i60OSFtLLUbHEa`\KR(MW`
%S_o&aRc)fUp3Yh;BHGiQG%L7Xq4lV=B:"P>gImOr7tWiM0?0bfGPrJ5F(_efca,.^>gf;f*gd3Ls.`4j)0F&gAhSPso4%*mT)d`Z
%4ln?ShNH@LmaSG`75?o5b7/nFn*;(p:!1qMJ!Oec(t<rW_ffH*5ZOk#rX$fHZZr>;Z$/sd@Csl<ccg>(Zi,/mFm@e'nR?q48pF2Z
%hd"u>)?r7UeX]/u:jX#oKsG-`O*G9HG2h'BYK=lJd.cm=GJ.Obce7[RSm<aB\S&DK-+aJ47IcK6lup-S2i'J_HZm#.Z9s=0oKBgK
%FY"L64kNN'4g,FOaS?5&]Ri5qs&f.S4,%*fF)`EmS^`iN++KF!06u.uI<W3Q_Ln]&h!m7g>-Rq?pKH_WgiKljhV)WZ5KoZ]QX)bD
%(H__HJka,La6=O^O8Uk-(MV1fm,NDsm[j8_,,a`mpG+92?eN*)kWR83i-+Nn"uj&_S[/,M^(%QWpgIknYJ",K&:>Cq^Z]#d=cfWS
%&V_V=VhQgp\M2d'\#+q1(4HrF^+SNR?1II[!EYb6]CO.+d3$c$?fR"jrqFQRC>jfJW_;.-I6>=[?-sd,-?VbfDsh&eDX^,<Geidh
%:QiaYO3?a8!P^.`Q8$<>L!1KV.e*bU?hF!l?#e%h<X8A>d8sq2GDjH7?dEX#6^^q5`YCZ2o<@\99eQD)0AVB#8]+*.$=pJZKQWoF
%=4Fh-Q(P7HoD[6e>Vd;fT3U&dc%tqFM_REmeZ">AE+m'n#uAF+m"\n'RQ0fkh+nfY4aaY=Il)sAo]Ts!rWpOWdQ,bT7Rqgp7hbmh
%mR*"pp>CuoR_t/Gp+S<qVRUsp*I[3bp>q@p1l>P$5LVcb\th*O,Tdr?aq`Sg38,mtqjNT54rNB8o[,c(\'nk=9QBef++(GE.A*)5
%4Z>DD>IcZ%\4[c&9u_Pqn.0t$NLc.'(Oo[&-$GoAm62CLg`^]&++*Q,*]TP#I=1//@&jaO?@1edh":m_rT;n3A$`qe-.tM'%`,@9
%jJ&Pl2?uF$n=/M`fuX1l6'fB.OZ@U`#D+Ms/\Ku56Pq<0lIEdGhEonKYbMFA0o`g\V^HCt\.l!Zd>s[=E+tYQe@nFHe(KbF2nc"J
%mSO$CGoOCsF)DiJI&tbAj28C:llTp3`B6ZR%uP"*G]$nChpej65TJ)ubf8*=IZr'2Xguim\9`5_T^$CnE1!re=Lmco3h.-JW:I*4
%QgCpSWJ7OWEFZ;&%B<q`J%nWOEHajtWVo$ZcV&+'+DsKkOpbjsbEL\1a"=)Ck9!^9\rK5EdDE^<qJ.RlS\`N+KZ9('L<acke@>lj
%O7Pm64Cs(b0$8!42tdX@'W_'eHTa6/(*CiIaG50Ag"@[!\2:*Bnt4(DX5VgQK)2-`s"@X#jF`c5GrGG\Be=Z&d]@mmpR.>]\M5b7
%*Gg!#q`qd%841>?S!e3<ZgMAuO+1O&7U4Ki?TgLD&qdCBZa#jHoe#oTq=_I-[Q?MA2cEqP]F\!NZO5%BFuD12[I8CUFYiq@^A[(>
%3Ghh]g@0=C4ur(kk@i2I55Uf;o.67DW6]Z`Xj;.=cf"fAe]3NVG4kE%iq+&-nJfCdK&rR7ZVAfs7GEln>ZuG>>GMKAn5>0Hqg?0:
%jbL6N:S,N+eGAg\kO_jGY4=]TaQ**V9:k8*KlCSS4/FJ`HN*4?0n1qVn3,9HXOdecS9t2h(lc7pge_<+1bTmi>F"lgQ-Tj,L?VtC
%p0'FXUQ.Km9l6Dn3R.TBZSWLa"Z-";i#>48\eot-e&D8@*pbn8mR]isXhEe2@8@o?qeLQ3WcN7ShU@Ilcc:CiDXQ<Wqono;q+D5p
%[+E'g6]!UMq9W=!1SFid;;D"?D/&3AiLZY>LaS3H*5?VWSiFli(4JdhTItFP4;8a)Y&B$CiE1Hj)Y9Xi]+B<Xp-M-,^U!'u#('YH
%:"G@[VGI'iguIV(e0CkP[bL:')e7qj1hci5+\_Q9^h?fES+NU^^6-Ef'D&0#BM`p3EgRG<YHI_2]Xf69,G4kAR]TjuqO.kmDW]r*
%@[Y7;bi\^=+M8;a7A5Cp89CND6NHrE\$M!4/9#)ImcL^TeJFjDh[Iuef7SK1mjR<cYB]D8SG%C0s"7"CX(g=7ZE;hmEq.GYcYpPT
%r;P[2LG+jD,<e'VYJoVHH%,e:l`V8bhn6Mok5Y?aqqD)(Ie2[ajOqYojh%R[0=TKcS,Va>2j:M!W*V=InE'uX:!;?foC[@r@dS$A
%q.]05Sb"MdhI_g$f]Q84h:?k$[*D`p5J1>aG3VeNe^(YlL=(GY4tl4*,;Y$-igDg3p?)7pYP$T7f,g=AKb<nP5Jmc;nuM0$>LhD*
%CDUX@5?W8OUU]&`]l\73pt<u'R&#aDI,d6O:=%jR^$;5fO%ip8?M"I+mgW3ZLB5ZA[J&0*7@CpXk:Yp%OAipl?T7nijbEg3fY`+#
%O&E1Y9U@lm;eC#Xa5I%7-i`]*!-+n9nF/\ehLBKh&Bkq;,R5/-pf!BGpC#;p7NY&=Wf'Z)UPQB3cc\>#kJ(W-#2Ql!&5ppTnZ=m@
%hk8)j.GoFgq$p-]90B(S9V5RW`^&MR>Wf&IZ^RN(iCJ"rnD'LGdr/=Ff,H[5I$5O\$FA%=+Hu_e*,3!jW-4n5IcbIrSlm*mGb(%n
%Ta*WNn5h_!MPZm&0A:ITHX9'n>.P^QU@Na*XpXQNqRfVu(]=1ek<@369O=<JJ%[tTHCiX^oMPlMY6G=-0?OZOTAGi8i-S_.J\oD'
%)dDf=O6>+1?S7o3Q,esJ"r<LAVbc=p^">:VT64MhQ1F+%`N\2ZBYHSBs'#I"b&$uKC&[^p$T&h`f':bG\$nQ)]fl&KhPI',&&VOT
%Sq>DmA!h'/@A5n,qqEV?_(T/o:JH7Ds8MBOZ]u?Y^L(2l]Xn'[MjaI.?(10GMgp49p\OKbo`m#!Y:TFW?X+O`h;c>4^Nm>4iq9MJ
%eYea@I*`8Lq\Z9Y(h)U4b0^VsBSO4l=QO3#.c.)j3`\80JI3_L4-!>72c'fDHC02/?Qs&@&`8B?Q7Tu%!?kC$Gk?AN%4Y,U5P#*[
%n,*UAO,%WGm8DA<s-WQHpjRrlDnPi3<HSX#d#S'pqS>:3NUS?/2AaN<jmDF-W@r&E^RtNeUPC0>I)XP3p!@q2@MI:n@]Fe9AG^SD
%eL-BJ=uj+t*rY=8*\3/27uX"MnSg9c[go1fMjn/,^X-<[HDp"UX8P@u)5-s$%qq$<07LG,AQECm@IYUW5ot//rHB6/KmWGbkI-/3
%^@D,'fW-X&+8Tn'ijX!$n)$t(Mk,KUo]sKl,)fg?qX8&L4d^LT[%#a.iBt<joF)h=V_11//;=JuMp'*t2a7`o+9(h$!cp$f3(`LU
%?I'C*^,bW3H'B">G_;3=p@-_d`V"fDnb'_eO.HJQ"fYG(:>Ye.DXE^Y;'S66oET$N%aVL&MKcO^*W1]5g'E<lg'F>)D_T$S(WXn,
%_l9JB049QU;=*3uqBU4iDW`rJ\9R_r(DpT#Di(B8QtJLBe6iM2(2\gIN,\bDR_Z+:@K\p*/UolCc$%a91AK>)<52M3YHebKSh;#_
%GTTB\DIfOun>Yk80;"kf/^NQ@<2f=LLr%+j;`cajldNW3iBoaL6A[CN54d+E@9SC-QI#!%KQ!Ho!stZh%V&4_W@_p`*!XKlEa]JN
%`%%u)O8EQ+%p65q6$Q"1?k@_>JU#*\7(JlWhT2Z@YjL6?kL4e>0qL]*F68S0-J[JrX2Ic`@Lt>)%0';Hms&Ll7Mtp00%(q4n#8t@
%jjFUsiLYGB>Ku22Z^7\'P_`g_k4.m;iaLP3(g2j)`#r[<h;J4QbB`%9j7qcf$@(&JAtFBos/:%//,r:A\rDc]10T+Cmt\X(8Zs/,
%q/&j\%G0b@.HQ*.R^Q;P%)^*T[:H283f(&KFn8mQ/'@kFm4_YM[04`qcTnp6?<Z-6]1m(pf)/!\-m2ae[="m@[b%t&Fn&5s)^W4*
%=Nm2L<r$gqr_h09qu)]8=0:;CGkGrtG"3jgPMSkAipeVX?e$o(GVT0=B)YVD^Rma*Ye)b[-bZPolg*('3M8&JYOZq?+3i9)NUli#
%chMe'1JB!rJ)TYFF'3FL]l<</_JU1WT)Z_J6o!n8S6PlK`SihJ\/\O,@JR_]8\FsQlq<,+iQ7PIkNW,SD(K^t_+`0Pcb+b1Y0C7C
%f&+'2]LR0g<e%V;bP18(cKc"e)W!`i\sQ6Hhe=gUqDL<8^G^CJ7apd$]`OrJF8EedP'?D5/;2-,G8,%<aZ"EN/T9_&G4f^u;f6C5
%6W<LJ]fekiL*rIs1om"U*Zt@NQ-<<fgP`H%Gk&)Kh!LVPgqFkt`j*=9V%[;50SC=:`PqZ$=.Xd1qRDs-0=f^5Wjm/E2dDO3hch$m
%#@oiT?W\=2e;a$3NXsn3I/agj1]@aDX/CDiq&m_PdY"bQi,=T;E;WcT)6BIbp36!Je!85AI45'7Mu5-In08%1a1:&9/=uAUk[UMT
%XF3-$X$!"<<kP_?n$l4'%m>AO=8oHD]2-sLOhX-JmJ><s)tC_I2a#@\Y9H!0i(dX/=*emI7\e]W0E-:)\i/;<DeuL^s%D/J__VF?
%;1NJ'AXhJm`q*p2mc#/JM-6YNlQ9Jd(-E/3&N2^q3H"WFHk2etY2.>RTDt4%VRpgQe^'6S;,;jNRU>u3rmeBJXZRZYhI#@ChV;io
%0&\JfGqruQI+;"ErjERP=4me%[O?$PcZfkiCc4=/./fAMk(V@]\<Qa[a/_udT9"KT8=`l&X)5&b/r21Ml[E9PM$M2W\?5.(QTpQ)
%mcH'kb5E6u;[_ZjJl<RW2RG0JGr#hDW:&`WGKXA8G!Wu'fakjLkb$Gu4,VA9^V&.0M$*S'5e?jTkHAi*qf;@WjitCJ?`q*?ml,lo
%bpVP$g$kX6\*572U7Ej8CA:YOlEs\,s-d,>q<d9S5!=2906'-^>lO_Dm6gpF_q-Op^]4&hfg'n/rS%4nCQiBY6fR8ricC;^K1=Pc
%+nb>93c&:ipNf#qpfBAam/MA+?iJqE?B7h\=&`_'s0r#NAbc4D10^]_iIC[aInf(YjRpVB:UA0p'1833>?`XXP==GbJ%+ZDebT^M
%jL'ho<E8s<$n:>LQ>d[ih=Y59%B&TuSF0SF,HU?;g)_,7(jhFQ:DWT'?"aiT$?H(#e-d/##[>loEqpp*-5ZX+[GSgo,o_<IgjX>?
%bNh+eLBr*RIf99'9IM5(IGX'=5<lgYr8Hau%q"2@<k(s'E@C/QRL!L)HK&<)jOEh__Zs.$6BS'D@3Vm2N<_Z_TL_t:Li@<(q4E@?
%\5ku6:B`21'I4kB*)c<>+h>6\lb<uF/.`OM-64(pqnpdldQh;oL.4Q?%A\VD/,q0-Z7/[b6;Z#o<7%"SE+mdoKsmaD:7t`CXW@/P
%U"+W.RW7iATOq7'VDg!*Kq_1$P5T[Ert.r4)mi:(7>aCMaV^==[Qe#H\/GQV/oqqqs-Y(*"Fq^'p4q`?H]*]V/:@':E$E7Dia`Hi
%-ef`G5O@;QY.!6h&V(J8+HqHe/P3H:Ck&s%%bSpu#^Rt:+Jm^i6=<G"mLS%o*_&S7FV3E9`^V5+9bK4i,iSa,rS^Ul*0b+3ct!c*
%+IVXj&cu:+E*q8/rs<@MDOVS9#+?fJBM$'h6#6KJTW+n*THt8YEJ"`d9+pY#>4XrdmJllJ3LdZAr3OaMQ)fd.dB70+_:"`1Gij&>
%7p,8*pejA`T;_#ef25NUGuJgKD8"kb[N5]o%,Y+B'G^Z9LHOZbh%Z\2.4pT9PnWaCW@b]CM3p+h:;_*S'hZnV*X9sU`4n3b<h+`p
%_P[d@=W%)5TOA)VF`8+5$gI2*+"Tbd;Nf&jBMpk([V!"12,Q_MdMY%cb@+Bp8TZ7"(([*\iq(7o$7R'3`LpX@&F4o*F*9Q8Vr)p,
%9N2Qp1<Un8jn-]a_r.jF%>dYjjHM3N<M:\`nh>:oAM$BLp*ZZi9-#jjUb$pG#a<TAp'o6V/41%_H+6gKYH0aOh%`dS0$@3ha)WXY
%bE/O.4:E8tfgu94NFc!*CKoDB[>WS2JTSro;F<`B;Hk2b.]6(E)/EHI<dTtH/ONL2,b=%*n3iLd<cBAB`m6QoZ@(lCK7Qk@o?=CK
%WMVQB,eYBnA.T+lE789Z?PXm*P1iZ/UcF5PS>),3)?DNlIVc3f-W?sUq;9":W-`gP>C`lIH00kPaZGc`0K][o-"J/+eLSV59;Q_S
%KbZn:b4%s+&AUDh6n(&k:isTni_)_,B2Nb$<pcP#9".N?i&;Gm-t7M,5f&Nr<HbGL-co:..2Dn7,E\H:;lJ7AhZPXAX#tS<+Lf!G
%0)uPTEl0-R;L2nDC,:`9SP#kM8h!ah-7KCb":G2fYVcN!:sc"CA,4\#U+<9MBm>kG9!?Ik6+KUfBHfkP>nfSf`pcO'&ATKJ`U()D
%Jl5GB)1GN/M"@3#mpbB-\96jal5,U?.1c?"g]g%nWVm*\.[<o:'N'OH5Z@/CYlJ1B+Jl=pKSisZ0Nr:fo8Ei;&<a%Ob[g;l=<?Ak
%1k36$Q8T<nC,_<j<W&\h76\GPBn!0K0Js5PX!7Za9MpEi[AZFg^*'b6:AA.mq+J]Af1(]V8b1Jj^G5i5a7gq*YOs8:/mFEgo!T)L
%WaR9B@d/+7GECJbVYIhro/DPVYDl)<V\MnB?htY&:Z"`.jA5CQ->2Tb&Q![V@HsF7'!o4*e30*hq(ktDLk*&]q-1gFlCQ);GF.H9
%UNOo5$`Ul`!h-^$LaRS$97;LE8LON*dell1n(D=.a<c>4pktIMq=n9oq6g4;eCem-;EM@rSD(??)I#sZR_Q;m<2XnWCcSn;3OQ;c
%\hnmq>#(pC?@#gQni5%@b9CO/ID!$g.:#+TZh.2W?u.+1%$/X+"[WMF.i'b&+sedt+Ghm:&hF#R4eR`T9C@(8<@TNYM^DY#QOhK(
%[,WFWn8MQ'04s:-T<RNW.5H2`7?F<'4;'1Ff]b#;>>[*F.pMM>H;Q"pHlm4R-)3sB9ftlL&k(]@+1&c0OJJi&,:gW&3l<2Y63+&Q
%O*.oH"TtMLQP']I8X5tP=kc\DYYh-_LD[.T//[52\Lnb)6&O;_'L@m+jcO!Q^hO![AH8#3TX+V'c7-O@,8D!P)!)/k2Zg4j!%Ys^
%)@*Je!SA=P)@Nbj!E`KTek"<s^es2%^j6,k@fa#m7lpo_>pLI<r.JjaH.l!,UIKHdG$k%oZh?"OVt,Tbi`E-T3<[IW-+q3pLifF@
%<.:Z&OGIQ,VOp.F5Z1clc:TUg5)%9h,eZ\BRBn6)'E*?=rgnC&3iAouIaK**>4sc,pmFuZW>e,99"D)@dX!SU$Q)H/;<e"X?`QcI
%->F_q'Q7./'Bu$]ebMXP6IJEdfu?fk#0r\H8E,^dY<+OjX]lo6MH8gL5GTdWce+j^c6hL%Pu4>U$;rbD=*at*/:)0n-Up=[""tQ5
%22.H)1cb1oMHo<\n'T$F)#6_J2W66j6DPhpWUl&)5ggo055[g,D/.PZS'&,5VDKlr"Ao(Q20,["XQ8^\hU2Ts3`7dq^Z\B_g+5N&
%I^1;k7FG?bNCB"4U.LKCRTLi;7FE&!5r[k+H36ae.;gXClH&Ia(-e`%[F>@P-#7QQTccp=G`7S55XB6!(2YNiWgbDg,gPmMYQ,ei
%MXUeBTK0J=pekU?W='Did$E#g8Y"bu(<l8L.'[1gM^F]574jB>8Sr\t=9,S39>.!k7^\dil>9b;eCulnWE2L<0N'^$D6chc/@nf<
%<)-9n8NOa6_*S.6_H'N1:qaHW<7*>-<OBqc(%"[0m7+*hQW>bJdABg;MM`TK;A^IoQn$fiH<.AS-nSH&Xthl0.rFD4S>fk$@<`K0
%mNe$!]pJu#Ua/Bg5?JLm;AgM^('*E,Fc7k:_)QQ3SM'SYNEti:C9uFE<JF#?V=^`qU\/E/e-d]\L(Qk9Ubt7I/.l9Pl)o#1#c(Xd
%jlrf$5g\/@/2O>U?+5n\lV,o'"B%kRmhGdspp5?q0@Kc%Ipf9-VCKPa>"iLbaeb@oCgr,4,<@iCWD#%3(/pL\YJssbdh>=rd$dUi
%2-Ah36P3IrX+-8^=<YTV.a;=s")oCd[OT$jr13=iq=rgDq6g3T.F6NU?s<odmYa2[SYBU2#hj84=U.#I=siFYbRd,IUf1oBiqY*o
%Z$cPB-i"GSJLN.-bFFFqQk^@HPHrL9:RA#I(K,I_6mh$A(&skBL7+1b-W:9LW`WCfIkT:K>(9pp9\gopl:tYi44U<fQ*k\$jtBHb
%@fk>o13G8>Qb"R8n\%Nc2ktN!aNZaa;eQWA.'dq8D/d809,DlCY+p8/_BWuYQNdV/@)@LBJWM)I9i2$b85nZ5@KF7WMmDi("o!l$
%N>4'Or$Vp?<M=8lVb8F12"AYpP[;Ri$*LM*kqAjR$s=;',c0I^?ie&T"CP`(X"D,%"CPpE=sK:W!(W;1!36]^[0>2"*mGOP0!bOD
%@HBNXd-gaWc3Bq!;DSAn<&k&b*<Fe1J1aK?Uf[WDN<"("Eiq(r?#B\SbQ,">EqWVQ39=%g,Xh`E76$,[4PVoH]Sm?Hl$/mb\j"0(
%!7Z]_4p:rTk'/BW8Y"bub\T^FU'"pAE53_fq.Nf^PLP=WJqX2jdU@%B:[Y3PRErp#B8N'h9jf+-r942.r'W3W3RNbqeoW&d*@ZT?
%aKP4?P.3fZ.jL6SPKG(T7kElrYca!t(=ea.RHBSW'f#VS%H<nV@c4Dh+`"l-THeMLE<'9=e;Ck"-C*(^PnePa",00HP5J2lG0gh8
%SE8`C8\MPWGsTEG0p3H;`7c>.D7QI0J@$P9.nDs@TOVb_2l#qZX(-"We;9u-gU%V7,F9`M-.21C$/0?ec>lK2&^i.0Ch2:$Uq3>t
%<q5.\R'kik$qfao81BO]:URW(,k]<W9oaN)/kqp0U>J-JCVsin_o6!bd^X!u<RNdnKU,WcIR-t3];spn&AS*UStMjS.4gf0Ojo:`
%X/Z^O,F>E$,urAg=W:+7=Y;-M+Di@RFb1='(-9lm6KK-F:"N_9G9>'CFlYBEj\dCfH=bP\'-52$=Xo8WLJ6'Le$PE6MM[GGYmOHa
%PUVem)DtNQ.];j;A$s,@+J1,4Vl<k;KaFbQ6/p;mQ_I"s'iLp1%B%;W(P<#bb=KnQZBpYnlK`1GLZg1\[gKSUj`cenOH,hX[p8Jl
%;Qjo*d>!G9;Ar-'87HFtVR0T+9L'LH>M8RnViYSsdM(Ui<K$a?FngIa%e?[!USK=jQSO]QMbVB\(+^2eejtr1S7mO3NTH=4,,@r7
%lt'*N;C4EPZ,+Q#`Y%[l!:W(kVrfCA)T.78V'#r@Jr\'O2Nhg@,hc'5ee_R"-6S;'!S&C-OJm6lKOg@^B];HF[7jpa3U+V!1<Ut:
%,k]<W=CkQ=3[73cQ(e`936NVe"Ji;UbHd6c"fXtZ@\9EK($YR%W@UaK-7+YX>[/JP=#S$c)9&F.P/Lde2FpbN/h&,69"1Eb-bbp=
%n<se]2AY@T)sZr$n\#CV5U9'6\MT/=O9m1W:$1Gm<0@pPbM"'JlO,<L'9L5:=^=K3&lkd&`HfLUHE`\>+bfQ/D%<@E.UT]]f3Wf8
%e&"C@k2M=F-^%RNUiD\nM?ug`f3Do>cS_-?cpY.X.EIGhe7`?QO5E6P8NLl1B=YN?;Qjo*d?-i9V)+8qOi5rr9l7G:R"2OgWiE`T
%U#*2q_KAg6gW0H2K7!_GBkkhf:*fMdVHiR.+>"3tp`2-KUaE#(/=.%a+mib-l8koX9L?GYEZh3Ig#[ldC2]F>BpQgV/kf*L(F7Kl
%iSoeAWP,#8dM/!?M?uhS88UEUAXLtFs3T/rM5LKkhSmkKIL#\/FQ>94j\d@eH=bQkNjf:\2GYX,1)aY>3)*tpUmQZh\nW$g1m">O
%J@XmbFh>YcLap""\Dsb8QT>_+YAO9-q,;>18Sq)jf*VHqr)nLHhV%h$ImiA'=H]g>isf39\@>)i1--dC:kg's%f3s;BRm&-n=,gj
%V[uJ!#=8SEF8fA5Y'jb*f7,=!S>kA\6E`(BGSW[qFIC3]F=,F9@?JoJZ)6!r52qVQ+[ogB'O",49NKQ^>Oa+?.4%Vq4X`a1=X7)L
%0TL3[)4#6N22,(V>t.1g:FSEd3/4)uIC)RF%OimNU=)qcA]Bna1k\Aa,uWaKO9KqQ7;H$O=9r:U4fEEB!&B7O>$Oi"-Cthe8,l@L
%qe21l*)a.u"VWp$#\>d=Nf92M;W:KEL%V)Q:m>+Y=9,QNU5S7)PP4r[mXWT$%(a(oE;9Q,c%.HqcY`ZOq=iThZu;o6QO3[)r)nLH
%?J>=O57g]L*#.,XKT$mA:5]M_AJ21oq7hPE>,6u3.\!bB]IA+Ocq:=\mhB[AcZ8unf&kJ.':+7H`1eG,9V@SsY+Yc&TF<BMP9'Yj
%,OhX)pstn(9W3IFKN^4,r/K^lKZ#'Ypr6J\B;.>h:p3q7^]Hh4/<7'WAFXH"QU;S6Soa%OGH^BZ/<qfSGI3PZ.ORY8+Y)?adR79;
%I1Zl9FEC&V0l0Yj;e5g4O8,JB85WP+V3]O[PN?o_8F`WV.2>LTV.PGrNFe5[+b22'7.2u84snc5H&%DukREG.MToU+=YupSpt")f
%NT/bEgLVtg.HKq3mk,r!\Y5.SS;H+<ieYT<S1/Emg^(7MTj:DKfn[0J.T))IZH0D;?C=JJ#k5q,6qY`g>athkE0`qE"TW<^@`ZIj
%%%/)r;I&jinS=BRJBTJASC8qD]s_4cc:es2o8XPOjSEf&c)L@?(7IC?O]_eh$JjS3"<.2n4$p2Rje"giN`I;lD->@l8fpbC3hD9G
%[[9Q)"gSj=fgj"pBLF:1b9Fbh!)&cfF`?S=J7C2dNU'4%bi@SeAr4X*s2Ou!P6l3m9Rme<r/K\V?+S*o-:KH1WV$I]$490Hpdk_A
%4@,iY_b]"JlenU4#ArN&[j42-"ptEMm///ZQ1,$+OWV>>2S\Gd6u@g[[2QG%U;eCW;ab+HOrt[jW(mp^(/^PFC2Nt$,-#Z7,QpO5
%PHKOa!\G>c)-S"#j&_>pWT=L"_"jDF6:%\WO@GdE'N"]hi\0l_pY=h2q?'SD93Di?#]pN3-S5FS-7n]U+Ks^W3lRV1k)+Adm6t5u
%.Y":>;du%s9o;uA;sOlD/MCd7ho$3i#NVmS<l'0U:rV:SIKm&7f$Ys8AQ_u99#q'+NEHkbBMp9A9bTZ<7;H$O=9r<*>C]CuG'0)P
%XKrLhSH1]ZUNQduLj!&2OJOWrd=Y?XL.-t'!6Yt)V$6&k5\C,K71+"`7_&[^Wa0$5\e0J<!%]^[EZ@>*-e&n?&<n0geR0AP/N%Cf
%ZokRl.k$a^U7"HLV=`K#QiRPT16j%qXGrnmb9Fbh!1OD8J<#--_Zm9`R3fTL++?\a)7bPA-`?0TA+R%RQs=`h*_u:<KKi_'a:I/s
%>qBB@r]ijV<uW4N1'PSG#,bUn31b!N>Z8Nbh?N.WOWq+_1+f?SVSdA<Gu1b5MGt#8""BaOO^J4*#(Dm>Jq=cei*[)GKr/='%+.%F
%KG:7o;/.PEKmUk=*V3rB.GX,T%nb5O('t`XfV4j'+3+NV<"4lZpjT;1Y8aNEK0r)d>@V_4MKb]H0(r8-^J_]n1!?[G74[FmoEH(D
%YrJLU>:;%>SmZ7gKk810M7d0L8SKGPQo?<D1_s_F\hR<k$/8p8_A'TSj]^LA&,3qG9AP'pfgktQs4\sD_SU"9]eW`C3J[+f;CUB<
%71W!f>8@M\!2R<cfGq@X-%gBC@GHftY)RJ0APm4l]eX)%Lit3@7#H'tX9VXFQ:6CZ!7FW).RBrIr*>n[+SN?F$$N0K4'R<m8-sIj
%r*=%_QGR5J4X`a-=JT%!&18YO"pdg-JCs8qk6*+lCd@n96p!Df&Q1U3_J(H`,uSJka#rWd$CaobTG4eFO^J2T*5nd#\rP7XrjLj>
%).CXsU].^<$:`'+7,mspk%?9-*(nUj,j0(Yr`IGYq=/fEo8ES[;:rAnbA:r$*hC*YLL^b,X'?P>j.p`ABtM=O9I\D/Q40cPUfsns
%I$'"qXRr/"7EWJT!Ph<uSV[>4_6Y:f$-)MLF,#.Y@*o.B.oOd=U<leaD8oJ\dmas!'h^!8Te";1_#f/S#f,#+f,0&2#f+R_*3i?u
%!cX*A.DU64?t02FQ:3k>@%OD4;?7n=E+(oM<co(Z[,W8uPHhRK2FiYUYY[e>3"(tmTUkdM,)'kXHGgN!-s39I!"ao!)jDIDn2=.h
%k8!%=Kq(Jm`1MIb$([W_'Y.e;CFQqP@u]Z2KL_A$ku\;Y5q,FL,/F>2kbbnJ1'R=YcT@j&jqo7\ET@jp@MKGk=Hlu]+3bWOW*dE:
%8u6JA'g3s6@p('Z#TsUU272m$"PUR?n[daG)0hfAcD!uPAIdT9PEQ<[nY^4?&"uXFVg*tCFsYb^R4ljRkRB(bi'hB*;c&bS";fTG
%3l%S,,G-;MMTiBI[$4mbN2r-2kY`j7)at90i@Kli$NSao"nF$7JMS]h0!3K\M[BX-g6PuU0nlqbS<hSR1U8eJ*\N_p'j1+$'X_M7
%?ie''Wt7l7a3O2h=OA#0[3N+sN:gu0U=N6=e;Rr;->g&MU288Sc(7pJ('t`XLpN9bo0t-Q.G#k9g%dHNrUchT3h5(UdEI1K:2(Xr
%G\gH+Pc9n1V6D#*U9H0]/-&dfpV*aYGUXF>5r)s8Ng49=]#Z=jA`7GQ_A&Le(EQ:#Kq#4.5q-Ql,/F>2kW7ZVSb1R^mGUp`i"R3C
%ioi'::2kr+[EVi)hS$38]04:)'^t6>7BZ[Afpl5a_G[+pUsfK6_!=^+%NFNg7l4X6>u6h)/?IKF:*p[j!Wq5,P5M09>t3[%f7,;e
%:9?IZ<4:d@"gt3Ydu%4m[c3Q)X`uCQ=cA;GR"AKd4IT4V=$4l_;H/rN25]AuXY$X*(071<X%<]"<e\Nj3G2n1M[=4j=r15'(071<
%X0jtBdDDns*PUeE$PW:92!c_lD>974Y>H?a-2]^+kF>60J-?;<kqp]SD#rL(-^G^cjX+W72mD4l9FRc<5P\.k)Lo_"GhH6LX6>oo
%^)&\W_>G`B\c[8s!r;.KoB2iYq6b\-:$!2iJZ*,pW%!9qnWW^WRo@^OGNqFDS2TH+OZ5d@=]AQsT3+u4AEn8,#:\(9Z5uQa=r%D[
%!a+VWOmu57S6pE;n5,,oZ8O;?eeVDX(0PEIhPN`mR3H/:n[k`X2`>\\A@N!ec*4<!qO-6^Pcrq&WVmDLKi@&u`Q1l/.==(HH+6f\
%%n/ks8l8b-#o3N:jn>^6kjT5r2"R!n._bjP>7+@>P@Dk3_Q2-4J'%V8A\AH&"se\bn4/`Tq=/fAo8EU$#Zm!9*!6r`5PBVEK8Q7Q
%^^]:XNJU@7UhD<;7SE!Rl1hrJ`Y<b];DGbilEI!jO^\>VlM.A'U;Kd>I?"OT__pOIN`B91(1Gm(:/BbgRm1QbPam2caX+\ppcItX
%q=/fGo8ET57/^FlEKPg(#>">"Uo+>o;+Feu#H_f7W'r.-bG*KaH>P^U@3Rh&<!l\8d=Y=RQ:6CZ!4Ed"J,h>.:WVINaJ+QQbV\O$
%Eu*Rs\NCVO//g+:f4K-!?#$0Y`/Iu:BN>fu;Chf=lg5uV15(5a#hoCk<5^-k>O(fQX8mUm;)tGn/;m1pl'3,Z]O<3N\l;;B;HOH%
%i@Kli$NSVlHY>4iMGW<kijN=1_iGF>UJ/^3,m#Nn;nRHg4+:.Zo+,\mGuOTN\`$b0F)&C>V.0[*)`rcoX&=jmK4opWB@p<-)\5J:
%>8FW4dMj,`Ug-fm+[tZYl[]b@AW^@DJ6cRa1'QBSGm^e!7K@T9i/!B(&V+Au9)q;9!+\6SU+e,r/-&5sUbk$-TWR-H82R1RYF9EO
%lYp5D.147mcr0^R`^iC"&KY4-Kl&#[:l<E$8?`(:hWr6,3r8+1WZ<.6UrRI9l?gFP+;IB_l$I"5=3SG2f#+P5SA39*rt5\F/>'Yc
%2S\Gt&QKNYP`3;X.C:Jb$,e[%1fkP9:#WMDNh7n[CXF[;4*+)W;Js$EWBr>#2O/kl<dIT"4Cqs*!+9O+Uen!VKf9fISb-hQUik*M
%\tJAb(1"dHc%rf"Ki1%E<(b2/b+qdiU<K>OXclaSX6_.'C_m/D:\P")<&FNGSV5E[RFl0Yhb'BE<4mQp47_ehJ$!tI0epkR-UfQ2
%WV%Sh3A%A"[+Zi0=u5aQ]\PEKTIkiL>cJ4e$fP<"E\\dC((^gde7r30M4I&;RhVud1XR.Dd+>!sQiQI3@E?M'h(Qmf8]C0N[lJNK
%4!Y%3es60@iZ632jSEekc)L@?QA-+s0>S@Ve>i!^Uo4"=RA6Cn&pfi'Ca)cAQ:7dLoYuWZ"UL/=Pu=k$eq6jWQ:6CZ!#Fd2YnOqf
%f0MKIQE?((nUarbUA9)E/eKZd)D.f;B$?rSCQ-c&R'B9nc)QCbM?O!NUl+peVi#Vs^aVY.H4"r7c-%YW7PT;6Cegfm9V-7G`]>FA
%S`1Z*]#aR%SB\&+#*p/76mOXZ3KO#EV*FUXrb!d\(@#>3JA++7T1ou_Ml#.+'ClC)R(pFlI/71(r1ZCed:0Ye:c]_`YVB2U>oA)Z
%6tMU<?%VRJ[Q/-B]@ZbV@:RU?.,IZlb]<ZkcK<W&',F+:g5o`Is.n8*/%k0b1KBJ38QO0r0HtqkD#TCh;f__+es6/M_B5U-o&Fq,
%o8ET5<-(")XaY;=_*a7@=B^P6e]?GA0'UC:VeFT%W/paqI:N*F]sd`*IitK2c!gQI.(&d4T.M9a@1e<f202kHnn^D\go&eY=k$VI
%Y>%MuTQmtGMIS*:#GpW8MZaCg/.8U<2!SQXmHmmBQh3$\^S^-ceeY.o.0W?G$RXB)D9'%5K6G2.8YogA8EiDh$H"(,!e;#`U(UuD
%SQr,?j&*grUoa^G[_uJR;A>EcTr%D8N)V?c8!cj,DGg&!'U<6l?ie'/ND915J7HL,5IeD47d3@0'c3G#cT*Mp]2*96:[<$"7e)K[
%8*'MbXj*j<N`_%0A+"`W;'5>BCU;UlOdB2k"5W-Ch+ksdpHHs;Nm[9claA.fb(N0JO5h;g4KjCf-fMpbnG:5$>d32(Kgb5G_PAu.
%q!g"7Kp"9YLVXX@,4X:\/R'5P5&/^ff'TF.`[KJA*_e,^=4Y=E[*41EY%9Wa\1OaJ,TU>Xn?@-CV2AmRCW3_/d?+it.Soq.*-be]
%\E2B88<R*s=Xp?$#,["n'&^JpjiCr@'&]@E36T4t+dDXd'"**kP7ZE;UWQO!Et1;cdEss44XG*6LKbUPNioHdObQGLFI&[Q"'(GY
%[QFs>6J3sCG,^,6LYAW#b(j`[N3l4uRm&*s/WY4o[S(J^=PN,Jg5?qg)57Hakq!?t-_f[(nX0`'O8*a`NHLSUBQt0Jh?kPE8Mke>
%A"$;^2Fdn[QUl63i#X=hUcX81QoLU!<DTJ7TT@$VVhdPC4YK*P,W\)OR(u$$n@h1('@96O[&F`SA\Lc\Z?8G0a<SMf!<6O1ge.rG
%R!8[7RM&$PGnmHq0I8+JmFb%-"@7V3KghJ'8OCE99:(B'3N`K28:6^-\49(:M(;@VRh0mP_E(81H6apKO-,O66AZkRQj$qWjV!7_
%=eH$JBag%*$N^0$$#hP[eMpYm_;d4+#]/pN^RtYXj*RB[cPP$X/eGULPVQZ`,(D'+_M#aVI[jd2%nmrr*gdM?4k:te0MeD163)<H
%gRSGrj*R3V0,=LngFUo$aknNGaoj7;hjZI;et4X9Y]aF6@.'ghB/+NXVUf332JF]hUJkq_FXa35?t+h"r^;6DdW&a*Kn+>"!Tq5)
%87Y>CqG\g)[o%(35WU&Q>_5TndB\0!maD#:Ipg]%?+5MQ-]V/VH0Rq*g<iHAH@0pNI])u8CbqS_;Y`u)^D-Yu+5cB@^XaKooDu77
%+Wtlr"IQ+6DQZ^F,7.2-mrb)6<r@<Q)98M9r12h#rOL"ipFa^ood<EGc5rWD5qlZ+.hAeZ%4NOLkrD=IG`3%V<64s0>A6FHE.E9a
%@0pn6,gPlr'2h:gAk20Mf^5qh86gFT5,EAse,i5U;FZAD-QY1AN2"6[;OW\&OJ:GH/&Fkm_dcA2)'+JQ!'?r\CB6=<!,Dth)Q=bY
%33&JLfSffH/\o[$kf*Uu3:(B`,E^Y.#.TO@+$)mu4jVi^kk&"-3qAs$>2'P;a[*Hi)89'4"G.=gKTd*!Nt_s%<ji,W<dV3f`0I7[
%60NS/pq/:,-ir^l7q#%e-nUZV99>qtS$4*,UbY'4E@(B%&`?umD\PT'p/DZ6Sn8[ZB&%dQ@Ho9F"gO-aX"ICK*I3s@kTqHl*IF>)
%gIP2?r(:lMWDY",7T*D8c6/5LpT6uMr'c4UBO[)`Mkm^N.\4<m61XIZi*HRccdfZp6HmokK7_J9R.W^r'WoM"IY\dH5;B'tS6a!9
%Kcn^cP#@LEr(:lMOi=0a#nGc4rKDo%-O83FLb+dS0_Iu!lhl%.>->LNkChTI]Tlu:l("Ktq*f3EBi649etf`F.Z:+08.nR[.?[XD
%MkmXLC5\n8q&>6fc&ri<60)O6Pn<Q:St"<<GR7<0'TLDq,`Sg<</]k.B[9Cg>!,GJMDeE/Q/4dcY[2oN04EmN]9Tnse;#1=]F"hf
%dHQc=1H[EE-"N.c7b!B"FK#tZKIDEtcL=B/!$HJeW-8lBh$1CH3V<5?FF%SE\-4[5&k]5nbQ:e'Uo7J<MK"a4n49b`TYt7D5`XCo
%D\_2:Kh!fEl6UH3&Ka-E<E,^AUPa5lMV>kX9]=@\RAlpB,#qSV6'B+S.)o4`M8KgY,-fjs:[%-`GrN$fhV"0;&_4]gc%rgM3j]%"
%cP%bM]h![#,cM35":G4<$`4A*R/#<_,d'6e0SH$aqBjVSOea`pWWgiUKbE,NZTnWY)VYI!&Pgam*XS,<:rR%mOoY4r,Wnk(ULF4L
%'kBE_X&0kaStOb&";<3)Ga>L%"o^P:H_.B0M8GKalOQ[S`Di\$8rKZB0tA"ILeWa@dtgcE@Ob;MV8ZE1q5Z6;rga/HPOjk9pCn[=
%"5G,MGbuL:$?/eu3P^'ecgg?@A8!]D$>2[N^jRj5<W#u+E0'I5P!@>9R/VL9ge0m],2f"!%PU\U#Qa.Sff;;\IkT:KV;gB.VuZS^
%(q0XX08.(Iq^V^8n\%NcC]+Rgrs$"5G6r4A/l?)c8"V,JjiQ[#dcFDKOQc=-;ApUQQI8Rm!;FmI#n*(l&a(R"+A$'f,Zk>F6u%K1
%+UU:5*T0+<k+X^8M'TlbVF1e&4-39NFAOSm#uq#o=\>$`KW;!AO[k94!<5t!gp[?HcN08XDH`,$3P`<rDNt4rFWt"6fOG@Oj?8_`
%2C_5@=BS;KL.?iL!$XaV-3<PFj[b2Qgs0S-f-OkjOeU8!S"tqh:E4=D:7(I9-7@7'Jq2o`H3;9=7Y#hLd30dJ+=SJqETa*-q'Z@P
%:!`Q#//OXDlEqZ&&uBQHN20&kYr5-O>:q?O+@UDG>*+>hV^*S(4a8o\nnY:9D7S/QUgDf_&KNlVHn%^>15[t\doe:P-:5kki$HH"
%PAggo6H[b?"V*UI6'`fR]j,SO\M-=$/2N-d1GG0L8<V?7U(,NbL5WkNUklZ91HHjk:*p#0E<.$[mU]]P!Uc)IY[!&R;D0s$,^T->
%"5IOgUe3b="Lpsjb&U'.!NAJBk;&=tnGJeIjGj$E*8j#;<DNY`Of#EhW^KagD2Lsr'&^Jp-'])J<<Cr#9l%;8Qj>,GK9q,$9YqMl
%#q:qeh@Oj:RU!h*kp]?W)D4^F-DsC6)U,$6OsCO;BHuuFV-FEU+JiK8\`5GV'#+s2ORbE'OJ8uN\QG:fe*$;GPi7cQP'U]g>eMs_
%>Ugsi"diq>dK&lr98X$Hj+X.`Y#B7S&h\Lh+Z6ti:1<>U434=Hb*&X/>foH4YABZdb*[-f7Zn*4ce>/qjqX3s'-Tg*ohP?^-Lm#<
%315Tc(D(c(PQ$e6drUttE++@jVbBEQ-sS5H8bt6j"tqN?L5WkNU_J*fl$-IO,^CQ!GW52LClmPQ#jqsmcY5/X,tfNVb,-c*2[_6T
%Q:bo2NNkC3``XoC-6T-mnFRRF[O0tD+q?&_(QAuL^6-d_*1FU(GFAsWQUpDL:%@_8E%-dB;C&M*85i_F.4.B=aQmSQ#ng#A3M\e"
%N<hVLk*@!UT$oN^99VmRR6XX\YNO#p&sCbSPI3[pL&`h1'9H,Qou_8-_^#^F`9/]aJVXLRo\7RPd.EhTZWse(;Qjr[@>^FFBdArf
%M7$4>Jl43M-6T/+l_WWbas;i57D)8')\V8!i^Ppb4f<:cMb>>gb,-K*$Y(fcOX*:bd0=<"b9b+1U_F6o[G8qZM;u8,CnsEH(^`?#
%^OpoeVKXMA:!0;-,k]<WNhaUE9:;W>9'OZ()c"jb/h&,68s.`CF2(iji4a<#,pT4uIl048(CE6bhd/K5drQECa5Mug6rL4*ME/"^
%ECQ+59qi*F'UDCL#tX)$C#SGr+9`''$o%e]'AejqoQp9QjO447P,>HgMF:@GCl1USMG%Y/8NRZ(OJ]<g;G9>J?$"l.mq!+Q<^VuE
%n8<X39g(]=%eAj>[\TlSQTC6sR3DqJZn[mk9-r!SOGVjX8"._D8MNZ0#hk;h!8Er1<Ja)i,O,:reDk`pbnG4fA-<['7uE]WSZj<G
%d#mZpUlocdKLHhT;l!YL-6T.f3NM)#KLB`WE]j1RUB'0cZ6$dXBHBKt1kk$h,a*IbdgYcUKM,f#2'Rmb6(5r:8ML5p"c_n1.8u=3
%PUQiEBul/GMRI<=dKjd;Be%<&8gO(=;bs.9W.6]t,iNsg`,T%DVR9Z,9S=+2h)k=$66]b\;2dSi=/Lea>qY[[kFU/0L'nZb+;GOT
%86eb3M*7$ML=.IUOc.$YUf?#Np..M:ghMjQh]fQg`O0X;,C/]S7o#7P/pSY?=#On-"e3&E=XpDo6kZlc1o9;s@KKF7#Z%/'[P`m]
%Tu==9!+$Z:^?'Jg+)3n>i\Zq^;C.JS;^@Je<EqR0W=qk)%FVVL98\Rf,$]N=UHp'N3)1[S;\1sUP7MPP;7_IA8CJJ09Q6^_82Q?*
%>Y65t7tXDQ9#LLWMnoOl'LBIt\FqZa@LJV7GtRj0OFM1n8]Yt6M)e:J\`AUC?J?1:1RC!q-+19SEand1VR0T+9L)4p.`?.^5XD*m
%:Tcs%lR#)_.k8EX1$4?+0I]G)=d3)^YK^4D+IGZa9&[";U'IN./;jW=!CV>2L-tVg"`a5C2"3OqO=Of;VOr:D8Q60K)U"l&;L33"
%6F9CFe;fp$9+B.'JjkP#!%HF1O-gjUJP\!r_".X&I!g5)0kuS/T)i(Hr$?!QGk]@(2/P"Fr12j'`Pa=ZIrdNGef.^>epYe?q3Zbq
%HEI=u(j"##^Jo8R53JROV/V`Sdo-%lA7TE:;5[;O.\,]g.;I$M_#f/:_q$+@$Np]u,A^fUL*+oVf.P4Ac.Vlo[Q/-B]8sCY"K3gG
%CW2bm!m@\n74ZZ_od24(B\k8GXaec%+\s5@r\0HbWDftad4/40cmF-Q&]cW&JV(ZV#9K&C9_\_(aH,3dRpYdmU5CAk7%OtRTfZ$m
%T%WUc`WL?!jZ2Og.H[/,:qZ\T?I?cUh^RCo]Z>5ZU(uk@H36g1oXh,[8FWrTl-R8l&EJ668ON3OJpR(9/A>1DJ&V>4ALYP^=8CU(
%Igc6,5CRNfIaOc!;3:Sj+[1Ec$CsTS"C`:p._$rQWH_+\Po\A3.9I!\0EI5b$&/'d'otD@JnMKU*g@j-/5e#!=L'R?rKop4:3])P
%$n*S)%&,J26AjR(aL.6r2(UIp*b?gTD'DP#7;5mM=9+Go]S^%f&d$l[OlERen0<iuUJ-P9'>IO*B;Kj.j<.j_+Sctq4'#^NgJ!K*
%S5\`J==CJf[hZl/#D):Lq5-qMUE><_ic)$bTSmECS4k>]"U'eT,_)e<7luR_E`082c9uSY.G:*<ZC$5U_-W>Z9hddJe=mj[:Sc&`
%Md/p>[E6cHKL_S*iKbd9:l<],8?`(:/I7SX7#.CV);]Skm'WkGLM-AsUsd^%pg2\P-1gSjoh&D^<Va7[Ig>s(5CRNeIaOc!;%S"C
%o.^036)-'ofNF&JW_m9t2pB$<(9=ZO`VDka@fBVB=ap9$l4R7a%n&$=jGZQ&OW\BGK;cm*6mEIE')TUtcmV[$JNkAgq=NLrr,)WL
%qE0F2@S04q,]VW:fZDLiL49E4=J\BBd]t:/'Zu#&+Za,q6%&g18?]jU+@TdC,Zk=[MiOtLkZ[4falFJP7[(78'p6uMHH#?4c/15T
%?JDf>aZ4j9n4+9;o##ZKQgu[*JV\V5EYSEb%D=>i?GR4]!J;C]S"[3(/Q)(ObeI3pj+]2^]7`Bu\]BihS]rha"&YU5Wi\`jMQ!n<
%>`*45+tc;@7\^)`Bb=>oU>"b57hBgO=b4G,Jet_kdEjq?C0&!GL(q%,;;5^%'XS2/6&c(HUfjrD8C:QUh3_eC!UHLL[P`Ug;fg00
%D\^#ng#s(4(n'mVSB=eGP!]=X'EfoE9hpo6L2VdfRHP)2kis.lJ5?4Rk*T^'X3>,ej^B&K^,_\3.Gg:O&kZiUq('FR'!kgLDm+1r
%]n$?X-m@h7:M^@DBcf/$/qg0)6_!ka[eX_$hePm4QF=qC-iD@k7=P0kg&.Ro7"iYMEHW*!RP4nH"7afKSDhSM8'1(;?,oDEQ(5f)
%$R$WpPu'.@'HV*@Kqk#l*gEBi=Vr[i=L!hdYi:6\J0ig^aOm0nZKQmU@4I^K'O",4bufgGg.3EA@t'7UPbPH7&hF%8l8g@YnT5N*
%fZ-%.5keM24]>?.[1(2bkrPf/MAt*/^J=PK%%kV%hclSb[<7XU62g?a"^i^0_a>^U>sD.rO4V@$<X='p^U5C99?WtL#WP5rq$2tu
%]V@Cu\c*PKM4BFZ^f!LML]fs4!$#Itqj"]aG)..j[rR^[I*ZYY2@YfOD[W*A9r@_BI$RRc9:K;\#9rf90ub=8`:Inl)A4%;Xg1>U
%5:I4>rf[*Od:2_])KC4mn4.mBq=/fAo8EU$W'L*6q?@#Q)S?7ll4aE(B9Ue1_t^>g3E]N4l2`Qg)WVEO$Cu5@cZ8tC<YIJ,]n+.b
%!f5q`'KfTQ5kLZ-YMN*SHMSMtk(#iK1<Ulj;L318m#)742O2,k]0m0%i@Kli$NSV<2RtpK$$V(OoMk`&VI$8-in3;'ZhYX5n!3Ru
%>tP#Vi=C,[o&KJujqmuIW8hop*f;Ck?NH;Pit=>lVPg%PCr<Y7VPl))>"e+fl0q(Co:TD";PYCF4clDE/.sK:OJ9aq3lr(8-s*3e
%P%)n@3f3(n>UMU;-bGL%fpN0n4PEaAf1FAB;A>Ec0r@]Db]Zm$>>t%2$!rM]qb#^c'Ut\C#17P$O]+6__J(GB$Re!=.m3)r$JRu@
%TG4eFO^J4*:(8,M2$"5*iRQ$-W>tcakf"+L5(9PL:-0S,!hS\?r0?89M-4^R.9^^dXZ'Z;$Q^p:l_!B<&Vls(g_)b"H=XsuVsb25
%q-?$$Oe6Yr1KQ_[R@=3`bGXf_bqJnq;8k"]oj\>8TL&L$'RO!:MLcW<S>*5=$8&)M/4jtSG]]o!G#P+?V5Pr'":G4<C/hRB$+*FO
%n`U2ba/\l`#FRFo;uAXgV0Ma62.Iqqr12gf93:1tPG/fTe9VcD3p@[YP62RI34sg-Z)a6[XEsnjOOpb$;!a=.#plg+J6S(t^K/"B
%SO@?Y.9[m-U,T;QkN<C2N@>#qPY!5(4XJnTV>dheBG_4kcRB4EU<ldd9;M'8S`&Ia7#EKs$M6T@b-FRB!$M-k3hgE#=-A>D,$2E[
%*Q>npGZ>gB/"=:_rk5`f5CC<CRtO#kWlU7Y>FT!l-U`+*Z#4?7IZCI+>ucSrPe/EX6bt3T_a56@i%.]aheaPYFXi).P3<KVYbM%D
%=Fp\VC$F@q9VG;X@8`HCKt=Lr"V4"BMVPMY[?Nj4,JU8+klFF/@ie0L4X`a5=X7)LY[Lg6JtV&@3(0XAb)F^?WWaQS4f9\[Mc*44
%;o<4o/u]"*7;Pl"22N&Z('t`X8<N#U+)G^"^Y=f\rIS>\VKMp5@F<^E5`3ReBXF"1RkYTD;BrRoB'`D_6W%HX@KA`9Mfd$.#]s%!
%03Sf!^1?@*p+dRn&]j`"R*(gIhNU,8E5c2T42j:)0-]"BMH66GlO>D)*li/6$JGiYP!iepd(sbQ6>V!D;-Fa3*A'&ND+/\KW>'5f
%U'IN./;jW=!MhF;W\uU9<=(<PU97ASH;tmrgR_>#Q:7RFo\,7/Po;:L7#KJ`eq6jc;.br"!C0gD05:[s$K?RY0"jKD)&Uh)TYN`T
%a0t.FR:VLp.D7WL,MFG5@OZ+_d=Y=Vb9Fb(J2QXZpcuVFW/+C@I)I1c@IO6aUG79mn`QE;na9=k`^V3K)o]FGM-4^P.9^^dXZ*J+
%,IOd4<=*[0fgsAD)/EaGg9RYoD$3;-;OuB.8<MWY[\bs+Q:3a02U[:jW^kg4K#_I7QekYg4/U*loWsT:i=jq!'$Vtp+;MC"@m`?;
%;5[=%!fJ+aU+e,r/-&5SA5Pg<pkcKY3^1_,*ri"6p$l+FMDKkV]s.;?k2/\pd8(Yn9)^=!Ns[H/j7g^Y(]Ao`AJM.=1'Nf'n:m`'
%aR8@\LX$_5U`@pV;cK&OV5<g@-#j*ZH'G9B/nNF_;RD`YJgCK"k`.hARJ\=o<sVD?MZg3kW$:QU,&;%X[:tc2f&WAS1?";8Pp/GA
%cdVeqIip4>7&<=OVMJK7Lu[.Jq\Y5>6t8&';FJeS.T8a3c!QJRU1O"LUY.C+TkG$qhG];h,Lt8h+;S/h85WP+V3]PFdifF-n8P?@
%Nb0ef:l<8u8?`Xj$83Lh\-.1QTT+@0:HqZ8FM7]9aM]Dmpsth&9^!6o70&CPY]0Rc(Z%S?&g25n2e^/j'>8rc]%Clu'@d>K8Q,6(
%dAN`8+g=,Dk;Igm]5[G,WfQ5E')nhY,!UN0D19kSLoC37dK+nl#7(0S#uJ]hPR\nka)@g!=Xr:A[MR[8q*PI]o;9regd:#WX.3@3
%_EsC>>u"hLn[!mkENmdHQfI<%nQ1g.K7W[.Z2#@$hePkbYV,+B'E0laZi';ue><(8IircXKWqR-e@ff(H>7O-:p4%`in&7/bd+J5
%&>A%@)rXYk;E3O?kWpYfAW^@$5[#ornqaI2@]!i4=S33dN+hl^UCbZkhjr$\R")<AQc%lqdNHAu)_B11n$UCnq?'T]<l3-],!:lR
%Q&M;(P"LOCRde#!q<Oghb"l^#,aFJeUCrI^pq=$04'N"?Uq:Qse3bse6*PI$mE<BR(<!>QT7)Z?chC!uMTiBIZkUY\^]B3/`&sub
%K,!PT=V%<IQ:6B/!7f?FLek1Y7SecZ+MCbd_B("R!;H#QZT4T9h5@]V=3ERQX*@/7.WX98d>E![]n$@C-Vb*WKoZ(M;#5F#R)@M(
%cT^>9Ppf(<=k$VIT:.;hGGhVC-;l=ZU+ZF'&trX:8?`XjH</9pA6])06_4/!)V+9h]f=agB*@7=Q@\rd*Il.+C*/VR9DHCLM>[.^
%0_q"55ZFuq<+J[r@qZj9*i>Ykou`YXABu\3bG*?]qS\P-DrK*@;Rf;U*gED)/.sK6f]r"l[\Dh'Ztg*1H:2jdPcH?n8k\E6)2hb,
%ldT1!V+=t8H6>Xl=X7)n^hiS4%WfrLB^9@&6*>m1O'EqS4[2ps60fskBmGpN2NBb\YjoM&BPjC'aA].@$Bd63LVXXtg.:bgMM+L&
%38?X0K#J>djeXL<>)sqgjj>X3:tn=2jU5ZeDd]giGpeMM+d*<m+*^mMKMmSc-^6**I-=o`gjI<p&a<G.$!L+r1<Un8jn.9B1nG=,
%cH+sGL-ubKi[bUmLJZQsAQbLCi,J9e:`PU(b*%D.,Di`hgdkR_CHBlt.8,u%/5qtBX=]KZCg!dbnO78\3d?%>*(ma:kR]!`4hj$0
%60fskD0aX1S3F>mn/fHB1NKuWM^jseZTJYfLbcu0kLtf\nhK3]7%C/?-kqkOMPDsB[BgUU)m-'0X^k^@;'AB&=c4=l;+Pki!18ot
%0\_J:?n)e.Sq='e-G@?dOg+LL;A^I/Q4gJWKf%gt3a!Xq`L:4(3/NJnP@=PXH8iQ+c"%0`Fo("6QX]&fr%L<7QosD"3(Qpb*gN&>
%M]$;.>-Y#(.@!G47?F<&4;'1JO<W&P3/!qIP[L)P0M=Djl-H(c'<DM71,4rTdOR*tW$&EsNUk;^OVQh#H-.AN!e<j9qJAYu;<u[\
%RQF_Bo>4I(&g][2"]IjD&uuhTi3;q#<`)nNPE^elJcu,nW59k%d;u8iZ%n$P>WFs+0+kg:Co238ddSZmPWgs@[!lR9!Mi7L&OheW
%0g$(""L,s`'a4ck$YPl]D`8lO[G!Je&,__C$49k<elL2D<`)m#8Y@MWUf[WD"Q2S5H:7`a9E:Z8OArX)"Q7C[4O%dGn:6%V^P*!0
%'DSW$_1`32",/c8BE0*29!9s,WD9k?<2Z*5MojVI[$ZeIQ,Q_#QthPY8b4m9QoHQYboS-hI15sQn,p$3's?b`(/s-2-\$'_r67Q3
%Bgmk\H&s-<i/0.dYUlD6dUu/N7"8Tb(6_C5EeV?jM?K-d%45SK6tXb'':j/raV>+/QI"GoRbs+@KQsrppdDo2$O;sMcapJ53?6]7
%mk2lR'`XbA`oA>dmhC6hAVke^YLEDQIphP8HZEE?*cP5LgP]j2p>d.@Sm7iKY>'@QS&P*:q9`MRS!p!-m>2P>r7u%5.\6:*gPS>\
%g[^M;fMLh!\b4As8&@QTbjZGe8:X$>j:mM-Pp56C;$9I\iK7LK^`'5Gk5kh#:2+1ijJ<<,j#O"l_+SEc,]S5.`3:,D9;2SUMREg*
%i?YhiO^J4*D?O?[P\VkdAcuLY!Ep_u,616!1B<mVJ?9"-)'7TNJ/'0dKJ0>"fHs%ha!k@*37!3j1o1i*NKHUs735&9a\lf=+=pbI
%7D+L+Jg<e-,K0_78RU?@#p#3nH3P@-B$X>6K\rm=.D\]7(*8/Ml\ZQ#PY33D6&MrS/&Fk-_]uu!J4Vl8D+3FYosfOidHrsH0'ZYp
%Rm<L>1-@$<V,%QTOE.=mWbUkB=:n<V)BK2#!f/8t<.#CtSq<kM5*(;pd2fPjELW&JY1)L`V1mK7CEk3a,P"k=`mQk9U%0_IJL%@R
%[B;fOTd31!5uJL'8SX)+6"2[U88JOWdQ*#aGP+M'o24e<;[bnLbn)+Vh-F<U+];SPP*eR__`FnV[J"%!'2G^M:kEsOJg@4,Fah`-
%O>M72FrGM95&W2!TiP#8O=i'8!XVc3.Y$9OYZk,X3@ENINU[-rZZH]'Su_c]D]gKmg-n<nA*q(jA?J"RM3j\j\Z&j[JF_kpm:pZA
%4#eVQ:?8Nl(JEp*V9WH%g=8#/P"'4b>9oJ&;Hb?&--?onWej/B=X:CDdcgUg7FGd>4)%^Q\K","\J6qJ2K%A.VO`eKb29#FV,?oU
%F.sC+X_B.6*@Y/,peL,a,ftb+D+-a-DfIQ6D4rQ.LHrlq=!TasAp@j0nC5To,AP6-/Fl2dZ32\p8Y"b%?ie'=]@p:"(qcuq.SMqP
%.CQ'UKb;]YN7<f"S#i8:$SIh-%SRrZ935Pp.J$*7!+7_eYVXFE(8-YPS%"@\3,0]HcmmXLJF*WXc3!>@O)>@k'nMr=LIA,&NP?tH
%?td7pLZq58mkOn\P)q*S+\%(p&S7[U?l!\oS]'E>PX5Ai,_b3>?ie&X"CPd@<Yf('!mhg8@uOpuN[X'A5T>he']C=&iDGR:Qpe48
%<YWb']%/DUG;`K>hUQ3]>"%O-;DY%aULt4V_PL.@2Bn#$8S`Pr=<^"f9!8;b&cog>ZWpNkI)R05](m(D-EA,[@<A'cO.XkqLk&<t
%S=^^#i%GO8jR`*ic*-dF-J_72$\?4JQg&875g\UmA1h/I&g<Ls$n$]>_h^j4Vt`mb*0H<N<LR:\%ns+Ee>>8a(/pE+W\#Q-PKI>i
%3n5!EP@A8XVDc]VNah"HoVd*V\"5q#B;Y+Y=^(R2[-g3cfA/?eHV0,sG</[sngpbe/>']?8cD,-?nseO7"?p@EjN)+&@=5EEjN);
%66s>!=V)m2(R+c-lG-aACMn;2TJ5ONh,u/s`aW[\SSF(^rr8J"[T1G4j8.VOro(KuaC'::hD;:31!!g35aFl+o-OroNa!a>HL.63
%-2kNX.V#U%Lb+)qM8;#*?-uMb`JTVee@oHs9uUmg3QYTkMlCqqeS;*j;mYB=mjtOfd#0;8V-XXS5MX*E_9]GBFE]EdkS>Cb2[q@)
%fe4$`=dJ/WpqpEM>%4*@<XT&mFU`Cp/97.:`ag`O`5l'r*@:u;$"Z\k?j*r:U.)j6Lhp5"Z6XdrQ]VouBRrF?5`akk:T9ub5?;u5
%H0!t<d:RUdH-?aCs%@GodA7"uZNnB<cJ<$1p.?_X-&0ek!puEJQc6i"L)8K$J^"Sp8SXa14ZFgnDZY\-Qk#$_[6UD")aOkS/%N8(
%1&8En0tFn.$^G,p]+MEC]TTlG5o)'"jR,Jk;IVbu)\J:K)aOk;TA87YR/GcrR,$L';A$h(NECcm&=dURjR5QO+EXRmj2'Q-or.]p
%4u+[52'F;j2'F;j2;r:P^Yc,i[Kbcp-4'=Fa'DE,Z/PT5?VSo=kB3)CM=X],p.A-)o3J/7Y06CmZhbXl_I;R;$"M7Yr$H#1TJ*VV
%,G5Ra-Ap=SFZ=GKV`U>$=(Q1XK?5ZWiElX]L_2hmUEma!Y,TBfV'sG?l(k6)^o)JmWsMC</o9+=KLm6aMRiW<BZr<u-Wb/Eku0`;
%2,*2%dt0V*8o[NnR2?B\L.AM;7&c\:T=Z-^:(n-70"<"MEU`g@2gdf%H=i-*!?G$Ncm-GB_I;>Z;B1lA)6VB&-TVs>#tj='q821(
%e0Op<`Zk-bMOYq6bH)Y15%f3(;>'R<*[M`%;fc-B>l7We)D"h;P9h(UI>UP"R\7$G[Am,l$=^rS/clX()5#6C*`6)l^S2F[FKRW@
%)PbJWh/h:thRc:_RRCkT1Zs[V82Oa+WHc6EC+7a0p(KXIq;la6qNUDEB[@?*1!Qsk;3GEm:/kj_n-KTDBnB5CF$Aop[5?jXfnpRI
%A^$3X^(H(FGCFh^>((um$&7\LEgh"+XJ07GUrV&$2"8U.`G1"Qq)["',pk$o#m\c,L)69=8D6+3P/?BD^V"]k51u]A_fRLk`Per.
%q63OqO0)tMoP#AcC(d@`k5>0`1f6l/CgD*<Lf-6X]ado>LU5SBV:kBOc.C*[XuWV?Z28p./Z0MHpb6$I3)*418)b0S+DmQd"EmF_
%SQ-0ADK@/@k<$HF+KI\]7l_",\`=Gh0,-k3K-XCDK<uL*I?I+*R\7$F<QAF70P\$'V)#3^,"d"ED&Gt)P<;Gm9W-.7Zj'C=A(%V`
%UOc56-ruN[Pr%Unk3lk=7Dq1Tm]3EGgRRg(q9CY>@]N;r.*XI%^B@J)N'o+TBuqg!&Kf"#'W270ASR8%)hfX:cKGkDWlqT-/i.t'
%?Rf>.'D4@Jb$gZ4S("p.,>*o\.I+L.dEj7d'WVO4ASM]\Q,;#^,@ATsJh8d-W61a+Zs%oI8VZJ7EZ,-kbW]BFcY;opY9(YtK$qJc
%=M6E1E]`ut8nYhZ.Rd))VFma^odJ?ESMn_jG>4?+-N-Z;dD0C>'WXfib*hk1*@ro<dY,%(^g$P!<pq7=^TR(HJJc@]F?lNc=84U\
%D6>;+1$K$PUOc55-rq"G(3Pg!V+H+e`k`*Gk+^mJ3"Gn7k>-mG51-,n_fW%AQ(OQS8p*g24W4cWMFXq?TN%e#fuE*YRL[7a%o1t?
%A%?*mN$!0'1?;GUor0"/)CG:.1e#>RPiS3tS2)#X%$+jT9r0gj*W]R_dt*KoO+:MVAH08/B)G"4G!fRgLQ-C@=VH&DQXK*7;3V:.
%V!69?kS#P*f*%p*2'5PX_M%<2O/uOm9l-6fO.uOa8rMe4P\?H025a/Y2#1#r4],L[JPYea<YL^@Z0IJ11gq3!UB+T-U,ZZqEp/YE
%7mW+'.3><&VK:!2p6/C=m$RFdE/b&ch4n(HU/]F.7t?rV`,.RG@*>\m`t85;KC4O-52DpZYbXd1=qII%,fd9^W6T(\Rmq?F:(rlS
%X\ENh!Ue(;Bo#u_L>^d-i>7`_[4+g4#!TOT-'Pd:7K]:L;=_U_Q)T%G;j`lQ=CdUHm'IrmrmIYEf1"n%4A%>%ntg&0CChdPVBnBa
%7e^S9-ruN[Pr%T)V)0bC`]0f)=5(@9/RNp-qB/8*FDOQ,)JgK3*/`2JV-2Vbm%k#8j2M4<ffh@;N.:>Sh$mY!KMV(c_(_Eq:9i9N
%U1D</Q&3o(-[QQ.#tjAOI,EBb8n$_>9m@Ru?rNs`PMl$mdke2WdO0C+Cm[uBl-7-eXTYI]VQ*=K#!U;,=A>Mh:8Q"fM3lc2SY0tP
%BBW[Kjj;?:9TR*tTB9">@63#10"Y$94s3O75=%-u@D'dTdOPuq-L.MW`7EkLje>_`oe)#K5%f10Bm0Etf&/(-\`S"e@,0n&9U\n>
%B%d1<U0(,d=r@l`)4Idd.?>jl5,V!?$]V)Nj5(ArP"/)ul*P.g&>Pm4a0_XtdD2Z+'WVO4kL==J(FJQ9NlO_Z`AutJ9Zmraor0"/
%)Q%T<FIH<UJteO0lOPaB2!QkZMU`tEjiI>,9kcq0n1Z#m<t:s(gGC!KMDcIbKnd5E4\]T!74F6ggJjr!:\6&9'9j9DThT7\J\HBE
%'R_ZJiRa`D6B(Dj*[M`%F3Q-E(J_+gaJ@@]dD2Z)'WVO44&_49PU;uIfX4HB1K\O2;bS%=C7@tji_bSA3c.XT9W0AY1$R2`dD2Z,
%'WXfiQEX@B9rL,nm)mI%a'QHs<UW7%I@tN/9,$W/\EYB((4o#^*r*CB3)*5<`QDg4B]@%a"Zp.#n*Dg]@JG65Q\E*K"HO0(e%+TT
%)f-/kPl[bYH5I*>Z:D0gTX:0pj0G+mJk*Y@W^@9l.%'OMl1T9=I@0U.I#:ECgXK2g[FT.'U1D<?KqQi/VgB,Y8X.f1.A[>*f#&r=
%a0'N/V-C\1Y&oSA32Q<#P\N&E#nFpgK$p`<;S?)^"gdVHSn^^-<6Y,@;`,agp]QWj%+DcL'Ouuo'Z[!oP"#PGlqsi2-uF=#2W(C^
%[qX[PZkh8jUa+$rYZaD_X\jJ8f"FeYDq!iGg7pQC#HdbQ6PFXnXk6h[S+Tj.k%#?7C.F6PBca)gVUMDfrX)MejHu6"?o6lL8=1f#
%'9oA"BlYr:k`iNc.;cmMh=B\&:RbsQ0fZ"?;Pb9@I$-uk&!]%J(oUc0E'.+;K<SXiN,190GMZ"c9pS-2P<DMr9_,$9l/5ll6pVmp
%e'_#/%=O[8Z'n'p5Kne'=\W]A4;#d1lJ'h@)Ie@qo-jLQC,&:q&1'?6V+hhepad%)MUM^)8J;0%\h9AFB#g[O=;>p`'d2^hTM=Bd
%Ga-*"SMmAP0b1O1!7R)P7RNg/;62)mXV+H/V(gkMPg8;WA68Jb<E)ut"JsZ>.nVQjkF0l&0tMbo4f?9^]m:Bn#tbF9Jor_@3)[/.
%`P/N4HQtbd>d#(+oVin.)Q%St.:+r4'WdnBZqO2QL-EMM=A>N3`,.o:$"M'_DF>D`2BqhQ7O6=mKn^m:RaZj*m>(nB,s@3A51-&`
%9i*<<ZTM?8=\Um8Gi3n&4C";/bkV$:B,\946D*=9P$sM,9bS"0<g;m:W\Q:Ipf*;`2*iZ44OnmQ'7/<pMLFq2UQHY3B2jk1qG`MR
%%F_lM'Ko,eL1AY\WmSUpGSI2m.a<`S"C)]U7a9056NoOna3HnsN5MC:Y`-7P"c]diX(O3PfW3EH-X%4f#tbR=,1W_@>Qd-oXd=D\
%?W/n*;g4Z`U-un@g76H\S;K'AdnlpCH(R:>UKC5eg3rXo$)M`#>J9j2^3X_]VL"Mf.)dm22U0Yg`E%^K%:s:g_R`7BRRCl2$qSBE
%29B^i*3]g+FR^?Fn8iQj+kYu#D[(t0%$Q'q+l-?i;7^8c6I9E(P<FfR"Js@:(mid+]&P]=W6CoM$O0mUFTjt^ULZSHW<m^F.)RcR
%okH>QBcb6.&u?1=A&Z#\:&)!7rA`n\]GrU_nq!8M3b!b<F!rkYaY0Oeo0cHEA($OlBZ+PG0N">e-r!p8dY-2-agGiA>FWXjg6?\I
%fp3Rl6>J!lE(nu_)@_(W7nF6G[-gPeO0O#-AQP>6dKfU%P\r3fYI*XgX&iIf8q!X[Yba&ud=ebM!Wo,kPd+U6OWjqUVg=SBQqj."
%3L2'cG>(YU(_(kI8$SLNBp'D>SPR_6#tqUX4!AXaAPR9TV";^3S8^t%5,88f%GJ@ZSBg(m;6"-ScE5L0-[HK-#th7d0J9C4V8U&3
%APIM-*-U/-PMH"8TB&kt2DlddJ^!$eV)fqT"H<ULeY?5@:c]F)gCu!CBih,eMk*J.l)%(N:\?-d0V(,HdMbiF>,J,j].0@8_kU=.
%U,5@e"T:1C\mY69N*S`r#ICQ?coh+hN8h25:D=_5k(*h%9MrB2dXJ4D^aFFBWsMDA<kU>`mW*L$S+B[o3P"E$*DuNaeIp<34%6-/
%8^jH^^o)FAnu-kU2bVfHC;QL5E@1miK&$.U'8;fn7tj.GUD1UfXuXIkY:.XMl,l;eJPZ"g<g+p`@;Af1cl2"bD-Dt59o!Z9mb>,;
%D;'DR%+h@edPfWhi"I)fdfcM7RWV#m$"F9#&B/<]&n_b4:PlTm!h\[RU1'3<@:#7$ZD5,$VG(/!)@_(O8$SMUe5"8TeV%Y,4,G_N
%q]_[INH+e/O&EDT5g^=.Zpq=Ph3:L_8/_qb\js#o6tm*(#aEbj]#1Cf>.qKs+Fi!$[J]@nqne5fW\M)4N@h%HNVM#]:n/j\c+DEj
%PpWE9`_@njR8BM-?XZn0-q:8%9T.?[Q"H)?+"D-m-N0/UN1-%+Aah$1m`T:1X1U(fTBoF\@63#1Ef2!51rlD%Y=8Vdk#&3,;;,tf
%JT'8B$+Fb%mY#]KXrqp]H;K(G;5$eW.*XH:CJL)5kjm9uS.:n[7D_H4R\1?no>*9s9F[>V\]8EJho/<%I//0MDn%DdTAWRu@?N9<
%'/!<!7<T4bPO:3!dEj7f'WVO4)m*r*`Y`?(E"CGFo3[\!^[[;=h!hs+IBlAbL?Z'ZQIZ$C.K`@;oe7<\1ll*'M:-ih8n$-bLKE2R
%V9LOHo$qo[%q9WQqlY$#V2GIZ;B-44ieBb[fLll2Fl5:/I[L,F(1P>UWq8;6b$g[_29idAEnG^[b+tfF7Ut%'$]<I;V:F)fAMLHF
%EUhHCQ*RfiE[aDKjAD(K3c.VPNS/afVDUNUoi"HgDXh97.4u,aX$N2;?@6<"fCehuN:I$n?g]CHP\QT229j<=-0Mqs!Eu4KcgW>`
%P:4DpNQsKXeAMTjK3%Ge_di(S]SXO`*"IZ,m;b$PNR?mH9U\n>`]b-6-r(G?(3V3-02/H/DQAZ;PUD%5lG\C;l4Z<Q1ed)V.=39\
%?/X(;R$R#K2"W4<`G1!&9[,UB%:'dkj,.+IN;NV`bkOiX<<o,Xps%ii/ng7o1WHHHh(4bM8/_qb\js#oVUBJfhki4f^1\C#S)Utt
%e#($lC%lJupGVEQ225sH122%k)YsSpi\a#9VH)bWRP5EGKe^ehGl)0B:\jjUq?2il%+Aq>4C8aKMKCR.C$4&\k`\/eeHD_Y28ZV"
%9aNJV1cnRjhC3S?f\:2>k'F5Z&LABnF%p_l.knqKmo?6b9[-o4eTcp[22Ta(h5YIM))^A1SUc&NZDP1G-QJ%n^@UCA&Ug*8Tj]C'
%`cd[c]3T$1Bdj0S"!>Mj'W270Z^EL"MhuSs]j+F&!NQ823oD@nI=arqIVN%\gftu'X$JKme]VXiP<FfR"Jq+$</a@)nb%#%n8!9$
%*NQ-]E?Z+q3A>le8'-MM>]\&Sgl!em/^mNC7K]:F;62*A)XZ[&QdpbKD8OYrF1YrJWdmCqGua\tO4"Hc\`=Ir_h+$k;c9K$Y>f8L
%h"&L#K$pH4;S=nUh#t^J98m(L`Sg$!TbEZ-\[.`8/!XMG)Cq!]@i>f(P"2dGTX:/V^+:W)YZP-pQ!J4WIN#QYVk?tQA=1Y"Vs%PW
%@D9mUe)Kt*4c7bmV.8hh1nf]DmeWpL9XONBfN^XP^5,Yre%+TT4\S_-A(#h+dD0C>'WXfi-G'PnX<u.%g^k5W8.(kQco_W\X4$2#
%.*&dO8@mB@o)hiDK;<q+_.`%r4GqYlV0,jCI>l,qc+DEbQ#?EO(KQT+F@u/-[!8FtUXY&ka0'OZ(qWl'G,<_>h==QiV%7$W9&$MU
%H_nWTN(6K]A3f@V1nf\9??FXZnQN3r2";2$G3BkTAP$:Y0/97L0okpNJhh%)eS*kS*K&;KV.E_3][H/3VG1cb:?e@R\1)h?UJmV)
%V:d@N*i1tuMH_;dbJ;'l+lf.)Arp9,-#CT7,Pi+8;@M$bjHT6<;)!WQBpiNL%=PfXZ'qQ<cbK61K\sHAq;_(]5.rtJ5QCHgYHP]h
%s6]R,s"#7!0!AWrs7Z-32a_9)T7?h0q[\1M,sHg-qskQl5CW@tm^nf-^3fnRB)^K4S(lPUkAS(_H;gGcnk[Thr9dLoqVT874TFu0
%nbi+Sf/LHnH8BHuO!5NE?fjhTf3c:sI'm/SI7*h6Q>]L@4-+H*q9L#3YAZ84\Gc*@kM'J0\0^oG:WHs[LJ$k$a9%rmq!/mh0/g2\
%,IFZSC'&tf['m^eC)?NO&q2%Ss"fM(<m]mU$Moh0Z\2Rls0pMOFcfS)PB2,cX]Bb^L3Dn6a-"70O6`ERq7f&N4SekdOS;\=n@?hm
%h0H+!eUg`WDu[J1/3FVqr`?G`_ri!,h,uqb[GL#g6ZL0&<@PsEj2(K@GiqU4DN>@dG<1[]_Yi2L>@W?`o7$\foR5o:HZf,$e!k,&
%h`ngMe[8tNg&Lld#*$Za2]B^*,BCc<MsIiF9!qc^O?uXM@P+>srUu;6O#i1V*48#WEa=Ur^/OT+XnTMn9srie>@q<g:Sqa_cn#/\
%h\h`k`D4Vb5W0#g$l[!)5_oCo)GC<ACK/Kd?oUHsDMG4h4'1hLR.<s9@S,Z'OfSE?bP/`2O;>M_UXlHhbua"TH,c;@T1i8%TihAC
%m]J&2n5Ym3@2N3KM??0b[ONYWWQMLVWqYBZCCtH=ZAu!IY7IX?rS,ejcbB1[r;PmJ^]!HZ0<ZIHqU;M(Zi>8qqtccm0AjHirUBIA
%m11lMqtg6]rr)R5?Tu4'fCcnMhgThKiS'$icTh?dq`imf[kI7ZT7-G)?X=uW5PMP>Rf~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -75 4015 a(Figure)g(5.)g(PIV)f(measuremen)n(t)h(for)g(the)
f(150)h Fb(\026)p Fc(m)g(x)f(500)i Fb(\026)p Fc(m)e(x)g(20)h(mm)f
(micro)r(c)n(hannel)i(for)f(three)f(di\013eren)n(t)g(p)r(ositions)i
(form)f(the)f(cen)n(ter)-75 4106 y(to)i(the)f(edge)h(of)h(the)e
(device.)50 4346 y Fi(F)-7 b(or)37 b(a)h(complete)g(c)n
(haracterization)e(of)i(the)h(c)n(hannels)f(a)g(P)n(article)e(Imaging)i
(V)-7 b(elo)r(cimetry)38 b(\(PIV\))h(measuremen)n(t)e(w)n(as)-75
4446 y(indep)r(enden)n(tly)30 b(p)r(erformed)f(in)h(the)g(same)f
(conditions)g(for)h(eac)n(h)e(device.)43 b(Figure)29
b(5)g(sho)n(ws)g(the)h(results)f(of)g(this)h(exp)r(erimen)n(t)-75
4546 y(for)g(the)i(c)n(hannel)e(exhibiting)h(a)g(di\013eren)n(t)g(b)r
(eha)n(vior.)45 b(The)31 b(PIV)g(corresp)r(onding)e(to)i(the)g(small)g
(c)n(hannels)f(sho)n(w)g(a)h(constan)n(t)-75 4645 y Fa(plug)25
b(typ)l(e)j Fi(\015o)n(w)21 b(in)h(all)g(the)g(measuring)f(in)n(terv)-5
b(al.)34 b(F)-7 b(or)21 b(this)h(c)n(hannel)g(a)f(an)h(initial)g
(planar)e(\015o)n(w)i(is)f(observ)n(ed)f(when)i(electric)g(\014eld)-75
4745 y(is)27 b(turned)g(on)f(around)g Ff(t)d Fi(=)f(11)k(s,)h(but)h(is)
e(rapidly)g(lost)h(due)g(to)f(the)h(pressure)f(di\013erence)h
(generated)e(b)r(et)n(w)n(een)i(the)g(reserv)n(oirs.)-75
4845 y(This)33 b(results)g(in)h(a)f(parab)r(olic)f(\015o)n(w)h(in)h
(the)g(opp)r(osite)f(direction)g(to)g(the)h(initial)g(\015o)n(w)f(with)
h(a)f(maxim)n(um)g(at)g(the)h(cen)n(ter)f(of)-75 4944
y(the)i(c)n(hannel.)57 b(With)36 b(this)f(information,)g(results)f(sho)
n(wn)g(in)h(\014gure)f(4)g(can)g(b)r(e)h(understo)r(o)r(d)f(as)g(the)h
(\015o)n(w)f(is)h(bidirectional.)-75 5044 y(The)e(temp)r(erature)f
(jump)i(b)r(et)n(w)n(een)f(the)g(t)n(w)n(o)f(coun)n(terpropagating)e
(\015o)n(ws)i(indicates)h(the)g(presence)f(of)h(a)f(con)n(tact)g
(thermal)-75 5143 y(imp)r(edance)c(indicating)f(that)h(eac)n(h)f
(stream)g(is)g(\015o)n(wing)g(without)h(exc)n(hanging)e(mass)h(with)h
(its)g(coun)n(terpart.)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 1508 83 a Fj(4.)32 b(CONCLUSIONS)-75
226 y Fi(A)24 b(no)n(v)n(el)f(tec)n(hnique)h(to)f(measure)g(temp)r
(erature)g(in)h(micro\015uidic)g(devices)f(is)h(sho)n(wn.)35
b(The)23 b(metho)r(d)i(uses)e(the)h(dep)r(endency)g(on)-75
325 y(temp)r(erature)30 b(of)g(the)h(Raman)f(sp)r(ectrum)h(of)f(w)n
(ater)g(and)g(impro)n(v)n(es)f(from)h(previous)f(implemen)n(tations)h
(that)h(the)g(collection)-75 425 y(is)i(confo)r(cal,)g(giving)f(a)h
(impro)n(v)n(ed)e(three)i(dimensional)f(resolution,)h(and)g(the)g
(detection)g(is)g(made)f(using)h(a)f(pair)h(of)f(photon)-75
524 y(coun)n(ters)g(whic)n(h)h(impro)n(v)n(es)e(measuring)g(time)j(as)e
(is)h(not)g(necessary)e(to)h(measure)g(the)h(whole)g(sp)r(ectrum)g(in)g
(eac)n(h)f(p)r(osition.)-75 624 y(The)h(tec)n(hnique)g(sho)n(ws)f(go)r
(o)r(d)h(agreemen)n(t)e(with)j(results)e(from)h(other)g(metho)r(ds)g
(and)g(theoretical)f(calculations.)3598 594 y Fg(8)3688
624 y Fi(W)-7 b(e)33 b(also)-75 724 y(sho)n(w)h(that)i(the)g(device)f
(is)g(useful)h(to)f(c)n(haracterize)e(micro\015uidic)i(c)n(hips,)i
(giving)e(useful)h(information)e(for)h(the)h(election)f(of)-75
823 y(dimensions)27 b(and)h(construction)e(materials)h(in)h(the)g
(design)f(stage.)50 959 y(The)33 b(tec)n(hnique)h(also)f(sho)n(ws)g(a)g
(thermal)g(b)r(eha)n(vior)g(nev)n(er)g(rep)r(orted)g(b)r(efore)g(when)h
(a)g(bidirectional)f(\015o)n(w)g(is)h(observ)n(ed.)-75
1058 y(Eac)n(h)c(\015o)n(w)i(dev)n(elop)e(its)i(o)n(wn)f(temp)r
(erature)h(and)f(a)g(sharp)g(gradien)n(t)g(is)g(observ)n(ed)f(at)i(the)
g(in)n(terface.)48 b(This)32 b(w)n(as)f(correlated)-75
1158 y(with)d(PIV)g(measuremen)n(ts)e(p)r(erformed)h(indep)r(enden)n
(tly)h(in)g(the)g(same)f(conditions.)1594 1383 y Fj(REFERENCES)-39
1518 y Fi([)r(1)t(])41 b(Hun)n(ter,)27 b(R.)h(J.,)g([)p
Fa(F)-6 b(oundations)30 b(of)g(Col)t(loid)j(Scienc)l(e)8
b Fi(],)28 b(Oxford)f(Univ)n(ersit)n(y)g(Press,)f(2nd)h(ed.)h
(\(2001\).)-39 1626 y([)r(2)t(])41 b(Lyklema,)33 b(J.)f(J.,)h(de)g
(Keizer,)g(A.,)h(Bijsterb)r(osc)n(h,)f(B.,)g(Fleer,)h(G.,)g(and)e
(\(Eds.\),)i(M.)e(C.)h(S.,)h([)p Fa(Solid-Liquid)i(Interfac)l(es)8
b Fi(],)96 1725 y(v)n(ol.)26 b(2)i(of)f Fa(F)-6 b(undamentals)30
b(of)g(Interfac)l(e)h(and)f(Col)t(loid)i(Scienc)l(e)p
Fi(,)c(Elsevier,)f(Academic)g(Press)f(\(1995\).)-39 1833
y([)r(3)t(])41 b(Tian,)35 b(W.-C.)f(and)g(Finehout,)i(E.,)g([)p
Fa(Micr)l(o\015uidics)h(for)g(Biolo)l(gic)l(al)i(Applic)l(ations)8
b Fi(],)37 b(Springer)c(Publishing)h(Compan)n(y)-7 b(,)96
1933 y(Incorp)r(orated,)26 b(1)h(ed.)h(\(2008\).)-39
2041 y([)r(4)t(])41 b(T)-7 b(ang,)35 b(G.,)i(Y)-7 b(an,)36
b(D.,)h(Y)-7 b(ang,)36 b(C.,)g(Gong,)f(H.,)i(Chai,)f(J.)e(C.,)j(and)d
(Lam,)i(Y.)f(C.,)h(\\Assessmen)n(t)d(of)i(joule)f(heating)g(and)96
2140 y(its)28 b(e\013ects)h(on)g(electro)r(osmotic)e(\015o)n(w)h(and)h
(electrophoretic)e(transp)r(ort)g(of)i(solutes)f(in)h(micro\015uidic)f
(c)n(hannels,")g Fa(ELEC-)96 2240 y(TR)n(OPHORESIS)e
Fd(27)p Fi(\(3\),)h(628{639)d(\(2006\).)-39 2348 y([)r(5)t(])41
b(Xuan,)27 b(X.,)h(\\Joule)f(heating)g(in)h(electrokinetic)f(\015o)n
(w,")f Fa(ELECTR)n(OPHORESIS)i Fd(29)p Fi(\(1\),)f(33{43)e(\(2008\).)
-39 2456 y([)r(6)t(])41 b(Cetin,)35 b(B.)f(and)g(Li,)h(D.,)h
(\\E\013ect)e(of)f(joule)h(heating)g(on)f(electrokinetic)g(transp)r
(ort,")h Fa(ELECTR)n(OPHORESIS)f Fd(29)p Fi(\(5\),)96
2555 y(994{1005)23 b(\(2008\).)-39 2663 y([)r(7)t(])41
b(Ross,)f(D.,)h(Gaitan,)f(M.,)h(and)d(Lo)r(cascio,)h(L.)g(E.,)h(\\T)-7
b(emp)r(erature)37 b(measuremen)n(t)g(in)h(micro\015uidic)g(systems)g
(using)f(a)96 2763 y(temp)r(erature-dep)r(enden)n(t)24
b(\015uorescen)n(t)f(dy)n(e,")h Fa(A)n(nalytic)l(al)j(Chemistry)f
Fd(73)p Fi(\(17\),)e(4117{4123)c(\(2001\).)30 b(PMID:)24
b(11569800.)-39 2870 y([)r(8)t(])41 b(Eric)n(kson,)22
b(D.,)j(Sin)n(ton,)g(D.,)g(and)f(Li,)h(D.,)g(\\Joule)e(heating)g(and)h
(heat)f(transfer)g(in)h(p)r(oly\(dimeth)n(ylsilo)n(xane\))f
(micro\015uidic)96 2970 y(systems,")j Fa(L)l(ab)k(Chip)g
Fd(3)p Fi(,)d(141{149)e(\(2003\).)-39 3078 y([)r(9)t(])41
b(Hsieh,)25 b(S.-S.)f(and)g(Y)-7 b(ang,)24 b(T.-K.,)h(\\Electro)r
(osmotic)d(\015o)n(w)h(in)i(rectangular)d(micro)r(c)n(hannels)h(with)h
(joule)h(heating)e(e\013ects,")96 3178 y Fa(Journal)29
b(of)i(Micr)l(ome)l(chanics)h(and)e(Micr)l(o)l(engine)l(ering)g
Fd(18)p Fi(\(2\),)d(025025)e(\(2008\).)-75 3285 y([)r(10)t(])40
b(F)-7 b(u,)21 b(L.-M.,)g(W)-7 b(ang,)20 b(J.-H.,)g(Luo,)g(W.-B.,)h
(and)d(Lin,)j(C.-H.,)f(\\Exp)r(erimen)n(tal)d(and)i(n)n(umerical)f(in)n
(v)n(estigation)f(in)n(to)h(the)h(joule)96 3385 y(heating)33
b(e\013ect)g(for)g(electrokinetically)f(driv)n(en)h(micro\015uidic)g(c)
n(hips)g(utilizing)g(total)g(in)n(ternal)g(re\015ection)f
(\015uorescence)96 3485 y(microscop)n(y)-7 b(,")25 b
Fa(Micr)l(o\015uidics)32 b(and)e(nano\015uidics)f Fd(6)p
Fi(\(4\),)e(499{507)e(\(2009\).)-75 3592 y([)r(11)t(])40
b(W)-7 b(alrafen,)40 b(G.,)g(Fisher,)f(M.,)h(Hokmabadi,)f(M.,)h(and)e
(Y)-7 b(ang,)39 b(W.-H.,)h(\\T)-7 b(emp)r(erature)37
b(dep)r(endence)g(of)h(the)f(lo)n(w-and)96 3692 y(high-frequency)d
(raman)g(scattering)g(from)g(liquid)i(w)n(ater,")f Fa(The)i(Journal)g
(of)g(chemic)l(al)i(physics)d Fd(85)p Fi(\(12\),)g(6970{6982)96
3792 y(\(1986\).)-75 3899 y([)r(12)t(])k(Da)n(vis,)29
b(K.)f(L.,)h(Liu,)g(K.)f(L.)g(K.,)h(Lanan,)f(M.,)h(and)f(Morris,)f(M.)i
(D.,)h(\\Spatially)d(resolv)n(ed)g(temp)r(erature)h(measuremen)n(ts)96
3999 y(in)g(electrophoresis)d(capillaries)h(b)n(y)h(raman)g
(thermometry)-7 b(,")27 b Fa(A)n(nalytic)l(al)j(chemistry)f
Fd(65)p Fi(\(3\),)e(293{298)d(\(1993\).)-75 4107 y([)r(13)t(])40
b(Liu,)29 b(K.-L.)f(K.,)h(Da)n(vis,)f(K.)g(L.,)h(and)f(Morris,)g(M.)h
(D.,)g(\\Raman)e(sp)r(ectroscopic)h(measuremen)n(t)f(of)i(spatial)f
(and)g(temp)r(o-)96 4207 y(ral)f(temp)r(erature)h(gradien)n(ts)f(in)i
(op)r(erating)e(electrophoresis)f(capillaries,")h Fa(A)n(nalytic)l(al)k
(chemistry)f Fd(66)p Fi(\(21\),)d(3744{3750)96 4306 y(\(1994\).)-75
4414 y([)r(14)t(])40 b(Kim,)d(S.)e(H.,)j(Noh,)e(J.,)h(Jeon,)f(M.)f(K.,)
i(Kim,)f(K.)f(W.,)i(Lee,)g(L.)e(P)-7 b(.,)36 b(and)f(W)-7
b(o)r(o,)37 b(S.)e(I.,)i(\\Micro-raman)32 b(thermometry)96
4514 y(for)f(measuring)f(the)i(temp)r(erature)f(distribution)g(inside)h
(the)f(micro)r(c)n(hannel)g(of)g(a)g(p)r(olymerase)f(c)n(hain)h
(reaction)g(c)n(hip,")96 4613 y Fa(Journal)e(of)i(Micr)l(ome)l(chanics)
h(and)e(Micr)l(o)l(engine)l(ering)g Fd(16)p Fi(\(3\),)d(526)f
(\(2006\).)-75 4721 y([)r(15)t(])40 b(P)n(egau,)30 b(W.)h(S.,)g(Gra)n
(y)-7 b(,)30 b(D.,)h(and)f(Zanev)n(eld,)g(J.)h(R.)f(V.,)i(\\Absorption)
d(and)h(atten)n(uation)g(of)g(visible)g(and)g(near-infrared)96
4821 y(ligh)n(t)d(in)h(w)n(ater:)36 b(dep)r(endence)28
b(on)f(temp)r(erature)g(and)h(salinit)n(y)-7 b(,")27
b Fa(Applie)l(d)k(optics)e Fd(36)p Fi(\(24\),)d(6035{6046)e(\(1997\).)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
